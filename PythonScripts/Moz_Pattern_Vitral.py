def moz_pattern_vitral(bounding_box=None, boundary_curve=None):
    import rhinoscriptsyntax as rs
    def evaluate_bbox_inclusion(pts, bbox):
        if not bbox: return True
        x_vals = [pt[0] for pt in bbox]
        y_vals = [pt[1] for pt in bbox]
        z_vals = [pt[2] for pt in bbox]
        inside_flags = []
        for pt in pts:
            inside = (min(x_vals) <= pt[0] <= max(x_vals) and
                      min(y_vals) <= pt[1] <= max(y_vals) and
                      min(z_vals) <= pt[2] <= max(z_vals))
            inside_flags.append(inside)
        return all(inside_flags)
    curves = []
    border_curves = []
    pts = [(-1.067, -56.906, 0.000), (-1.065, -48.392, 0.000), (-1.063, -39.878, 0.000), (-1.063, -39.736, 0.000), (-1.064, -39.594, 0.000), (-1.063, -39.517, 0.000), (-1.079, -39.442, 0.000), (-1.095, -39.370, 0.000), (-1.123, -39.301, 0.000), (-1.139, -39.263, 0.000), (-1.158, -39.225, 0.000), (-1.193, -39.161, 0.000), (-1.246, -39.110, 0.000), (-1.306, -39.053, 0.000), (-1.377, -39.013, 0.000), (-1.468, -38.962, 0.000), (-1.568, -38.933, 0.000), (-1.712, -38.892, 0.000), (-1.861, -38.890, 0.000), (-1.869, -38.890, 0.000), (-1.877, -38.890, 0.000), (-3.085, -38.885, 0.000), (-4.292, -38.881, 0.000), (-4.323, -38.881, 0.000), (-4.355, -38.881, 0.000), (-5.007, -38.878, 0.000), (-5.658, -38.875, 0.000), (-6.156, -38.872, 0.000), (-6.654, -38.877, 0.000), (-6.752, -38.877, 0.000), (-6.847, -38.900, 0.000), (-6.963, -38.929, 0.000), (-7.062, -38.997, 0.000), (-7.152, -39.059, 0.000), (-7.217, -39.146, 0.000), (-7.274, -39.222, 0.000), (-7.313, -39.308, 0.000), (-7.337, -39.360, 0.000), (-7.348, -39.417, 0.000), (-7.360, -39.475, 0.000), (-7.366, -39.534, 0.000), (-7.375, -39.627, 0.000), (-7.379, -39.720, 0.000), (-7.383, -39.799, 0.000), (-7.385, -39.878, 0.000), (-7.402, -48.392, 0.000), (-7.419, -56.906, 0.000), (-7.415, -57.101, 0.000), (-7.411, -57.295, 0.000), (-7.409, -57.404, 0.000), (-7.387, -57.511, 0.000), (-7.368, -57.607, 0.000), (-7.327, -57.696, 0.000), (-7.282, -57.796, 0.000), (-7.207, -57.876, 0.000), (-7.124, -57.964, 0.000), (-7.016, -58.016, 0.000), (-6.927, -58.059, 0.000), (-6.831, -58.079, 0.000), (-6.728, -58.101, 0.000), (-6.623, -58.103, 0.000), (-6.603, -58.103, 0.000), (-6.584, -58.103, 0.000), (-6.302, -58.102, 0.000), (-6.021, -58.102, 0.000), (-5.904, -58.102, 0.000), (-5.788, -58.101, 0.000), (-5.375, -58.101, 0.000), (-4.962, -58.100, 0.000), (-3.922, -58.098, 0.000), (-2.882, -58.095, 0.000), (-2.776, -58.095, 0.000), (-2.669, -58.095, 0.000), (-2.445, -58.095, 0.000), (-2.220, -58.092, 0.000), (-2.014, -58.090, 0.000), (-1.809, -58.079, 0.000), (-1.707, -58.074, 0.000), (-1.607, -58.049, 0.000), (-1.513, -58.025, 0.000), (-1.427, -57.979, 0.000), (-1.316, -57.920, 0.000), (-1.236, -57.822, 0.000), (-1.169, -57.739, 0.000), (-1.131, -57.640, 0.000), (-1.096, -57.548, 0.000), (-1.083, -57.450, 0.000), (-1.073, -57.382, 0.000), (-1.072, -57.314, 0.000), (-1.068, -57.110, 0.000), (-1.067, -56.906, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-1.067, -56.906, 0.000)), rs.coerce3dpoint((-1.065, -48.392, 0.000)), rs.coerce3dpoint((-1.063, -39.878, 0.000)), rs.coerce3dpoint((-1.063, -39.736, 0.000)), rs.coerce3dpoint((-1.064, -39.594, 0.000)), rs.coerce3dpoint((-1.063, -39.517, 0.000)), rs.coerce3dpoint((-1.079, -39.442, 0.000)), rs.coerce3dpoint((-1.095, -39.370, 0.000)), rs.coerce3dpoint((-1.123, -39.301, 0.000)), rs.coerce3dpoint((-1.139, -39.263, 0.000)), rs.coerce3dpoint((-1.158, -39.225, 0.000)), rs.coerce3dpoint((-1.193, -39.161, 0.000)), rs.coerce3dpoint((-1.246, -39.110, 0.000)), rs.coerce3dpoint((-1.306, -39.053, 0.000)), rs.coerce3dpoint((-1.377, -39.013, 0.000)), rs.coerce3dpoint((-1.468, -38.962, 0.000)), rs.coerce3dpoint((-1.568, -38.933, 0.000)), rs.coerce3dpoint((-1.712, -38.892, 0.000)), rs.coerce3dpoint((-1.861, -38.890, 0.000)), rs.coerce3dpoint((-1.869, -38.890, 0.000)), rs.coerce3dpoint((-1.877, -38.890, 0.000)), rs.coerce3dpoint((-3.085, -38.885, 0.000)), rs.coerce3dpoint((-4.292, -38.881, 0.000)), rs.coerce3dpoint((-4.323, -38.881, 0.000)), rs.coerce3dpoint((-4.355, -38.881, 0.000)), rs.coerce3dpoint((-5.007, -38.878, 0.000)), rs.coerce3dpoint((-5.658, -38.875, 0.000)), rs.coerce3dpoint((-6.156, -38.872, 0.000)), rs.coerce3dpoint((-6.654, -38.877, 0.000)), rs.coerce3dpoint((-6.752, -38.877, 0.000)), rs.coerce3dpoint((-6.847, -38.900, 0.000)), rs.coerce3dpoint((-6.963, -38.929, 0.000)), rs.coerce3dpoint((-7.062, -38.997, 0.000)), rs.coerce3dpoint((-7.152, -39.059, 0.000)), rs.coerce3dpoint((-7.217, -39.146, 0.000)), rs.coerce3dpoint((-7.274, -39.222, 0.000)), rs.coerce3dpoint((-7.313, -39.308, 0.000)), rs.coerce3dpoint((-7.337, -39.360, 0.000)), rs.coerce3dpoint((-7.348, -39.417, 0.000)), rs.coerce3dpoint((-7.360, -39.475, 0.000)), rs.coerce3dpoint((-7.366, -39.534, 0.000)), rs.coerce3dpoint((-7.375, -39.627, 0.000)), rs.coerce3dpoint((-7.379, -39.720, 0.000)), rs.coerce3dpoint((-7.383, -39.799, 0.000)), rs.coerce3dpoint((-7.385, -39.878, 0.000)), rs.coerce3dpoint((-7.402, -48.392, 0.000)), rs.coerce3dpoint((-7.419, -56.906, 0.000)), rs.coerce3dpoint((-7.415, -57.101, 0.000)), rs.coerce3dpoint((-7.411, -57.295, 0.000)), rs.coerce3dpoint((-7.409, -57.404, 0.000)), rs.coerce3dpoint((-7.387, -57.511, 0.000)), rs.coerce3dpoint((-7.368, -57.607, 0.000)), rs.coerce3dpoint((-7.327, -57.696, 0.000)), rs.coerce3dpoint((-7.282, -57.796, 0.000)), rs.coerce3dpoint((-7.207, -57.876, 0.000)), rs.coerce3dpoint((-7.124, -57.964, 0.000)), rs.coerce3dpoint((-7.016, -58.016, 0.000)), rs.coerce3dpoint((-6.927, -58.059, 0.000)), rs.coerce3dpoint((-6.831, -58.079, 0.000)), rs.coerce3dpoint((-6.728, -58.101, 0.000)), rs.coerce3dpoint((-6.623, -58.103, 0.000)), rs.coerce3dpoint((-6.603, -58.103, 0.000)), rs.coerce3dpoint((-6.584, -58.103, 0.000)), rs.coerce3dpoint((-6.302, -58.102, 0.000)), rs.coerce3dpoint((-6.021, -58.102, 0.000)), rs.coerce3dpoint((-5.904, -58.102, 0.000)), rs.coerce3dpoint((-5.788, -58.101, 0.000)), rs.coerce3dpoint((-5.375, -58.101, 0.000)), rs.coerce3dpoint((-4.962, -58.100, 0.000)), rs.coerce3dpoint((-3.922, -58.098, 0.000)), rs.coerce3dpoint((-2.882, -58.095, 0.000)), rs.coerce3dpoint((-2.776, -58.095, 0.000)), rs.coerce3dpoint((-2.669, -58.095, 0.000)), rs.coerce3dpoint((-2.445, -58.095, 0.000)), rs.coerce3dpoint((-2.220, -58.092, 0.000)), rs.coerce3dpoint((-2.014, -58.090, 0.000)), rs.coerce3dpoint((-1.809, -58.079, 0.000)), rs.coerce3dpoint((-1.707, -58.074, 0.000)), rs.coerce3dpoint((-1.607, -58.049, 0.000)), rs.coerce3dpoint((-1.513, -58.025, 0.000)), rs.coerce3dpoint((-1.427, -57.979, 0.000)), rs.coerce3dpoint((-1.316, -57.920, 0.000)), rs.coerce3dpoint((-1.236, -57.822, 0.000)), rs.coerce3dpoint((-1.169, -57.739, 0.000)), rs.coerce3dpoint((-1.131, -57.640, 0.000)), rs.coerce3dpoint((-1.096, -57.548, 0.000)), rs.coerce3dpoint((-1.083, -57.450, 0.000)), rs.coerce3dpoint((-1.073, -57.382, 0.000)), rs.coerce3dpoint((-1.072, -57.314, 0.000)), rs.coerce3dpoint((-1.068, -57.110, 0.000)), rs.coerce3dpoint((-1.067, -56.906, 0.000))], [0.0, 0.0, 17.0282503805, 17.0282503805, 17.3119212197, 17.3119212197, 17.4649793584, 17.4649793584, 17.6127068650, 17.6127068650, 17.6959540019, 17.6959540019, 17.8417242155, 17.8417242155, 18.0058246374, 18.0058246374, 18.2127722713, 18.2127722713, 18.5101639192, 18.5101639192, 18.5260645356, 18.5260645356, 20.9407309006, 20.9407309006, 21.0036316161, 21.0036316161, 22.3070443876, 22.3070443876, 23.3028431372, 23.3028431372, 23.4972845102, 23.4972845102, 23.7345964598, 23.7345964598, 23.9511175862, 23.9511175862, 24.1396105596, 24.1396105596, 24.2539296392, 24.2539296392, 24.3725152152, 24.3725152152, 24.5589564600, 24.5589564600, 24.7168747637, 24.7168747637, 41.7451578147, 41.7451578147, 42.1349078870, 42.1349078870, 42.3518535819, 42.3518535819, 42.5472565613, 42.5472565613, 42.7648179669, 42.7648179669, 43.0027679729, 43.0027679729, 43.1989064820, 43.1989064820, 43.4086669932, 43.4086669932, 43.4472604681, 43.4472604681, 44.0106119681, 44.0106119681, 44.2429523298, 44.2429523298, 45.0687836381, 45.0687836381, 47.1489892687, 47.1489892687, 47.3618994529, 47.3618994529, 47.8109998724, 47.8109998724, 48.2227375415, 48.2227375415, 48.4266954228, 48.4266954228, 48.6201942351, 48.6201942351, 48.8699542839, 48.8699542839, 49.0802147003, 49.0802147003, 49.2767344863, 49.2767344863, 49.4135095063, 49.4135095063, 49.8216539408, 49.8216539408], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.994355495303, 1.0, 0.995904224899, 1.0, 0.999442375516, 1.0, 0.988028569084, 1.0, 0.992043300966, 1.0, 0.993202064766, 1.0, 0.991088663666, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999978220237, 1.0, 0.993015199212, 1.0, 0.983788165704, 1.0, 0.9873129741, 1.0, 0.994055401798, 1.0, 0.993613340048, 1.0, 0.998543062108, 1.0, 0.999630148408, 1.0, 0.999969580463, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9958317254, 1.0, 0.993523043631, 1.0, 0.986899497378, 1.0, 0.983394525187, 1.0, 0.992778092482, 1.0, 0.995573000899, 1.0, 0.999899185082, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999971120417, 1.0, 0.99979600081, 1.0, 0.995325829525, 1.0, 0.992316809533, 1.0, 0.980665849153, 1.0, 0.987750981514, 1.0, 0.993500371454, 1.0, 0.9981290319, 1.0, 0.999971120417, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.477, -57.360, 0.000), (-11.482, -53.996, 0.000), (-11.487, -50.631, 0.000), (-11.491, -49.270, 0.000), (-11.495, -47.908, 0.000), (-11.498, -46.779, 0.000), (-11.502, -45.650, 0.000), (-11.503, -45.308, 0.000), (-11.507, -44.966, 0.000), (-11.508, -44.837, 0.000), (-11.512, -44.708, 0.000), (-11.515, -44.639, 0.000), (-11.521, -44.570, 0.000), (-11.523, -44.535, 0.000), (-11.532, -44.502, 0.000), (-11.543, -44.462, 0.000), (-11.560, -44.424, 0.000), (-11.587, -44.362, 0.000), (-11.620, -44.302, 0.000), (-11.670, -44.208, 0.000), (-11.725, -44.117, 0.000), (-11.876, -43.881, 0.000), (-12.046, -43.659, 0.000), (-12.138, -43.538, 0.000), (-12.238, -43.425, 0.000), (-12.276, -43.381, 0.000), (-12.317, -43.339, 0.000), (-12.377, -43.278, 0.000), (-12.448, -43.229, 0.000), (-12.514, -43.183, 0.000), (-12.590, -43.155, 0.000), (-12.732, -43.104, 0.000), (-12.879, -43.140, 0.000), (-12.960, -43.160, 0.000), (-13.034, -43.201, 0.000), (-13.115, -43.247, 0.000), (-13.184, -43.308, 0.000), (-13.238, -43.356, 0.000), (-13.286, -43.410, 0.000), (-13.313, -43.452, 0.000), (-13.329, -43.499, 0.000), (-13.350, -43.560, 0.000), (-13.360, -43.623, 0.000), (-13.374, -43.705, 0.000), (-13.378, -43.788, 0.000), (-13.381, -43.845, 0.000), (-13.382, -43.902, 0.000), (-13.384, -43.988, 0.000), (-13.383, -44.074, 0.000), (-13.382, -44.134, 0.000), (-13.384, -44.195, 0.000), (-13.384, -44.203, 0.000), (-13.385, -44.210, 0.000), (-13.388, -44.318, 0.000), (-13.391, -44.426, 0.000), (-13.400, -44.882, 0.000), (-13.408, -45.338, 0.000), (-13.430, -46.766, 0.000), (-13.452, -48.195, 0.000), (-13.453, -48.882, 0.000), (-13.453, -49.569, 0.000), (-13.453, -50.100, 0.000), (-13.453, -50.631, 0.000), (-13.450, -53.995, 0.000), (-13.448, -57.358, 0.000), (-13.444, -57.466, 0.000), (-13.418, -57.570, 0.000), (-13.393, -57.670, 0.000), (-13.342, -57.760, 0.000), (-13.249, -57.921, 0.000), (-13.085, -58.008, 0.000), (-12.994, -58.056, 0.000), (-12.894, -58.079, 0.000), (-12.833, -58.093, 0.000), (-12.770, -58.098, 0.000), (-12.612, -58.113, 0.000), (-12.454, -58.111, 0.000), (-12.291, -58.109, 0.000), (-12.128, -58.097, 0.000), (-12.092, -58.094, 0.000), (-12.056, -58.092, 0.000), (-11.978, -58.086, 0.000), (-11.903, -58.066, 0.000), (-11.829, -58.046, 0.000), (-11.764, -58.007, 0.000), (-11.681, -57.956, 0.000), (-11.624, -57.878, 0.000), (-11.583, -57.823, 0.000), (-11.554, -57.761, 0.000), (-11.553, -57.759, 0.000), (-11.552, -57.757, 0.000), (-11.529, -57.711, 0.000), (-11.518, -57.661, 0.000), (-11.506, -57.607, 0.000), (-11.498, -57.552, 0.000), (-11.485, -57.456, 0.000), (-11.477, -57.360, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.477, -57.360, 0.000)), rs.coerce3dpoint((-11.482, -53.996, 0.000)), rs.coerce3dpoint((-11.487, -50.631, 0.000)), rs.coerce3dpoint((-11.491, -49.270, 0.000)), rs.coerce3dpoint((-11.495, -47.908, 0.000)), rs.coerce3dpoint((-11.498, -46.779, 0.000)), rs.coerce3dpoint((-11.502, -45.650, 0.000)), rs.coerce3dpoint((-11.503, -45.308, 0.000)), rs.coerce3dpoint((-11.507, -44.966, 0.000)), rs.coerce3dpoint((-11.508, -44.837, 0.000)), rs.coerce3dpoint((-11.512, -44.708, 0.000)), rs.coerce3dpoint((-11.515, -44.639, 0.000)), rs.coerce3dpoint((-11.521, -44.570, 0.000)), rs.coerce3dpoint((-11.523, -44.535, 0.000)), rs.coerce3dpoint((-11.532, -44.502, 0.000)), rs.coerce3dpoint((-11.543, -44.462, 0.000)), rs.coerce3dpoint((-11.560, -44.424, 0.000)), rs.coerce3dpoint((-11.587, -44.362, 0.000)), rs.coerce3dpoint((-11.620, -44.302, 0.000)), rs.coerce3dpoint((-11.670, -44.208, 0.000)), rs.coerce3dpoint((-11.725, -44.117, 0.000)), rs.coerce3dpoint((-11.876, -43.881, 0.000)), rs.coerce3dpoint((-12.046, -43.659, 0.000)), rs.coerce3dpoint((-12.138, -43.538, 0.000)), rs.coerce3dpoint((-12.238, -43.425, 0.000)), rs.coerce3dpoint((-12.276, -43.381, 0.000)), rs.coerce3dpoint((-12.317, -43.339, 0.000)), rs.coerce3dpoint((-12.377, -43.278, 0.000)), rs.coerce3dpoint((-12.448, -43.229, 0.000)), rs.coerce3dpoint((-12.514, -43.183, 0.000)), rs.coerce3dpoint((-12.590, -43.155, 0.000)), rs.coerce3dpoint((-12.732, -43.104, 0.000)), rs.coerce3dpoint((-12.879, -43.140, 0.000)), rs.coerce3dpoint((-12.960, -43.160, 0.000)), rs.coerce3dpoint((-13.034, -43.201, 0.000)), rs.coerce3dpoint((-13.115, -43.247, 0.000)), rs.coerce3dpoint((-13.184, -43.308, 0.000)), rs.coerce3dpoint((-13.238, -43.356, 0.000)), rs.coerce3dpoint((-13.286, -43.410, 0.000)), rs.coerce3dpoint((-13.313, -43.452, 0.000)), rs.coerce3dpoint((-13.329, -43.499, 0.000)), rs.coerce3dpoint((-13.350, -43.560, 0.000)), rs.coerce3dpoint((-13.360, -43.623, 0.000)), rs.coerce3dpoint((-13.374, -43.705, 0.000)), rs.coerce3dpoint((-13.378, -43.788, 0.000)), rs.coerce3dpoint((-13.381, -43.845, 0.000)), rs.coerce3dpoint((-13.382, -43.902, 0.000)), rs.coerce3dpoint((-13.384, -43.988, 0.000)), rs.coerce3dpoint((-13.383, -44.074, 0.000)), rs.coerce3dpoint((-13.382, -44.134, 0.000)), rs.coerce3dpoint((-13.384, -44.195, 0.000)), rs.coerce3dpoint((-13.384, -44.203, 0.000)), rs.coerce3dpoint((-13.385, -44.210, 0.000)), rs.coerce3dpoint((-13.388, -44.318, 0.000)), rs.coerce3dpoint((-13.391, -44.426, 0.000)), rs.coerce3dpoint((-13.400, -44.882, 0.000)), rs.coerce3dpoint((-13.408, -45.338, 0.000)), rs.coerce3dpoint((-13.430, -46.766, 0.000)), rs.coerce3dpoint((-13.452, -48.195, 0.000)), rs.coerce3dpoint((-13.453, -48.882, 0.000)), rs.coerce3dpoint((-13.453, -49.569, 0.000)), rs.coerce3dpoint((-13.453, -50.100, 0.000)), rs.coerce3dpoint((-13.453, -50.631, 0.000)), rs.coerce3dpoint((-13.450, -53.995, 0.000)), rs.coerce3dpoint((-13.448, -57.358, 0.000)), rs.coerce3dpoint((-13.444, -57.466, 0.000)), rs.coerce3dpoint((-13.418, -57.570, 0.000)), rs.coerce3dpoint((-13.393, -57.670, 0.000)), rs.coerce3dpoint((-13.342, -57.760, 0.000)), rs.coerce3dpoint((-13.249, -57.921, 0.000)), rs.coerce3dpoint((-13.085, -58.008, 0.000)), rs.coerce3dpoint((-12.994, -58.056, 0.000)), rs.coerce3dpoint((-12.894, -58.079, 0.000)), rs.coerce3dpoint((-12.833, -58.093, 0.000)), rs.coerce3dpoint((-12.770, -58.098, 0.000)), rs.coerce3dpoint((-12.612, -58.113, 0.000)), rs.coerce3dpoint((-12.454, -58.111, 0.000)), rs.coerce3dpoint((-12.291, -58.109, 0.000)), rs.coerce3dpoint((-12.128, -58.097, 0.000)), rs.coerce3dpoint((-12.092, -58.094, 0.000)), rs.coerce3dpoint((-12.056, -58.092, 0.000)), rs.coerce3dpoint((-11.978, -58.086, 0.000)), rs.coerce3dpoint((-11.903, -58.066, 0.000)), rs.coerce3dpoint((-11.829, -58.046, 0.000)), rs.coerce3dpoint((-11.764, -58.007, 0.000)), rs.coerce3dpoint((-11.681, -57.956, 0.000)), rs.coerce3dpoint((-11.624, -57.878, 0.000)), rs.coerce3dpoint((-11.583, -57.823, 0.000)), rs.coerce3dpoint((-11.554, -57.761, 0.000)), rs.coerce3dpoint((-11.553, -57.759, 0.000)), rs.coerce3dpoint((-11.552, -57.757, 0.000)), rs.coerce3dpoint((-11.529, -57.711, 0.000)), rs.coerce3dpoint((-11.518, -57.661, 0.000)), rs.coerce3dpoint((-11.506, -57.607, 0.000)), rs.coerce3dpoint((-11.498, -57.552, 0.000)), rs.coerce3dpoint((-11.485, -57.456, 0.000)), rs.coerce3dpoint((-11.477, -57.360, 0.000))], [0.0, 0.0, 6.72890750512, 6.72890750512, 9.45183813929, 9.45183813929, 11.7100887725, 11.7100887725, 12.3945180666, 12.3945180666, 12.6520970823, 12.6520970823, 12.7906341315, 12.7906341315, 12.8594540186, 12.8594540186, 12.9428517811, 12.9428517811, 13.0781677249, 13.0781677249, 13.2916327196, 13.2916327196, 13.8509445356, 13.8509445356, 14.1531838638, 14.1531838638, 14.2698672492, 14.2698672492, 14.4413625273, 14.4413625273, 14.6025788366, 14.6025788366, 14.8955545508, 14.8955545508, 15.0629170057, 15.0629170057, 15.2475793035, 15.2475793035, 15.3921297358, 15.3921297358, 15.4910890320, 15.4910890320, 15.6189518774, 15.6189518774, 15.7844470687, 15.7844470687, 15.8986184490, 15.8986184490, 16.0710762728, 16.0710762728, 16.1914982884, 16.1914982884, 16.2072893143, 16.2072893143, 16.4225968646, 16.4225968646, 17.3352024270, 17.3352024270, 20.1923297729, 20.1923297729, 21.5665501082, 21.5665501082, 22.6286002036, 22.6286002036, 29.3558921443, 29.3558921443, 29.5696555619, 29.5696555619, 29.7750327115, 29.7750327115, 30.1373326454, 30.1373326454, 30.3413070446, 30.3413070446, 30.4669034451, 30.4669034451, 30.7833760447, 30.7833760447, 31.1097831823, 31.1097831823, 31.1820023626, 31.1820023626, 31.3375577334, 31.3375577334, 31.4889314151, 31.4889314151, 31.6801688389, 31.6801688389, 31.8164321652, 31.8164321652, 31.8216386611, 31.8216386611, 31.9231912439, 31.9231912439, 32.0343239821, 32.0343239821, 32.2272567561, 32.2272567561], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999923122955, 1.0, 0.999624690442, 1.0, 0.995758593879, 1.0, 0.997250963801, 1.0, 0.999126761439, 1.0, 0.999740113775, 1.0, 0.99915164001, 1.0, 0.99937361624, 1.0, 0.99968754882, 1.0, 0.995267843209, 1.0, 0.991611313233, 1.0, 0.956960776899, 1.0, 0.990982263942, 1.0, 0.994313096546, 1.0, 0.998017467168, 1.0, 0.993015199212, 1.0, 0.996577945265, 1.0, 0.998422025984, 1.0, 0.999815696985, 1.0, 0.999907524276, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999964720622, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.994163462437, 1.0, 0.990821496664, 1.0, 0.960632672244, 1.0, 0.991168054624, 1.0, 0.997824369262, 1.0, 0.998700345101, 1.0, 0.999519615412, 1.0, 1.0, 1.0, 0.995306540191, 1.0, 0.990686453984, 1.0, 0.981013157681, 1.0, 0.995287211418, 1.0, 1.0, 1.0, 0.993523043631, 1.0, 0.998886700064, 1.0, 0.999707222866, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-17.360, -34.036, 0.000), (-17.075, -33.537, 0.000), (-16.790, -33.037, 0.000), (-16.169, -31.960, 0.000), (-15.548, -30.882, 0.000), (-14.997, -29.927, 0.000), (-14.446, -28.972, 0.000), (-14.173, -28.499, 0.000), (-13.900, -28.026, 0.000), (-13.886, -28.000, 0.000), (-13.875, -27.972, 0.000), (-13.849, -27.902, 0.000), (-13.830, -27.829, 0.000), (-13.771, -27.596, 0.000), (-13.769, -27.355, 0.000), (-13.769, -27.315, 0.000), (-13.770, -27.274, 0.000), (-13.775, -27.146, 0.000), (-13.775, -27.017, 0.000), (-13.775, -26.983, 0.000), (-13.775, -26.949, 0.000), (-13.774, -26.820, 0.000), (-13.777, -26.691, 0.000), (-13.779, -26.605, 0.000), (-13.785, -26.520, 0.000), (-13.795, -26.391, 0.000), (-13.830, -26.266, 0.000), (-13.853, -26.180, 0.000), (-13.887, -26.097, 0.000), (-13.922, -26.008, 0.000), (-13.980, -25.931, 0.000), (-14.044, -25.844, 0.000), (-14.136, -25.786, 0.000), (-14.236, -25.723, 0.000), (-14.353, -25.706, 0.000), (-14.449, -25.691, 0.000), (-14.545, -25.703, 0.000), (-14.587, -25.708, 0.000), (-14.629, -25.718, 0.000), (-14.715, -25.736, 0.000), (-14.795, -25.776, 0.000), (-14.926, -25.842, 0.000), (-15.010, -25.963, 0.000), (-15.026, -25.984, 0.000), (-15.039, -26.007, 0.000), (-15.889, -27.486, 0.000), (-16.739, -28.965, 0.000), (-17.626, -30.510, 0.000), (-18.514, -32.055, 0.000), (-18.798, -32.554, 0.000), (-19.083, -33.054, 0.000), (-19.704, -34.132, 0.000), (-20.326, -35.209, 0.000), (-20.876, -36.164, 0.000), (-21.427, -37.119, 0.000), (-21.700, -37.592, 0.000), (-21.973, -38.065, 0.000), (-21.987, -38.091, 0.000), (-21.998, -38.119, 0.000), (-22.025, -38.189, 0.000), (-22.043, -38.262, 0.000), (-22.102, -38.496, 0.000), (-22.104, -38.736, 0.000), (-22.104, -38.777, 0.000), (-22.103, -38.817, 0.000), (-22.098, -38.945, 0.000), (-22.098, -39.074, 0.000), (-22.098, -39.108, 0.000), (-22.098, -39.142, 0.000), (-22.099, -39.271, 0.000), (-22.096, -39.400, 0.000), (-22.094, -39.486, 0.000), (-22.088, -39.571, 0.000), (-22.078, -39.701, 0.000), (-22.043, -39.825, 0.000), (-22.020, -39.911, 0.000), (-21.986, -39.994, 0.000), (-21.951, -40.083, 0.000), (-21.893, -40.161, 0.000), (-21.829, -40.248, 0.000), (-21.737, -40.306, 0.000), (-21.637, -40.368, 0.000), (-21.520, -40.386, 0.000), (-21.424, -40.400, 0.000), (-21.328, -40.388, 0.000), (-21.286, -40.383, 0.000), (-21.244, -40.374, 0.000), (-21.158, -40.355, 0.000), (-21.078, -40.315, 0.000), (-20.947, -40.249, 0.000), (-20.863, -40.128, 0.000), (-20.848, -40.107, 0.000), (-20.834, -40.084, 0.000), (-19.984, -38.605, 0.000), (-19.134, -37.126, 0.000), (-18.247, -35.581, 0.000), (-17.360, -34.036, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-17.360, -34.036, 0.000)), rs.coerce3dpoint((-17.075, -33.537, 0.000)), rs.coerce3dpoint((-16.790, -33.037, 0.000)), rs.coerce3dpoint((-16.169, -31.960, 0.000)), rs.coerce3dpoint((-15.548, -30.882, 0.000)), rs.coerce3dpoint((-14.997, -29.927, 0.000)), rs.coerce3dpoint((-14.446, -28.972, 0.000)), rs.coerce3dpoint((-14.173, -28.499, 0.000)), rs.coerce3dpoint((-13.900, -28.026, 0.000)), rs.coerce3dpoint((-13.886, -28.000, 0.000)), rs.coerce3dpoint((-13.875, -27.972, 0.000)), rs.coerce3dpoint((-13.849, -27.902, 0.000)), rs.coerce3dpoint((-13.830, -27.829, 0.000)), rs.coerce3dpoint((-13.771, -27.596, 0.000)), rs.coerce3dpoint((-13.769, -27.355, 0.000)), rs.coerce3dpoint((-13.769, -27.315, 0.000)), rs.coerce3dpoint((-13.770, -27.274, 0.000)), rs.coerce3dpoint((-13.775, -27.146, 0.000)), rs.coerce3dpoint((-13.775, -27.017, 0.000)), rs.coerce3dpoint((-13.775, -26.983, 0.000)), rs.coerce3dpoint((-13.775, -26.949, 0.000)), rs.coerce3dpoint((-13.774, -26.820, 0.000)), rs.coerce3dpoint((-13.777, -26.691, 0.000)), rs.coerce3dpoint((-13.779, -26.605, 0.000)), rs.coerce3dpoint((-13.785, -26.520, 0.000)), rs.coerce3dpoint((-13.795, -26.391, 0.000)), rs.coerce3dpoint((-13.830, -26.266, 0.000)), rs.coerce3dpoint((-13.853, -26.180, 0.000)), rs.coerce3dpoint((-13.887, -26.097, 0.000)), rs.coerce3dpoint((-13.922, -26.008, 0.000)), rs.coerce3dpoint((-13.980, -25.931, 0.000)), rs.coerce3dpoint((-14.044, -25.844, 0.000)), rs.coerce3dpoint((-14.136, -25.786, 0.000)), rs.coerce3dpoint((-14.236, -25.723, 0.000)), rs.coerce3dpoint((-14.353, -25.706, 0.000)), rs.coerce3dpoint((-14.449, -25.691, 0.000)), rs.coerce3dpoint((-14.545, -25.703, 0.000)), rs.coerce3dpoint((-14.587, -25.708, 0.000)), rs.coerce3dpoint((-14.629, -25.718, 0.000)), rs.coerce3dpoint((-14.715, -25.736, 0.000)), rs.coerce3dpoint((-14.795, -25.776, 0.000)), rs.coerce3dpoint((-14.926, -25.842, 0.000)), rs.coerce3dpoint((-15.010, -25.963, 0.000)), rs.coerce3dpoint((-15.026, -25.984, 0.000)), rs.coerce3dpoint((-15.039, -26.007, 0.000)), rs.coerce3dpoint((-15.889, -27.486, 0.000)), rs.coerce3dpoint((-16.739, -28.965, 0.000)), rs.coerce3dpoint((-17.626, -30.510, 0.000)), rs.coerce3dpoint((-18.514, -32.055, 0.000)), rs.coerce3dpoint((-18.798, -32.554, 0.000)), rs.coerce3dpoint((-19.083, -33.054, 0.000)), rs.coerce3dpoint((-19.704, -34.132, 0.000)), rs.coerce3dpoint((-20.326, -35.209, 0.000)), rs.coerce3dpoint((-20.876, -36.164, 0.000)), rs.coerce3dpoint((-21.427, -37.119, 0.000)), rs.coerce3dpoint((-21.700, -37.592, 0.000)), rs.coerce3dpoint((-21.973, -38.065, 0.000)), rs.coerce3dpoint((-21.987, -38.091, 0.000)), rs.coerce3dpoint((-21.998, -38.119, 0.000)), rs.coerce3dpoint((-22.025, -38.189, 0.000)), rs.coerce3dpoint((-22.043, -38.262, 0.000)), rs.coerce3dpoint((-22.102, -38.496, 0.000)), rs.coerce3dpoint((-22.104, -38.736, 0.000)), rs.coerce3dpoint((-22.104, -38.777, 0.000)), rs.coerce3dpoint((-22.103, -38.817, 0.000)), rs.coerce3dpoint((-22.098, -38.945, 0.000)), rs.coerce3dpoint((-22.098, -39.074, 0.000)), rs.coerce3dpoint((-22.098, -39.108, 0.000)), rs.coerce3dpoint((-22.098, -39.142, 0.000)), rs.coerce3dpoint((-22.099, -39.271, 0.000)), rs.coerce3dpoint((-22.096, -39.400, 0.000)), rs.coerce3dpoint((-22.094, -39.486, 0.000)), rs.coerce3dpoint((-22.088, -39.571, 0.000)), rs.coerce3dpoint((-22.078, -39.701, 0.000)), rs.coerce3dpoint((-22.043, -39.825, 0.000)), rs.coerce3dpoint((-22.020, -39.911, 0.000)), rs.coerce3dpoint((-21.986, -39.994, 0.000)), rs.coerce3dpoint((-21.951, -40.083, 0.000)), rs.coerce3dpoint((-21.893, -40.161, 0.000)), rs.coerce3dpoint((-21.829, -40.248, 0.000)), rs.coerce3dpoint((-21.737, -40.306, 0.000)), rs.coerce3dpoint((-21.637, -40.368, 0.000)), rs.coerce3dpoint((-21.520, -40.386, 0.000)), rs.coerce3dpoint((-21.424, -40.400, 0.000)), rs.coerce3dpoint((-21.328, -40.388, 0.000)), rs.coerce3dpoint((-21.286, -40.383, 0.000)), rs.coerce3dpoint((-21.244, -40.374, 0.000)), rs.coerce3dpoint((-21.158, -40.355, 0.000)), rs.coerce3dpoint((-21.078, -40.315, 0.000)), rs.coerce3dpoint((-20.947, -40.249, 0.000)), rs.coerce3dpoint((-20.863, -40.128, 0.000)), rs.coerce3dpoint((-20.848, -40.107, 0.000)), rs.coerce3dpoint((-20.834, -40.084, 0.000)), rs.coerce3dpoint((-19.984, -38.605, 0.000)), rs.coerce3dpoint((-19.134, -37.126, 0.000)), rs.coerce3dpoint((-18.247, -35.581, 0.000)), rs.coerce3dpoint((-17.360, -34.036, 0.000))], [0.0, 0.0, 1.15026545723, 1.15026545723, 3.63742148458, 3.63742148458, 5.84263942801, 5.84263942801, 6.93463429704, 6.93463429704, 6.99392083562, 6.99392083562, 7.14452455740, 7.14452455740, 7.62375441958, 7.62375441958, 7.70411495124, 7.70411495124, 7.96140888724, 7.96140888724, 8.02942889018, 8.02942889018, 8.28721452751, 8.28721452751, 8.45907317620, 8.45907317620, 8.71741090175, 8.71741090175, 8.89558102213, 8.89558102213, 9.08673589305, 9.08673589305, 9.30136030706, 9.30136030706, 9.53401302091, 9.53401302091, 9.72669771561, 9.72669771561, 9.81160390345, 9.81160390345, 9.98815153032, 9.98815153032, 10.2762768931, 10.2762768931, 10.3288334119, 10.3288334119, 13.7409964990, 13.7409964990, 17.3038933260, 17.3038933260, 18.4541587832, 18.4541587832, 20.9413234736, 20.9413234736, 23.1465414170, 23.1465414170, 24.2385362860, 24.2385362860, 24.2978228246, 24.2978228246, 24.4484265464, 24.4484265464, 24.9276551232, 24.9276551232, 25.0080156549, 25.0080156549, 25.2653094228, 25.2653094228, 25.3333194235, 25.3333194235, 25.5911149815, 25.5911149815, 25.7629741036, 25.7629741036, 26.0213002273, 26.0213002273, 26.1994703477, 26.1994703477, 26.3906339747, 26.3906339747, 26.6052515574, 26.6052515574, 26.8379042713, 26.8379042713, 27.0305890942, 27.0305890942, 27.1154952820, 27.1154952820, 27.2920429089, 27.2920429089, 27.5801748844, 27.5801748844, 27.6327314032, 27.6327314032, 31.0448858197, 31.0448858197, 34.6077913180, 34.6077913180], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.391, -57.360, 0.000), (-10.383, -57.458, 0.000), (-10.370, -57.556, 0.000), (-10.362, -57.611, 0.000), (-10.350, -57.664, 0.000), (-10.338, -57.712, 0.000), (-10.317, -57.757, 0.000), (-10.288, -57.819, 0.000), (-10.248, -57.874, 0.000), (-10.194, -57.949, 0.000), (-10.117, -57.999, 0.000), (-10.052, -58.040, 0.000), (-9.978, -58.062, 0.000), (-9.904, -58.084, 0.000), (-9.827, -58.090, 0.000), (-9.820, -58.091, 0.000), (-9.813, -58.092, 0.000), (-9.649, -58.105, 0.000), (-9.485, -58.110, 0.000), (-9.326, -58.114, 0.000), (-9.167, -58.104, 0.000), (-9.133, -58.102, 0.000), (-9.099, -58.098, 0.000), (-8.995, -58.089, 0.000), (-8.897, -58.057, 0.000), (-8.794, -58.023, 0.000), (-8.707, -57.960, 0.000), (-8.588, -57.874, 0.000), (-8.519, -57.745, 0.000), (-8.470, -57.654, 0.000), (-8.446, -57.553, 0.000), (-8.424, -57.457, 0.000), (-8.421, -57.358, 0.000), (-8.418, -53.995, 0.000), (-8.416, -50.631, 0.000), (-8.416, -49.569, 0.000), (-8.416, -48.507, 0.000), (-8.416, -48.351, 0.000), (-8.416, -48.195, 0.000), (-8.439, -46.756, 0.000), (-8.461, -45.318, 0.000), (-8.468, -44.868, 0.000), (-8.478, -44.419, 0.000), (-8.480, -44.315, 0.000), (-8.484, -44.210, 0.000), (-8.484, -44.203, 0.000), (-8.485, -44.195, 0.000), (-8.486, -44.134, 0.000), (-8.486, -44.074, 0.000), (-8.485, -43.988, 0.000), (-8.486, -43.902, 0.000), (-8.488, -43.814, 0.000), (-8.495, -43.727, 0.000), (-8.502, -43.650, 0.000), (-8.518, -43.575, 0.000), (-8.530, -43.519, 0.000), (-8.553, -43.465, 0.000), (-8.565, -43.436, 0.000), (-8.582, -43.410, 0.000), (-8.651, -43.331, 0.000), (-8.735, -43.267, 0.000), (-8.805, -43.212, 0.000), (-8.887, -43.175, 0.000), (-8.965, -43.140, 0.000), (-9.051, -43.129, 0.000), (-9.168, -43.115, 0.000), (-9.279, -43.155, 0.000), (-9.355, -43.183, 0.000), (-9.422, -43.229, 0.000), (-9.492, -43.278, 0.000), (-9.551, -43.339, 0.000), (-9.628, -43.419, 0.000), (-9.699, -43.503, 0.000), (-9.819, -43.649, 0.000), (-9.929, -43.802, 0.000), (-10.040, -43.956, 0.000), (-10.143, -44.117, 0.000), (-10.202, -44.214, 0.000), (-10.255, -44.314, 0.000), (-10.286, -44.371, 0.000), (-10.311, -44.431, 0.000), (-10.328, -44.468, 0.000), (-10.338, -44.507, 0.000), (-10.345, -44.538, 0.000), (-10.348, -44.570, 0.000), (-10.355, -44.654, 0.000), (-10.357, -44.738, 0.000), (-10.362, -44.887, 0.000), (-10.363, -45.035, 0.000), (-10.366, -45.443, 0.000), (-10.368, -45.850, 0.000), (-10.371, -46.879, 0.000), (-10.374, -47.908, 0.000), (-10.378, -49.270, 0.000), (-10.381, -50.631, 0.000), (-10.386, -53.996, 0.000), (-10.391, -57.360, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.391, -57.360, 0.000)), rs.coerce3dpoint((-10.383, -57.458, 0.000)), rs.coerce3dpoint((-10.370, -57.556, 0.000)), rs.coerce3dpoint((-10.362, -57.611, 0.000)), rs.coerce3dpoint((-10.350, -57.664, 0.000)), rs.coerce3dpoint((-10.338, -57.712, 0.000)), rs.coerce3dpoint((-10.317, -57.757, 0.000)), rs.coerce3dpoint((-10.288, -57.819, 0.000)), rs.coerce3dpoint((-10.248, -57.874, 0.000)), rs.coerce3dpoint((-10.194, -57.949, 0.000)), rs.coerce3dpoint((-10.117, -57.999, 0.000)), rs.coerce3dpoint((-10.052, -58.040, 0.000)), rs.coerce3dpoint((-9.978, -58.062, 0.000)), rs.coerce3dpoint((-9.904, -58.084, 0.000)), rs.coerce3dpoint((-9.827, -58.090, 0.000)), rs.coerce3dpoint((-9.820, -58.091, 0.000)), rs.coerce3dpoint((-9.813, -58.092, 0.000)), rs.coerce3dpoint((-9.649, -58.105, 0.000)), rs.coerce3dpoint((-9.485, -58.110, 0.000)), rs.coerce3dpoint((-9.326, -58.114, 0.000)), rs.coerce3dpoint((-9.167, -58.104, 0.000)), rs.coerce3dpoint((-9.133, -58.102, 0.000)), rs.coerce3dpoint((-9.099, -58.098, 0.000)), rs.coerce3dpoint((-8.995, -58.089, 0.000)), rs.coerce3dpoint((-8.897, -58.057, 0.000)), rs.coerce3dpoint((-8.794, -58.023, 0.000)), rs.coerce3dpoint((-8.707, -57.960, 0.000)), rs.coerce3dpoint((-8.588, -57.874, 0.000)), rs.coerce3dpoint((-8.519, -57.745, 0.000)), rs.coerce3dpoint((-8.470, -57.654, 0.000)), rs.coerce3dpoint((-8.446, -57.553, 0.000)), rs.coerce3dpoint((-8.424, -57.457, 0.000)), rs.coerce3dpoint((-8.421, -57.358, 0.000)), rs.coerce3dpoint((-8.418, -53.995, 0.000)), rs.coerce3dpoint((-8.416, -50.631, 0.000)), rs.coerce3dpoint((-8.416, -49.569, 0.000)), rs.coerce3dpoint((-8.416, -48.507, 0.000)), rs.coerce3dpoint((-8.416, -48.351, 0.000)), rs.coerce3dpoint((-8.416, -48.195, 0.000)), rs.coerce3dpoint((-8.439, -46.756, 0.000)), rs.coerce3dpoint((-8.461, -45.318, 0.000)), rs.coerce3dpoint((-8.468, -44.868, 0.000)), rs.coerce3dpoint((-8.478, -44.419, 0.000)), rs.coerce3dpoint((-8.480, -44.315, 0.000)), rs.coerce3dpoint((-8.484, -44.210, 0.000)), rs.coerce3dpoint((-8.484, -44.203, 0.000)), rs.coerce3dpoint((-8.485, -44.195, 0.000)), rs.coerce3dpoint((-8.486, -44.134, 0.000)), rs.coerce3dpoint((-8.486, -44.074, 0.000)), rs.coerce3dpoint((-8.485, -43.988, 0.000)), rs.coerce3dpoint((-8.486, -43.902, 0.000)), rs.coerce3dpoint((-8.488, -43.814, 0.000)), rs.coerce3dpoint((-8.495, -43.727, 0.000)), rs.coerce3dpoint((-8.502, -43.650, 0.000)), rs.coerce3dpoint((-8.518, -43.575, 0.000)), rs.coerce3dpoint((-8.530, -43.519, 0.000)), rs.coerce3dpoint((-8.553, -43.465, 0.000)), rs.coerce3dpoint((-8.565, -43.436, 0.000)), rs.coerce3dpoint((-8.582, -43.410, 0.000)), rs.coerce3dpoint((-8.651, -43.331, 0.000)), rs.coerce3dpoint((-8.735, -43.267, 0.000)), rs.coerce3dpoint((-8.805, -43.212, 0.000)), rs.coerce3dpoint((-8.887, -43.175, 0.000)), rs.coerce3dpoint((-8.965, -43.140, 0.000)), rs.coerce3dpoint((-9.051, -43.129, 0.000)), rs.coerce3dpoint((-9.168, -43.115, 0.000)), rs.coerce3dpoint((-9.279, -43.155, 0.000)), rs.coerce3dpoint((-9.355, -43.183, 0.000)), rs.coerce3dpoint((-9.422, -43.229, 0.000)), rs.coerce3dpoint((-9.492, -43.278, 0.000)), rs.coerce3dpoint((-9.551, -43.339, 0.000)), rs.coerce3dpoint((-9.628, -43.419, 0.000)), rs.coerce3dpoint((-9.699, -43.503, 0.000)), rs.coerce3dpoint((-9.819, -43.649, 0.000)), rs.coerce3dpoint((-9.929, -43.802, 0.000)), rs.coerce3dpoint((-10.040, -43.956, 0.000)), rs.coerce3dpoint((-10.143, -44.117, 0.000)), rs.coerce3dpoint((-10.202, -44.214, 0.000)), rs.coerce3dpoint((-10.255, -44.314, 0.000)), rs.coerce3dpoint((-10.286, -44.371, 0.000)), rs.coerce3dpoint((-10.311, -44.431, 0.000)), rs.coerce3dpoint((-10.328, -44.468, 0.000)), rs.coerce3dpoint((-10.338, -44.507, 0.000)), rs.coerce3dpoint((-10.345, -44.538, 0.000)), rs.coerce3dpoint((-10.348, -44.570, 0.000)), rs.coerce3dpoint((-10.355, -44.654, 0.000)), rs.coerce3dpoint((-10.357, -44.738, 0.000)), rs.coerce3dpoint((-10.362, -44.887, 0.000)), rs.coerce3dpoint((-10.363, -45.035, 0.000)), rs.coerce3dpoint((-10.366, -45.443, 0.000)), rs.coerce3dpoint((-10.368, -45.850, 0.000)), rs.coerce3dpoint((-10.371, -46.879, 0.000)), rs.coerce3dpoint((-10.374, -47.908, 0.000)), rs.coerce3dpoint((-10.378, -49.270, 0.000)), rs.coerce3dpoint((-10.381, -50.631, 0.000)), rs.coerce3dpoint((-10.386, -53.996, 0.000)), rs.coerce3dpoint((-10.391, -57.360, 0.000))], [0.0, 0.0, 0.197467291781, 0.197467291781, 0.307049918033, 0.307049918033, 0.405618995619, 0.405618995619, 0.541513343499, 0.541513343499, 0.723753998469, 0.723753998469, 0.876720990663, 0.876720990663, 1.03107752876, 1.03107752876, 1.04525013615, 1.04525013615, 1.37389722909, 1.37389722909, 1.69193482732, 1.69193482732, 1.76035056101, 1.76035056101, 1.96684589629, 1.96684589629, 2.18065337708, 2.18065337708, 2.469357686, 2.469357686, 2.67435443923, 2.67435443923, 2.87134409189, 2.87134409189, 9.59863603264, 9.59863603264, 11.7226560474, 11.7226560474, 12.0349061641, 12.0349061641, 14.9122163583, 14.9122163583, 15.8115006986, 15.8115006986, 16.0199462683, 16.0199462683, 16.0357372942, 16.0357372942, 16.1561593099, 16.1561593099, 16.3286171336, 16.3286171336, 16.5041479251, 16.5041479251, 16.6569949902, 16.6569949902, 16.7731613472, 16.7731613472, 16.8351051434, 16.8351051434, 17.0445362455, 17.0445362455, 17.2226014088, 17.2226014088, 17.3939009074, 17.3939009074, 17.6256942825, 17.6256942825, 17.7869849026, 17.7869849026, 17.9573431621, 17.9573431621, 18.1776653536, 18.1776653536, 18.5547498987, 18.5547498987, 18.9355782888, 18.9355782888, 19.1625978643, 19.1625978643, 19.2919263069, 19.2919263069, 19.3732611034, 19.3732611034, 19.4365773397, 19.4365773397, 19.6051742289, 19.6051742289, 19.9024290051, 19.9024290051, 20.7169150746, 20.7169150746, 22.7753741425, 22.7753741425, 25.4983047767, 25.4983047767, 32.2272122818, 32.2272122818], 2, [1.0, 0.999677472021, 1.0, 0.998829405547, 1.0, 0.993814211347, 1.0, 0.995497658408, 1.0, 0.982996282794, 1.0, 0.989996664865, 1.0, 0.995032349499, 1.0, 1.0, 1.0, 0.999640944472, 1.0, 0.998914809139, 1.0, 0.999918083355, 1.0, 0.993409290533, 1.0, 0.988424011815, 1.0, 0.974959956699, 1.0, 0.991220787198, 1.0, 0.995150805918, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999966380565, 1.0, 1.0, 1.0, 0.99979600081, 1.0, 0.999907524276, 1.0, 0.999359385259, 1.0, 0.997876736519, 1.0, 0.995629093335, 1.0, 0.996627277237, 1.0, 0.995383460871, 1.0, 0.993340568096, 1.0, 0.988544373687, 1.0, 0.972854917068, 1.0, 0.991637036419, 1.0, 0.995345079418, 1.0, 0.999224121111, 1.0, 0.999380671843, 1.0, 0.999635566418, 1.0, 0.999682530401, 1.0, 0.999058663266, 1.0, 0.99697815269, 1.0, 0.996561422091, 1.0, 0.999519615412, 1.0, 0.999945921462, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-7.422, -13.396, 0.000), (-7.423, -17.104, 0.000), (-7.423, -20.812, 0.000), (-7.423, -22.988, 0.000), (-7.423, -25.163, 0.000), (-7.423, -25.755, 0.000), (-7.420, -26.347, 0.000), (-7.420, -26.533, 0.000), (-7.417, -26.718, 0.000), (-7.415, -26.788, 0.000), (-7.411, -26.858, 0.000), (-7.410, -26.877, 0.000), (-7.408, -26.896, 0.000), (-7.400, -26.999, 0.000), (-7.374, -27.100, 0.000), (-7.350, -27.193, 0.000), (-7.307, -27.278, 0.000), (-7.258, -27.374, 0.000), (-7.181, -27.450, 0.000), (-7.101, -27.528, 0.000), (-6.999, -27.575, 0.000), (-6.913, -27.616, 0.000), (-6.820, -27.636, 0.000), (-6.736, -27.654, 0.000), (-6.650, -27.659, 0.000), (-6.604, -27.661, 0.000), (-6.557, -27.662, 0.000), (-6.311, -27.664, 0.000), (-6.065, -27.664, 0.000), (-5.765, -27.663, 0.000), (-5.466, -27.663, 0.000), (-5.394, -27.663, 0.000), (-5.322, -27.663, 0.000), (-4.987, -27.663, 0.000), (-4.652, -27.663, 0.000), (-3.839, -27.662, 0.000), (-3.025, -27.662, 0.000), (-2.895, -27.662, 0.000), (-2.765, -27.656, 0.000), (-2.716, -27.653, 0.000), (-2.667, -27.649, 0.000), (-2.576, -27.641, 0.000), (-2.489, -27.613, 0.000), (-2.360, -27.570, 0.000), (-2.257, -27.480, 0.000), (-2.188, -27.420, 0.000), (-2.133, -27.346, 0.000), (-2.119, -27.327, 0.000), (-2.106, -27.308, 0.000), (-1.819, -26.849, 0.000), (-1.540, -26.384, 0.000), (-1.259, -25.915, 0.000), (-0.990, -25.439, 0.000), (-0.949, -25.367, 0.000), (-0.908, -25.296, 0.000), (-0.801, -25.104, 0.000), (-0.705, -24.906, 0.000), (-0.670, -24.836, 0.000), (-0.637, -24.764, 0.000), (-0.607, -24.703, 0.000), (-0.585, -24.638, 0.000), (-0.565, -24.581, 0.000), (-0.557, -24.521, 0.000), (-0.556, -24.511, 0.000), (-0.555, -24.501, 0.000), (-0.551, -24.439, 0.000), (-0.550, -24.377, 0.000), (-0.545, -24.175, 0.000), (-0.544, -23.973, 0.000), (-0.540, -23.454, 0.000), (-0.540, -22.935, 0.000), (-0.540, -22.237, 0.000), (-0.541, -21.539, 0.000), (-0.546, -18.378, 0.000), (-0.551, -15.217, 0.000), (-0.556, -13.711, 0.000), (-0.561, -12.206, 0.000), (-0.565, -11.435, 0.000), (-0.573, -10.665, 0.000), (-0.577, -10.257, 0.000), (-0.587, -9.849, 0.000), (-0.591, -9.632, 0.000), (-0.601, -9.415, 0.000), (-0.606, -9.294, 0.000), (-0.617, -9.174, 0.000), (-0.623, -9.099, 0.000), (-0.636, -9.025, 0.000), (-0.644, -8.979, 0.000), (-0.656, -8.934, 0.000), (-0.662, -8.909, 0.000), (-0.672, -8.884, 0.000), (-0.695, -8.829, 0.000), (-0.720, -8.776, 0.000), (-0.794, -8.619, 0.000), (-0.870, -8.463, 0.000), (-0.893, -8.414, 0.000), (-0.917, -8.365, 0.000), (-2.837, -5.085, 0.000), (-4.757, -1.805, 0.000), (-5.298, -0.882, 0.000), (-5.838, 0.042, 0.000), (-5.942, 0.219, 0.000), (-6.046, 0.397, 0.000), (-6.061, 0.423, 0.000), (-6.079, 0.446, 0.000), (-6.115, 0.492, 0.000), (-6.154, 0.537, 0.000), (-6.165, 0.550, 0.000), (-6.177, 0.563, 0.000), (-6.244, 0.641, 0.000), (-6.328, 0.700, 0.000), (-6.435, 0.773, 0.000), (-6.561, 0.801, 0.000), (-6.670, 0.825, 0.000), (-6.782, 0.812, 0.000), (-6.840, 0.806, 0.000), (-6.897, 0.791, 0.000), (-6.990, 0.767, 0.000), (-7.074, 0.719, 0.000), (-7.203, 0.644, 0.000), (-7.282, 0.518, 0.000), (-7.332, 0.436, 0.000), (-7.360, 0.343, 0.000), (-7.373, 0.304, 0.000), (-7.381, 0.263, 0.000), (-7.394, 0.201, 0.000), (-7.405, 0.138, 0.000), (-7.410, 0.109, 0.000), (-7.411, 0.080, 0.000), (-7.413, 0.041, 0.000), (-7.414, 0.001, 0.000), (-7.415, -0.202, 0.000), (-7.416, -0.405, 0.000), (-7.417, -1.502, 0.000), (-7.418, -2.600, 0.000), (-7.420, -7.998, 0.000), (-7.422, -13.396, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-7.422, -13.396, 0.000)), rs.coerce3dpoint((-7.423, -17.104, 0.000)), rs.coerce3dpoint((-7.423, -20.812, 0.000)), rs.coerce3dpoint((-7.423, -22.988, 0.000)), rs.coerce3dpoint((-7.423, -25.163, 0.000)), rs.coerce3dpoint((-7.423, -25.755, 0.000)), rs.coerce3dpoint((-7.420, -26.347, 0.000)), rs.coerce3dpoint((-7.420, -26.533, 0.000)), rs.coerce3dpoint((-7.417, -26.718, 0.000)), rs.coerce3dpoint((-7.415, -26.788, 0.000)), rs.coerce3dpoint((-7.411, -26.858, 0.000)), rs.coerce3dpoint((-7.410, -26.877, 0.000)), rs.coerce3dpoint((-7.408, -26.896, 0.000)), rs.coerce3dpoint((-7.400, -26.999, 0.000)), rs.coerce3dpoint((-7.374, -27.100, 0.000)), rs.coerce3dpoint((-7.350, -27.193, 0.000)), rs.coerce3dpoint((-7.307, -27.278, 0.000)), rs.coerce3dpoint((-7.258, -27.374, 0.000)), rs.coerce3dpoint((-7.181, -27.450, 0.000)), rs.coerce3dpoint((-7.101, -27.528, 0.000)), rs.coerce3dpoint((-6.999, -27.575, 0.000)), rs.coerce3dpoint((-6.913, -27.616, 0.000)), rs.coerce3dpoint((-6.820, -27.636, 0.000)), rs.coerce3dpoint((-6.736, -27.654, 0.000)), rs.coerce3dpoint((-6.650, -27.659, 0.000)), rs.coerce3dpoint((-6.604, -27.661, 0.000)), rs.coerce3dpoint((-6.557, -27.662, 0.000)), rs.coerce3dpoint((-6.311, -27.664, 0.000)), rs.coerce3dpoint((-6.065, -27.664, 0.000)), rs.coerce3dpoint((-5.765, -27.663, 0.000)), rs.coerce3dpoint((-5.466, -27.663, 0.000)), rs.coerce3dpoint((-5.394, -27.663, 0.000)), rs.coerce3dpoint((-5.322, -27.663, 0.000)), rs.coerce3dpoint((-4.987, -27.663, 0.000)), rs.coerce3dpoint((-4.652, -27.663, 0.000)), rs.coerce3dpoint((-3.839, -27.662, 0.000)), rs.coerce3dpoint((-3.025, -27.662, 0.000)), rs.coerce3dpoint((-2.895, -27.662, 0.000)), rs.coerce3dpoint((-2.765, -27.656, 0.000)), rs.coerce3dpoint((-2.716, -27.653, 0.000)), rs.coerce3dpoint((-2.667, -27.649, 0.000)), rs.coerce3dpoint((-2.576, -27.641, 0.000)), rs.coerce3dpoint((-2.489, -27.613, 0.000)), rs.coerce3dpoint((-2.360, -27.570, 0.000)), rs.coerce3dpoint((-2.257, -27.480, 0.000)), rs.coerce3dpoint((-2.188, -27.420, 0.000)), rs.coerce3dpoint((-2.133, -27.346, 0.000)), rs.coerce3dpoint((-2.119, -27.327, 0.000)), rs.coerce3dpoint((-2.106, -27.308, 0.000)), rs.coerce3dpoint((-1.819, -26.849, 0.000)), rs.coerce3dpoint((-1.540, -26.384, 0.000)), rs.coerce3dpoint((-1.259, -25.915, 0.000)), rs.coerce3dpoint((-0.990, -25.439, 0.000)), rs.coerce3dpoint((-0.949, -25.367, 0.000)), rs.coerce3dpoint((-0.908, -25.296, 0.000)), rs.coerce3dpoint((-0.801, -25.104, 0.000)), rs.coerce3dpoint((-0.705, -24.906, 0.000)), rs.coerce3dpoint((-0.670, -24.836, 0.000)), rs.coerce3dpoint((-0.637, -24.764, 0.000)), rs.coerce3dpoint((-0.607, -24.703, 0.000)), rs.coerce3dpoint((-0.585, -24.638, 0.000)), rs.coerce3dpoint((-0.565, -24.581, 0.000)), rs.coerce3dpoint((-0.557, -24.521, 0.000)), rs.coerce3dpoint((-0.556, -24.511, 0.000)), rs.coerce3dpoint((-0.555, -24.501, 0.000)), rs.coerce3dpoint((-0.551, -24.439, 0.000)), rs.coerce3dpoint((-0.550, -24.377, 0.000)), rs.coerce3dpoint((-0.545, -24.175, 0.000)), rs.coerce3dpoint((-0.544, -23.973, 0.000)), rs.coerce3dpoint((-0.540, -23.454, 0.000)), rs.coerce3dpoint((-0.540, -22.935, 0.000)), rs.coerce3dpoint((-0.540, -22.237, 0.000)), rs.coerce3dpoint((-0.541, -21.539, 0.000)), rs.coerce3dpoint((-0.546, -18.378, 0.000)), rs.coerce3dpoint((-0.551, -15.217, 0.000)), rs.coerce3dpoint((-0.556, -13.711, 0.000)), rs.coerce3dpoint((-0.561, -12.206, 0.000)), rs.coerce3dpoint((-0.565, -11.435, 0.000)), rs.coerce3dpoint((-0.573, -10.665, 0.000)), rs.coerce3dpoint((-0.577, -10.257, 0.000)), rs.coerce3dpoint((-0.587, -9.849, 0.000)), rs.coerce3dpoint((-0.591, -9.632, 0.000)), rs.coerce3dpoint((-0.601, -9.415, 0.000)), rs.coerce3dpoint((-0.606, -9.294, 0.000)), rs.coerce3dpoint((-0.617, -9.174, 0.000)), rs.coerce3dpoint((-0.623, -9.099, 0.000)), rs.coerce3dpoint((-0.636, -9.025, 0.000)), rs.coerce3dpoint((-0.644, -8.979, 0.000)), rs.coerce3dpoint((-0.656, -8.934, 0.000)), rs.coerce3dpoint((-0.662, -8.909, 0.000)), rs.coerce3dpoint((-0.672, -8.884, 0.000)), rs.coerce3dpoint((-0.695, -8.829, 0.000)), rs.coerce3dpoint((-0.720, -8.776, 0.000)), rs.coerce3dpoint((-0.794, -8.619, 0.000)), rs.coerce3dpoint((-0.870, -8.463, 0.000)), rs.coerce3dpoint((-0.893, -8.414, 0.000)), rs.coerce3dpoint((-0.917, -8.365, 0.000)), rs.coerce3dpoint((-2.837, -5.085, 0.000)), rs.coerce3dpoint((-4.757, -1.805, 0.000)), rs.coerce3dpoint((-5.298, -0.882, 0.000)), rs.coerce3dpoint((-5.838, 0.042, 0.000)), rs.coerce3dpoint((-5.942, 0.219, 0.000)), rs.coerce3dpoint((-6.046, 0.397, 0.000)), rs.coerce3dpoint((-6.061, 0.423, 0.000)), rs.coerce3dpoint((-6.079, 0.446, 0.000)), rs.coerce3dpoint((-6.115, 0.492, 0.000)), rs.coerce3dpoint((-6.154, 0.537, 0.000)), rs.coerce3dpoint((-6.165, 0.550, 0.000)), rs.coerce3dpoint((-6.177, 0.563, 0.000)), rs.coerce3dpoint((-6.244, 0.641, 0.000)), rs.coerce3dpoint((-6.328, 0.700, 0.000)), rs.coerce3dpoint((-6.435, 0.773, 0.000)), rs.coerce3dpoint((-6.561, 0.801, 0.000)), rs.coerce3dpoint((-6.670, 0.825, 0.000)), rs.coerce3dpoint((-6.782, 0.812, 0.000)), rs.coerce3dpoint((-6.840, 0.806, 0.000)), rs.coerce3dpoint((-6.897, 0.791, 0.000)), rs.coerce3dpoint((-6.990, 0.767, 0.000)), rs.coerce3dpoint((-7.074, 0.719, 0.000)), rs.coerce3dpoint((-7.203, 0.644, 0.000)), rs.coerce3dpoint((-7.282, 0.518, 0.000)), rs.coerce3dpoint((-7.332, 0.436, 0.000)), rs.coerce3dpoint((-7.360, 0.343, 0.000)), rs.coerce3dpoint((-7.373, 0.304, 0.000)), rs.coerce3dpoint((-7.381, 0.263, 0.000)), rs.coerce3dpoint((-7.394, 0.201, 0.000)), rs.coerce3dpoint((-7.405, 0.138, 0.000)), rs.coerce3dpoint((-7.410, 0.109, 0.000)), rs.coerce3dpoint((-7.411, 0.080, 0.000)), rs.coerce3dpoint((-7.413, 0.041, 0.000)), rs.coerce3dpoint((-7.414, 0.001, 0.000)), rs.coerce3dpoint((-7.415, -0.202, 0.000)), rs.coerce3dpoint((-7.416, -0.405, 0.000)), rs.coerce3dpoint((-7.417, -1.502, 0.000)), rs.coerce3dpoint((-7.418, -2.600, 0.000)), rs.coerce3dpoint((-7.420, -7.998, 0.000)), rs.coerce3dpoint((-7.422, -13.396, 0.000))], [0.0, 0.0, 7.41627002676, 7.41627002676, 11.7673500287, 11.7673500287, 12.9512737299, 12.9512737299, 13.3220972331, 13.3220972331, 13.4623282382, 13.4623282382, 13.5006043583, 13.5006043583, 13.7071997402, 13.7071997402, 13.8985327319, 13.8985327319, 14.1120173439, 14.1120173439, 14.3337919463, 14.3337919463, 14.5235193570, 14.5235193570, 14.6953669295, 14.6953669295, 14.7881026385, 14.7881026385, 15.2808088777, 15.2808088777, 15.8793489182, 15.8793489182, 16.0231889602, 16.0231889602, 16.6930090570, 16.6930090570, 18.3205694021, 18.3205694021, 18.5802452132, 18.5802452132, 18.6788253772, 18.6788253772, 18.8607013084, 18.8607013084, 19.1295314434, 19.1295314434, 19.3125348562, 19.3125348562, 19.3592294121, 19.3592294121, 20.4424018168, 20.4424018168, 21.5362594406, 21.5362594406, 21.7012292794, 21.7012292794, 22.1407378908, 22.1407378908, 22.2980969591, 22.2980969591, 22.4350136040, 22.4350136040, 22.5547561626, 22.5547561626, 22.5755066464, 22.5755066464, 22.6994338536, 22.6994338536, 23.1039558274, 23.1039558274, 24.1416948854, 24.1416948854, 25.5380251885, 25.5380251885, 31.8597034335, 31.8597034335, 34.8708208453, 34.8708208453, 36.4117684907, 36.4117684907, 37.2280842037, 37.2280842037, 37.6619772946, 37.6619772946, 37.9034259450, 37.9034259450, 38.0537260972, 38.0537260972, 38.1464247514, 38.1464247514, 38.1994994383, 38.1994994383, 38.3179054985, 38.3179054985, 38.6649040992, 38.6649040992, 38.7733649940, 38.7733649940, 46.3750635535, 46.3750635535, 48.5144591628, 48.5144591628, 48.9266632040, 48.9266632040, 48.9857111861, 48.9857111861, 49.1029183424, 49.1029183424, 49.1378402495, 49.1378402495, 49.3425971674, 49.3425971674, 49.5976457823, 49.5976457823, 49.8198600337, 49.8198600337, 49.9369394755, 49.9369394755, 50.1286077902, 50.1286077902, 50.4209443351, 50.4209443351, 50.6126439363, 50.6126439363, 50.6960234323, 50.6960234323, 50.8229986453, 50.8229986453, 50.8810464767, 50.8810464767, 50.9606346593, 50.9606346593, 51.3664613506, 51.3664613506, 53.5609127860, 53.5609127860, 64.3573236584, 64.3573236584], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999997580003, 1.0, 0.999974080336, 1.0, 0.999744652605, 1.0, 0.999943821578, 1.0, 0.996444651507, 1.0, 0.993880461842, 1.0, 0.987249785504, 1.0, 0.985887311678, 1.0, 0.993703008669, 1.0, 0.997236144733, 1.0, 0.999791941646, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999630148408, 1.0, 0.999852090939, 1.0, 0.993409290533, 1.0, 0.980001489951, 1.0, 0.994313096546, 1.0, 0.999766747207, 1.0, 0.99996128075, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 0.999538026734, 1.0, 0.999974080336, 1.0, 0.998342494801, 1.0, 0.995131161718, 1.0, 0.999726257473, 1.0, 0.999749151466, 1.0, 0.99996128075, 1.0, 0.999992780026, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.999980780185, 1.0, 0.999932722263, 1.0, 0.999762408228, 1.0, 0.999168026234, 1.0, 0.99915164001, 1.0, 0.997206387593, 1.0, 0.999712041466, 1.0, 0.999963020684, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997085772557, 1.0, 0.999635566418, 1.0, 1.0, 1.0, 0.991942671571, 1.0, 0.981319309212, 1.0, 0.986867422268, 1.0, 0.997440000997, 1.0, 0.990303163376, 1.0, 0.970573737667, 1.0, 0.991404124013, 1.0, 0.998914809139, 1.0, 0.999726257473, 1.0, 0.998261013353, 1.0, 0.999707222866, 1.0, 0.999990320047, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-0.580, 2.596, 0.000), (-0.579, 3.029, 0.000), (-0.578, 3.463, 0.000), (-0.573, 5.379, 0.000), (-0.569, 7.295, 0.000), (-0.568, 8.011, 0.000), (-0.570, 8.727, 0.000), (-0.570, 9.029, 0.000), (-0.575, 9.331, 0.000), (-0.576, 9.467, 0.000), (-0.582, 9.603, 0.000), (-0.585, 9.669, 0.000), (-0.592, 9.735, 0.000), (-0.597, 9.783, 0.000), (-0.608, 9.829, 0.000), (-0.620, 9.888, 0.000), (-0.644, 9.942, 0.000), (-0.670, 10.000, 0.000), (-0.701, 10.056, 0.000), (-0.754, 10.151, 0.000), (-0.812, 10.244, 0.000), (-0.819, 10.255, 0.000), (-0.826, 10.267, 0.000), (-0.914, 10.411, 0.000), (-1.000, 10.556, 0.000), (-1.254, 10.986, 0.000), (-1.505, 11.417, 0.000), (-2.037, 12.333, 0.000), (-2.568, 13.248, 0.000), (-3.772, 15.325, 0.000), (-4.976, 17.402, 0.000), (-5.359, 18.060, 0.000), (-5.742, 18.718, 0.000), (-5.879, 18.952, 0.000), (-6.018, 19.184, 0.000), (-6.067, 19.267, 0.000), (-6.120, 19.349, 0.000), (-6.141, 19.382, 0.000), (-6.165, 19.414, 0.000), (-6.173, 19.425, 0.000), (-6.183, 19.436, 0.000), (-6.242, 19.505, 0.000), (-6.312, 19.563, 0.000), (-6.377, 19.617, 0.000), (-6.454, 19.655, 0.000), (-6.568, 19.710, 0.000), (-6.695, 19.711, 0.000), (-6.733, 19.711, 0.000), (-6.771, 19.707, 0.000), (-6.911, 19.691, 0.000), (-7.035, 19.625, 0.000), (-7.233, 19.520, 0.000), (-7.334, 19.319, 0.000), (-7.399, 19.191, 0.000), (-7.413, 19.048, 0.000), (-7.415, 19.030, 0.000), (-7.416, 19.011, 0.000), (-7.418, 18.960, 0.000), (-7.418, 18.908, 0.000), (-7.420, 18.503, 0.000), (-7.420, 18.099, 0.000), (-7.421, 16.476, 0.000), (-7.422, 14.853, 0.000), (-7.422, 14.490, 0.000), (-7.422, 14.127, 0.000), (-7.422, 14.079, 0.000), (-7.422, 14.031, 0.000), (-7.422, 13.577, 0.000), (-7.422, 13.122, 0.000), (-7.422, 10.590, 0.000), (-7.421, 8.059, 0.000), (-7.419, 7.143, 0.000), (-7.417, 6.227, 0.000), (-7.416, 5.850, 0.000), (-7.411, 5.474, 0.000), (-7.410, 5.314, 0.000), (-7.404, 5.154, 0.000), (-7.402, 5.080, 0.000), (-7.395, 5.007, 0.000), (-7.391, 4.959, 0.000), (-7.382, 4.912, 0.000), (-7.375, 4.868, 0.000), (-7.357, 4.826, 0.000), (-7.337, 4.778, 0.000), (-7.312, 4.731, 0.000), (-7.266, 4.643, 0.000), (-7.215, 4.558, 0.000), (-7.205, 4.541, 0.000), (-7.195, 4.524, 0.000), (-7.084, 4.332, 0.000), (-6.973, 4.140, 0.000), (-4.778, 0.349, 0.000), (-2.583, -3.442, 0.000), (-2.307, -3.918, 0.000), (-2.031, -4.393, 0.000), (-1.992, -4.460, 0.000), (-1.952, -4.526, 0.000), (-1.948, -4.534, 0.000), (-1.943, -4.541, 0.000), (-1.927, -4.568, 0.000), (-1.906, -4.592, 0.000), (-1.867, -4.638, 0.000), (-1.825, -4.683, 0.000), (-1.724, -4.794, 0.000), (-1.596, -4.872, 0.000), (-1.571, -4.886, 0.000), (-1.546, -4.900, 0.000), (-1.448, -4.951, 0.000), (-1.340, -4.973, 0.000), (-1.219, -4.997, 0.000), (-1.098, -4.974, 0.000), (-0.886, -4.934, 0.000), (-0.750, -4.768, 0.000), (-0.673, -4.675, 0.000), (-0.634, -4.561, 0.000), (-0.603, -4.469, 0.000), (-0.595, -4.372, 0.000), (-0.586, -4.271, 0.000), (-0.583, -4.170, 0.000), (-0.579, -4.047, 0.000), (-0.579, -3.925, 0.000), (-0.578, -3.716, 0.000), (-0.578, -3.508, 0.000), (-0.578, -1.761, 0.000), (-0.579, -0.014, 0.000), (-0.579, 0.117, 0.000), (-0.579, 0.248, 0.000), (-0.579, 1.422, 0.000), (-0.580, 2.596, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-0.580, 2.596, 0.000)), rs.coerce3dpoint((-0.579, 3.029, 0.000)), rs.coerce3dpoint((-0.578, 3.463, 0.000)), rs.coerce3dpoint((-0.573, 5.379, 0.000)), rs.coerce3dpoint((-0.569, 7.295, 0.000)), rs.coerce3dpoint((-0.568, 8.011, 0.000)), rs.coerce3dpoint((-0.570, 8.727, 0.000)), rs.coerce3dpoint((-0.570, 9.029, 0.000)), rs.coerce3dpoint((-0.575, 9.331, 0.000)), rs.coerce3dpoint((-0.576, 9.467, 0.000)), rs.coerce3dpoint((-0.582, 9.603, 0.000)), rs.coerce3dpoint((-0.585, 9.669, 0.000)), rs.coerce3dpoint((-0.592, 9.735, 0.000)), rs.coerce3dpoint((-0.597, 9.783, 0.000)), rs.coerce3dpoint((-0.608, 9.829, 0.000)), rs.coerce3dpoint((-0.620, 9.888, 0.000)), rs.coerce3dpoint((-0.644, 9.942, 0.000)), rs.coerce3dpoint((-0.670, 10.000, 0.000)), rs.coerce3dpoint((-0.701, 10.056, 0.000)), rs.coerce3dpoint((-0.754, 10.151, 0.000)), rs.coerce3dpoint((-0.812, 10.244, 0.000)), rs.coerce3dpoint((-0.819, 10.255, 0.000)), rs.coerce3dpoint((-0.826, 10.267, 0.000)), rs.coerce3dpoint((-0.914, 10.411, 0.000)), rs.coerce3dpoint((-1.000, 10.556, 0.000)), rs.coerce3dpoint((-1.254, 10.986, 0.000)), rs.coerce3dpoint((-1.505, 11.417, 0.000)), rs.coerce3dpoint((-2.037, 12.333, 0.000)), rs.coerce3dpoint((-2.568, 13.248, 0.000)), rs.coerce3dpoint((-3.772, 15.325, 0.000)), rs.coerce3dpoint((-4.976, 17.402, 0.000)), rs.coerce3dpoint((-5.359, 18.060, 0.000)), rs.coerce3dpoint((-5.742, 18.718, 0.000)), rs.coerce3dpoint((-5.879, 18.952, 0.000)), rs.coerce3dpoint((-6.018, 19.184, 0.000)), rs.coerce3dpoint((-6.067, 19.267, 0.000)), rs.coerce3dpoint((-6.120, 19.349, 0.000)), rs.coerce3dpoint((-6.141, 19.382, 0.000)), rs.coerce3dpoint((-6.165, 19.414, 0.000)), rs.coerce3dpoint((-6.173, 19.425, 0.000)), rs.coerce3dpoint((-6.183, 19.436, 0.000)), rs.coerce3dpoint((-6.242, 19.505, 0.000)), rs.coerce3dpoint((-6.312, 19.563, 0.000)), rs.coerce3dpoint((-6.377, 19.617, 0.000)), rs.coerce3dpoint((-6.454, 19.655, 0.000)), rs.coerce3dpoint((-6.568, 19.710, 0.000)), rs.coerce3dpoint((-6.695, 19.711, 0.000)), rs.coerce3dpoint((-6.733, 19.711, 0.000)), rs.coerce3dpoint((-6.771, 19.707, 0.000)), rs.coerce3dpoint((-6.911, 19.691, 0.000)), rs.coerce3dpoint((-7.035, 19.625, 0.000)), rs.coerce3dpoint((-7.233, 19.520, 0.000)), rs.coerce3dpoint((-7.334, 19.319, 0.000)), rs.coerce3dpoint((-7.399, 19.191, 0.000)), rs.coerce3dpoint((-7.413, 19.048, 0.000)), rs.coerce3dpoint((-7.415, 19.030, 0.000)), rs.coerce3dpoint((-7.416, 19.011, 0.000)), rs.coerce3dpoint((-7.418, 18.960, 0.000)), rs.coerce3dpoint((-7.418, 18.908, 0.000)), rs.coerce3dpoint((-7.420, 18.503, 0.000)), rs.coerce3dpoint((-7.420, 18.099, 0.000)), rs.coerce3dpoint((-7.421, 16.476, 0.000)), rs.coerce3dpoint((-7.422, 14.853, 0.000)), rs.coerce3dpoint((-7.422, 14.490, 0.000)), rs.coerce3dpoint((-7.422, 14.127, 0.000)), rs.coerce3dpoint((-7.422, 14.079, 0.000)), rs.coerce3dpoint((-7.422, 14.031, 0.000)), rs.coerce3dpoint((-7.422, 13.577, 0.000)), rs.coerce3dpoint((-7.422, 13.122, 0.000)), rs.coerce3dpoint((-7.422, 10.590, 0.000)), rs.coerce3dpoint((-7.421, 8.059, 0.000)), rs.coerce3dpoint((-7.419, 7.143, 0.000)), rs.coerce3dpoint((-7.417, 6.227, 0.000)), rs.coerce3dpoint((-7.416, 5.850, 0.000)), rs.coerce3dpoint((-7.411, 5.474, 0.000)), rs.coerce3dpoint((-7.410, 5.314, 0.000)), rs.coerce3dpoint((-7.404, 5.154, 0.000)), rs.coerce3dpoint((-7.402, 5.080, 0.000)), rs.coerce3dpoint((-7.395, 5.007, 0.000)), rs.coerce3dpoint((-7.391, 4.959, 0.000)), rs.coerce3dpoint((-7.382, 4.912, 0.000)), rs.coerce3dpoint((-7.375, 4.868, 0.000)), rs.coerce3dpoint((-7.357, 4.826, 0.000)), rs.coerce3dpoint((-7.337, 4.778, 0.000)), rs.coerce3dpoint((-7.312, 4.731, 0.000)), rs.coerce3dpoint((-7.266, 4.643, 0.000)), rs.coerce3dpoint((-7.215, 4.558, 0.000)), rs.coerce3dpoint((-7.205, 4.541, 0.000)), rs.coerce3dpoint((-7.195, 4.524, 0.000)), rs.coerce3dpoint((-7.084, 4.332, 0.000)), rs.coerce3dpoint((-6.973, 4.140, 0.000)), rs.coerce3dpoint((-4.778, 0.349, 0.000)), rs.coerce3dpoint((-2.583, -3.442, 0.000)), rs.coerce3dpoint((-2.307, -3.918, 0.000)), rs.coerce3dpoint((-2.031, -4.393, 0.000)), rs.coerce3dpoint((-1.992, -4.460, 0.000)), rs.coerce3dpoint((-1.952, -4.526, 0.000)), rs.coerce3dpoint((-1.948, -4.534, 0.000)), rs.coerce3dpoint((-1.943, -4.541, 0.000)), rs.coerce3dpoint((-1.927, -4.568, 0.000)), rs.coerce3dpoint((-1.906, -4.592, 0.000)), rs.coerce3dpoint((-1.867, -4.638, 0.000)), rs.coerce3dpoint((-1.825, -4.683, 0.000)), rs.coerce3dpoint((-1.724, -4.794, 0.000)), rs.coerce3dpoint((-1.596, -4.872, 0.000)), rs.coerce3dpoint((-1.571, -4.886, 0.000)), rs.coerce3dpoint((-1.546, -4.900, 0.000)), rs.coerce3dpoint((-1.448, -4.951, 0.000)), rs.coerce3dpoint((-1.340, -4.973, 0.000)), rs.coerce3dpoint((-1.219, -4.997, 0.000)), rs.coerce3dpoint((-1.098, -4.974, 0.000)), rs.coerce3dpoint((-0.886, -4.934, 0.000)), rs.coerce3dpoint((-0.750, -4.768, 0.000)), rs.coerce3dpoint((-0.673, -4.675, 0.000)), rs.coerce3dpoint((-0.634, -4.561, 0.000)), rs.coerce3dpoint((-0.603, -4.469, 0.000)), rs.coerce3dpoint((-0.595, -4.372, 0.000)), rs.coerce3dpoint((-0.586, -4.271, 0.000)), rs.coerce3dpoint((-0.583, -4.170, 0.000)), rs.coerce3dpoint((-0.579, -4.047, 0.000)), rs.coerce3dpoint((-0.579, -3.925, 0.000)), rs.coerce3dpoint((-0.578, -3.716, 0.000)), rs.coerce3dpoint((-0.578, -3.508, 0.000)), rs.coerce3dpoint((-0.578, -1.761, 0.000)), rs.coerce3dpoint((-0.579, -0.014, 0.000)), rs.coerce3dpoint((-0.579, 0.117, 0.000)), rs.coerce3dpoint((-0.579, 0.248, 0.000)), rs.coerce3dpoint((-0.579, 1.422, 0.000)), rs.coerce3dpoint((-0.580, 2.596, 0.000))], [0.0, 0.0, 0.866752617187, 0.866752617187, 4.69908180118, 4.69908180118, 6.13082327375, 6.13082327375, 6.73547773837, 6.73547773837, 7.00683077263, 7.00683077263, 7.13991009998, 7.13991009998, 7.23539092704, 7.23539092704, 7.35390446858, 7.35390446858, 7.48100120562, 7.48100120562, 7.69938519958, 7.69938519958, 7.72618110412, 7.72618110412, 8.06447086047, 8.06447086047, 9.06214488078, 9.06214488078, 11.1795095099, 11.1795095099, 15.9802147618, 15.9802147618, 17.5040421226, 17.5040421226, 18.0445358101, 18.0445358101, 18.2389798758, 18.2389798758, 18.3177400007, 18.3177400007, 18.3464691729, 18.3464691729, 18.5272131256, 18.5272131256, 18.6972971531, 18.6972971531, 18.9466901381, 18.9466901381, 19.0231607114, 19.0231607114, 19.3005751311, 19.3005751311, 19.7357686401, 19.7357686401, 20.0194071155, 20.0194071155, 20.0566237315, 20.0566237315, 20.1598910669, 20.1598910669, 20.9692370723, 20.9692370723, 24.2150875122, 24.2150875122, 24.9410775123, 24.9410775123, 25.0368675123, 25.0368675123, 25.9458775123, 25.9458775123, 31.0089276033, 31.0089276033, 32.8406414624, 32.8406414624, 33.5941683238, 33.5941683238, 33.9138202230, 33.9138202230, 34.0617745613, 34.0617745613, 34.1570687689, 34.1570687689, 34.2466149906, 34.2466149906, 34.3521763310, 34.3521763310, 34.5501511182, 34.5501511182, 34.5895968202, 34.5895968202, 35.0341207545, 35.0341207545, 43.7950310038, 43.7950310038, 44.8942037095, 44.8942037095, 45.0492492810, 45.0492492810, 45.0664149444, 45.0664149444, 45.1292527191, 45.1292527191, 45.2512230421, 45.2512230421, 45.5495523549, 45.5495523549, 45.6065807473, 45.6065807473, 45.8253708069, 45.8253708069, 46.0694487521, 46.0694487521, 46.4822284905, 46.4822284905, 46.7212463380, 46.7212463380, 46.9144432376, 46.9144432376, 47.1167439584, 47.1167439584, 47.3621012920, 47.3621012920, 47.7782929661, 47.7782929661, 51.2729230322, 51.2729230322, 51.5349130645, 51.5349130645, 53.8826132220, 53.8826132220], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999997120004, 1.0, 0.999980780185, 1.0, 0.999893425679, 1.0, 0.999475257713, 1.0, 0.998225495831, 1.0, 0.994544342805, 1.0, 0.998979001485, 1.0, 0.999662057112, 1.0, 1.0, 1.0, 0.999957680895, 1.0, 0.999993520021, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999984320123, 1.0, 0.99988142703, 1.0, 0.999093031483, 1.0, 0.999602459035, 1.0, 0.996343019004, 1.0, 0.992968091106, 1.0, 0.975353728814, 1.0, 0.99799223758, 1.0, 0.982813743766, 1.0, 0.953018175246, 1.0, 0.983286369773, 1.0, 0.999753610358, 1.0, 0.999893425679, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999935022111, 1.0, 0.999640944472, 1.0, 0.998760748348, 1.0, 0.993523043631, 1.0, 0.998905479316, 1.0, 0.99968754882, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999951981153, 1.0, 1.0, 1.0, 0.997206387593, 1.0, 0.999646282569, 1.0, 0.99019225297, 1.0, 0.999507141485, 1.0, 0.989656947428, 1.0, 0.981924354407, 1.0, 0.940240119267, 1.0, 0.983609809034, 1.0, 0.992267432338, 1.0, 0.999635566418, 1.0, 0.999912883795, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.373, -22.957, 0.000), (5.373, -21.867, 0.000), (5.372, -20.777, 0.000), (5.371, -20.295, 0.000), (5.367, -19.813, 0.000), (5.365, -19.592, 0.000), (5.358, -19.371, 0.000), (5.356, -19.265, 0.000), (5.349, -19.159, 0.000), (5.345, -19.101, 0.000), (5.336, -19.043, 0.000), (5.331, -19.011, 0.000), (5.324, -18.980, 0.000), (5.299, -18.872, 0.000), (5.247, -18.775, 0.000), (5.193, -18.675, 0.000), (5.109, -18.597, 0.000), (4.993, -18.490, 0.000), (4.839, -18.454, 0.000), (4.708, -18.425, 0.000), (4.575, -18.453, 0.000), (4.464, -18.477, 0.000), (4.366, -18.535, 0.000), (4.290, -18.580, 0.000), (4.224, -18.640, 0.000), (4.144, -18.711, 0.000), (4.078, -18.795, 0.000), (4.021, -18.869, 0.000), (3.969, -18.947, 0.000), (3.891, -19.063, 0.000), (3.818, -19.183, 0.000), (3.698, -19.380, 0.000), (3.582, -19.579, 0.000), (3.384, -19.922, 0.000), (3.188, -20.266, 0.000), (0.692, -24.655, 0.000), (-1.803, -29.043, 0.000), (-3.044, -31.231, 0.000), (-4.284, -33.418, 0.000), (-4.850, -34.423, 0.000), (-5.416, -35.427, 0.000), (-5.656, -35.854, 0.000), (-5.893, -36.283, 0.000), (-5.985, -36.449, 0.000), (-6.074, -36.617, 0.000), (-6.107, -36.679, 0.000), (-6.137, -36.742, 0.000), (-6.150, -36.768, 0.000), (-6.160, -36.794, 0.000), (-6.213, -36.921, 0.000), (-6.201, -37.058, 0.000), (-6.189, -37.181, 0.000), (-6.129, -37.288, 0.000), (-6.024, -37.476, 0.000), (-5.827, -37.566, 0.000), (-5.742, -37.604, 0.000), (-5.650, -37.615, 0.000), (-5.600, -37.620, 0.000), (-5.550, -37.622, 0.000), (-5.438, -37.626, 0.000), (-5.327, -37.627, 0.000), (-4.971, -37.632, 0.000), (-4.615, -37.634, 0.000), (-4.006, -37.639, 0.000), (-3.397, -37.643, 0.000), (-3.256, -37.644, 0.000), (-3.116, -37.645, 0.000), (-2.503, -37.648, 0.000), (-1.891, -37.652, 0.000), (-1.647, -37.653, 0.000), (-1.404, -37.651, 0.000), (-1.289, -37.650, 0.000), (-1.174, -37.645, 0.000), (-1.108, -37.642, 0.000), (-1.043, -37.634, 0.000), (-1.004, -37.629, 0.000), (-0.966, -37.620, 0.000), (-0.905, -37.607, 0.000), (-0.847, -37.584, 0.000), (-0.769, -37.552, 0.000), (-0.703, -37.498, 0.000), (-0.647, -37.452, 0.000), (-0.599, -37.397, 0.000), (-0.541, -37.329, 0.000), (-0.491, -37.256, 0.000), (-0.458, -37.207, 0.000), (-0.427, -37.157, 0.000), (-0.267, -36.876, 0.000), (-0.106, -36.595, 0.000), (1.475, -33.825, 0.000), (3.056, -31.055, 0.000), (3.686, -29.947, 0.000), (4.316, -28.839, 0.000), (4.594, -28.349, 0.000), (4.869, -27.857, 0.000), (4.998, -27.626, 0.000), (5.123, -27.393, 0.000), (5.185, -27.280, 0.000), (5.242, -27.164, 0.000), (5.276, -27.097, 0.000), (5.305, -27.027, 0.000), (5.312, -27.011, 0.000), (5.318, -26.994, 0.000), (5.337, -26.945, 0.000), (5.349, -26.894, 0.000), (5.362, -26.837, 0.000), (5.367, -26.780, 0.000), (5.370, -26.750, 0.000), (5.372, -26.721, 0.000), (5.375, -26.659, 0.000), (5.375, -26.597, 0.000), (5.377, -26.403, 0.000), (5.377, -26.208, 0.000), (5.376, -25.396, 0.000), (5.375, -24.584, 0.000), (5.374, -23.770, 0.000), (5.373, -22.957, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.373, -22.957, 0.000)), rs.coerce3dpoint((5.373, -21.867, 0.000)), rs.coerce3dpoint((5.372, -20.777, 0.000)), rs.coerce3dpoint((5.371, -20.295, 0.000)), rs.coerce3dpoint((5.367, -19.813, 0.000)), rs.coerce3dpoint((5.365, -19.592, 0.000)), rs.coerce3dpoint((5.358, -19.371, 0.000)), rs.coerce3dpoint((5.356, -19.265, 0.000)), rs.coerce3dpoint((5.349, -19.159, 0.000)), rs.coerce3dpoint((5.345, -19.101, 0.000)), rs.coerce3dpoint((5.336, -19.043, 0.000)), rs.coerce3dpoint((5.331, -19.011, 0.000)), rs.coerce3dpoint((5.324, -18.980, 0.000)), rs.coerce3dpoint((5.299, -18.872, 0.000)), rs.coerce3dpoint((5.247, -18.775, 0.000)), rs.coerce3dpoint((5.193, -18.675, 0.000)), rs.coerce3dpoint((5.109, -18.597, 0.000)), rs.coerce3dpoint((4.993, -18.490, 0.000)), rs.coerce3dpoint((4.839, -18.454, 0.000)), rs.coerce3dpoint((4.708, -18.425, 0.000)), rs.coerce3dpoint((4.575, -18.453, 0.000)), rs.coerce3dpoint((4.464, -18.477, 0.000)), rs.coerce3dpoint((4.366, -18.535, 0.000)), rs.coerce3dpoint((4.290, -18.580, 0.000)), rs.coerce3dpoint((4.224, -18.640, 0.000)), rs.coerce3dpoint((4.144, -18.711, 0.000)), rs.coerce3dpoint((4.078, -18.795, 0.000)), rs.coerce3dpoint((4.021, -18.869, 0.000)), rs.coerce3dpoint((3.969, -18.947, 0.000)), rs.coerce3dpoint((3.891, -19.063, 0.000)), rs.coerce3dpoint((3.818, -19.183, 0.000)), rs.coerce3dpoint((3.698, -19.380, 0.000)), rs.coerce3dpoint((3.582, -19.579, 0.000)), rs.coerce3dpoint((3.384, -19.922, 0.000)), rs.coerce3dpoint((3.188, -20.266, 0.000)), rs.coerce3dpoint((0.692, -24.655, 0.000)), rs.coerce3dpoint((-1.803, -29.043, 0.000)), rs.coerce3dpoint((-3.044, -31.231, 0.000)), rs.coerce3dpoint((-4.284, -33.418, 0.000)), rs.coerce3dpoint((-4.850, -34.423, 0.000)), rs.coerce3dpoint((-5.416, -35.427, 0.000)), rs.coerce3dpoint((-5.656, -35.854, 0.000)), rs.coerce3dpoint((-5.893, -36.283, 0.000)), rs.coerce3dpoint((-5.985, -36.449, 0.000)), rs.coerce3dpoint((-6.074, -36.617, 0.000)), rs.coerce3dpoint((-6.107, -36.679, 0.000)), rs.coerce3dpoint((-6.137, -36.742, 0.000)), rs.coerce3dpoint((-6.150, -36.768, 0.000)), rs.coerce3dpoint((-6.160, -36.794, 0.000)), rs.coerce3dpoint((-6.213, -36.921, 0.000)), rs.coerce3dpoint((-6.201, -37.058, 0.000)), rs.coerce3dpoint((-6.189, -37.181, 0.000)), rs.coerce3dpoint((-6.129, -37.288, 0.000)), rs.coerce3dpoint((-6.024, -37.476, 0.000)), rs.coerce3dpoint((-5.827, -37.566, 0.000)), rs.coerce3dpoint((-5.742, -37.604, 0.000)), rs.coerce3dpoint((-5.650, -37.615, 0.000)), rs.coerce3dpoint((-5.600, -37.620, 0.000)), rs.coerce3dpoint((-5.550, -37.622, 0.000)), rs.coerce3dpoint((-5.438, -37.626, 0.000)), rs.coerce3dpoint((-5.327, -37.627, 0.000)), rs.coerce3dpoint((-4.971, -37.632, 0.000)), rs.coerce3dpoint((-4.615, -37.634, 0.000)), rs.coerce3dpoint((-4.006, -37.639, 0.000)), rs.coerce3dpoint((-3.397, -37.643, 0.000)), rs.coerce3dpoint((-3.256, -37.644, 0.000)), rs.coerce3dpoint((-3.116, -37.645, 0.000)), rs.coerce3dpoint((-2.503, -37.648, 0.000)), rs.coerce3dpoint((-1.891, -37.652, 0.000)), rs.coerce3dpoint((-1.647, -37.653, 0.000)), rs.coerce3dpoint((-1.404, -37.651, 0.000)), rs.coerce3dpoint((-1.289, -37.650, 0.000)), rs.coerce3dpoint((-1.174, -37.645, 0.000)), rs.coerce3dpoint((-1.108, -37.642, 0.000)), rs.coerce3dpoint((-1.043, -37.634, 0.000)), rs.coerce3dpoint((-1.004, -37.629, 0.000)), rs.coerce3dpoint((-0.966, -37.620, 0.000)), rs.coerce3dpoint((-0.905, -37.607, 0.000)), rs.coerce3dpoint((-0.847, -37.584, 0.000)), rs.coerce3dpoint((-0.769, -37.552, 0.000)), rs.coerce3dpoint((-0.703, -37.498, 0.000)), rs.coerce3dpoint((-0.647, -37.452, 0.000)), rs.coerce3dpoint((-0.599, -37.397, 0.000)), rs.coerce3dpoint((-0.541, -37.329, 0.000)), rs.coerce3dpoint((-0.491, -37.256, 0.000)), rs.coerce3dpoint((-0.458, -37.207, 0.000)), rs.coerce3dpoint((-0.427, -37.157, 0.000)), rs.coerce3dpoint((-0.267, -36.876, 0.000)), rs.coerce3dpoint((-0.106, -36.595, 0.000)), rs.coerce3dpoint((1.475, -33.825, 0.000)), rs.coerce3dpoint((3.056, -31.055, 0.000)), rs.coerce3dpoint((3.686, -29.947, 0.000)), rs.coerce3dpoint((4.316, -28.839, 0.000)), rs.coerce3dpoint((4.594, -28.349, 0.000)), rs.coerce3dpoint((4.869, -27.857, 0.000)), rs.coerce3dpoint((4.998, -27.626, 0.000)), rs.coerce3dpoint((5.123, -27.393, 0.000)), rs.coerce3dpoint((5.185, -27.280, 0.000)), rs.coerce3dpoint((5.242, -27.164, 0.000)), rs.coerce3dpoint((5.276, -27.097, 0.000)), rs.coerce3dpoint((5.305, -27.027, 0.000)), rs.coerce3dpoint((5.312, -27.011, 0.000)), rs.coerce3dpoint((5.318, -26.994, 0.000)), rs.coerce3dpoint((5.337, -26.945, 0.000)), rs.coerce3dpoint((5.349, -26.894, 0.000)), rs.coerce3dpoint((5.362, -26.837, 0.000)), rs.coerce3dpoint((5.367, -26.780, 0.000)), rs.coerce3dpoint((5.370, -26.750, 0.000)), rs.coerce3dpoint((5.372, -26.721, 0.000)), rs.coerce3dpoint((5.375, -26.659, 0.000)), rs.coerce3dpoint((5.375, -26.597, 0.000)), rs.coerce3dpoint((5.377, -26.403, 0.000)), rs.coerce3dpoint((5.377, -26.208, 0.000)), rs.coerce3dpoint((5.376, -25.396, 0.000)), rs.coerce3dpoint((5.375, -24.584, 0.000)), rs.coerce3dpoint((5.374, -23.770, 0.000)), rs.coerce3dpoint((5.373, -22.957, 0.000))], [0.0, 0.0, 2.17986026754, 2.17986026754, 3.14390841365, 3.14390841365, 3.58543867212, 3.58543867212, 3.79793062970, 3.79793062970, 3.91479191682, 3.91479191682, 3.97925331919, 3.97925331919, 4.19812093466, 4.19812093466, 4.42458667480, 4.42458667480, 4.73314869243, 4.73314869243, 4.99926913853, 4.99926913853, 5.22470960920, 5.22470960920, 5.40182644443, 5.40182644443, 5.61503088345, 5.61503088345, 5.80188456298, 5.80188456298, 6.08193083700, 6.08193083700, 6.54345726783, 6.54345726783, 7.33547798808, 7.33547798808, 17.4322922925, 17.4322922925, 22.4616221077, 22.4616221077, 24.7677447897, 24.7677447897, 25.7473096388, 25.7473096388, 26.1274202139, 26.1274202139, 26.2675276690, 26.2675276690, 26.3244468483, 26.3244468483, 26.5942584335, 26.5942584335, 26.8367978407, 26.8367978407, 27.2538392712, 27.2538392712, 27.4384660803, 27.4384660803, 27.5390670221, 27.5390670221, 27.7617452730, 27.7617452730, 28.4739039581, 28.4739039581, 29.6921836110, 29.6921836110, 29.9728795114, 29.9728795114, 31.1982790506, 31.1982790506, 31.6846146359, 31.6846146359, 31.9145666723, 31.9145666723, 32.0462766159, 32.0462766159, 32.1242952473, 32.1242952473, 32.2490013816, 32.2490013816, 32.4170961988, 32.4170961988, 32.5624258664, 32.5624258664, 32.7403775225, 32.7403775225, 32.8575470166, 32.8575470166, 33.5048210830, 33.5048210830, 39.8840176729, 39.8840176729, 42.4335109484, 42.4335109484, 43.5602086686, 43.5602086686, 44.0892934729, 44.0892934729, 44.3473640425, 44.3473640425, 44.4982952828, 44.4982952828, 44.5334209980, 44.5334209980, 44.6386540854, 44.6386540854, 44.7545089639, 44.7545089639, 44.8135406598, 44.8135406598, 44.9371425513, 44.9371425513, 45.3258772961, 45.3258772961, 46.9501780262, 46.9501780262, 48.5776692674, 48.5776692674], 2, [1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999955820976, 1.0, 0.99979600081, 1.0, 0.999075927153, 1.0, 0.999270646076, 1.0, 0.991220787198, 1.0, 0.986053061539, 1.0, 0.96666108266, 1.0, 0.97638908753, 1.0, 0.987344510662, 1.0, 0.994565129153, 1.0, 0.996291668633, 1.0, 0.999255297394, 1.0, 0.999766747207, 1.0, 0.99993950183, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999993520021, 1.0, 0.999963020684, 1.0, 0.999771046213, 1.0, 0.999608076817, 1.0, 0.970288366677, 1.0, 0.978721443006, 1.0, 0.950017141138, 1.0, 0.987874739361, 1.0, 0.999231975044, 1.0, 0.999930382423, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999974080336, 1.0, 0.999834393714, 1.0, 0.999192306316, 1.0, 0.999023656856, 1.0, 0.996100338535, 1.0, 0.989195307739, 1.0, 0.996360056672, 1.0, 0.998249213969, 1.0, 0.999712041466, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994220017, 1.0, 0.999969580463, 1.0, 0.999858889957, 1.0, 0.999344994586, 1.0, 0.999930382423, 1.0, 0.997690669586, 1.0, 0.997539011962, 1.0, 0.99982703496, 1.0, 0.999735534975, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-22.075, -23.492, 0.000), (-22.069, -26.030, 0.000), (-22.062, -28.569, 0.000), (-22.058, -30.383, 0.000), (-22.053, -32.197, 0.000), (-22.053, -32.467, 0.000), (-22.054, -32.738, 0.000), (-22.054, -32.744, 0.000), (-22.054, -32.751, 0.000), (-22.054, -32.973, 0.000), (-22.053, -33.195, 0.000), (-22.053, -33.319, 0.000), (-22.052, -33.444, 0.000), (-22.051, -33.546, 0.000), (-22.043, -33.648, 0.000), (-22.039, -33.702, 0.000), (-22.034, -33.756, 0.000), (-22.032, -33.779, 0.000), (-22.031, -33.801, 0.000), (-22.021, -33.924, 0.000), (-21.955, -34.029, 0.000), (-21.913, -34.094, 0.000), (-21.858, -34.148, 0.000), (-21.829, -34.176, 0.000), (-21.797, -34.202, 0.000), (-21.728, -34.260, 0.000), (-21.646, -34.299, 0.000), (-21.567, -34.337, 0.000), (-21.480, -34.349, 0.000), (-21.333, -34.368, 0.000), (-21.202, -34.301, 0.000), (-21.125, -34.261, 0.000), (-21.063, -34.200, 0.000), (-21.000, -34.138, 0.000), (-20.954, -34.064, 0.000), (-18.949, -30.673, 0.000), (-16.943, -27.282, 0.000), (-16.297, -26.186, 0.000), (-15.650, -25.089, 0.000), (-15.438, -24.729, 0.000), (-15.229, -24.368, 0.000), (-15.137, -24.210, 0.000), (-15.048, -24.050, 0.000), (-14.992, -23.951, 0.000), (-14.953, -23.845, 0.000), (-14.897, -23.693, 0.000), (-14.887, -23.531, 0.000), (-14.880, -23.404, 0.000), (-14.899, -23.279, 0.000), (-14.918, -23.157, 0.000), (-14.956, -23.038, 0.000), (-14.989, -22.933, 0.000), (-15.032, -22.832, 0.000), (-15.821, -21.488, 0.000), (-16.610, -20.143, 0.000), (-18.094, -17.617, 0.000), (-19.577, -15.091, 0.000), (-20.009, -14.357, 0.000), (-20.442, -13.624, 0.000), (-20.581, -13.388, 0.000), (-20.723, -13.153, 0.000), (-20.769, -13.076, 0.000), (-20.818, -13.000, 0.000), (-20.835, -12.973, 0.000), (-20.855, -12.947, 0.000), (-20.861, -12.940, 0.000), (-20.867, -12.932, 0.000), (-20.879, -12.919, 0.000), (-20.893, -12.908, 0.000), (-20.929, -12.879, 0.000), (-20.966, -12.852, 0.000), (-20.988, -12.836, 0.000), (-21.010, -12.820, 0.000), (-21.108, -12.749, 0.000), (-21.224, -12.712, 0.000), (-21.360, -12.669, 0.000), (-21.501, -12.686, 0.000), (-21.723, -12.714, 0.000), (-21.876, -12.877, 0.000), (-21.959, -12.966, 0.000), (-22.006, -13.078, 0.000), (-22.022, -13.114, 0.000), (-22.034, -13.153, 0.000), (-22.052, -13.209, 0.000), (-22.066, -13.267, 0.000), (-22.074, -13.301, 0.000), (-22.077, -13.336, 0.000), (-22.078, -13.350, 0.000), (-22.078, -13.363, 0.000), (-22.080, -13.425, 0.000), (-22.079, -13.487, 0.000), (-22.080, -13.968, 0.000), (-22.080, -14.448, 0.000), (-22.078, -17.277, 0.000), (-22.077, -20.106, 0.000), (-22.076, -21.799, 0.000), (-22.075, -23.492, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-22.075, -23.492, 0.000)), rs.coerce3dpoint((-22.069, -26.030, 0.000)), rs.coerce3dpoint((-22.062, -28.569, 0.000)), rs.coerce3dpoint((-22.058, -30.383, 0.000)), rs.coerce3dpoint((-22.053, -32.197, 0.000)), rs.coerce3dpoint((-22.053, -32.467, 0.000)), rs.coerce3dpoint((-22.054, -32.738, 0.000)), rs.coerce3dpoint((-22.054, -32.744, 0.000)), rs.coerce3dpoint((-22.054, -32.751, 0.000)), rs.coerce3dpoint((-22.054, -32.973, 0.000)), rs.coerce3dpoint((-22.053, -33.195, 0.000)), rs.coerce3dpoint((-22.053, -33.319, 0.000)), rs.coerce3dpoint((-22.052, -33.444, 0.000)), rs.coerce3dpoint((-22.051, -33.546, 0.000)), rs.coerce3dpoint((-22.043, -33.648, 0.000)), rs.coerce3dpoint((-22.039, -33.702, 0.000)), rs.coerce3dpoint((-22.034, -33.756, 0.000)), rs.coerce3dpoint((-22.032, -33.779, 0.000)), rs.coerce3dpoint((-22.031, -33.801, 0.000)), rs.coerce3dpoint((-22.021, -33.924, 0.000)), rs.coerce3dpoint((-21.955, -34.029, 0.000)), rs.coerce3dpoint((-21.913, -34.094, 0.000)), rs.coerce3dpoint((-21.858, -34.148, 0.000)), rs.coerce3dpoint((-21.829, -34.176, 0.000)), rs.coerce3dpoint((-21.797, -34.202, 0.000)), rs.coerce3dpoint((-21.728, -34.260, 0.000)), rs.coerce3dpoint((-21.646, -34.299, 0.000)), rs.coerce3dpoint((-21.567, -34.337, 0.000)), rs.coerce3dpoint((-21.480, -34.349, 0.000)), rs.coerce3dpoint((-21.333, -34.368, 0.000)), rs.coerce3dpoint((-21.202, -34.301, 0.000)), rs.coerce3dpoint((-21.125, -34.261, 0.000)), rs.coerce3dpoint((-21.063, -34.200, 0.000)), rs.coerce3dpoint((-21.000, -34.138, 0.000)), rs.coerce3dpoint((-20.954, -34.064, 0.000)), rs.coerce3dpoint((-18.949, -30.673, 0.000)), rs.coerce3dpoint((-16.943, -27.282, 0.000)), rs.coerce3dpoint((-16.297, -26.186, 0.000)), rs.coerce3dpoint((-15.650, -25.089, 0.000)), rs.coerce3dpoint((-15.438, -24.729, 0.000)), rs.coerce3dpoint((-15.229, -24.368, 0.000)), rs.coerce3dpoint((-15.137, -24.210, 0.000)), rs.coerce3dpoint((-15.048, -24.050, 0.000)), rs.coerce3dpoint((-14.992, -23.951, 0.000)), rs.coerce3dpoint((-14.953, -23.845, 0.000)), rs.coerce3dpoint((-14.897, -23.693, 0.000)), rs.coerce3dpoint((-14.887, -23.531, 0.000)), rs.coerce3dpoint((-14.880, -23.404, 0.000)), rs.coerce3dpoint((-14.899, -23.279, 0.000)), rs.coerce3dpoint((-14.918, -23.157, 0.000)), rs.coerce3dpoint((-14.956, -23.038, 0.000)), rs.coerce3dpoint((-14.989, -22.933, 0.000)), rs.coerce3dpoint((-15.032, -22.832, 0.000)), rs.coerce3dpoint((-15.821, -21.488, 0.000)), rs.coerce3dpoint((-16.610, -20.143, 0.000)), rs.coerce3dpoint((-18.094, -17.617, 0.000)), rs.coerce3dpoint((-19.577, -15.091, 0.000)), rs.coerce3dpoint((-20.009, -14.357, 0.000)), rs.coerce3dpoint((-20.442, -13.624, 0.000)), rs.coerce3dpoint((-20.581, -13.388, 0.000)), rs.coerce3dpoint((-20.723, -13.153, 0.000)), rs.coerce3dpoint((-20.769, -13.076, 0.000)), rs.coerce3dpoint((-20.818, -13.000, 0.000)), rs.coerce3dpoint((-20.835, -12.973, 0.000)), rs.coerce3dpoint((-20.855, -12.947, 0.000)), rs.coerce3dpoint((-20.861, -12.940, 0.000)), rs.coerce3dpoint((-20.867, -12.932, 0.000)), rs.coerce3dpoint((-20.879, -12.919, 0.000)), rs.coerce3dpoint((-20.893, -12.908, 0.000)), rs.coerce3dpoint((-20.929, -12.879, 0.000)), rs.coerce3dpoint((-20.966, -12.852, 0.000)), rs.coerce3dpoint((-20.988, -12.836, 0.000)), rs.coerce3dpoint((-21.010, -12.820, 0.000)), rs.coerce3dpoint((-21.108, -12.749, 0.000)), rs.coerce3dpoint((-21.224, -12.712, 0.000)), rs.coerce3dpoint((-21.360, -12.669, 0.000)), rs.coerce3dpoint((-21.501, -12.686, 0.000)), rs.coerce3dpoint((-21.723, -12.714, 0.000)), rs.coerce3dpoint((-21.876, -12.877, 0.000)), rs.coerce3dpoint((-21.959, -12.966, 0.000)), rs.coerce3dpoint((-22.006, -13.078, 0.000)), rs.coerce3dpoint((-22.022, -13.114, 0.000)), rs.coerce3dpoint((-22.034, -13.153, 0.000)), rs.coerce3dpoint((-22.052, -13.209, 0.000)), rs.coerce3dpoint((-22.066, -13.267, 0.000)), rs.coerce3dpoint((-22.074, -13.301, 0.000)), rs.coerce3dpoint((-22.077, -13.336, 0.000)), rs.coerce3dpoint((-22.078, -13.350, 0.000)), rs.coerce3dpoint((-22.078, -13.363, 0.000)), rs.coerce3dpoint((-22.080, -13.425, 0.000)), rs.coerce3dpoint((-22.079, -13.487, 0.000)), rs.coerce3dpoint((-22.080, -13.968, 0.000)), rs.coerce3dpoint((-22.080, -14.448, 0.000)), rs.coerce3dpoint((-22.078, -17.277, 0.000)), rs.coerce3dpoint((-22.077, -20.106, 0.000)), rs.coerce3dpoint((-22.076, -21.799, 0.000)), rs.coerce3dpoint((-22.075, -23.492, 0.000))], [0.0, 0.0, 5.07630623876, 5.07630623876, 8.70467683760, 8.70467683760, 9.24549767250, 9.24549767250, 9.25883776620, 9.25883776620, 9.70247962407, 9.70247962407, 9.95157209726, 9.95157209726, 10.1561589883, 10.1561589883, 10.2643848014, 10.2643848014, 10.3094685379, 10.3094685379, 10.5519877197, 10.5519877197, 10.7054483646, 10.7054483646, 10.7876429264, 10.7876429264, 10.9668560470, 10.9668560470, 11.1412364495, 11.1412364495, 11.4276920786, 11.4276920786, 11.6004965445, 11.6004965445, 11.7749839056, 11.7749839056, 19.6534071178, 19.6534071178, 22.1999830699, 22.1999830699, 23.0343182143, 23.0343182143, 23.4010220635, 23.4010220635, 23.6271977959, 23.6271977959, 23.9490688950, 23.9490688950, 24.2011189022, 24.2011189022, 24.4492378311, 24.4492378311, 24.6686051223, 24.6686051223, 27.7869890494, 27.7869890494, 33.6462056106, 33.6462056106, 35.3484816109, 35.3484816109, 35.8977230045, 35.8977230045, 36.0769876469, 36.0769876469, 36.1422581942, 36.1422581942, 36.1610496093, 36.1610496093, 36.1962819067, 36.1962819067, 36.2888849809, 36.2888849809, 36.3430769157, 36.3430769157, 36.5836509400, 36.5836509400, 36.8645051662, 36.8645051662, 37.2936166882, 37.2936166882, 37.5335769819, 37.5335769819, 37.6133794455, 37.6133794455, 37.7326317524, 37.7326317524, 37.8027142956, 37.8027142956, 37.8291539795, 37.8291539795, 37.9532635562, 37.9532635562, 38.9145336569, 38.9145336569, 44.5718644260, 44.5718644260, 47.9586049702, 47.9586049702], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.970668569019, 1.0, 0.993155583453, 1.0, 0.998988012319, 1.0, 0.992439568511, 1.0, 0.987595417002, 1.0, 0.954835481046, 1.0, 0.988484270011, 1.0, 0.993202064766, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999955820976, 1.0, 0.996868590551, 1.0, 0.989195307739, 1.0, 0.994523517108, 1.0, 0.997085772557, 1.0, 0.998839054289, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999987500078, 1.0, 0.999884486672, 1.0, 0.998951729723, 1.0, 0.999692527277, 1.0, 0.995666290909, 1.0, 0.999619192521, 1.0, 1.0, 1.0, 0.987059296204, 1.0, 0.976940960635, 1.0, 0.940438172672, 1.0, 0.984734828858, 1.0, 0.998669605564, 1.0, 0.999293369751, 1.0, 0.997024513356, 1.0, 0.999672373678, 1.0, 0.999923122955, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.389, -23.589, 0.000), (9.388, -23.960, 0.000), (9.388, -24.331, 0.000), (9.387, -26.422, 0.000), (9.386, -28.513, 0.000), (9.386, -29.427, 0.000), (9.386, -30.340, 0.000), (9.386, -31.058, 0.000), (9.387, -31.775, 0.000), (9.388, -32.052, 0.000), (9.390, -32.328, 0.000), (9.390, -32.414, 0.000), (9.394, -32.499, 0.000), (9.398, -32.589, 0.000), (9.413, -32.677, 0.000), (9.429, -32.767, 0.000), (9.462, -32.853, 0.000), (9.478, -32.891, 0.000), (9.497, -32.928, 0.000), (9.554, -33.032, 0.000), (9.640, -33.115, 0.000), (9.720, -33.193, 0.000), (9.818, -33.245, 0.000), (9.892, -33.284, 0.000), (9.974, -33.301, 0.000), (9.996, -33.305, 0.000), (10.017, -33.308, 0.000), (10.114, -33.318, 0.000), (10.207, -33.289, 0.000), (10.277, -33.267, 0.000), (10.340, -33.230, 0.000), (10.411, -33.188, 0.000), (10.474, -33.135, 0.000), (10.552, -33.070, 0.000), (10.621, -32.996, 0.000), (10.657, -32.957, 0.000), (10.692, -32.916, 0.000), (10.745, -32.853, 0.000), (10.795, -32.786, 0.000), (10.891, -32.655, 0.000), (10.983, -32.521, 0.000), (11.144, -32.286, 0.000), (11.300, -32.047, 0.000), (11.552, -31.662, 0.000), (11.798, -31.274, 0.000), (11.983, -30.983, 0.000), (12.168, -30.692, 0.000), (13.057, -29.283, 0.000), (13.946, -27.875, 0.000), (14.423, -27.117, 0.000), (14.895, -26.356, 0.000), (15.140, -25.963, 0.000), (15.380, -25.566, 0.000), (15.501, -25.368, 0.000), (15.618, -25.168, 0.000), (15.680, -25.061, 0.000), (15.738, -24.952, 0.000), (15.773, -24.886, 0.000), (15.805, -24.819, 0.000), (15.858, -24.711, 0.000), (15.871, -24.591, 0.000), (15.881, -24.482, 0.000), (15.858, -24.375, 0.000), (15.839, -24.286, 0.000), (15.802, -24.203, 0.000), (15.689, -23.948, 0.000), (15.550, -23.706, 0.000), (14.090, -21.154, 0.000), (12.630, -18.602, 0.000), (12.054, -17.598, 0.000), (11.478, -16.595, 0.000), (11.226, -16.157, 0.000), (10.971, -15.721, 0.000), (10.856, -15.525, 0.000), (10.738, -15.330, 0.000), (10.682, -15.239, 0.000), (10.623, -15.150, 0.000), (10.592, -15.102, 0.000), (10.557, -15.057, 0.000), (10.537, -15.033, 0.000), (10.516, -15.010, 0.000), (10.479, -14.968, 0.000), (10.435, -14.931, 0.000), (10.385, -14.890, 0.000), (10.330, -14.856, 0.000), (10.327, -14.854, 0.000), (10.324, -14.852, 0.000), (10.249, -14.803, 0.000), (10.163, -14.773, 0.000), (10.067, -14.739, 0.000), (9.965, -14.739, 0.000), (9.851, -14.740, 0.000), (9.745, -14.783, 0.000), (9.677, -14.811, 0.000), (9.615, -14.852, 0.000), (9.525, -14.910, 0.000), (9.478, -15.007, 0.000), (9.454, -15.058, 0.000), (9.439, -15.112, 0.000), (9.432, -15.139, 0.000), (9.426, -15.166, 0.000), (9.413, -15.223, 0.000), (9.408, -15.281, 0.000), (9.401, -15.356, 0.000), (9.399, -15.431, 0.000), (9.393, -15.593, 0.000), (9.391, -15.756, 0.000), (9.387, -16.123, 0.000), (9.386, -16.490, 0.000), (9.385, -17.362, 0.000), (9.383, -18.235, 0.000), (9.386, -20.532, 0.000), (9.388, -22.828, 0.000), (9.388, -23.057, 0.000), (9.388, -23.285, 0.000), (9.388, -23.437, 0.000), (9.389, -23.589, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.389, -23.589, 0.000)), rs.coerce3dpoint((9.388, -23.960, 0.000)), rs.coerce3dpoint((9.388, -24.331, 0.000)), rs.coerce3dpoint((9.387, -26.422, 0.000)), rs.coerce3dpoint((9.386, -28.513, 0.000)), rs.coerce3dpoint((9.386, -29.427, 0.000)), rs.coerce3dpoint((9.386, -30.340, 0.000)), rs.coerce3dpoint((9.386, -31.058, 0.000)), rs.coerce3dpoint((9.387, -31.775, 0.000)), rs.coerce3dpoint((9.388, -32.052, 0.000)), rs.coerce3dpoint((9.390, -32.328, 0.000)), rs.coerce3dpoint((9.390, -32.414, 0.000)), rs.coerce3dpoint((9.394, -32.499, 0.000)), rs.coerce3dpoint((9.398, -32.589, 0.000)), rs.coerce3dpoint((9.413, -32.677, 0.000)), rs.coerce3dpoint((9.429, -32.767, 0.000)), rs.coerce3dpoint((9.462, -32.853, 0.000)), rs.coerce3dpoint((9.478, -32.891, 0.000)), rs.coerce3dpoint((9.497, -32.928, 0.000)), rs.coerce3dpoint((9.554, -33.032, 0.000)), rs.coerce3dpoint((9.640, -33.115, 0.000)), rs.coerce3dpoint((9.720, -33.193, 0.000)), rs.coerce3dpoint((9.818, -33.245, 0.000)), rs.coerce3dpoint((9.892, -33.284, 0.000)), rs.coerce3dpoint((9.974, -33.301, 0.000)), rs.coerce3dpoint((9.996, -33.305, 0.000)), rs.coerce3dpoint((10.017, -33.308, 0.000)), rs.coerce3dpoint((10.114, -33.318, 0.000)), rs.coerce3dpoint((10.207, -33.289, 0.000)), rs.coerce3dpoint((10.277, -33.267, 0.000)), rs.coerce3dpoint((10.340, -33.230, 0.000)), rs.coerce3dpoint((10.411, -33.188, 0.000)), rs.coerce3dpoint((10.474, -33.135, 0.000)), rs.coerce3dpoint((10.552, -33.070, 0.000)), rs.coerce3dpoint((10.621, -32.996, 0.000)), rs.coerce3dpoint((10.657, -32.957, 0.000)), rs.coerce3dpoint((10.692, -32.916, 0.000)), rs.coerce3dpoint((10.745, -32.853, 0.000)), rs.coerce3dpoint((10.795, -32.786, 0.000)), rs.coerce3dpoint((10.891, -32.655, 0.000)), rs.coerce3dpoint((10.983, -32.521, 0.000)), rs.coerce3dpoint((11.144, -32.286, 0.000)), rs.coerce3dpoint((11.300, -32.047, 0.000)), rs.coerce3dpoint((11.552, -31.662, 0.000)), rs.coerce3dpoint((11.798, -31.274, 0.000)), rs.coerce3dpoint((11.983, -30.983, 0.000)), rs.coerce3dpoint((12.168, -30.692, 0.000)), rs.coerce3dpoint((13.057, -29.283, 0.000)), rs.coerce3dpoint((13.946, -27.875, 0.000)), rs.coerce3dpoint((14.423, -27.117, 0.000)), rs.coerce3dpoint((14.895, -26.356, 0.000)), rs.coerce3dpoint((15.140, -25.963, 0.000)), rs.coerce3dpoint((15.380, -25.566, 0.000)), rs.coerce3dpoint((15.501, -25.368, 0.000)), rs.coerce3dpoint((15.618, -25.168, 0.000)), rs.coerce3dpoint((15.680, -25.061, 0.000)), rs.coerce3dpoint((15.738, -24.952, 0.000)), rs.coerce3dpoint((15.773, -24.886, 0.000)), rs.coerce3dpoint((15.805, -24.819, 0.000)), rs.coerce3dpoint((15.858, -24.711, 0.000)), rs.coerce3dpoint((15.871, -24.591, 0.000)), rs.coerce3dpoint((15.881, -24.482, 0.000)), rs.coerce3dpoint((15.858, -24.375, 0.000)), rs.coerce3dpoint((15.839, -24.286, 0.000)), rs.coerce3dpoint((15.802, -24.203, 0.000)), rs.coerce3dpoint((15.689, -23.948, 0.000)), rs.coerce3dpoint((15.550, -23.706, 0.000)), rs.coerce3dpoint((14.090, -21.154, 0.000)), rs.coerce3dpoint((12.630, -18.602, 0.000)), rs.coerce3dpoint((12.054, -17.598, 0.000)), rs.coerce3dpoint((11.478, -16.595, 0.000)), rs.coerce3dpoint((11.226, -16.157, 0.000)), rs.coerce3dpoint((10.971, -15.721, 0.000)), rs.coerce3dpoint((10.856, -15.525, 0.000)), rs.coerce3dpoint((10.738, -15.330, 0.000)), rs.coerce3dpoint((10.682, -15.239, 0.000)), rs.coerce3dpoint((10.623, -15.150, 0.000)), rs.coerce3dpoint((10.592, -15.102, 0.000)), rs.coerce3dpoint((10.557, -15.057, 0.000)), rs.coerce3dpoint((10.537, -15.033, 0.000)), rs.coerce3dpoint((10.516, -15.010, 0.000)), rs.coerce3dpoint((10.479, -14.968, 0.000)), rs.coerce3dpoint((10.435, -14.931, 0.000)), rs.coerce3dpoint((10.385, -14.890, 0.000)), rs.coerce3dpoint((10.330, -14.856, 0.000)), rs.coerce3dpoint((10.327, -14.854, 0.000)), rs.coerce3dpoint((10.324, -14.852, 0.000)), rs.coerce3dpoint((10.249, -14.803, 0.000)), rs.coerce3dpoint((10.163, -14.773, 0.000)), rs.coerce3dpoint((10.067, -14.739, 0.000)), rs.coerce3dpoint((9.965, -14.739, 0.000)), rs.coerce3dpoint((9.851, -14.740, 0.000)), rs.coerce3dpoint((9.745, -14.783, 0.000)), rs.coerce3dpoint((9.677, -14.811, 0.000)), rs.coerce3dpoint((9.615, -14.852, 0.000)), rs.coerce3dpoint((9.525, -14.910, 0.000)), rs.coerce3dpoint((9.478, -15.007, 0.000)), rs.coerce3dpoint((9.454, -15.058, 0.000)), rs.coerce3dpoint((9.439, -15.112, 0.000)), rs.coerce3dpoint((9.432, -15.139, 0.000)), rs.coerce3dpoint((9.426, -15.166, 0.000)), rs.coerce3dpoint((9.413, -15.223, 0.000)), rs.coerce3dpoint((9.408, -15.281, 0.000)), rs.coerce3dpoint((9.401, -15.356, 0.000)), rs.coerce3dpoint((9.399, -15.431, 0.000)), rs.coerce3dpoint((9.393, -15.593, 0.000)), rs.coerce3dpoint((9.391, -15.756, 0.000)), rs.coerce3dpoint((9.387, -16.123, 0.000)), rs.coerce3dpoint((9.386, -16.490, 0.000)), rs.coerce3dpoint((9.385, -17.362, 0.000)), rs.coerce3dpoint((9.383, -18.235, 0.000)), rs.coerce3dpoint((9.386, -20.532, 0.000)), rs.coerce3dpoint((9.388, -22.828, 0.000)), rs.coerce3dpoint((9.388, -23.057, 0.000)), rs.coerce3dpoint((9.388, -23.285, 0.000)), rs.coerce3dpoint((9.388, -23.437, 0.000)), rs.coerce3dpoint((9.389, -23.589, 0.000))], [0.0, 0.0, 0.741880092266, 0.741880092266, 4.92420058979, 4.92420058979, 6.75104066667, 6.75104066667, 8.18590113557, 8.18590113557, 8.7393104978, 8.7393104978, 8.90984076991, 8.90984076991, 9.08905567961, 9.08905567961, 9.27190993833, 9.27190993833, 9.35475667075, 9.35475667075, 9.59097800941, 9.59097800941, 9.81246116295, 9.81246116295, 9.97873895820, 9.97873895820, 10.0225216073, 10.0225216073, 10.2142494285, 10.2142494285, 10.3604206235, 10.3604206235, 10.5246803900, 10.5246803900, 10.7267296781, 10.7267296781, 10.8338070743, 10.8338070743, 10.9997364873, 10.9997364873, 11.3248217691, 11.3248217691, 11.8952129329, 11.8952129329, 12.8147985149, 12.8147985149, 13.5044493834, 13.5044493834, 16.8357896439, 16.8357896439, 18.6262439569, 18.6262439569, 19.5534088174, 19.5534088174, 20.0171381774, 20.0171381774, 20.2648163622, 20.2648163622, 20.4135227591, 20.4135227591, 20.6520295545, 20.6520295545, 20.8688952094, 20.8688952094, 21.0506046566, 21.0506046566, 21.6076944105, 21.6076944105, 27.4882187793, 27.4882187793, 29.8020270784, 29.8020270784, 30.8127599641, 30.8127599641, 31.2676346174, 31.2676346174, 31.4812022236, 31.4812022236, 31.5956868772, 31.5956868772, 31.6572860185, 31.6572860185, 31.7706103321, 31.7706103321, 31.9002250882, 31.9002250882, 31.9070441864, 31.9070441864, 32.0866977405, 32.0866977405, 32.2885803788, 32.2885803788, 32.5147717293, 32.5147717293, 32.6618180875, 32.6618180875, 32.8711945755, 32.8711945755, 32.9841173210, 32.9841173210, 33.0398740121, 33.0398740121, 33.1556510879, 33.1556510879, 33.3061352478, 33.3061352478, 33.6310809786, 33.6310809786, 34.3650253249, 34.3650253249, 36.1101466370, 36.1101466370, 40.7037885026, 40.7037885026, 41.1604787986, 41.1604787986, 41.4644890001, 41.4644890001], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.999744652605, 1.0, 0.998067449182, 1.0, 0.994831769902, 1.0, 0.998365417023, 1.0, 0.988544373687, 1.0, 0.989484994852, 1.0, 0.990108662421, 1.0, 0.999005914349, 1.0, 0.979406257299, 1.0, 0.993340568096, 1.0, 0.996478212433, 1.0, 0.998055013328, 1.0, 0.999749151466, 1.0, 0.999488131038, 1.0, 0.999823295614, 1.0, 0.999937281967, 1.0, 0.999980780185, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999986480091, 1.0, 0.999951981153, 1.0, 0.999811837704, 1.0, 0.999852090939, 1.0, 0.98417719877, 1.0, 0.987874739361, 1.0, 0.994791181319, 1.0, 0.9985752357, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99996128075, 1.0, 0.999811837704, 1.0, 0.999093031483, 1.0, 0.999442375516, 1.0, 0.997353586392, 1.0, 0.997902681681, 1.0, 1.0, 1.0, 0.993178843702, 1.0, 0.985820743437, 1.0, 0.981961848106, 1.0, 0.994791181319, 1.0, 0.964306507873, 1.0, 0.99522898849, 1.0, 0.999744652605, 1.0, 0.997324464041, 1.0, 0.999646282569, 1.0, 0.999930382423, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(17.861, -29.854, 0.000), (17.081, -29.840, 0.000), (16.300, -29.834, 0.000), (15.843, -29.830, 0.000), (15.385, -29.832, 0.000), (15.124, -29.833, 0.000), (14.863, -29.840, 0.000), (14.706, -29.844, 0.000), (14.549, -29.854, 0.000), (14.546, -29.854, 0.000), (14.544, -29.854, 0.000), (14.475, -29.857, 0.000), (14.407, -29.869, 0.000), (14.318, -29.886, 0.000), (14.237, -29.923, 0.000), (14.127, -29.974, 0.000), (14.048, -30.065, 0.000), (14.046, -30.067, 0.000), (14.044, -30.069, 0.000), (13.952, -30.176, 0.000), (13.876, -30.296, 0.000), (13.816, -30.389, 0.000), (13.761, -30.485, 0.000), (13.721, -30.555, 0.000), (13.682, -30.624, 0.000), (13.636, -30.707, 0.000), (13.588, -30.789, 0.000), (13.381, -31.151, 0.000), (13.173, -31.513, 0.000), (12.774, -32.209, 0.000), (12.374, -32.906, 0.000), (12.278, -33.071, 0.000), (12.183, -33.236, 0.000), (12.053, -33.459, 0.000), (11.922, -33.682, 0.000), (11.838, -33.824, 0.000), (11.754, -33.967, 0.000), (11.631, -34.179, 0.000), (11.517, -34.397, 0.000), (11.443, -34.539, 0.000), (11.370, -34.682, 0.000), (11.333, -34.754, 0.000), (11.301, -34.828, 0.000), (11.275, -34.890, 0.000), (11.259, -34.956, 0.000), (11.233, -35.066, 0.000), (11.251, -35.179, 0.000), (11.263, -35.248, 0.000), (11.286, -35.315, 0.000), (11.313, -35.395, 0.000), (11.349, -35.472, 0.000), (11.397, -35.576, 0.000), (11.452, -35.678, 0.000), (11.489, -35.748, 0.000), (11.528, -35.817, 0.000), (11.909, -36.499, 0.000), (12.295, -37.178, 0.000), (12.422, -37.402, 0.000), (12.549, -37.626, 0.000), (12.557, -37.640, 0.000), (12.564, -37.653, 0.000), (12.945, -38.323, 0.000), (13.325, -38.992, 0.000), (13.888, -39.982, 0.000), (14.450, -40.973, 0.000), (14.513, -41.084, 0.000), (14.588, -41.188, 0.000), (14.667, -41.295, 0.000), (14.762, -41.387, 0.000), (14.804, -41.427, 0.000), (14.850, -41.463, 0.000), (14.917, -41.517, 0.000), (14.994, -41.553, 0.000), (15.075, -41.591, 0.000), (15.165, -41.600, 0.000), (15.273, -41.611, 0.000), (15.376, -41.576, 0.000), (15.450, -41.551, 0.000), (15.516, -41.508, 0.000), (15.634, -41.431, 0.000), (15.732, -41.330, 0.000), (15.800, -41.261, 0.000), (15.856, -41.182, 0.000), (15.942, -41.062, 0.000), (16.019, -40.935, 0.000), (16.096, -40.806, 0.000), (16.168, -40.674, 0.000), (16.189, -40.637, 0.000), (16.209, -40.600, 0.000), (16.218, -40.585, 0.000), (16.226, -40.570, 0.000), (16.389, -40.274, 0.000), (16.549, -39.977, 0.000), (16.554, -39.966, 0.000), (16.560, -39.956, 0.000), (16.720, -39.659, 0.000), (16.882, -39.364, 0.000), (16.944, -39.251, 0.000), (17.007, -39.140, 0.000), (17.307, -38.610, 0.000), (17.611, -38.082, 0.000), (17.675, -37.971, 0.000), (17.739, -37.860, 0.000), (18.027, -37.361, 0.000), (18.312, -36.861, 0.000), (18.741, -36.103, 0.000), (19.171, -35.346, 0.000), (19.674, -34.458, 0.000), (20.177, -33.570, 0.000), (20.186, -33.554, 0.000), (20.195, -33.539, 0.000), (20.413, -33.158, 0.000), (20.635, -32.779, 0.000), (20.660, -32.736, 0.000), (20.686, -32.692, 0.000), (20.907, -32.313, 0.000), (21.126, -31.932, 0.000), (21.248, -31.719, 0.000), (21.367, -31.506, 0.000), (21.476, -31.312, 0.000), (21.569, -31.110, 0.000), (21.656, -30.922, 0.000), (21.723, -30.726, 0.000), (21.731, -30.700, 0.000), (21.739, -30.675, 0.000), (21.774, -30.568, 0.000), (21.770, -30.456, 0.000), (21.763, -30.257, 0.000), (21.636, -30.103, 0.000), (21.545, -29.993, 0.000), (21.416, -29.931, 0.000), (21.296, -29.874, 0.000), (21.165, -29.863, 0.000), (21.063, -29.854, 0.000), (20.961, -29.854, 0.000), (20.944, -29.854, 0.000), (20.926, -29.854, 0.000), (19.703, -29.854, 0.000), (18.480, -29.854, 0.000), (18.171, -29.854, 0.000), (17.861, -29.854, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((17.861, -29.854, 0.000)), rs.coerce3dpoint((17.081, -29.840, 0.000)), rs.coerce3dpoint((16.300, -29.834, 0.000)), rs.coerce3dpoint((15.843, -29.830, 0.000)), rs.coerce3dpoint((15.385, -29.832, 0.000)), rs.coerce3dpoint((15.124, -29.833, 0.000)), rs.coerce3dpoint((14.863, -29.840, 0.000)), rs.coerce3dpoint((14.706, -29.844, 0.000)), rs.coerce3dpoint((14.549, -29.854, 0.000)), rs.coerce3dpoint((14.546, -29.854, 0.000)), rs.coerce3dpoint((14.544, -29.854, 0.000)), rs.coerce3dpoint((14.475, -29.857, 0.000)), rs.coerce3dpoint((14.407, -29.869, 0.000)), rs.coerce3dpoint((14.318, -29.886, 0.000)), rs.coerce3dpoint((14.237, -29.923, 0.000)), rs.coerce3dpoint((14.127, -29.974, 0.000)), rs.coerce3dpoint((14.048, -30.065, 0.000)), rs.coerce3dpoint((14.046, -30.067, 0.000)), rs.coerce3dpoint((14.044, -30.069, 0.000)), rs.coerce3dpoint((13.952, -30.176, 0.000)), rs.coerce3dpoint((13.876, -30.296, 0.000)), rs.coerce3dpoint((13.816, -30.389, 0.000)), rs.coerce3dpoint((13.761, -30.485, 0.000)), rs.coerce3dpoint((13.721, -30.555, 0.000)), rs.coerce3dpoint((13.682, -30.624, 0.000)), rs.coerce3dpoint((13.636, -30.707, 0.000)), rs.coerce3dpoint((13.588, -30.789, 0.000)), rs.coerce3dpoint((13.381, -31.151, 0.000)), rs.coerce3dpoint((13.173, -31.513, 0.000)), rs.coerce3dpoint((12.774, -32.209, 0.000)), rs.coerce3dpoint((12.374, -32.906, 0.000)), rs.coerce3dpoint((12.278, -33.071, 0.000)), rs.coerce3dpoint((12.183, -33.236, 0.000)), rs.coerce3dpoint((12.053, -33.459, 0.000)), rs.coerce3dpoint((11.922, -33.682, 0.000)), rs.coerce3dpoint((11.838, -33.824, 0.000)), rs.coerce3dpoint((11.754, -33.967, 0.000)), rs.coerce3dpoint((11.631, -34.179, 0.000)), rs.coerce3dpoint((11.517, -34.397, 0.000)), rs.coerce3dpoint((11.443, -34.539, 0.000)), rs.coerce3dpoint((11.370, -34.682, 0.000)), rs.coerce3dpoint((11.333, -34.754, 0.000)), rs.coerce3dpoint((11.301, -34.828, 0.000)), rs.coerce3dpoint((11.275, -34.890, 0.000)), rs.coerce3dpoint((11.259, -34.956, 0.000)), rs.coerce3dpoint((11.233, -35.066, 0.000)), rs.coerce3dpoint((11.251, -35.179, 0.000)), rs.coerce3dpoint((11.263, -35.248, 0.000)), rs.coerce3dpoint((11.286, -35.315, 0.000)), rs.coerce3dpoint((11.313, -35.395, 0.000)), rs.coerce3dpoint((11.349, -35.472, 0.000)), rs.coerce3dpoint((11.397, -35.576, 0.000)), rs.coerce3dpoint((11.452, -35.678, 0.000)), rs.coerce3dpoint((11.489, -35.748, 0.000)), rs.coerce3dpoint((11.528, -35.817, 0.000)), rs.coerce3dpoint((11.909, -36.499, 0.000)), rs.coerce3dpoint((12.295, -37.178, 0.000)), rs.coerce3dpoint((12.422, -37.402, 0.000)), rs.coerce3dpoint((12.549, -37.626, 0.000)), rs.coerce3dpoint((12.557, -37.640, 0.000)), rs.coerce3dpoint((12.564, -37.653, 0.000)), rs.coerce3dpoint((12.945, -38.323, 0.000)), rs.coerce3dpoint((13.325, -38.992, 0.000)), rs.coerce3dpoint((13.888, -39.982, 0.000)), rs.coerce3dpoint((14.450, -40.973, 0.000)), rs.coerce3dpoint((14.513, -41.084, 0.000)), rs.coerce3dpoint((14.588, -41.188, 0.000)), rs.coerce3dpoint((14.667, -41.295, 0.000)), rs.coerce3dpoint((14.762, -41.387, 0.000)), rs.coerce3dpoint((14.804, -41.427, 0.000)), rs.coerce3dpoint((14.850, -41.463, 0.000)), rs.coerce3dpoint((14.917, -41.517, 0.000)), rs.coerce3dpoint((14.994, -41.553, 0.000)), rs.coerce3dpoint((15.075, -41.591, 0.000)), rs.coerce3dpoint((15.165, -41.600, 0.000)), rs.coerce3dpoint((15.273, -41.611, 0.000)), rs.coerce3dpoint((15.376, -41.576, 0.000)), rs.coerce3dpoint((15.450, -41.551, 0.000)), rs.coerce3dpoint((15.516, -41.508, 0.000)), rs.coerce3dpoint((15.634, -41.431, 0.000)), rs.coerce3dpoint((15.732, -41.330, 0.000)), rs.coerce3dpoint((15.800, -41.261, 0.000)), rs.coerce3dpoint((15.856, -41.182, 0.000)), rs.coerce3dpoint((15.942, -41.062, 0.000)), rs.coerce3dpoint((16.019, -40.935, 0.000)), rs.coerce3dpoint((16.096, -40.806, 0.000)), rs.coerce3dpoint((16.168, -40.674, 0.000)), rs.coerce3dpoint((16.189, -40.637, 0.000)), rs.coerce3dpoint((16.209, -40.600, 0.000)), rs.coerce3dpoint((16.218, -40.585, 0.000)), rs.coerce3dpoint((16.226, -40.570, 0.000)), rs.coerce3dpoint((16.389, -40.274, 0.000)), rs.coerce3dpoint((16.549, -39.977, 0.000)), rs.coerce3dpoint((16.554, -39.966, 0.000)), rs.coerce3dpoint((16.560, -39.956, 0.000)), rs.coerce3dpoint((16.720, -39.659, 0.000)), rs.coerce3dpoint((16.882, -39.364, 0.000)), rs.coerce3dpoint((16.944, -39.251, 0.000)), rs.coerce3dpoint((17.007, -39.140, 0.000)), rs.coerce3dpoint((17.307, -38.610, 0.000)), rs.coerce3dpoint((17.611, -38.082, 0.000)), rs.coerce3dpoint((17.675, -37.971, 0.000)), rs.coerce3dpoint((17.739, -37.860, 0.000)), rs.coerce3dpoint((18.027, -37.361, 0.000)), rs.coerce3dpoint((18.312, -36.861, 0.000)), rs.coerce3dpoint((18.741, -36.103, 0.000)), rs.coerce3dpoint((19.171, -35.346, 0.000)), rs.coerce3dpoint((19.674, -34.458, 0.000)), rs.coerce3dpoint((20.177, -33.570, 0.000)), rs.coerce3dpoint((20.186, -33.554, 0.000)), rs.coerce3dpoint((20.195, -33.539, 0.000)), rs.coerce3dpoint((20.413, -33.158, 0.000)), rs.coerce3dpoint((20.635, -32.779, 0.000)), rs.coerce3dpoint((20.660, -32.736, 0.000)), rs.coerce3dpoint((20.686, -32.692, 0.000)), rs.coerce3dpoint((20.907, -32.313, 0.000)), rs.coerce3dpoint((21.126, -31.932, 0.000)), rs.coerce3dpoint((21.248, -31.719, 0.000)), rs.coerce3dpoint((21.367, -31.506, 0.000)), rs.coerce3dpoint((21.476, -31.312, 0.000)), rs.coerce3dpoint((21.569, -31.110, 0.000)), rs.coerce3dpoint((21.656, -30.922, 0.000)), rs.coerce3dpoint((21.723, -30.726, 0.000)), rs.coerce3dpoint((21.731, -30.700, 0.000)), rs.coerce3dpoint((21.739, -30.675, 0.000)), rs.coerce3dpoint((21.774, -30.568, 0.000)), rs.coerce3dpoint((21.770, -30.456, 0.000)), rs.coerce3dpoint((21.763, -30.257, 0.000)), rs.coerce3dpoint((21.636, -30.103, 0.000)), rs.coerce3dpoint((21.545, -29.993, 0.000)), rs.coerce3dpoint((21.416, -29.931, 0.000)), rs.coerce3dpoint((21.296, -29.874, 0.000)), rs.coerce3dpoint((21.165, -29.863, 0.000)), rs.coerce3dpoint((21.063, -29.854, 0.000)), rs.coerce3dpoint((20.961, -29.854, 0.000)), rs.coerce3dpoint((20.944, -29.854, 0.000)), rs.coerce3dpoint((20.926, -29.854, 0.000)), rs.coerce3dpoint((19.703, -29.854, 0.000)), rs.coerce3dpoint((18.480, -29.854, 0.000)), rs.coerce3dpoint((18.171, -29.854, 0.000)), rs.coerce3dpoint((17.861, -29.854, 0.000))], [0.0, 0.0, 1.56060520744, 1.56060520744, 2.47549362245, 2.47549362245, 2.99763567790, 2.99763567790, 3.31268508372, 3.31268508372, 3.31744275121, 3.31744275121, 3.45540312979, 3.45540312979, 3.63441125372, 3.63441125372, 3.87251477768, 3.87251477768, 3.87721568185, 3.87721568185, 4.16005164079, 4.16005164079, 4.38180117133, 4.38180117133, 4.54164650121, 4.54164650121, 4.73121427143, 4.73121427143, 5.56612012223, 5.56612012223, 7.1715520742, 7.1715520742, 7.55337223723, 7.55337223723, 8.06965114341, 8.06965114341, 8.40059811315, 8.40059811315, 8.89180414269, 8.89180414269, 9.21276553156, 9.21276553156, 9.37355392571, 9.37355392571, 9.50832961684, 9.50832961684, 9.73309403389, 9.73309403389, 9.87343233210, 9.87343233210, 10.0426122926, 10.0426122926, 10.2729046241, 10.2729046241, 10.4321444964, 10.4321444964, 11.9941143816, 11.9941143816, 12.5093743778, 12.5093743778, 12.5402529302, 12.5402529302, 14.0800660697, 14.0800660697, 16.3580944414, 16.3580944414, 16.6140467974, 16.6140467974, 16.8786287078, 16.8786287078, 16.9946507747, 16.9946507747, 17.1650148399, 17.1650148399, 17.3427066298, 17.3427066298, 17.5567048284, 17.5567048284, 17.7129393337, 17.7129393337, 17.9935526892, 17.9935526892, 18.1866280698, 18.1866280698, 18.4829519882, 18.4829519882, 18.7831834015, 18.7831834015, 18.8681583466, 18.8681583466, 18.9024088547, 18.9024088547, 19.5779099087, 19.5779099087, 19.6011137187, 19.6011137187, 20.2757510175, 20.2757510175, 20.5321195210, 20.5321195210, 21.7501872966, 21.7501872966, 22.0064764536, 22.0064764536, 23.1577705582, 23.1577705582, 24.8996263163, 24.8996263163, 26.9406436628, 26.9406436628, 26.9771595018, 26.9771595018, 27.8541845939, 27.8541845939, 27.9554554722, 27.9554554722, 28.8343302226, 28.8343302226, 29.3231368442, 29.3231368442, 29.7673775085, 29.7673775085, 30.1818891256, 30.1818891256, 30.2355667659, 30.2355667659, 30.4574263320, 30.4574263320, 30.8421741564, 30.8421741564, 31.1237654608, 31.1237654608, 31.3852844060, 31.3852844060, 31.5891751724, 31.5891751724, 31.6241454527, 31.6241454527, 34.0698154838, 34.0698154838, 34.6894654841, 34.6894654841], 2, [1.0, 0.999989420056, 1.0, 0.999976880267, 1.0, 0.999941681701, 1.0, 0.999872008191, 1.0, 1.0, 1.0, 0.997690669586, 1.0, 0.992118362987, 1.0, 0.978190450286, 1.0, 1.0, 1.0, 0.997663452919, 1.0, 0.999667235375, 1.0, 0.999992780026, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999997120004, 1.0, 0.99999550001, 1.0, 0.999740113775, 1.0, 0.999983180141, 1.0, 0.99914338705, 1.0, 0.996868590551, 1.0, 0.980001489951, 1.0, 0.996544859328, 1.0, 0.998648913335, 1.0, 0.999538026734, 1.0, 0.999955820976, 1.0, 0.999993520021, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.998237374794, 1.0, 0.996082707647, 1.0, 0.998969950774, 1.0, 0.992825827023, 1.0, 0.986414336294, 1.0, 0.977319336509, 1.0, 0.992193073471, 1.0, 0.993747607503, 1.0, 0.997221285997, 1.0, 0.999176159496, 1.0, 0.999841592547, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999987500078, 1.0, 0.999989420056, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999984320123, 1.0, 0.99921622727, 1.0, 0.998638507462, 1.0, 0.999968000512, 1.0, 0.984941420558, 1.0, 0.947243032949, 1.0, 0.976303625455, 1.0, 0.983788165704, 1.0, 0.999184252857, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-22.113, -51.135, 0.000), (-22.111, -53.900, 0.000), (-22.110, -56.665, 0.000), (-22.110, -56.974, 0.000), (-22.110, -57.284, 0.000), (-22.110, -57.336, 0.000), (-22.110, -57.389, 0.000), (-22.110, -57.412, 0.000), (-22.111, -57.434, 0.000), (-22.113, -57.513, 0.000), (-22.098, -57.590, 0.000), (-22.082, -57.672, 0.000), (-22.041, -57.745, 0.000), (-21.994, -57.826, 0.000), (-21.921, -57.884, 0.000), (-21.859, -57.932, 0.000), (-21.789, -57.965, 0.000), (-21.732, -57.991, 0.000), (-21.673, -58.009, 0.000), (-21.565, -58.044, 0.000), (-21.453, -58.060, 0.000), (-21.355, -58.074, 0.000), (-21.256, -58.080, 0.000), (-21.109, -58.090, 0.000), (-20.962, -58.094, 0.000), (-20.718, -58.101, 0.000), (-20.474, -58.103, 0.000), (-20.092, -58.106, 0.000), (-19.710, -58.105, 0.000), (-18.211, -58.103, 0.000), (-16.712, -58.101, 0.000), (-16.193, -58.100, 0.000), (-15.675, -58.097, 0.000), (-15.480, -58.095, 0.000), (-15.285, -58.091, 0.000), (-15.208, -58.089, 0.000), (-15.130, -58.084, 0.000), (-15.092, -58.082, 0.000), (-15.054, -58.076, 0.000), (-15.046, -58.074, 0.000), (-15.038, -58.073, 0.000), (-14.946, -58.054, 0.000), (-14.859, -58.021, 0.000), (-14.780, -57.991, 0.000), (-14.710, -57.944, 0.000), (-14.621, -57.884, 0.000), (-14.560, -57.796, 0.000), (-14.509, -57.722, 0.000), (-14.482, -57.637, 0.000), (-14.455, -57.555, 0.000), (-14.446, -57.469, 0.000), (-14.440, -57.412, 0.000), (-14.439, -57.354, 0.000), (-14.424, -57.044, 0.000), (-14.413, -56.733, 0.000), (-14.407, -56.563, 0.000), (-14.406, -56.393, 0.000), (-14.406, -56.291, 0.000), (-14.411, -56.188, 0.000), (-14.416, -56.103, 0.000), (-14.430, -56.020, 0.000), (-14.432, -56.010, 0.000), (-14.434, -55.999, 0.000), (-14.457, -55.872, 0.000), (-14.507, -55.753, 0.000), (-14.543, -55.667, 0.000), (-14.587, -55.584, 0.000), (-14.646, -55.470, 0.000), (-14.711, -55.359, 0.000), (-14.718, -55.348, 0.000), (-14.725, -55.337, 0.000), (-17.545, -50.335, 0.000), (-20.365, -45.333, 0.000), (-20.557, -44.992, 0.000), (-20.750, -44.652, 0.000), (-20.762, -44.630, 0.000), (-20.775, -44.608, 0.000), (-20.797, -44.571, 0.000), (-20.822, -44.537, 0.000), (-20.851, -44.497, 0.000), (-20.881, -44.457, 0.000), (-20.949, -44.377, 0.000), (-21.036, -44.317, 0.000), (-21.126, -44.256, 0.000), (-21.232, -44.227, 0.000), (-21.409, -44.179, 0.000), (-21.582, -44.243, 0.000), (-21.684, -44.280, 0.000), (-21.768, -44.348, 0.000), (-21.845, -44.410, 0.000), (-21.905, -44.489, 0.000), (-21.997, -44.609, 0.000), (-22.045, -44.752, 0.000), (-22.080, -44.857, 0.000), (-22.093, -44.967, 0.000), (-22.098, -45.004, 0.000), (-22.101, -45.041, 0.000), (-22.110, -45.251, 0.000), (-22.113, -45.461, 0.000), (-22.118, -45.787, 0.000), (-22.119, -46.113, 0.000), (-22.121, -46.842, 0.000), (-22.120, -47.571, 0.000), (-22.116, -49.353, 0.000), (-22.113, -51.135, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-22.113, -51.135, 0.000)), rs.coerce3dpoint((-22.111, -53.900, 0.000)), rs.coerce3dpoint((-22.110, -56.665, 0.000)), rs.coerce3dpoint((-22.110, -56.974, 0.000)), rs.coerce3dpoint((-22.110, -57.284, 0.000)), rs.coerce3dpoint((-22.110, -57.336, 0.000)), rs.coerce3dpoint((-22.110, -57.389, 0.000)), rs.coerce3dpoint((-22.110, -57.412, 0.000)), rs.coerce3dpoint((-22.111, -57.434, 0.000)), rs.coerce3dpoint((-22.113, -57.513, 0.000)), rs.coerce3dpoint((-22.098, -57.590, 0.000)), rs.coerce3dpoint((-22.082, -57.672, 0.000)), rs.coerce3dpoint((-22.041, -57.745, 0.000)), rs.coerce3dpoint((-21.994, -57.826, 0.000)), rs.coerce3dpoint((-21.921, -57.884, 0.000)), rs.coerce3dpoint((-21.859, -57.932, 0.000)), rs.coerce3dpoint((-21.789, -57.965, 0.000)), rs.coerce3dpoint((-21.732, -57.991, 0.000)), rs.coerce3dpoint((-21.673, -58.009, 0.000)), rs.coerce3dpoint((-21.565, -58.044, 0.000)), rs.coerce3dpoint((-21.453, -58.060, 0.000)), rs.coerce3dpoint((-21.355, -58.074, 0.000)), rs.coerce3dpoint((-21.256, -58.080, 0.000)), rs.coerce3dpoint((-21.109, -58.090, 0.000)), rs.coerce3dpoint((-20.962, -58.094, 0.000)), rs.coerce3dpoint((-20.718, -58.101, 0.000)), rs.coerce3dpoint((-20.474, -58.103, 0.000)), rs.coerce3dpoint((-20.092, -58.106, 0.000)), rs.coerce3dpoint((-19.710, -58.105, 0.000)), rs.coerce3dpoint((-18.211, -58.103, 0.000)), rs.coerce3dpoint((-16.712, -58.101, 0.000)), rs.coerce3dpoint((-16.193, -58.100, 0.000)), rs.coerce3dpoint((-15.675, -58.097, 0.000)), rs.coerce3dpoint((-15.480, -58.095, 0.000)), rs.coerce3dpoint((-15.285, -58.091, 0.000)), rs.coerce3dpoint((-15.208, -58.089, 0.000)), rs.coerce3dpoint((-15.130, -58.084, 0.000)), rs.coerce3dpoint((-15.092, -58.082, 0.000)), rs.coerce3dpoint((-15.054, -58.076, 0.000)), rs.coerce3dpoint((-15.046, -58.074, 0.000)), rs.coerce3dpoint((-15.038, -58.073, 0.000)), rs.coerce3dpoint((-14.946, -58.054, 0.000)), rs.coerce3dpoint((-14.859, -58.021, 0.000)), rs.coerce3dpoint((-14.780, -57.991, 0.000)), rs.coerce3dpoint((-14.710, -57.944, 0.000)), rs.coerce3dpoint((-14.621, -57.884, 0.000)), rs.coerce3dpoint((-14.560, -57.796, 0.000)), rs.coerce3dpoint((-14.509, -57.722, 0.000)), rs.coerce3dpoint((-14.482, -57.637, 0.000)), rs.coerce3dpoint((-14.455, -57.555, 0.000)), rs.coerce3dpoint((-14.446, -57.469, 0.000)), rs.coerce3dpoint((-14.440, -57.412, 0.000)), rs.coerce3dpoint((-14.439, -57.354, 0.000)), rs.coerce3dpoint((-14.424, -57.044, 0.000)), rs.coerce3dpoint((-14.413, -56.733, 0.000)), rs.coerce3dpoint((-14.407, -56.563, 0.000)), rs.coerce3dpoint((-14.406, -56.393, 0.000)), rs.coerce3dpoint((-14.406, -56.291, 0.000)), rs.coerce3dpoint((-14.411, -56.188, 0.000)), rs.coerce3dpoint((-14.416, -56.103, 0.000)), rs.coerce3dpoint((-14.430, -56.020, 0.000)), rs.coerce3dpoint((-14.432, -56.010, 0.000)), rs.coerce3dpoint((-14.434, -55.999, 0.000)), rs.coerce3dpoint((-14.457, -55.872, 0.000)), rs.coerce3dpoint((-14.507, -55.753, 0.000)), rs.coerce3dpoint((-14.543, -55.667, 0.000)), rs.coerce3dpoint((-14.587, -55.584, 0.000)), rs.coerce3dpoint((-14.646, -55.470, 0.000)), rs.coerce3dpoint((-14.711, -55.359, 0.000)), rs.coerce3dpoint((-14.718, -55.348, 0.000)), rs.coerce3dpoint((-14.725, -55.337, 0.000)), rs.coerce3dpoint((-17.545, -50.335, 0.000)), rs.coerce3dpoint((-20.365, -45.333, 0.000)), rs.coerce3dpoint((-20.557, -44.992, 0.000)), rs.coerce3dpoint((-20.750, -44.652, 0.000)), rs.coerce3dpoint((-20.762, -44.630, 0.000)), rs.coerce3dpoint((-20.775, -44.608, 0.000)), rs.coerce3dpoint((-20.797, -44.571, 0.000)), rs.coerce3dpoint((-20.822, -44.537, 0.000)), rs.coerce3dpoint((-20.851, -44.497, 0.000)), rs.coerce3dpoint((-20.881, -44.457, 0.000)), rs.coerce3dpoint((-20.949, -44.377, 0.000)), rs.coerce3dpoint((-21.036, -44.317, 0.000)), rs.coerce3dpoint((-21.126, -44.256, 0.000)), rs.coerce3dpoint((-21.232, -44.227, 0.000)), rs.coerce3dpoint((-21.409, -44.179, 0.000)), rs.coerce3dpoint((-21.582, -44.243, 0.000)), rs.coerce3dpoint((-21.684, -44.280, 0.000)), rs.coerce3dpoint((-21.768, -44.348, 0.000)), rs.coerce3dpoint((-21.845, -44.410, 0.000)), rs.coerce3dpoint((-21.905, -44.489, 0.000)), rs.coerce3dpoint((-21.997, -44.609, 0.000)), rs.coerce3dpoint((-22.045, -44.752, 0.000)), rs.coerce3dpoint((-22.080, -44.857, 0.000)), rs.coerce3dpoint((-22.093, -44.967, 0.000)), rs.coerce3dpoint((-22.098, -45.004, 0.000)), rs.coerce3dpoint((-22.101, -45.041, 0.000)), rs.coerce3dpoint((-22.110, -45.251, 0.000)), rs.coerce3dpoint((-22.113, -45.461, 0.000)), rs.coerce3dpoint((-22.118, -45.787, 0.000)), rs.coerce3dpoint((-22.119, -46.113, 0.000)), rs.coerce3dpoint((-22.121, -46.842, 0.000)), rs.coerce3dpoint((-22.120, -47.571, 0.000)), rs.coerce3dpoint((-22.116, -49.353, 0.000)), rs.coerce3dpoint((-22.113, -51.135, 0.000))], [0.0, 0.0, 5.52983055611, 5.52983055611, 6.14892063881, 6.14892063881, 6.25397103910, 6.25397103910, 6.29963671559, 6.29963671559, 6.45594454391, 6.45594454391, 6.62181840741, 6.62181840741, 6.80671472646, 6.80671472646, 6.96171504788, 6.96171504788, 7.08576070925, 7.08576070925, 7.31219454839, 7.31219454839, 7.51028365609, 7.51028365609, 7.80437324025, 7.80437324025, 8.29237939580, 8.29237939580, 9.05611567237, 9.05611567237, 12.0548281825, 12.0548281825, 13.0912801481, 13.0912801481, 13.4811960372, 13.4811960372, 13.6361625800, 13.6361625800, 13.7133174944, 13.7133174944, 13.7295228793, 13.7295228793, 13.9159197902, 13.9159197902, 14.0838055949, 14.0838055949, 14.2962303010, 14.2962303010, 14.4734893780, 14.4734893780, 14.6454179861, 14.6454179861, 14.7608844785, 14.7608844785, 15.3829480801, 15.3829480801, 15.7224562888, 15.7224562888, 15.9275336675, 15.9275336675, 16.0973726786, 16.0973726786, 16.1177879914, 16.1177879914, 16.3759644710, 16.3759644710, 16.5623933939, 16.5623933939, 16.8193233244, 16.8193233244, 16.8456693013, 16.8456693013, 28.3298429479, 28.3298429479, 29.1119183809, 29.1119183809, 29.1630016625, 29.1630016625, 29.2475654631, 29.2475654631, 29.3468517092, 29.3468517092, 29.5565373447, 29.5565373447, 29.7730391171, 29.7730391171, 30.1295666204, 30.1295666204, 30.3439788486, 30.3439788486, 30.5413338696, 30.5413338696, 30.8403604711, 30.8403604711, 31.0614626344, 31.0614626344, 31.1357755742, 31.1357755742, 31.5560815649, 31.5560815649, 32.2078299703, 32.2078299703, 33.6658620615, 33.6658620615, 37.2294597032, 37.2294597032], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99995000125, 1.0, 0.993858417609, 1.0, 0.987027413348, 1.0, 0.982371778781, 1.0, 0.992944478311, 1.0, 0.99771772736, 1.0, 0.99649493353, 1.0, 0.999330444228, 1.0, 0.999791941646, 1.0, 0.999941681701, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999966380565, 1.0, 0.999771046213, 1.0, 0.998444390902, 1.0, 1.0, 1.0, 0.996427811681, 1.0, 0.993635816066, 1.0, 0.982703764746, 1.0, 0.989628385567, 1.0, 0.994892357404, 1.0, 0.998809988485, 1.0, 0.999974080336, 1.0, 0.999884486672, 1.0, 0.99956791337, 1.0, 0.998307812961, 1.0, 1.0, 1.0, 0.994206411591, 1.0, 0.999058663266, 1.0, 0.99972155877, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999925582769, 1.0, 0.998942559386, 1.0, 0.999937281967, 1.0, 0.991325784881, 1.0, 0.985920538315, 1.0, 0.952899787172, 1.0, 0.986963532265, 1.0, 0.992682153766, 1.0, 0.986019988239, 1.0, 0.995170410697, 1.0, 0.999662057112, 1.0, 0.999893425679, 1.0, 0.999983180141, 1.0, 0.999997120004, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.142, -6.041, 0.000), (22.154, -4.903, 0.000), (22.153, -3.765, 0.000), (22.151, -2.670, 0.000), (22.144, -1.576, 0.000), (22.142, -1.238, 0.000), (22.140, -0.901, 0.000), (22.139, -0.728, 0.000), (22.138, -0.556, 0.000), (22.143, -0.459, 0.000), (22.139, -0.363, 0.000), (22.136, -0.284, 0.000), (22.120, -0.206, 0.000), (22.105, -0.128, 0.000), (22.071, -0.057, 0.000), (22.032, 0.026, 0.000), (21.969, 0.094, 0.000), (21.961, 0.102, 0.000), (21.953, 0.110, 0.000), (21.887, 0.178, 0.000), (21.804, 0.225, 0.000), (21.661, 0.306, 0.000), (21.497, 0.295, 0.000), (21.410, 0.289, 0.000), (21.328, 0.262, 0.000), (21.256, 0.238, 0.000), (21.189, 0.203, 0.000), (21.153, 0.183, 0.000), (21.120, 0.158, 0.000), (21.058, 0.111, 0.000), (21.002, 0.059, 0.000), (20.928, -0.009, 0.000), (20.863, -0.084, 0.000), (20.849, -0.100, 0.000), (20.836, -0.118, 0.000), (20.809, -0.153, 0.000), (20.786, -0.189, 0.000), (20.714, -0.300, 0.000), (20.645, -0.412, 0.000), (20.475, -0.691, 0.000), (20.309, -0.973, 0.000), (20.199, -1.159, 0.000), (20.090, -1.346, 0.000), (19.739, -1.948, 0.000), (19.393, -2.552, 0.000), (19.178, -2.928, 0.000), (18.962, -3.305, 0.000), (18.725, -3.720, 0.000), (18.488, -4.135, 0.000), (18.026, -4.942, 0.000), (17.565, -5.749, 0.000), (17.324, -6.169, 0.000), (17.079, -6.588, 0.000), (16.924, -6.851, 0.000), (16.767, -7.112, 0.000), (16.661, -7.286, 0.000), (16.593, -7.478, 0.000), (16.517, -7.695, 0.000), (16.494, -7.925, 0.000), (16.482, -8.047, 0.000), (16.483, -8.170, 0.000), (16.490, -9.127, 0.000), (16.492, -10.084, 0.000), (16.492, -10.228, 0.000), (16.492, -10.372, 0.000), (16.494, -10.982, 0.000), (16.496, -11.593, 0.000), (16.496, -11.598, 0.000), (16.496, -11.603, 0.000), (16.496, -11.670, 0.000), (16.499, -11.738, 0.000), (16.502, -11.802, 0.000), (16.515, -11.866, 0.000), (16.515, -11.867, 0.000), (16.516, -11.869, 0.000), (16.536, -11.966, 0.000), (16.577, -12.055, 0.000), (16.626, -12.160, 0.000), (16.708, -12.243, 0.000), (16.788, -12.323, 0.000), (16.889, -12.373, 0.000), (16.972, -12.414, 0.000), (17.062, -12.436, 0.000), (17.129, -12.452, 0.000), (17.197, -12.457, 0.000), (17.269, -12.463, 0.000), (17.342, -12.463, 0.000), (17.359, -12.463, 0.000), (17.377, -12.463, 0.000), (18.631, -12.469, 0.000), (19.884, -12.475, 0.000), (20.160, -12.475, 0.000), (20.435, -12.475, 0.000), (20.865, -12.475, 0.000), (21.294, -12.478, 0.000), (21.326, -12.478, 0.000), (21.357, -12.479, 0.000), (21.453, -12.480, 0.000), (21.546, -12.459, 0.000), (21.694, -12.425, 0.000), (21.814, -12.331, 0.000), (21.888, -12.273, 0.000), (21.948, -12.200, 0.000), (21.997, -12.140, 0.000), (22.039, -12.074, 0.000), (22.090, -11.992, 0.000), (22.111, -11.899, 0.000), (22.126, -11.830, 0.000), (22.130, -11.761, 0.000), (22.133, -11.691, 0.000), (22.132, -11.621, 0.000), (22.132, -11.607, 0.000), (22.132, -11.592, 0.000), (22.132, -11.563, 0.000), (22.132, -11.534, 0.000), (22.132, -11.365, 0.000), (22.132, -11.196, 0.000), (22.134, -9.570, 0.000), (22.135, -7.944, 0.000), (22.139, -6.992, 0.000), (22.142, -6.041, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.142, -6.041, 0.000)), rs.coerce3dpoint((22.154, -4.903, 0.000)), rs.coerce3dpoint((22.153, -3.765, 0.000)), rs.coerce3dpoint((22.151, -2.670, 0.000)), rs.coerce3dpoint((22.144, -1.576, 0.000)), rs.coerce3dpoint((22.142, -1.238, 0.000)), rs.coerce3dpoint((22.140, -0.901, 0.000)), rs.coerce3dpoint((22.139, -0.728, 0.000)), rs.coerce3dpoint((22.138, -0.556, 0.000)), rs.coerce3dpoint((22.143, -0.459, 0.000)), rs.coerce3dpoint((22.139, -0.363, 0.000)), rs.coerce3dpoint((22.136, -0.284, 0.000)), rs.coerce3dpoint((22.120, -0.206, 0.000)), rs.coerce3dpoint((22.105, -0.128, 0.000)), rs.coerce3dpoint((22.071, -0.057, 0.000)), rs.coerce3dpoint((22.032, 0.026, 0.000)), rs.coerce3dpoint((21.969, 0.094, 0.000)), rs.coerce3dpoint((21.961, 0.102, 0.000)), rs.coerce3dpoint((21.953, 0.110, 0.000)), rs.coerce3dpoint((21.887, 0.178, 0.000)), rs.coerce3dpoint((21.804, 0.225, 0.000)), rs.coerce3dpoint((21.661, 0.306, 0.000)), rs.coerce3dpoint((21.497, 0.295, 0.000)), rs.coerce3dpoint((21.410, 0.289, 0.000)), rs.coerce3dpoint((21.328, 0.262, 0.000)), rs.coerce3dpoint((21.256, 0.238, 0.000)), rs.coerce3dpoint((21.189, 0.203, 0.000)), rs.coerce3dpoint((21.153, 0.183, 0.000)), rs.coerce3dpoint((21.120, 0.158, 0.000)), rs.coerce3dpoint((21.058, 0.111, 0.000)), rs.coerce3dpoint((21.002, 0.059, 0.000)), rs.coerce3dpoint((20.928, -0.009, 0.000)), rs.coerce3dpoint((20.863, -0.084, 0.000)), rs.coerce3dpoint((20.849, -0.100, 0.000)), rs.coerce3dpoint((20.836, -0.118, 0.000)), rs.coerce3dpoint((20.809, -0.153, 0.000)), rs.coerce3dpoint((20.786, -0.189, 0.000)), rs.coerce3dpoint((20.714, -0.300, 0.000)), rs.coerce3dpoint((20.645, -0.412, 0.000)), rs.coerce3dpoint((20.475, -0.691, 0.000)), rs.coerce3dpoint((20.309, -0.973, 0.000)), rs.coerce3dpoint((20.199, -1.159, 0.000)), rs.coerce3dpoint((20.090, -1.346, 0.000)), rs.coerce3dpoint((19.739, -1.948, 0.000)), rs.coerce3dpoint((19.393, -2.552, 0.000)), rs.coerce3dpoint((19.178, -2.928, 0.000)), rs.coerce3dpoint((18.962, -3.305, 0.000)), rs.coerce3dpoint((18.725, -3.720, 0.000)), rs.coerce3dpoint((18.488, -4.135, 0.000)), rs.coerce3dpoint((18.026, -4.942, 0.000)), rs.coerce3dpoint((17.565, -5.749, 0.000)), rs.coerce3dpoint((17.324, -6.169, 0.000)), rs.coerce3dpoint((17.079, -6.588, 0.000)), rs.coerce3dpoint((16.924, -6.851, 0.000)), rs.coerce3dpoint((16.767, -7.112, 0.000)), rs.coerce3dpoint((16.661, -7.286, 0.000)), rs.coerce3dpoint((16.593, -7.478, 0.000)), rs.coerce3dpoint((16.517, -7.695, 0.000)), rs.coerce3dpoint((16.494, -7.925, 0.000)), rs.coerce3dpoint((16.482, -8.047, 0.000)), rs.coerce3dpoint((16.483, -8.170, 0.000)), rs.coerce3dpoint((16.490, -9.127, 0.000)), rs.coerce3dpoint((16.492, -10.084, 0.000)), rs.coerce3dpoint((16.492, -10.228, 0.000)), rs.coerce3dpoint((16.492, -10.372, 0.000)), rs.coerce3dpoint((16.494, -10.982, 0.000)), rs.coerce3dpoint((16.496, -11.593, 0.000)), rs.coerce3dpoint((16.496, -11.598, 0.000)), rs.coerce3dpoint((16.496, -11.603, 0.000)), rs.coerce3dpoint((16.496, -11.670, 0.000)), rs.coerce3dpoint((16.499, -11.738, 0.000)), rs.coerce3dpoint((16.502, -11.802, 0.000)), rs.coerce3dpoint((16.515, -11.866, 0.000)), rs.coerce3dpoint((16.515, -11.867, 0.000)), rs.coerce3dpoint((16.516, -11.869, 0.000)), rs.coerce3dpoint((16.536, -11.966, 0.000)), rs.coerce3dpoint((16.577, -12.055, 0.000)), rs.coerce3dpoint((16.626, -12.160, 0.000)), rs.coerce3dpoint((16.708, -12.243, 0.000)), rs.coerce3dpoint((16.788, -12.323, 0.000)), rs.coerce3dpoint((16.889, -12.373, 0.000)), rs.coerce3dpoint((16.972, -12.414, 0.000)), rs.coerce3dpoint((17.062, -12.436, 0.000)), rs.coerce3dpoint((17.129, -12.452, 0.000)), rs.coerce3dpoint((17.197, -12.457, 0.000)), rs.coerce3dpoint((17.269, -12.463, 0.000)), rs.coerce3dpoint((17.342, -12.463, 0.000)), rs.coerce3dpoint((17.359, -12.463, 0.000)), rs.coerce3dpoint((17.377, -12.463, 0.000)), rs.coerce3dpoint((18.631, -12.469, 0.000)), rs.coerce3dpoint((19.884, -12.475, 0.000)), rs.coerce3dpoint((20.160, -12.475, 0.000)), rs.coerce3dpoint((20.435, -12.475, 0.000)), rs.coerce3dpoint((20.865, -12.475, 0.000)), rs.coerce3dpoint((21.294, -12.478, 0.000)), rs.coerce3dpoint((21.326, -12.478, 0.000)), rs.coerce3dpoint((21.357, -12.479, 0.000)), rs.coerce3dpoint((21.453, -12.480, 0.000)), rs.coerce3dpoint((21.546, -12.459, 0.000)), rs.coerce3dpoint((21.694, -12.425, 0.000)), rs.coerce3dpoint((21.814, -12.331, 0.000)), rs.coerce3dpoint((21.888, -12.273, 0.000)), rs.coerce3dpoint((21.948, -12.200, 0.000)), rs.coerce3dpoint((21.997, -12.140, 0.000)), rs.coerce3dpoint((22.039, -12.074, 0.000)), rs.coerce3dpoint((22.090, -11.992, 0.000)), rs.coerce3dpoint((22.111, -11.899, 0.000)), rs.coerce3dpoint((22.126, -11.830, 0.000)), rs.coerce3dpoint((22.130, -11.761, 0.000)), rs.coerce3dpoint((22.133, -11.691, 0.000)), rs.coerce3dpoint((22.132, -11.621, 0.000)), rs.coerce3dpoint((22.132, -11.607, 0.000)), rs.coerce3dpoint((22.132, -11.592, 0.000)), rs.coerce3dpoint((22.132, -11.563, 0.000)), rs.coerce3dpoint((22.132, -11.534, 0.000)), rs.coerce3dpoint((22.132, -11.365, 0.000)), rs.coerce3dpoint((22.132, -11.196, 0.000)), rs.coerce3dpoint((22.134, -9.570, 0.000)), rs.coerce3dpoint((22.135, -7.944, 0.000)), rs.coerce3dpoint((22.139, -6.992, 0.000)), rs.coerce3dpoint((22.142, -6.041, 0.000))], [0.0, 0.0, 2.27605643035, 2.27605643035, 4.46532535914, 4.46532535914, 5.14018805784, 5.14018805784, 5.48532469238, 5.48532469238, 5.67813189106, 5.67813189106, 5.83681605226, 5.83681605226, 5.99383473208, 5.99383473208, 6.17629124468, 6.17629124468, 6.19912401499, 6.19912401499, 6.38815281733, 6.38815281733, 6.70808886184, 6.70808886184, 6.88043389328, 6.88043389328, 7.03186459509, 7.03186459509, 7.11461561421, 7.11461561421, 7.26888334648, 7.26888334648, 7.46785959482, 7.46785959482, 7.51131865447, 7.51131865447, 7.59858654360, 7.59858654360, 7.86188614755, 7.86188614755, 8.51552739267, 8.51552739267, 8.94901089399, 8.94901089399, 10.3413202572, 10.3413202572, 11.2088118993, 11.2088118993, 12.1648728745, 12.1648728745, 14.0242344075, 14.0242344075, 14.9937693346, 14.9937693346, 15.6036143969, 15.6036143969, 16.0091582922, 16.0091582922, 16.4683173786, 16.4683173786, 16.7135065396, 16.7135065396, 18.6280284186, 18.6280284186, 18.9162795287, 18.9162795287, 20.1363359878, 20.1363359878, 20.1469060635, 20.1469060635, 20.2817000804, 20.2817000804, 20.4104961545, 20.4104961545, 20.4143578251, 20.4143578251, 20.6101316174, 20.6101316174, 20.8403016949, 20.8403016949, 21.0643420241, 21.0643420241, 21.2484042137, 21.2484042137, 21.3858084701, 21.3858084701, 21.5303919857, 21.5303919857, 21.5657130955, 21.5657130955, 24.0732394663, 24.0732394663, 24.6240099769, 24.6240099769, 25.4827760233, 25.4827760233, 25.5457885117, 25.5457885117, 25.7362165075, 25.7362165075, 26.0355137129, 26.0355137129, 26.2236929873, 26.2236929873, 26.3788682608, 26.3788682608, 26.5691856246, 26.5691856246, 26.7087945694, 26.7087945694, 26.8483988321, 26.8483988321, 26.8771395280, 26.8771395280, 26.9349802550, 26.9349802550, 27.2730002645, 27.2730002645, 30.5256016945, 30.5256016945, 32.4285153536, 32.4285153536], 2, [1.0, 0.999983180141, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 0.998710511926, 1.0, 0.997039887627, 1.0, 0.992873404989, 1.0, 0.988303031976, 1.0, 1.0, 1.0, 0.989912259197, 1.0, 0.957865002643, 1.0, 0.991917416618, 1.0, 0.996594428849, 1.0, 0.997191449524, 1.0, 0.998553826466, 1.0, 0.998466596565, 1.0, 0.999712041466, 1.0, 0.999401599095, 1.0, 0.999890485997, 1.0, 0.999968000512, 1.0, 0.999996620006, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999983180141, 1.0, 0.994811495301, 1.0, 0.992897135249, 1.0, 0.998499606435, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999672373678, 1.0, 0.997191449524, 1.0, 1.0, 1.0, 0.993409290533, 1.0, 0.985418116498, 1.0, 0.986414336294, 1.0, 0.994249203514, 1.0, 0.99665996724, 1.0, 0.999330444228, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 0.993015199212, 1.0, 0.975830924828, 1.0, 0.993990093917, 1.0, 0.997902681681, 1.0, 0.985787401839, 1.0, 0.996528256979, 1.0, 0.9994289431, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(16.480, 1.235, 0.000), (16.477, 0.317, 0.000), (16.474, -0.600, 0.000), (16.472, -1.458, 0.000), (16.469, -2.315, 0.000), (16.468, -2.569, 0.000), (16.470, -2.823, 0.000), (16.471, -2.917, 0.000), (16.474, -3.011, 0.000), (16.476, -3.058, 0.000), (16.481, -3.105, 0.000), (16.491, -3.203, 0.000), (16.524, -3.296, 0.000), (16.582, -3.460, 0.000), (16.714, -3.574, 0.000), (16.790, -3.639, 0.000), (16.879, -3.685, 0.000), (16.942, -3.716, 0.000), (17.008, -3.740, 0.000), (17.110, -3.776, 0.000), (17.217, -3.767, 0.000), (17.306, -3.759, 0.000), (17.387, -3.722, 0.000), (17.465, -3.686, 0.000), (17.532, -3.633, 0.000), (17.608, -3.573, 0.000), (17.671, -3.500, 0.000), (17.685, -3.483, 0.000), (17.698, -3.467, 0.000), (17.750, -3.401, 0.000), (17.794, -3.330, 0.000), (17.802, -3.316, 0.000), (17.811, -3.303, 0.000), (18.036, -2.928, 0.000), (18.259, -2.551, 0.000), (18.381, -2.348, 0.000), (18.502, -2.145, 0.000), (18.731, -1.762, 0.000), (18.958, -1.377, 0.000), (19.025, -1.263, 0.000), (19.091, -1.148, 0.000), (19.439, -0.547, 0.000), (19.783, 0.057, 0.000), (19.842, 0.161, 0.000), (19.901, 0.264, 0.000), (20.070, 0.559, 0.000), (20.238, 0.853, 0.000), (20.469, 1.258, 0.000), (20.700, 1.663, 0.000), (21.079, 2.329, 0.000), (21.461, 2.993, 0.000), (21.670, 3.357, 0.000), (21.881, 3.718, 0.000), (21.982, 3.890, 0.000), (22.044, 4.079, 0.000), (22.108, 4.277, 0.000), (22.125, 4.484, 0.000), (22.134, 4.594, 0.000), (22.132, 4.705, 0.000), (22.120, 5.386, 0.000), (22.113, 6.067, 0.000), (22.111, 6.283, 0.000), (22.109, 6.498, 0.000), (22.103, 7.075, 0.000), (22.096, 7.652, 0.000), (22.090, 8.119, 0.000), (22.078, 8.586, 0.000), (22.072, 8.816, 0.000), (22.063, 9.046, 0.000), (22.059, 9.162, 0.000), (22.018, 9.270, 0.000), (21.968, 9.402, 0.000), (21.865, 9.499, 0.000), (21.763, 9.595, 0.000), (21.630, 9.636, 0.000), (21.548, 9.662, 0.000), (21.463, 9.667, 0.000), (21.276, 9.678, 0.000), (21.089, 9.679, 0.000), (20.923, 9.681, 0.000), (20.757, 9.680, 0.000), (20.633, 9.680, 0.000), (20.510, 9.680, 0.000), (20.326, 9.681, 0.000), (20.142, 9.678, 0.000), (20.027, 9.677, 0.000), (19.913, 9.676, 0.000), (19.826, 9.676, 0.000), (19.740, 9.675, 0.000), (19.540, 9.673, 0.000), (19.340, 9.674, 0.000), (19.289, 9.675, 0.000), (19.239, 9.676, 0.000), (19.134, 9.678, 0.000), (19.032, 9.653, 0.000), (18.899, 9.620, 0.000), (18.788, 9.539, 0.000), (18.707, 9.481, 0.000), (18.640, 9.406, 0.000), (18.602, 9.362, 0.000), (18.567, 9.315, 0.000), (18.514, 9.242, 0.000), (18.467, 9.167, 0.000), (18.390, 9.046, 0.000), (18.317, 8.924, 0.000), (18.148, 8.642, 0.000), (17.982, 8.358, 0.000), (17.764, 7.983, 0.000), (17.546, 7.609, 0.000), (17.399, 7.357, 0.000), (17.252, 7.104, 0.000), (17.083, 6.814, 0.000), (16.915, 6.524, 0.000), (16.793, 6.315, 0.000), (16.673, 6.104, 0.000), (16.635, 6.040, 0.000), (16.601, 5.974, 0.000), (16.591, 5.955, 0.000), (16.582, 5.936, 0.000), (16.551, 5.874, 0.000), (16.529, 5.807, 0.000), (16.503, 5.729, 0.000), (16.493, 5.646, 0.000), (16.493, 5.640, 0.000), (16.492, 5.634, 0.000), (16.487, 5.593, 0.000), (16.486, 5.551, 0.000), (16.483, 5.449, 0.000), (16.483, 5.347, 0.000), (16.480, 5.006, 0.000), (16.480, 4.664, 0.000), (16.480, 3.333, 0.000), (16.480, 2.002, 0.000), (16.480, 1.743, 0.000), (16.480, 1.485, 0.000), (16.480, 1.360, 0.000), (16.480, 1.235, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((16.480, 1.235, 0.000)), rs.coerce3dpoint((16.477, 0.317, 0.000)), rs.coerce3dpoint((16.474, -0.600, 0.000)), rs.coerce3dpoint((16.472, -1.458, 0.000)), rs.coerce3dpoint((16.469, -2.315, 0.000)), rs.coerce3dpoint((16.468, -2.569, 0.000)), rs.coerce3dpoint((16.470, -2.823, 0.000)), rs.coerce3dpoint((16.471, -2.917, 0.000)), rs.coerce3dpoint((16.474, -3.011, 0.000)), rs.coerce3dpoint((16.476, -3.058, 0.000)), rs.coerce3dpoint((16.481, -3.105, 0.000)), rs.coerce3dpoint((16.491, -3.203, 0.000)), rs.coerce3dpoint((16.524, -3.296, 0.000)), rs.coerce3dpoint((16.582, -3.460, 0.000)), rs.coerce3dpoint((16.714, -3.574, 0.000)), rs.coerce3dpoint((16.790, -3.639, 0.000)), rs.coerce3dpoint((16.879, -3.685, 0.000)), rs.coerce3dpoint((16.942, -3.716, 0.000)), rs.coerce3dpoint((17.008, -3.740, 0.000)), rs.coerce3dpoint((17.110, -3.776, 0.000)), rs.coerce3dpoint((17.217, -3.767, 0.000)), rs.coerce3dpoint((17.306, -3.759, 0.000)), rs.coerce3dpoint((17.387, -3.722, 0.000)), rs.coerce3dpoint((17.465, -3.686, 0.000)), rs.coerce3dpoint((17.532, -3.633, 0.000)), rs.coerce3dpoint((17.608, -3.573, 0.000)), rs.coerce3dpoint((17.671, -3.500, 0.000)), rs.coerce3dpoint((17.685, -3.483, 0.000)), rs.coerce3dpoint((17.698, -3.467, 0.000)), rs.coerce3dpoint((17.750, -3.401, 0.000)), rs.coerce3dpoint((17.794, -3.330, 0.000)), rs.coerce3dpoint((17.802, -3.316, 0.000)), rs.coerce3dpoint((17.811, -3.303, 0.000)), rs.coerce3dpoint((18.036, -2.928, 0.000)), rs.coerce3dpoint((18.259, -2.551, 0.000)), rs.coerce3dpoint((18.381, -2.348, 0.000)), rs.coerce3dpoint((18.502, -2.145, 0.000)), rs.coerce3dpoint((18.731, -1.762, 0.000)), rs.coerce3dpoint((18.958, -1.377, 0.000)), rs.coerce3dpoint((19.025, -1.263, 0.000)), rs.coerce3dpoint((19.091, -1.148, 0.000)), rs.coerce3dpoint((19.439, -0.547, 0.000)), rs.coerce3dpoint((19.783, 0.057, 0.000)), rs.coerce3dpoint((19.842, 0.161, 0.000)), rs.coerce3dpoint((19.901, 0.264, 0.000)), rs.coerce3dpoint((20.070, 0.559, 0.000)), rs.coerce3dpoint((20.238, 0.853, 0.000)), rs.coerce3dpoint((20.469, 1.258, 0.000)), rs.coerce3dpoint((20.700, 1.663, 0.000)), rs.coerce3dpoint((21.079, 2.329, 0.000)), rs.coerce3dpoint((21.461, 2.993, 0.000)), rs.coerce3dpoint((21.670, 3.357, 0.000)), rs.coerce3dpoint((21.881, 3.718, 0.000)), rs.coerce3dpoint((21.982, 3.890, 0.000)), rs.coerce3dpoint((22.044, 4.079, 0.000)), rs.coerce3dpoint((22.108, 4.277, 0.000)), rs.coerce3dpoint((22.125, 4.484, 0.000)), rs.coerce3dpoint((22.134, 4.594, 0.000)), rs.coerce3dpoint((22.132, 4.705, 0.000)), rs.coerce3dpoint((22.120, 5.386, 0.000)), rs.coerce3dpoint((22.113, 6.067, 0.000)), rs.coerce3dpoint((22.111, 6.283, 0.000)), rs.coerce3dpoint((22.109, 6.498, 0.000)), rs.coerce3dpoint((22.103, 7.075, 0.000)), rs.coerce3dpoint((22.096, 7.652, 0.000)), rs.coerce3dpoint((22.090, 8.119, 0.000)), rs.coerce3dpoint((22.078, 8.586, 0.000)), rs.coerce3dpoint((22.072, 8.816, 0.000)), rs.coerce3dpoint((22.063, 9.046, 0.000)), rs.coerce3dpoint((22.059, 9.162, 0.000)), rs.coerce3dpoint((22.018, 9.270, 0.000)), rs.coerce3dpoint((21.968, 9.402, 0.000)), rs.coerce3dpoint((21.865, 9.499, 0.000)), rs.coerce3dpoint((21.763, 9.595, 0.000)), rs.coerce3dpoint((21.630, 9.636, 0.000)), rs.coerce3dpoint((21.548, 9.662, 0.000)), rs.coerce3dpoint((21.463, 9.667, 0.000)), rs.coerce3dpoint((21.276, 9.678, 0.000)), rs.coerce3dpoint((21.089, 9.679, 0.000)), rs.coerce3dpoint((20.923, 9.681, 0.000)), rs.coerce3dpoint((20.757, 9.680, 0.000)), rs.coerce3dpoint((20.633, 9.680, 0.000)), rs.coerce3dpoint((20.510, 9.680, 0.000)), rs.coerce3dpoint((20.326, 9.681, 0.000)), rs.coerce3dpoint((20.142, 9.678, 0.000)), rs.coerce3dpoint((20.027, 9.677, 0.000)), rs.coerce3dpoint((19.913, 9.676, 0.000)), rs.coerce3dpoint((19.826, 9.676, 0.000)), rs.coerce3dpoint((19.740, 9.675, 0.000)), rs.coerce3dpoint((19.540, 9.673, 0.000)), rs.coerce3dpoint((19.340, 9.674, 0.000)), rs.coerce3dpoint((19.289, 9.675, 0.000)), rs.coerce3dpoint((19.239, 9.676, 0.000)), rs.coerce3dpoint((19.134, 9.678, 0.000)), rs.coerce3dpoint((19.032, 9.653, 0.000)), rs.coerce3dpoint((18.899, 9.620, 0.000)), rs.coerce3dpoint((18.788, 9.539, 0.000)), rs.coerce3dpoint((18.707, 9.481, 0.000)), rs.coerce3dpoint((18.640, 9.406, 0.000)), rs.coerce3dpoint((18.602, 9.362, 0.000)), rs.coerce3dpoint((18.567, 9.315, 0.000)), rs.coerce3dpoint((18.514, 9.242, 0.000)), rs.coerce3dpoint((18.467, 9.167, 0.000)), rs.coerce3dpoint((18.390, 9.046, 0.000)), rs.coerce3dpoint((18.317, 8.924, 0.000)), rs.coerce3dpoint((18.148, 8.642, 0.000)), rs.coerce3dpoint((17.982, 8.358, 0.000)), rs.coerce3dpoint((17.764, 7.983, 0.000)), rs.coerce3dpoint((17.546, 7.609, 0.000)), rs.coerce3dpoint((17.399, 7.357, 0.000)), rs.coerce3dpoint((17.252, 7.104, 0.000)), rs.coerce3dpoint((17.083, 6.814, 0.000)), rs.coerce3dpoint((16.915, 6.524, 0.000)), rs.coerce3dpoint((16.793, 6.315, 0.000)), rs.coerce3dpoint((16.673, 6.104, 0.000)), rs.coerce3dpoint((16.635, 6.040, 0.000)), rs.coerce3dpoint((16.601, 5.974, 0.000)), rs.coerce3dpoint((16.591, 5.955, 0.000)), rs.coerce3dpoint((16.582, 5.936, 0.000)), rs.coerce3dpoint((16.551, 5.874, 0.000)), rs.coerce3dpoint((16.529, 5.807, 0.000)), rs.coerce3dpoint((16.503, 5.729, 0.000)), rs.coerce3dpoint((16.493, 5.646, 0.000)), rs.coerce3dpoint((16.493, 5.640, 0.000)), rs.coerce3dpoint((16.492, 5.634, 0.000)), rs.coerce3dpoint((16.487, 5.593, 0.000)), rs.coerce3dpoint((16.486, 5.551, 0.000)), rs.coerce3dpoint((16.483, 5.449, 0.000)), rs.coerce3dpoint((16.483, 5.347, 0.000)), rs.coerce3dpoint((16.480, 5.006, 0.000)), rs.coerce3dpoint((16.480, 4.664, 0.000)), rs.coerce3dpoint((16.480, 3.333, 0.000)), rs.coerce3dpoint((16.480, 2.002, 0.000)), rs.coerce3dpoint((16.480, 1.743, 0.000)), rs.coerce3dpoint((16.480, 1.485, 0.000)), rs.coerce3dpoint((16.480, 1.360, 0.000)), rs.coerce3dpoint((16.480, 1.235, 0.000))], [0.0, 0.0, 1.83462061192, 1.83462061192, 3.54996846344, 3.54996846344, 4.05730216900, 4.05730216900, 4.24572852008, 4.24572852008, 4.33994839111, 4.33994839111, 4.53614796698, 4.53614796698, 4.87629608402, 4.87629608402, 5.07613906996, 5.07613906996, 5.21612514152, 5.21612514152, 5.42884594656, 5.42884594656, 5.60549111896, 5.60549111896, 5.77594669633, 5.77594669633, 5.96906737111, 5.96906737111, 6.01162129494, 6.01162129494, 6.17848718583, 6.17848718583, 6.21073697653, 6.21073697653, 7.08585479122, 7.08585479122, 7.55883774197, 7.55883774197, 8.45202959220, 8.45202959220, 8.71657441600, 8.71657441600, 10.1068978418, 10.1068978418, 10.3455072115, 10.3455072115, 11.0236795377, 11.0236795377, 11.9558974288, 11.9558974288, 13.4886258018, 13.4886258018, 14.3267267213, 14.3267267213, 14.7227348458, 14.7227348458, 15.1366805002, 15.1366805002, 15.3583048987, 15.3583048987, 16.7206467033, 16.7206467033, 17.1514185665, 17.1514185665, 18.3055896570, 18.3055896570, 19.2394884155, 19.2394884155, 19.6995829865, 19.6995829865, 19.9292385860, 19.9292385860, 20.2071782920, 20.2071782920, 20.4822555825, 20.4822555825, 20.6521738468, 20.6521738468, 21.0257759384, 21.0257759384, 21.3584395282, 21.3584395282, 21.6051701861, 21.6051701861, 21.9732189262, 21.9732189262, 22.2024473951, 22.2024473951, 22.3755310188, 22.3755310188, 22.7755766344, 22.7755766344, 22.8762970316, 22.8762970316, 23.0850861705, 23.0850861705, 23.3558579548, 23.3558579548, 23.5555172655, 23.5555172655, 23.6719692819, 23.6719692819, 23.8514192744, 23.8514192744, 24.1362506682, 24.1362506682, 24.7942119877, 24.7942119877, 25.6606923572, 25.6606923572, 26.2452761402, 26.2452761402, 26.9155808354, 26.9155808354, 27.4005056125, 27.4005056125, 27.5495021485, 27.5495021485, 27.5917609479, 27.5917609479, 27.7312004871, 27.7312004871, 27.8962090425, 27.8962090425, 27.9085977632, 27.9085977632, 27.9919082633, 27.9919082633, 28.1955745943, 28.1955745943, 28.8787600911, 28.8787600911, 31.5413500916, 31.5413500916, 32.0584101195, 32.0584101195, 32.3082201323, 32.3082201323], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999858889957, 1.0, 0.999550101227, 1.0, 0.992390582193, 1.0, 0.967511950791, 1.0, 0.992464003025, 1.0, 0.997771366175, 1.0, 0.97672944677, 1.0, 0.98615205136, 1.0, 0.992633949636, 1.0, 0.99522898849, 1.0, 0.999848631457, 1.0, 0.998177582118, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.999996620006, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999997580003, 1.0, 0.999994880013, 1.0, 0.994163462437, 1.0, 0.99345490943, 1.0, 0.998638507462, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999982000162, 1.0, 0.986770966315, 1.0, 0.974341458407, 1.0, 0.974828032222, 1.0, 0.992561350042, 1.0, 0.999682530401, 1.0, 0.999974080336, 1.0, 0.999992000032, 1.0, 0.999969580463, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999963020684, 1.0, 0.999988480066, 1.0, 0.991115166261, 1.0, 0.982223243552, 1.0, 0.993880461842, 1.0, 0.998780563966, 1.0, 0.999408494991, 1.0, 0.99991550357, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.999834393714, 1.0, 0.999887506328, 1.0, 0.997771366175, 1.0, 0.995189976054, 1.0, 1.0, 1.0, 0.999067315153, 1.0, 0.99992062315, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.382, 1.162, 0.000), (9.384, 0.044, 0.000), (9.385, -1.074, 0.000), (9.386, -1.384, 0.000), (9.389, -1.694, 0.000), (9.389, -1.803, 0.000), (9.393, -1.912, 0.000), (9.396, -1.972, 0.000), (9.401, -2.032, 0.000), (9.406, -2.095, 0.000), (9.416, -2.157, 0.000), (9.429, -2.235, 0.000), (9.458, -2.308, 0.000), (9.466, -2.330, 0.000), (9.477, -2.352, 0.000), (9.531, -2.463, 0.000), (9.629, -2.540, 0.000), (9.690, -2.588, 0.000), (9.761, -2.621, 0.000), (9.800, -2.640, 0.000), (9.841, -2.655, 0.000), (9.921, -2.683, 0.000), (10.005, -2.691, 0.000), (10.101, -2.701, 0.000), (10.194, -2.679, 0.000), (10.289, -2.657, 0.000), (10.370, -2.604, 0.000), (10.442, -2.558, 0.000), (10.501, -2.497, 0.000), (10.507, -2.492, 0.000), (10.512, -2.486, 0.000), (10.587, -2.408, 0.000), (10.649, -2.320, 0.000), (10.716, -2.226, 0.000), (10.775, -2.127, 0.000), (10.783, -2.114, 0.000), (10.790, -2.102, 0.000), (11.015, -1.719, 0.000), (11.236, -1.333, 0.000), (11.260, -1.293, 0.000), (11.283, -1.252, 0.000), (11.505, -0.867, 0.000), (11.729, -0.483, 0.000), (11.738, -0.467, 0.000), (11.748, -0.450, 0.000), (12.028, 0.025, 0.000), (12.310, 0.498, 0.000), (12.590, 0.966, 0.000), (12.867, 1.436, 0.000), (12.906, 1.502, 0.000), (12.944, 1.569, 0.000), (13.221, 2.042, 0.000), (13.492, 2.518, 0.000), (13.569, 2.653, 0.000), (13.647, 2.788, 0.000), (13.810, 3.074, 0.000), (13.974, 3.361, 0.000), (14.529, 4.326, 0.000), (15.083, 5.291, 0.000), (15.420, 5.878, 0.000), (15.757, 6.464, 0.000), (15.834, 6.598, 0.000), (15.911, 6.732, 0.000), (16.102, 7.062, 0.000), (16.290, 7.394, 0.000), (16.494, 7.781, 0.000), (16.694, 8.169, 0.000), (16.803, 8.382, 0.000), (16.908, 8.597, 0.000), (16.969, 8.722, 0.000), (17.024, 8.850, 0.000), (17.059, 8.928, 0.000), (17.088, 9.009, 0.000), (17.109, 9.069, 0.000), (17.122, 9.131, 0.000), (17.129, 9.166, 0.000), (17.133, 9.202, 0.000), (17.138, 9.240, 0.000), (17.136, 9.279, 0.000), (17.132, 9.349, 0.000), (17.093, 9.408, 0.000), (17.067, 9.447, 0.000), (17.032, 9.479, 0.000), (17.018, 9.492, 0.000), (17.002, 9.505, 0.000), (16.966, 9.534, 0.000), (16.923, 9.553, 0.000), (16.873, 9.574, 0.000), (16.821, 9.587, 0.000), (16.749, 9.605, 0.000), (16.675, 9.615, 0.000), (16.565, 9.631, 0.000), (16.453, 9.640, 0.000), (16.283, 9.653, 0.000), (16.112, 9.659, 0.000), (15.845, 9.669, 0.000), (15.577, 9.672, 0.000), (15.490, 9.673, 0.000), (15.402, 9.674, 0.000), (14.699, 9.679, 0.000), (13.996, 9.684, 0.000), (13.659, 9.686, 0.000), (13.322, 9.684, 0.000), (13.137, 9.683, 0.000), (12.952, 9.677, 0.000), (12.842, 9.674, 0.000), (12.733, 9.664, 0.000), (12.655, 9.658, 0.000), (12.577, 9.644, 0.000), (12.537, 9.636, 0.000), (12.497, 9.625, 0.000), (12.456, 9.615, 0.000), (12.418, 9.599, 0.000), (12.366, 9.576, 0.000), (12.323, 9.539, 0.000), (12.279, 9.503, 0.000), (12.242, 9.460, 0.000), (12.192, 9.401, 0.000), (12.149, 9.337, 0.000), (12.085, 9.245, 0.000), (12.029, 9.148, 0.000), (12.026, 9.143, 0.000), (12.023, 9.138, 0.000), (11.613, 8.438, 0.000), (11.207, 7.735, 0.000), (11.164, 7.661, 0.000), (11.121, 7.587, 0.000), (10.993, 7.365, 0.000), (10.864, 7.144, 0.000), (10.679, 6.823, 0.000), (10.494, 6.502, 0.000), (10.231, 6.044, 0.000), (9.966, 5.588, 0.000), (9.807, 5.317, 0.000), (9.646, 5.047, 0.000), (9.565, 4.913, 0.000), (9.505, 4.767, 0.000), (9.426, 4.575, 0.000), (9.396, 4.369, 0.000), (9.377, 4.239, 0.000), (9.379, 4.108, 0.000), (9.385, 3.408, 0.000), (9.384, 2.708, 0.000), (9.383, 2.351, 0.000), (9.383, 1.994, 0.000), (9.382, 1.578, 0.000), (9.382, 1.162, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.382, 1.162, 0.000)), rs.coerce3dpoint((9.384, 0.044, 0.000)), rs.coerce3dpoint((9.385, -1.074, 0.000)), rs.coerce3dpoint((9.386, -1.384, 0.000)), rs.coerce3dpoint((9.389, -1.694, 0.000)), rs.coerce3dpoint((9.389, -1.803, 0.000)), rs.coerce3dpoint((9.393, -1.912, 0.000)), rs.coerce3dpoint((9.396, -1.972, 0.000)), rs.coerce3dpoint((9.401, -2.032, 0.000)), rs.coerce3dpoint((9.406, -2.095, 0.000)), rs.coerce3dpoint((9.416, -2.157, 0.000)), rs.coerce3dpoint((9.429, -2.235, 0.000)), rs.coerce3dpoint((9.458, -2.308, 0.000)), rs.coerce3dpoint((9.466, -2.330, 0.000)), rs.coerce3dpoint((9.477, -2.352, 0.000)), rs.coerce3dpoint((9.531, -2.463, 0.000)), rs.coerce3dpoint((9.629, -2.540, 0.000)), rs.coerce3dpoint((9.690, -2.588, 0.000)), rs.coerce3dpoint((9.761, -2.621, 0.000)), rs.coerce3dpoint((9.800, -2.640, 0.000)), rs.coerce3dpoint((9.841, -2.655, 0.000)), rs.coerce3dpoint((9.921, -2.683, 0.000)), rs.coerce3dpoint((10.005, -2.691, 0.000)), rs.coerce3dpoint((10.101, -2.701, 0.000)), rs.coerce3dpoint((10.194, -2.679, 0.000)), rs.coerce3dpoint((10.289, -2.657, 0.000)), rs.coerce3dpoint((10.370, -2.604, 0.000)), rs.coerce3dpoint((10.442, -2.558, 0.000)), rs.coerce3dpoint((10.501, -2.497, 0.000)), rs.coerce3dpoint((10.507, -2.492, 0.000)), rs.coerce3dpoint((10.512, -2.486, 0.000)), rs.coerce3dpoint((10.587, -2.408, 0.000)), rs.coerce3dpoint((10.649, -2.320, 0.000)), rs.coerce3dpoint((10.716, -2.226, 0.000)), rs.coerce3dpoint((10.775, -2.127, 0.000)), rs.coerce3dpoint((10.783, -2.114, 0.000)), rs.coerce3dpoint((10.790, -2.102, 0.000)), rs.coerce3dpoint((11.015, -1.719, 0.000)), rs.coerce3dpoint((11.236, -1.333, 0.000)), rs.coerce3dpoint((11.260, -1.293, 0.000)), rs.coerce3dpoint((11.283, -1.252, 0.000)), rs.coerce3dpoint((11.505, -0.867, 0.000)), rs.coerce3dpoint((11.729, -0.483, 0.000)), rs.coerce3dpoint((11.738, -0.467, 0.000)), rs.coerce3dpoint((11.748, -0.450, 0.000)), rs.coerce3dpoint((12.028, 0.025, 0.000)), rs.coerce3dpoint((12.310, 0.498, 0.000)), rs.coerce3dpoint((12.590, 0.966, 0.000)), rs.coerce3dpoint((12.867, 1.436, 0.000)), rs.coerce3dpoint((12.906, 1.502, 0.000)), rs.coerce3dpoint((12.944, 1.569, 0.000)), rs.coerce3dpoint((13.221, 2.042, 0.000)), rs.coerce3dpoint((13.492, 2.518, 0.000)), rs.coerce3dpoint((13.569, 2.653, 0.000)), rs.coerce3dpoint((13.647, 2.788, 0.000)), rs.coerce3dpoint((13.810, 3.074, 0.000)), rs.coerce3dpoint((13.974, 3.361, 0.000)), rs.coerce3dpoint((14.529, 4.326, 0.000)), rs.coerce3dpoint((15.083, 5.291, 0.000)), rs.coerce3dpoint((15.420, 5.878, 0.000)), rs.coerce3dpoint((15.757, 6.464, 0.000)), rs.coerce3dpoint((15.834, 6.598, 0.000)), rs.coerce3dpoint((15.911, 6.732, 0.000)), rs.coerce3dpoint((16.102, 7.062, 0.000)), rs.coerce3dpoint((16.290, 7.394, 0.000)), rs.coerce3dpoint((16.494, 7.781, 0.000)), rs.coerce3dpoint((16.694, 8.169, 0.000)), rs.coerce3dpoint((16.803, 8.382, 0.000)), rs.coerce3dpoint((16.908, 8.597, 0.000)), rs.coerce3dpoint((16.969, 8.722, 0.000)), rs.coerce3dpoint((17.024, 8.850, 0.000)), rs.coerce3dpoint((17.059, 8.928, 0.000)), rs.coerce3dpoint((17.088, 9.009, 0.000)), rs.coerce3dpoint((17.109, 9.069, 0.000)), rs.coerce3dpoint((17.122, 9.131, 0.000)), rs.coerce3dpoint((17.129, 9.166, 0.000)), rs.coerce3dpoint((17.133, 9.202, 0.000)), rs.coerce3dpoint((17.138, 9.240, 0.000)), rs.coerce3dpoint((17.136, 9.279, 0.000)), rs.coerce3dpoint((17.132, 9.349, 0.000)), rs.coerce3dpoint((17.093, 9.408, 0.000)), rs.coerce3dpoint((17.067, 9.447, 0.000)), rs.coerce3dpoint((17.032, 9.479, 0.000)), rs.coerce3dpoint((17.018, 9.492, 0.000)), rs.coerce3dpoint((17.002, 9.505, 0.000)), rs.coerce3dpoint((16.966, 9.534, 0.000)), rs.coerce3dpoint((16.923, 9.553, 0.000)), rs.coerce3dpoint((16.873, 9.574, 0.000)), rs.coerce3dpoint((16.821, 9.587, 0.000)), rs.coerce3dpoint((16.749, 9.605, 0.000)), rs.coerce3dpoint((16.675, 9.615, 0.000)), rs.coerce3dpoint((16.565, 9.631, 0.000)), rs.coerce3dpoint((16.453, 9.640, 0.000)), rs.coerce3dpoint((16.283, 9.653, 0.000)), rs.coerce3dpoint((16.112, 9.659, 0.000)), rs.coerce3dpoint((15.845, 9.669, 0.000)), rs.coerce3dpoint((15.577, 9.672, 0.000)), rs.coerce3dpoint((15.490, 9.673, 0.000)), rs.coerce3dpoint((15.402, 9.674, 0.000)), rs.coerce3dpoint((14.699, 9.679, 0.000)), rs.coerce3dpoint((13.996, 9.684, 0.000)), rs.coerce3dpoint((13.659, 9.686, 0.000)), rs.coerce3dpoint((13.322, 9.684, 0.000)), rs.coerce3dpoint((13.137, 9.683, 0.000)), rs.coerce3dpoint((12.952, 9.677, 0.000)), rs.coerce3dpoint((12.842, 9.674, 0.000)), rs.coerce3dpoint((12.733, 9.664, 0.000)), rs.coerce3dpoint((12.655, 9.658, 0.000)), rs.coerce3dpoint((12.577, 9.644, 0.000)), rs.coerce3dpoint((12.537, 9.636, 0.000)), rs.coerce3dpoint((12.497, 9.625, 0.000)), rs.coerce3dpoint((12.456, 9.615, 0.000)), rs.coerce3dpoint((12.418, 9.599, 0.000)), rs.coerce3dpoint((12.366, 9.576, 0.000)), rs.coerce3dpoint((12.323, 9.539, 0.000)), rs.coerce3dpoint((12.279, 9.503, 0.000)), rs.coerce3dpoint((12.242, 9.460, 0.000)), rs.coerce3dpoint((12.192, 9.401, 0.000)), rs.coerce3dpoint((12.149, 9.337, 0.000)), rs.coerce3dpoint((12.085, 9.245, 0.000)), rs.coerce3dpoint((12.029, 9.148, 0.000)), rs.coerce3dpoint((12.026, 9.143, 0.000)), rs.coerce3dpoint((12.023, 9.138, 0.000)), rs.coerce3dpoint((11.613, 8.438, 0.000)), rs.coerce3dpoint((11.207, 7.735, 0.000)), rs.coerce3dpoint((11.164, 7.661, 0.000)), rs.coerce3dpoint((11.121, 7.587, 0.000)), rs.coerce3dpoint((10.993, 7.365, 0.000)), rs.coerce3dpoint((10.864, 7.144, 0.000)), rs.coerce3dpoint((10.679, 6.823, 0.000)), rs.coerce3dpoint((10.494, 6.502, 0.000)), rs.coerce3dpoint((10.231, 6.044, 0.000)), rs.coerce3dpoint((9.966, 5.588, 0.000)), rs.coerce3dpoint((9.807, 5.317, 0.000)), rs.coerce3dpoint((9.646, 5.047, 0.000)), rs.coerce3dpoint((9.565, 4.913, 0.000)), rs.coerce3dpoint((9.505, 4.767, 0.000)), rs.coerce3dpoint((9.426, 4.575, 0.000)), rs.coerce3dpoint((9.396, 4.369, 0.000)), rs.coerce3dpoint((9.377, 4.239, 0.000)), rs.coerce3dpoint((9.379, 4.108, 0.000)), rs.coerce3dpoint((9.385, 3.408, 0.000)), rs.coerce3dpoint((9.384, 2.708, 0.000)), rs.coerce3dpoint((9.383, 2.351, 0.000)), rs.coerce3dpoint((9.383, 1.994, 0.000)), rs.coerce3dpoint((9.382, 1.578, 0.000)), rs.coerce3dpoint((9.382, 1.162, 0.000))], [0.0, 0.0, 2.23634224673, 2.23634224673, 2.85673343841, 2.85673343841, 3.07478060605, 3.07478060605, 3.19498775245, 3.19498775245, 3.32082136435, 3.32082136435, 3.47721066090, 3.47721066090, 3.52601611568, 3.52601611568, 3.76892269548, 3.76892269548, 3.92501716537, 3.92501716537, 4.01196246409, 4.01196246409, 4.18002429647, 4.18002429647, 4.37081257810, 4.37081257810, 4.56290022764, 4.56290022764, 4.73275123891, 4.73275123891, 4.74786298600, 4.74786298600, 4.96365727919, 4.96365727919, 5.19377851547, 5.19377851547, 5.22355958496, 5.22355958496, 6.11199778439, 6.11199778439, 6.20602291136, 6.20602291136, 7.09456283974, 7.09456283974, 7.13256706713, 7.13256706713, 8.23486500521, 8.23486500521, 9.32612666923, 9.32612666923, 9.47924336231, 9.47924336231, 10.5757329184, 10.5757329184, 10.8862824044, 10.8862824044, 11.5464115126, 11.5464115126, 13.7725291779, 13.7725291779, 15.1249750945, 15.1249750945, 15.4339606738, 15.4339606738, 16.1974957109, 16.1974957109, 17.0710948449, 17.0710948449, 17.5498779710, 17.5498779710, 17.8276449235, 17.8276449235, 17.9991692503, 17.9991692503, 18.1263486100, 18.1263486100, 18.1978820884, 18.1978820884, 18.2752016935, 18.2752016935, 18.4125797821, 18.4125797821, 18.5063370028, 18.5063370028, 18.5457746874, 18.5457746874, 18.6391131653, 18.6391131653, 18.7463989655, 18.7463989655, 18.8955007213, 18.8955007213, 19.1181867895, 19.1181867895, 19.4598454149, 19.4598454149, 19.9950126746, 19.9950126746, 20.1700932026, 20.1700932026, 21.5762836087, 21.5762836087, 22.2500379252, 22.2500379252, 22.6209670842, 22.6209670842, 22.8398933630, 22.8398933630, 22.9970746821, 22.9970746821, 23.0794003364, 23.0794003364, 23.1630333699, 23.1630333699, 23.2756299882, 23.2756299882, 23.3889453819, 23.3889453819, 23.5432083229, 23.5432083229, 23.7672359345, 23.7672359345, 23.7784420935, 23.7784420935, 25.4016937223, 25.4016937223, 25.5734872193, 25.5734872193, 26.0847501207, 26.0847501207, 26.8259854381, 26.8259854381, 27.8816115526, 27.8816115526, 28.5096785186, 28.5096785186, 28.8240093127, 28.8240093127, 29.2372525696, 29.2372525696, 29.4999792955, 29.4999792955, 30.8996045654, 30.8996045654, 31.6138951708, 31.6138951708, 32.4450957252, 32.4450957252], 2, [1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999907524276, 1.0, 0.999619192521, 1.0, 0.99915164001, 1.0, 0.99464788102, 1.0, 0.999208293524, 1.0, 0.974341458407, 1.0, 0.99383633411, 1.0, 0.998951729723, 1.0, 0.993792049324, 1.0, 0.986086096495, 1.0, 0.985953726623, 1.0, 0.993858417609, 1.0, 1.0, 1.0, 0.997552997578, 1.0, 0.999058663266, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999993520021, 1.0, 0.999985420106, 1.0, 0.99993950183, 1.0, 0.999783703395, 1.0, 0.99931573419, 1.0, 0.997811178095, 1.0, 0.998867761345, 1.0, 0.996427811681, 1.0, 0.963574823059, 1.0, 0.992873404989, 1.0, 0.999449031825, 1.0, 0.99095556669, 1.0, 0.996594428849, 1.0, 0.998638507462, 1.0, 0.9994556482, 1.0, 0.999787842508, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999980780185, 1.0, 0.999904784533, 1.0, 0.999646282569, 1.0, 0.998770676083, 1.0, 0.999352209884, 1.0, 0.996931435279, 1.0, 0.989996664865, 1.0, 0.99661087284, 1.0, 0.998510530087, 1.0, 0.999337739367, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999987500078, 1.0, 0.997131300628, 1.0, 0.992488398437, 1.0, 0.997055222251, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(18.738, -13.538, 0.000), (18.482, -13.532, 0.000), (18.226, -13.525, 0.000), (17.856, -13.515, 0.000), (17.487, -13.508, 0.000), (17.157, -13.502, 0.000), (16.827, -13.504, 0.000), (16.760, -13.505, 0.000), (16.693, -13.506, 0.000), (16.580, -13.507, 0.000), (16.468, -13.525, 0.000), (16.357, -13.542, 0.000), (16.253, -13.582, 0.000), (16.100, -13.641, 0.000), (15.977, -13.747, 0.000), (15.900, -13.814, 0.000), (15.836, -13.893, 0.000), (15.722, -14.031, 0.000), (15.634, -14.186, 0.000), (15.348, -14.692, 0.000), (15.066, -15.199, 0.000), (14.894, -15.507, 0.000), (14.721, -15.814, 0.000), (14.553, -16.112, 0.000), (14.386, -16.409, 0.000), (14.231, -16.683, 0.000), (14.076, -16.957, 0.000), (14.043, -17.016, 0.000), (14.009, -17.075, 0.000), (13.905, -17.259, 0.000), (13.803, -17.445, 0.000), (13.757, -17.530, 0.000), (13.712, -17.616, 0.000), (13.661, -17.713, 0.000), (13.635, -17.820, 0.000), (13.591, -18.003, 0.000), (13.638, -18.185, 0.000), (13.665, -18.287, 0.000), (13.714, -18.380, 0.000), (13.829, -18.602, 0.000), (13.948, -18.821, 0.000), (14.009, -18.933, 0.000), (14.073, -19.044, 0.000), (14.343, -19.515, 0.000), (14.616, -19.984, 0.000), (14.624, -19.998, 0.000), (14.632, -20.012, 0.000), (14.791, -20.285, 0.000), (14.949, -20.558, 0.000), (15.092, -20.807, 0.000), (15.235, -21.056, 0.000), (15.456, -21.441, 0.000), (15.679, -21.824, 0.000), (15.791, -22.016, 0.000), (15.905, -22.206, 0.000), (16.038, -22.429, 0.000), (16.231, -22.602, 0.000), (16.284, -22.650, 0.000), (16.345, -22.687, 0.000), (16.401, -22.722, 0.000), (16.464, -22.741, 0.000), (16.552, -22.767, 0.000), (16.642, -22.754, 0.000), (16.707, -22.744, 0.000), (16.769, -22.721, 0.000), (16.831, -22.697, 0.000), (16.890, -22.665, 0.000), (16.944, -22.636, 0.000), (16.990, -22.596, 0.000), (17.033, -22.558, 0.000), (17.071, -22.515, 0.000), (17.122, -22.455, 0.000), (17.168, -22.391, 0.000), (17.240, -22.290, 0.000), (17.307, -22.186, 0.000), (17.417, -22.016, 0.000), (17.522, -21.841, 0.000), (17.699, -21.550, 0.000), (17.870, -21.256, 0.000), (18.081, -20.895, 0.000), (18.289, -20.532, 0.000), (19.226, -18.903, 0.000), (20.162, -17.275, 0.000), (20.702, -16.334, 0.000), (21.243, -15.393, 0.000), (21.389, -15.138, 0.000), (21.533, -14.881, 0.000), (21.577, -14.805, 0.000), (21.618, -14.728, 0.000), (21.632, -14.700, 0.000), (21.645, -14.671, 0.000), (21.669, -14.622, 0.000), (21.685, -14.571, 0.000), (21.710, -14.495, 0.000), (21.731, -14.419, 0.000), (21.735, -14.404, 0.000), (21.739, -14.389, 0.000), (21.770, -14.278, 0.000), (21.764, -14.163, 0.000), (21.754, -13.992, 0.000), (21.658, -13.851, 0.000), (21.582, -13.739, 0.000), (21.466, -13.668, 0.000), (21.378, -13.613, 0.000), (21.279, -13.585, 0.000), (21.193, -13.561, 0.000), (21.104, -13.552, 0.000), (21.007, -13.541, 0.000), (20.910, -13.540, 0.000), (20.898, -13.540, 0.000), (20.886, -13.540, 0.000), (20.196, -13.536, 0.000), (19.505, -13.537, 0.000), (19.397, -13.537, 0.000), (19.290, -13.538, 0.000), (19.014, -13.538, 0.000), (18.738, -13.538, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((18.738, -13.538, 0.000)), rs.coerce3dpoint((18.482, -13.532, 0.000)), rs.coerce3dpoint((18.226, -13.525, 0.000)), rs.coerce3dpoint((17.856, -13.515, 0.000)), rs.coerce3dpoint((17.487, -13.508, 0.000)), rs.coerce3dpoint((17.157, -13.502, 0.000)), rs.coerce3dpoint((16.827, -13.504, 0.000)), rs.coerce3dpoint((16.760, -13.505, 0.000)), rs.coerce3dpoint((16.693, -13.506, 0.000)), rs.coerce3dpoint((16.580, -13.507, 0.000)), rs.coerce3dpoint((16.468, -13.525, 0.000)), rs.coerce3dpoint((16.357, -13.542, 0.000)), rs.coerce3dpoint((16.253, -13.582, 0.000)), rs.coerce3dpoint((16.100, -13.641, 0.000)), rs.coerce3dpoint((15.977, -13.747, 0.000)), rs.coerce3dpoint((15.900, -13.814, 0.000)), rs.coerce3dpoint((15.836, -13.893, 0.000)), rs.coerce3dpoint((15.722, -14.031, 0.000)), rs.coerce3dpoint((15.634, -14.186, 0.000)), rs.coerce3dpoint((15.348, -14.692, 0.000)), rs.coerce3dpoint((15.066, -15.199, 0.000)), rs.coerce3dpoint((14.894, -15.507, 0.000)), rs.coerce3dpoint((14.721, -15.814, 0.000)), rs.coerce3dpoint((14.553, -16.112, 0.000)), rs.coerce3dpoint((14.386, -16.409, 0.000)), rs.coerce3dpoint((14.231, -16.683, 0.000)), rs.coerce3dpoint((14.076, -16.957, 0.000)), rs.coerce3dpoint((14.043, -17.016, 0.000)), rs.coerce3dpoint((14.009, -17.075, 0.000)), rs.coerce3dpoint((13.905, -17.259, 0.000)), rs.coerce3dpoint((13.803, -17.445, 0.000)), rs.coerce3dpoint((13.757, -17.530, 0.000)), rs.coerce3dpoint((13.712, -17.616, 0.000)), rs.coerce3dpoint((13.661, -17.713, 0.000)), rs.coerce3dpoint((13.635, -17.820, 0.000)), rs.coerce3dpoint((13.591, -18.003, 0.000)), rs.coerce3dpoint((13.638, -18.185, 0.000)), rs.coerce3dpoint((13.665, -18.287, 0.000)), rs.coerce3dpoint((13.714, -18.380, 0.000)), rs.coerce3dpoint((13.829, -18.602, 0.000)), rs.coerce3dpoint((13.948, -18.821, 0.000)), rs.coerce3dpoint((14.009, -18.933, 0.000)), rs.coerce3dpoint((14.073, -19.044, 0.000)), rs.coerce3dpoint((14.343, -19.515, 0.000)), rs.coerce3dpoint((14.616, -19.984, 0.000)), rs.coerce3dpoint((14.624, -19.998, 0.000)), rs.coerce3dpoint((14.632, -20.012, 0.000)), rs.coerce3dpoint((14.791, -20.285, 0.000)), rs.coerce3dpoint((14.949, -20.558, 0.000)), rs.coerce3dpoint((15.092, -20.807, 0.000)), rs.coerce3dpoint((15.235, -21.056, 0.000)), rs.coerce3dpoint((15.456, -21.441, 0.000)), rs.coerce3dpoint((15.679, -21.824, 0.000)), rs.coerce3dpoint((15.791, -22.016, 0.000)), rs.coerce3dpoint((15.905, -22.206, 0.000)), rs.coerce3dpoint((16.038, -22.429, 0.000)), rs.coerce3dpoint((16.231, -22.602, 0.000)), rs.coerce3dpoint((16.284, -22.650, 0.000)), rs.coerce3dpoint((16.345, -22.687, 0.000)), rs.coerce3dpoint((16.401, -22.722, 0.000)), rs.coerce3dpoint((16.464, -22.741, 0.000)), rs.coerce3dpoint((16.552, -22.767, 0.000)), rs.coerce3dpoint((16.642, -22.754, 0.000)), rs.coerce3dpoint((16.707, -22.744, 0.000)), rs.coerce3dpoint((16.769, -22.721, 0.000)), rs.coerce3dpoint((16.831, -22.697, 0.000)), rs.coerce3dpoint((16.890, -22.665, 0.000)), rs.coerce3dpoint((16.944, -22.636, 0.000)), rs.coerce3dpoint((16.990, -22.596, 0.000)), rs.coerce3dpoint((17.033, -22.558, 0.000)), rs.coerce3dpoint((17.071, -22.515, 0.000)), rs.coerce3dpoint((17.122, -22.455, 0.000)), rs.coerce3dpoint((17.168, -22.391, 0.000)), rs.coerce3dpoint((17.240, -22.290, 0.000)), rs.coerce3dpoint((17.307, -22.186, 0.000)), rs.coerce3dpoint((17.417, -22.016, 0.000)), rs.coerce3dpoint((17.522, -21.841, 0.000)), rs.coerce3dpoint((17.699, -21.550, 0.000)), rs.coerce3dpoint((17.870, -21.256, 0.000)), rs.coerce3dpoint((18.081, -20.895, 0.000)), rs.coerce3dpoint((18.289, -20.532, 0.000)), rs.coerce3dpoint((19.226, -18.903, 0.000)), rs.coerce3dpoint((20.162, -17.275, 0.000)), rs.coerce3dpoint((20.702, -16.334, 0.000)), rs.coerce3dpoint((21.243, -15.393, 0.000)), rs.coerce3dpoint((21.389, -15.138, 0.000)), rs.coerce3dpoint((21.533, -14.881, 0.000)), rs.coerce3dpoint((21.577, -14.805, 0.000)), rs.coerce3dpoint((21.618, -14.728, 0.000)), rs.coerce3dpoint((21.632, -14.700, 0.000)), rs.coerce3dpoint((21.645, -14.671, 0.000)), rs.coerce3dpoint((21.669, -14.622, 0.000)), rs.coerce3dpoint((21.685, -14.571, 0.000)), rs.coerce3dpoint((21.710, -14.495, 0.000)), rs.coerce3dpoint((21.731, -14.419, 0.000)), rs.coerce3dpoint((21.735, -14.404, 0.000)), rs.coerce3dpoint((21.739, -14.389, 0.000)), rs.coerce3dpoint((21.770, -14.278, 0.000)), rs.coerce3dpoint((21.764, -14.163, 0.000)), rs.coerce3dpoint((21.754, -13.992, 0.000)), rs.coerce3dpoint((21.658, -13.851, 0.000)), rs.coerce3dpoint((21.582, -13.739, 0.000)), rs.coerce3dpoint((21.466, -13.668, 0.000)), rs.coerce3dpoint((21.378, -13.613, 0.000)), rs.coerce3dpoint((21.279, -13.585, 0.000)), rs.coerce3dpoint((21.193, -13.561, 0.000)), rs.coerce3dpoint((21.104, -13.552, 0.000)), rs.coerce3dpoint((21.007, -13.541, 0.000)), rs.coerce3dpoint((20.910, -13.540, 0.000)), rs.coerce3dpoint((20.898, -13.540, 0.000)), rs.coerce3dpoint((20.886, -13.540, 0.000)), rs.coerce3dpoint((20.196, -13.536, 0.000)), rs.coerce3dpoint((19.505, -13.537, 0.000)), rs.coerce3dpoint((19.397, -13.537, 0.000)), rs.coerce3dpoint((19.290, -13.538, 0.000)), rs.coerce3dpoint((19.014, -13.538, 0.000)), rs.coerce3dpoint((18.738, -13.538, 0.000))], [0.0, 0.0, 0.512407750314, 0.512407750314, 1.25169885317, 1.25169885317, 1.91095832453, 1.91095832453, 2.04479051919, 2.04479051919, 2.27093528984, 2.27093528984, 2.49461143982, 2.49461143982, 2.81718049085, 2.81718049085, 3.02049952584, 3.02049952584, 3.37722904707, 3.37722904707, 4.53812721524, 4.53812721524, 5.24342514725, 5.24342514725, 5.92627122141, 5.92627122141, 6.55532593930, 6.55532593930, 6.69145519295, 6.69145519295, 7.11470277304, 7.11470277304, 7.30876969717, 7.30876969717, 7.52712043314, 7.52712043314, 7.89560194419, 7.89560194419, 8.10542336003, 8.10542336003, 8.60519065626, 8.60519065626, 8.86016762001, 8.86016762001, 9.94599300834, 9.94599300834, 9.97876627793, 9.97876627793, 10.6089357943, 10.6089357943, 11.1841443989, 11.1841443989, 12.0705632542, 12.0705632542, 12.5150335746, 12.5150335746, 13.0295860345, 13.0295860345, 13.1717395854, 13.1717395854, 13.3037021210, 13.3037021210, 13.4829590155, 13.4829590155, 13.6143486087, 13.6143486087, 13.7475395434, 13.7475395434, 13.8696621733, 13.8696621733, 13.9841884955, 13.9841884955, 14.1417731273, 14.1417731273, 14.3889570781, 14.3889570781, 14.7956998957, 14.7956998957, 15.4761371818, 15.4761371818, 16.3130447326, 16.3130447326, 20.0705621171, 20.0705621171, 22.2402302198, 22.2402302198, 22.8287621909, 22.8287621909, 23.0041871009, 23.0041871009, 23.0670759798, 23.0670759798, 23.1753793131, 23.1753793131, 23.3341663690, 23.3341663690, 23.3643346852, 23.3643346852, 23.5934851815, 23.5934851815, 23.9265986213, 23.9265986213, 24.1941281858, 24.1941281858, 24.3988191401, 24.3988191401, 24.5771153586, 24.5771153586, 24.7724213530, 24.7724213530, 24.7957123921, 24.7957123921, 26.1771669046, 26.1771669046, 26.3923369641, 26.3923369641, 26.9441370403, 26.9441370403], 2, [1.0, 0.999998000002, 1.0, 0.999990320047, 1.0, 0.999912883795, 1.0, 0.999992000032, 1.0, 0.997221285997, 1.0, 0.99464788102, 1.0, 0.985078384145, 1.0, 0.996360056672, 1.0, 0.99617046673, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999968000512, 1.0, 0.999957680895, 1.0, 0.992390582193, 1.0, 0.970288366677, 1.0, 0.99329455711, 1.0, 0.999955820976, 1.0, 0.99995000125, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.999988480066, 1.0, 0.988812927284, 1.0, 0.995922251004, 1.0, 0.991325784881, 1.0, 0.977319336509, 1.0, 0.993725327711, 1.0, 0.997594716178, 1.0, 0.993769848041, 1.0, 0.997382550011, 1.0, 0.999075927153, 1.0, 0.999667235375, 1.0, 0.999887506328, 1.0, 0.999966380565, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999896325374, 1.0, 0.999735534975, 1.0, 0.997889728974, 1.0, 0.999682530401, 1.0, 1.0, 1.0, 0.986609437879, 1.0, 0.963784591526, 1.0, 0.97831354883, 1.0, 0.990275494033, 1.0, 0.996708705239, 1.0, 0.998700345101, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.394, -49.430, 0.000), (9.398, -49.673, 0.000), (9.406, -49.917, 0.000), (9.411, -50.057, 0.000), (9.421, -50.198, 0.000), (9.428, -50.294, 0.000), (9.441, -50.389, 0.000), (9.455, -50.481, 0.000), (9.482, -50.570, 0.000), (9.493, -50.606, 0.000), (9.505, -50.641, 0.000), (9.518, -50.676, 0.000), (9.535, -50.709, 0.000), (9.559, -50.752, 0.000), (9.594, -50.788, 0.000), (9.633, -50.829, 0.000), (9.677, -50.863, 0.000), (9.710, -50.888, 0.000), (9.743, -50.911, 0.000), (9.897, -50.973, 0.000), (10.061, -50.946, 0.000), (10.172, -50.927, 0.000), (10.271, -50.874, 0.000), (10.372, -50.820, 0.000), (10.455, -50.740, 0.000), (10.507, -50.690, 0.000), (10.550, -50.634, 0.000), (10.589, -50.584, 0.000), (10.623, -50.532, 0.000), (10.700, -50.416, 0.000), (10.773, -50.297, 0.000), (10.918, -50.061, 0.000), (11.058, -49.822, 0.000), (11.310, -49.393, 0.000), (11.557, -48.961, 0.000), (11.918, -48.330, 0.000), (12.276, -47.698, 0.000), (12.281, -47.690, 0.000), (12.285, -47.681, 0.000), (12.854, -46.679, 0.000), (13.422, -45.677, 0.000), (13.771, -45.058, 0.000), (14.121, -44.440, 0.000), (14.200, -44.300, 0.000), (14.278, -44.158, 0.000), (14.300, -44.118, 0.000), (14.321, -44.076, 0.000), (14.323, -44.071, 0.000), (14.325, -44.067, 0.000), (14.328, -44.059, 0.000), (14.332, -44.052, 0.000), (14.346, -44.022, 0.000), (14.360, -43.992, 0.000), (14.389, -43.932, 0.000), (14.419, -43.871, 0.000), (14.467, -43.776, 0.000), (14.486, -43.671, 0.000), (14.509, -43.534, 0.000), (14.477, -43.399, 0.000), (14.460, -43.325, 0.000), (14.429, -43.256, 0.000), (14.359, -43.096, 0.000), (14.276, -42.943, 0.000), (14.237, -42.869, 0.000), (14.195, -42.795, 0.000), (13.823, -42.138, 0.000), (13.451, -41.480, 0.000), (13.195, -41.030, 0.000), (12.940, -40.580, 0.000), (12.890, -40.494, 0.000), (12.840, -40.408, 0.000), (12.830, -40.391, 0.000), (12.820, -40.375, 0.000), (12.782, -40.314, 0.000), (12.739, -40.256, 0.000), (12.685, -40.184, 0.000), (12.623, -40.119, 0.000), (12.598, -40.092, 0.000), (12.571, -40.066, 0.000), (12.515, -40.009, 0.000), (12.451, -39.963, 0.000), (12.392, -39.921, 0.000), (12.325, -39.894, 0.000), (12.232, -39.857, 0.000), (12.131, -39.862, 0.000), (12.061, -39.867, 0.000), (11.993, -39.889, 0.000), (11.923, -39.913, 0.000), (11.858, -39.949, 0.000), (11.802, -39.979, 0.000), (11.750, -40.014, 0.000), (11.663, -40.090, 0.000), (11.587, -40.176, 0.000), (11.515, -40.259, 0.000), (11.451, -40.350, 0.000), (11.379, -40.453, 0.000), (11.312, -40.561, 0.000), (11.216, -40.717, 0.000), (11.125, -40.876, 0.000), (10.975, -41.135, 0.000), (10.829, -41.397, 0.000), (10.693, -41.640, 0.000), (10.558, -41.884, 0.000), (10.493, -42.000, 0.000), (10.428, -42.117, 0.000), (10.149, -42.616, 0.000), (9.873, -43.117, 0.000), (9.749, -43.341, 0.000), (9.629, -43.567, 0.000), (9.574, -43.671, 0.000), (9.522, -43.777, 0.000), (9.495, -43.831, 0.000), (9.473, -43.887, 0.000), (9.460, -43.920, 0.000), (9.450, -43.953, 0.000), (9.432, -44.014, 0.000), (9.423, -44.077, 0.000), (9.418, -44.109, 0.000), (9.418, -44.140, 0.000), (9.417, -44.168, 0.000), (9.416, -44.195, 0.000), (9.407, -44.477, 0.000), (9.403, -44.759, 0.000), (9.394, -45.315, 0.000), (9.391, -45.872, 0.000), (9.386, -46.853, 0.000), (9.388, -47.834, 0.000), (9.391, -48.632, 0.000), (9.394, -49.430, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.394, -49.430, 0.000)), rs.coerce3dpoint((9.398, -49.673, 0.000)), rs.coerce3dpoint((9.406, -49.917, 0.000)), rs.coerce3dpoint((9.411, -50.057, 0.000)), rs.coerce3dpoint((9.421, -50.198, 0.000)), rs.coerce3dpoint((9.428, -50.294, 0.000)), rs.coerce3dpoint((9.441, -50.389, 0.000)), rs.coerce3dpoint((9.455, -50.481, 0.000)), rs.coerce3dpoint((9.482, -50.570, 0.000)), rs.coerce3dpoint((9.493, -50.606, 0.000)), rs.coerce3dpoint((9.505, -50.641, 0.000)), rs.coerce3dpoint((9.518, -50.676, 0.000)), rs.coerce3dpoint((9.535, -50.709, 0.000)), rs.coerce3dpoint((9.559, -50.752, 0.000)), rs.coerce3dpoint((9.594, -50.788, 0.000)), rs.coerce3dpoint((9.633, -50.829, 0.000)), rs.coerce3dpoint((9.677, -50.863, 0.000)), rs.coerce3dpoint((9.710, -50.888, 0.000)), rs.coerce3dpoint((9.743, -50.911, 0.000)), rs.coerce3dpoint((9.897, -50.973, 0.000)), rs.coerce3dpoint((10.061, -50.946, 0.000)), rs.coerce3dpoint((10.172, -50.927, 0.000)), rs.coerce3dpoint((10.271, -50.874, 0.000)), rs.coerce3dpoint((10.372, -50.820, 0.000)), rs.coerce3dpoint((10.455, -50.740, 0.000)), rs.coerce3dpoint((10.507, -50.690, 0.000)), rs.coerce3dpoint((10.550, -50.634, 0.000)), rs.coerce3dpoint((10.589, -50.584, 0.000)), rs.coerce3dpoint((10.623, -50.532, 0.000)), rs.coerce3dpoint((10.700, -50.416, 0.000)), rs.coerce3dpoint((10.773, -50.297, 0.000)), rs.coerce3dpoint((10.918, -50.061, 0.000)), rs.coerce3dpoint((11.058, -49.822, 0.000)), rs.coerce3dpoint((11.310, -49.393, 0.000)), rs.coerce3dpoint((11.557, -48.961, 0.000)), rs.coerce3dpoint((11.918, -48.330, 0.000)), rs.coerce3dpoint((12.276, -47.698, 0.000)), rs.coerce3dpoint((12.281, -47.690, 0.000)), rs.coerce3dpoint((12.285, -47.681, 0.000)), rs.coerce3dpoint((12.854, -46.679, 0.000)), rs.coerce3dpoint((13.422, -45.677, 0.000)), rs.coerce3dpoint((13.771, -45.058, 0.000)), rs.coerce3dpoint((14.121, -44.440, 0.000)), rs.coerce3dpoint((14.200, -44.300, 0.000)), rs.coerce3dpoint((14.278, -44.158, 0.000)), rs.coerce3dpoint((14.300, -44.118, 0.000)), rs.coerce3dpoint((14.321, -44.076, 0.000)), rs.coerce3dpoint((14.323, -44.071, 0.000)), rs.coerce3dpoint((14.325, -44.067, 0.000)), rs.coerce3dpoint((14.328, -44.059, 0.000)), rs.coerce3dpoint((14.332, -44.052, 0.000)), rs.coerce3dpoint((14.346, -44.022, 0.000)), rs.coerce3dpoint((14.360, -43.992, 0.000)), rs.coerce3dpoint((14.389, -43.932, 0.000)), rs.coerce3dpoint((14.419, -43.871, 0.000)), rs.coerce3dpoint((14.467, -43.776, 0.000)), rs.coerce3dpoint((14.486, -43.671, 0.000)), rs.coerce3dpoint((14.509, -43.534, 0.000)), rs.coerce3dpoint((14.477, -43.399, 0.000)), rs.coerce3dpoint((14.460, -43.325, 0.000)), rs.coerce3dpoint((14.429, -43.256, 0.000)), rs.coerce3dpoint((14.359, -43.096, 0.000)), rs.coerce3dpoint((14.276, -42.943, 0.000)), rs.coerce3dpoint((14.237, -42.869, 0.000)), rs.coerce3dpoint((14.195, -42.795, 0.000)), rs.coerce3dpoint((13.823, -42.138, 0.000)), rs.coerce3dpoint((13.451, -41.480, 0.000)), rs.coerce3dpoint((13.195, -41.030, 0.000)), rs.coerce3dpoint((12.940, -40.580, 0.000)), rs.coerce3dpoint((12.890, -40.494, 0.000)), rs.coerce3dpoint((12.840, -40.408, 0.000)), rs.coerce3dpoint((12.830, -40.391, 0.000)), rs.coerce3dpoint((12.820, -40.375, 0.000)), rs.coerce3dpoint((12.782, -40.314, 0.000)), rs.coerce3dpoint((12.739, -40.256, 0.000)), rs.coerce3dpoint((12.685, -40.184, 0.000)), rs.coerce3dpoint((12.623, -40.119, 0.000)), rs.coerce3dpoint((12.598, -40.092, 0.000)), rs.coerce3dpoint((12.571, -40.066, 0.000)), rs.coerce3dpoint((12.515, -40.009, 0.000)), rs.coerce3dpoint((12.451, -39.963, 0.000)), rs.coerce3dpoint((12.392, -39.921, 0.000)), rs.coerce3dpoint((12.325, -39.894, 0.000)), rs.coerce3dpoint((12.232, -39.857, 0.000)), rs.coerce3dpoint((12.131, -39.862, 0.000)), rs.coerce3dpoint((12.061, -39.867, 0.000)), rs.coerce3dpoint((11.993, -39.889, 0.000)), rs.coerce3dpoint((11.923, -39.913, 0.000)), rs.coerce3dpoint((11.858, -39.949, 0.000)), rs.coerce3dpoint((11.802, -39.979, 0.000)), rs.coerce3dpoint((11.750, -40.014, 0.000)), rs.coerce3dpoint((11.663, -40.090, 0.000)), rs.coerce3dpoint((11.587, -40.176, 0.000)), rs.coerce3dpoint((11.515, -40.259, 0.000)), rs.coerce3dpoint((11.451, -40.350, 0.000)), rs.coerce3dpoint((11.379, -40.453, 0.000)), rs.coerce3dpoint((11.312, -40.561, 0.000)), rs.coerce3dpoint((11.216, -40.717, 0.000)), rs.coerce3dpoint((11.125, -40.876, 0.000)), rs.coerce3dpoint((10.975, -41.135, 0.000)), rs.coerce3dpoint((10.829, -41.397, 0.000)), rs.coerce3dpoint((10.693, -41.640, 0.000)), rs.coerce3dpoint((10.558, -41.884, 0.000)), rs.coerce3dpoint((10.493, -42.000, 0.000)), rs.coerce3dpoint((10.428, -42.117, 0.000)), rs.coerce3dpoint((10.149, -42.616, 0.000)), rs.coerce3dpoint((9.873, -43.117, 0.000)), rs.coerce3dpoint((9.749, -43.341, 0.000)), rs.coerce3dpoint((9.629, -43.567, 0.000)), rs.coerce3dpoint((9.574, -43.671, 0.000)), rs.coerce3dpoint((9.522, -43.777, 0.000)), rs.coerce3dpoint((9.495, -43.831, 0.000)), rs.coerce3dpoint((9.473, -43.887, 0.000)), rs.coerce3dpoint((9.460, -43.920, 0.000)), rs.coerce3dpoint((9.450, -43.953, 0.000)), rs.coerce3dpoint((9.432, -44.014, 0.000)), rs.coerce3dpoint((9.423, -44.077, 0.000)), rs.coerce3dpoint((9.418, -44.109, 0.000)), rs.coerce3dpoint((9.418, -44.140, 0.000)), rs.coerce3dpoint((9.417, -44.168, 0.000)), rs.coerce3dpoint((9.416, -44.195, 0.000)), rs.coerce3dpoint((9.407, -44.477, 0.000)), rs.coerce3dpoint((9.403, -44.759, 0.000)), rs.coerce3dpoint((9.394, -45.315, 0.000)), rs.coerce3dpoint((9.391, -45.872, 0.000)), rs.coerce3dpoint((9.386, -46.853, 0.000)), rs.coerce3dpoint((9.388, -47.834, 0.000)), rs.coerce3dpoint((9.391, -48.632, 0.000)), rs.coerce3dpoint((9.394, -49.430, 0.000))], [0.0, 0.0, 0.487124841869, 0.487124841869, 0.768824413969, 0.768824413969, 0.960780130812, 0.960780130812, 1.14673032044, 1.14673032044, 1.22123366550, 1.22123366550, 1.29589757042, 1.29589757042, 1.39411758642, 1.39411758642, 1.50682147342, 1.50682147342, 1.58835971999, 1.58835971999, 1.91219262333, 1.91219262333, 2.13425930176, 2.13425930176, 2.36318282229, 2.36318282229, 2.50562905824, 2.50562905824, 2.63099629643, 2.63099629643, 2.90933473411, 2.90933473411, 3.46409774176, 3.46409774176, 4.45927261427, 4.45927261427, 5.91231857647, 5.91231857647, 5.93137786292, 5.93137786292, 8.23540426424, 8.23540426424, 9.65653416067, 9.65653416067, 9.97900164468, 9.97900164468, 10.0716867787, 10.0716867787, 10.0815456072, 10.0815456072, 10.0982326681, 10.0982326681, 10.1642222226, 10.1642222226, 10.2986124337, 10.2986124337, 10.5104532108, 10.5104532108, 10.7847420085, 10.7847420085, 10.9359043939, 10.9359043939, 11.2839408255, 11.2839408255, 11.452444071, 11.452444071, 12.9637379091, 12.9637379091, 13.9987631314, 13.9987631314, 14.1979679480, 14.1979679480, 14.2363950270, 14.2363950270, 14.3802729329, 14.3802729329, 14.5596881527, 14.5596881527, 14.6340632055, 14.6340632055, 14.7927368825, 14.7927368825, 14.9359502475, 14.9359502475, 15.1341311138, 15.1341311138, 15.2751687461, 15.2751687461, 15.4234838921, 15.4234838921, 15.5493502273, 15.5493502273, 15.7791170227, 15.7791170227, 15.9999110723, 15.9999110723, 16.2528901017, 16.2528901017, 16.6191032433, 16.6191032433, 17.2181361393, 17.2181361393, 17.7758934092, 17.7758934092, 18.0427749344, 18.0427749344, 19.1862506517, 19.1862506517, 19.6979719198, 19.6979719198, 19.9345329774, 19.9345329774, 20.0549919884, 20.0549919884, 20.1242808365, 20.1242808365, 20.2515112281, 20.2515112281, 20.3152388385, 20.3152388385, 20.3700310506, 20.3700310506, 20.9337453058, 20.9337453058, 22.0465807810, 22.0465807810, 24.0091281622, 24.0091281622, 25.6047476413, 25.6047476413], 2, [1.0, 0.999966380565, 1.0, 0.999815696985, 1.0, 0.999300864481, 1.0, 0.997295182971, 1.0, 0.999619192521, 1.0, 0.996805111821, 1.0, 0.992068360694, 1.0, 0.996947047384, 1.0, 0.999488131038, 1.0, 0.962623792496, 1.0, 0.986738737469, 1.0, 0.990577719798, 1.0, 0.997396972292, 1.0, 0.999394663272, 1.0, 0.999838013121, 1.0, 0.999947981353, 1.0, 0.999983180141, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999978220237, 1.0, 0.999630148408, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 0.989713954842, 1.0, 0.979764412192, 1.0, 0.995629093335, 1.0, 0.999293369751, 1.0, 0.999935022111, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999957680895, 1.0, 1.0, 1.0, 0.998933349176, 1.0, 0.998353975814, 1.0, 0.999884486672, 1.0, 0.996410932282, 1.0, 0.992968091106, 1.0, 0.975960289284, 1.0, 0.99145615523, 1.0, 0.996117929889, 1.0, 0.998979001485, 1.0, 0.997979563147, 1.0, 0.998596485618, 1.0, 0.999562015936, 1.0, 0.999872008191, 1.0, 0.999978220237, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999969580463, 1.0, 0.999848631457, 1.0, 0.999285835107, 1.0, 0.998996983274, 1.0, 0.996993645886, 1.0, 0.998353975814, 1.0, 1.0, 1.0, 0.999969580463, 1.0, 0.999986480091, 1.0, 0.999992780026, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(21.136, -58.133, 0.000), (21.354, -58.130, 0.000), (21.572, -58.118, 0.000), (21.684, -58.113, 0.000), (21.795, -58.101, 0.000), (21.848, -58.096, 0.000), (21.900, -58.086, 0.000), (21.915, -58.083, 0.000), (21.930, -58.078, 0.000), (22.001, -58.057, 0.000), (22.065, -58.019, 0.000), (22.114, -57.990, 0.000), (22.154, -57.949, 0.000), (22.196, -57.906, 0.000), (22.218, -57.849, 0.000), (22.238, -57.793, 0.000), (22.234, -57.733, 0.000), (22.233, -57.721, 0.000), (22.231, -57.709, 0.000), (22.227, -57.685, 0.000), (22.220, -57.662, 0.000), (22.202, -57.610, 0.000), (22.181, -57.560, 0.000), (22.135, -57.451, 0.000), (22.084, -57.344, 0.000), (21.987, -57.142, 0.000), (21.885, -56.941, 0.000), (21.703, -56.584, 0.000), (21.515, -56.231, 0.000), (21.211, -55.657, 0.000), (20.901, -55.087, 0.000), (20.607, -54.547, 0.000), (20.314, -54.007, 0.000), (19.361, -52.268, 0.000), (18.409, -50.528, 0.000), (17.815, -49.448, 0.000), (17.215, -48.372, 0.000), (16.861, -47.736, 0.000), (16.501, -47.104, 0.000), (16.292, -46.736, 0.000), (16.078, -46.371, 0.000), (15.957, -46.164, 0.000), (15.831, -45.960, 0.000), (15.760, -45.846, 0.000), (15.685, -45.735, 0.000), (15.643, -45.671, 0.000), (15.596, -45.611, 0.000), (15.564, -45.571, 0.000), (15.528, -45.533, 0.000), (15.504, -45.508, 0.000), (15.478, -45.486, 0.000), (15.443, -45.459, 0.000), (15.403, -45.440, 0.000), (15.395, -45.437, 0.000), (15.387, -45.433, 0.000), (15.364, -45.422, 0.000), (15.338, -45.418, 0.000), (15.305, -45.413, 0.000), (15.273, -45.420, 0.000), (15.236, -45.429, 0.000), (15.202, -45.445, 0.000), (15.153, -45.469, 0.000), (15.109, -45.500, 0.000), (15.043, -45.545, 0.000), (14.982, -45.597, 0.000), (14.892, -45.674, 0.000), (14.808, -45.758, 0.000), (14.692, -45.878, 0.000), (14.589, -46.009, 0.000), (14.504, -46.118, 0.000), (14.432, -46.237, 0.000), (14.370, -46.339, 0.000), (14.325, -46.450, 0.000), (14.297, -46.519, 0.000), (14.277, -46.590, 0.000), (14.261, -46.648, 0.000), (14.255, -46.708, 0.000), (14.248, -46.787, 0.000), (14.262, -46.864, 0.000), (14.275, -46.931, 0.000), (14.297, -46.994, 0.000), (14.326, -47.077, 0.000), (14.362, -47.157, 0.000), (14.414, -47.271, 0.000), (14.471, -47.382, 0.000), (14.486, -47.409, 0.000), (14.500, -47.437, 0.000), (15.881, -49.882, 0.000), (17.262, -52.327, 0.000), (18.001, -53.629, 0.000), (18.740, -54.931, 0.000), (19.144, -55.640, 0.000), (19.553, -56.347, 0.000), (19.782, -56.744, 0.000), (20.016, -57.137, 0.000), (20.145, -57.356, 0.000), (20.279, -57.571, 0.000), (20.353, -57.690, 0.000), (20.432, -57.806, 0.000), (20.477, -57.873, 0.000), (20.527, -57.937, 0.000), (20.558, -57.976, 0.000), (20.593, -58.012, 0.000), (20.626, -58.044, 0.000), (20.664, -58.068, 0.000), (20.688, -58.085, 0.000), (20.716, -58.092, 0.000), (20.750, -58.102, 0.000), (20.785, -58.106, 0.000), (20.853, -58.116, 0.000), (20.921, -58.121, 0.000), (21.028, -58.129, 0.000), (21.136, -58.133, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((21.136, -58.133, 0.000)), rs.coerce3dpoint((21.354, -58.130, 0.000)), rs.coerce3dpoint((21.572, -58.118, 0.000)), rs.coerce3dpoint((21.684, -58.113, 0.000)), rs.coerce3dpoint((21.795, -58.101, 0.000)), rs.coerce3dpoint((21.848, -58.096, 0.000)), rs.coerce3dpoint((21.900, -58.086, 0.000)), rs.coerce3dpoint((21.915, -58.083, 0.000)), rs.coerce3dpoint((21.930, -58.078, 0.000)), rs.coerce3dpoint((22.001, -58.057, 0.000)), rs.coerce3dpoint((22.065, -58.019, 0.000)), rs.coerce3dpoint((22.114, -57.990, 0.000)), rs.coerce3dpoint((22.154, -57.949, 0.000)), rs.coerce3dpoint((22.196, -57.906, 0.000)), rs.coerce3dpoint((22.218, -57.849, 0.000)), rs.coerce3dpoint((22.238, -57.793, 0.000)), rs.coerce3dpoint((22.234, -57.733, 0.000)), rs.coerce3dpoint((22.233, -57.721, 0.000)), rs.coerce3dpoint((22.231, -57.709, 0.000)), rs.coerce3dpoint((22.227, -57.685, 0.000)), rs.coerce3dpoint((22.220, -57.662, 0.000)), rs.coerce3dpoint((22.202, -57.610, 0.000)), rs.coerce3dpoint((22.181, -57.560, 0.000)), rs.coerce3dpoint((22.135, -57.451, 0.000)), rs.coerce3dpoint((22.084, -57.344, 0.000)), rs.coerce3dpoint((21.987, -57.142, 0.000)), rs.coerce3dpoint((21.885, -56.941, 0.000)), rs.coerce3dpoint((21.703, -56.584, 0.000)), rs.coerce3dpoint((21.515, -56.231, 0.000)), rs.coerce3dpoint((21.211, -55.657, 0.000)), rs.coerce3dpoint((20.901, -55.087, 0.000)), rs.coerce3dpoint((20.607, -54.547, 0.000)), rs.coerce3dpoint((20.314, -54.007, 0.000)), rs.coerce3dpoint((19.361, -52.268, 0.000)), rs.coerce3dpoint((18.409, -50.528, 0.000)), rs.coerce3dpoint((17.815, -49.448, 0.000)), rs.coerce3dpoint((17.215, -48.372, 0.000)), rs.coerce3dpoint((16.861, -47.736, 0.000)), rs.coerce3dpoint((16.501, -47.104, 0.000)), rs.coerce3dpoint((16.292, -46.736, 0.000)), rs.coerce3dpoint((16.078, -46.371, 0.000)), rs.coerce3dpoint((15.957, -46.164, 0.000)), rs.coerce3dpoint((15.831, -45.960, 0.000)), rs.coerce3dpoint((15.760, -45.846, 0.000)), rs.coerce3dpoint((15.685, -45.735, 0.000)), rs.coerce3dpoint((15.643, -45.671, 0.000)), rs.coerce3dpoint((15.596, -45.611, 0.000)), rs.coerce3dpoint((15.564, -45.571, 0.000)), rs.coerce3dpoint((15.528, -45.533, 0.000)), rs.coerce3dpoint((15.504, -45.508, 0.000)), rs.coerce3dpoint((15.478, -45.486, 0.000)), rs.coerce3dpoint((15.443, -45.459, 0.000)), rs.coerce3dpoint((15.403, -45.440, 0.000)), rs.coerce3dpoint((15.395, -45.437, 0.000)), rs.coerce3dpoint((15.387, -45.433, 0.000)), rs.coerce3dpoint((15.364, -45.422, 0.000)), rs.coerce3dpoint((15.338, -45.418, 0.000)), rs.coerce3dpoint((15.305, -45.413, 0.000)), rs.coerce3dpoint((15.273, -45.420, 0.000)), rs.coerce3dpoint((15.236, -45.429, 0.000)), rs.coerce3dpoint((15.202, -45.445, 0.000)), rs.coerce3dpoint((15.153, -45.469, 0.000)), rs.coerce3dpoint((15.109, -45.500, 0.000)), rs.coerce3dpoint((15.043, -45.545, 0.000)), rs.coerce3dpoint((14.982, -45.597, 0.000)), rs.coerce3dpoint((14.892, -45.674, 0.000)), rs.coerce3dpoint((14.808, -45.758, 0.000)), rs.coerce3dpoint((14.692, -45.878, 0.000)), rs.coerce3dpoint((14.589, -46.009, 0.000)), rs.coerce3dpoint((14.504, -46.118, 0.000)), rs.coerce3dpoint((14.432, -46.237, 0.000)), rs.coerce3dpoint((14.370, -46.339, 0.000)), rs.coerce3dpoint((14.325, -46.450, 0.000)), rs.coerce3dpoint((14.297, -46.519, 0.000)), rs.coerce3dpoint((14.277, -46.590, 0.000)), rs.coerce3dpoint((14.261, -46.648, 0.000)), rs.coerce3dpoint((14.255, -46.708, 0.000)), rs.coerce3dpoint((14.248, -46.787, 0.000)), rs.coerce3dpoint((14.262, -46.864, 0.000)), rs.coerce3dpoint((14.275, -46.931, 0.000)), rs.coerce3dpoint((14.297, -46.994, 0.000)), rs.coerce3dpoint((14.326, -47.077, 0.000)), rs.coerce3dpoint((14.362, -47.157, 0.000)), rs.coerce3dpoint((14.414, -47.271, 0.000)), rs.coerce3dpoint((14.471, -47.382, 0.000)), rs.coerce3dpoint((14.486, -47.409, 0.000)), rs.coerce3dpoint((14.500, -47.437, 0.000)), rs.coerce3dpoint((15.881, -49.882, 0.000)), rs.coerce3dpoint((17.262, -52.327, 0.000)), rs.coerce3dpoint((18.001, -53.629, 0.000)), rs.coerce3dpoint((18.740, -54.931, 0.000)), rs.coerce3dpoint((19.144, -55.640, 0.000)), rs.coerce3dpoint((19.553, -56.347, 0.000)), rs.coerce3dpoint((19.782, -56.744, 0.000)), rs.coerce3dpoint((20.016, -57.137, 0.000)), rs.coerce3dpoint((20.145, -57.356, 0.000)), rs.coerce3dpoint((20.279, -57.571, 0.000)), rs.coerce3dpoint((20.353, -57.690, 0.000)), rs.coerce3dpoint((20.432, -57.806, 0.000)), rs.coerce3dpoint((20.477, -57.873, 0.000)), rs.coerce3dpoint((20.527, -57.937, 0.000)), rs.coerce3dpoint((20.558, -57.976, 0.000)), rs.coerce3dpoint((20.593, -58.012, 0.000)), rs.coerce3dpoint((20.626, -58.044, 0.000)), rs.coerce3dpoint((20.664, -58.068, 0.000)), rs.coerce3dpoint((20.688, -58.085, 0.000)), rs.coerce3dpoint((20.716, -58.092, 0.000)), rs.coerce3dpoint((20.750, -58.102, 0.000)), rs.coerce3dpoint((20.785, -58.106, 0.000)), rs.coerce3dpoint((20.853, -58.116, 0.000)), rs.coerce3dpoint((20.921, -58.121, 0.000)), rs.coerce3dpoint((21.028, -58.129, 0.000)), rs.coerce3dpoint((21.136, -58.133, 0.000))], [0.0, 0.0, 0.43672992807, 0.43672992807, 0.660060416114, 0.660060416114, 0.765771320106, 0.765771320106, 0.796756593151, 0.796756593151, 0.944612698879, 0.944612698879, 1.05845311439, 1.05845311439, 1.17756532307, 1.17756532307, 1.29564450308, 1.29564450308, 1.32004596677, 1.32004596677, 1.36795343621, 1.36795343621, 1.47767681373, 1.47767681373, 1.71390496404, 1.71390496404, 2.16370451779, 2.16370451779, 2.96483515640, 2.96483515640, 4.26295061999, 4.26295061999, 5.49186391758, 5.49186391758, 9.45826344785, 9.45826344785, 11.9228034962, 11.9228034962, 13.3782783876, 13.3782783876, 14.2245500765, 14.2245500765, 14.7039672837, 14.7039672837, 14.9720272271, 14.9720272271, 15.1248331001, 15.1248331001, 15.2283968581, 15.2283968581, 15.2966414063, 15.2966414063, 15.3845946925, 15.3845946925, 15.4022036817, 15.4022036817, 15.4540516040, 15.4540516040, 15.5198106335, 15.5198106335, 15.5954489026, 15.5954489026, 15.7029985531, 15.7029985531, 15.8625462058, 15.8625462058, 16.0998633291, 16.0998633291, 16.4331929178, 16.4331929178, 16.7100983329, 16.7100983329, 16.9488496000, 16.9488496000, 17.0971058096, 17.0971058096, 17.2168596199, 17.2168596199, 17.3740956373, 17.3740956373, 17.5089800714, 17.5089800714, 17.6837908279, 17.6837908279, 17.9339276704, 17.9339276704, 17.9960442061, 17.9960442061, 23.6124908779, 23.6124908779, 26.6061359636, 26.6061359636, 28.2394654535, 28.2394654535, 29.1552594140, 29.1552594140, 29.6625266059, 29.6625266059, 29.9429411715, 29.9429411715, 30.1050909505, 30.1050909505, 30.2043540031, 30.2043540031, 30.2959255288, 30.2959255288, 30.3533592749, 30.3533592749, 30.4231381572, 30.4231381572, 30.5602671207, 30.5602671207, 30.7756919602, 30.7756919602], 2, [1.0, 0.999830734327, 1.0, 0.999667235375, 1.0, 0.998979001485, 1.0, 0.998933349176, 1.0, 0.993085567618, 1.0, 0.990902055423, 1.0, 0.979085342751, 1.0, 0.97814934258, 1.0, 0.99937361624, 1.0, 0.996544859328, 1.0, 0.999159853072, 1.0, 0.999735534975, 1.0, 0.99991022403, 1.0, 0.999966380565, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999990320047, 1.0, 0.9999755003, 1.0, 0.999930382423, 1.0, 0.999791941646, 1.0, 0.999344994586, 1.0, 0.998780563966, 1.0, 0.99771772736, 1.0, 0.992968091106, 1.0, 1.0, 1.0, 0.991404124013, 1.0, 0.982297586974, 1.0, 0.993386422264, 1.0, 0.997055222251, 1.0, 0.99860705083, 1.0, 0.999300864481, 1.0, 0.99873072604, 1.0, 0.99810451813, 1.0, 0.997070517229, 1.0, 0.998055013328, 1.0, 0.996528256979, 1.0, 0.990136564763, 1.0, 0.997250963801, 1.0, 0.998933349176, 1.0, 0.999635566418, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999982000162, 1.0, 0.99993950183, 1.0, 0.999811837704, 1.0, 0.999380671843, 1.0, 0.998042537706, 1.0, 0.994334315586, 1.0, 0.986019988239, 1.0, 0.997797947191, 1.0, 0.999422166994, 1.0, 0.99987518779, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.398, -4.169, 0.000), (-14.404, -2.880, 0.000), (-14.410, -1.592, 0.000), (-14.412, -1.099, 0.000), (-14.418, -0.605, 0.000), (-14.421, -0.393, 0.000), (-14.427, -0.182, 0.000), (-14.429, -0.086, 0.000), (-14.436, 0.009, 0.000), (-14.439, 0.061, 0.000), (-14.447, 0.112, 0.000), (-14.451, 0.136, 0.000), (-14.457, 0.160, 0.000), (-14.473, 0.229, 0.000), (-14.503, 0.293, 0.000), (-14.532, 0.355, 0.000), (-14.566, 0.416, 0.000), (-14.606, 0.486, 0.000), (-14.648, 0.555, 0.000), (-14.774, 0.762, 0.000), (-14.896, 0.971, 0.000), (-14.911, 0.997, 0.000), (-14.926, 1.022, 0.000), (-14.989, 1.129, 0.000), (-15.053, 1.237, 0.000), (-15.118, 1.349, 0.000), (-15.184, 1.461, 0.000), (-15.312, 1.679, 0.000), (-15.442, 1.895, 0.000), (-15.480, 1.959, 0.000), (-15.520, 2.022, 0.000), (-15.577, 2.116, 0.000), (-15.640, 2.206, 0.000), (-15.701, 2.293, 0.000), (-15.772, 2.371, 0.000), (-15.774, 2.374, 0.000), (-15.776, 2.376, 0.000), (-15.838, 2.444, 0.000), (-15.911, 2.500, 0.000), (-15.980, 2.552, 0.000), (-16.061, 2.586, 0.000), (-16.192, 2.641, 0.000), (-16.335, 2.627, 0.000), (-16.374, 2.624, 0.000), (-16.413, 2.615, 0.000), (-16.483, 2.600, 0.000), (-16.547, 2.567, 0.000), (-16.634, 2.524, 0.000), (-16.708, 2.463, 0.000), (-16.818, 2.373, 0.000), (-16.897, 2.255, 0.000), (-16.942, 2.188, 0.000), (-16.970, 2.114, 0.000), (-16.993, 2.056, 0.000), (-17.000, 1.995, 0.000), (-17.002, 1.970, 0.000), (-17.001, 1.945, 0.000), (-17.000, 1.688, 0.000), (-17.000, 1.431, 0.000), (-16.992, -1.111, 0.000), (-16.983, -3.652, 0.000), (-16.979, -4.471, 0.000), (-16.975, -5.290, 0.000), (-16.973, -5.589, 0.000), (-16.968, -5.887, 0.000), (-16.967, -6.004, 0.000), (-16.962, -6.120, 0.000), (-16.959, -6.175, 0.000), (-16.953, -6.229, 0.000), (-16.951, -6.243, 0.000), (-16.949, -6.257, 0.000), (-16.945, -6.292, 0.000), (-16.932, -6.325, 0.000), (-16.916, -6.368, 0.000), (-16.895, -6.409, 0.000), (-16.855, -6.491, 0.000), (-16.810, -6.572, 0.000), (-16.719, -6.737, 0.000), (-16.624, -6.900, 0.000), (-16.569, -6.994, 0.000), (-16.513, -7.088, 0.000), (-16.271, -7.500, 0.000), (-16.025, -7.909, 0.000), (-15.903, -8.112, 0.000), (-15.777, -8.312, 0.000), (-15.717, -8.408, 0.000), (-15.653, -8.503, 0.000), (-15.620, -8.550, 0.000), (-15.585, -8.595, 0.000), (-15.562, -8.623, 0.000), (-15.537, -8.648, 0.000), (-15.449, -8.740, 0.000), (-15.335, -8.795, 0.000), (-15.134, -8.893, 0.000), (-14.915, -8.848, 0.000), (-14.730, -8.809, 0.000), (-14.597, -8.674, 0.000), (-14.496, -8.570, 0.000), (-14.451, -8.433, 0.000), (-14.448, -8.422, 0.000), (-14.445, -8.412, 0.000), (-14.431, -8.366, 0.000), (-14.426, -8.319, 0.000), (-14.419, -8.255, 0.000), (-14.416, -8.192, 0.000), (-14.410, -8.057, 0.000), (-14.408, -7.922, 0.000), (-14.402, -7.625, 0.000), (-14.401, -7.327, 0.000), (-14.397, -6.668, 0.000), (-14.397, -6.009, 0.000), (-14.397, -5.089, 0.000), (-14.398, -4.169, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.398, -4.169, 0.000)), rs.coerce3dpoint((-14.404, -2.880, 0.000)), rs.coerce3dpoint((-14.410, -1.592, 0.000)), rs.coerce3dpoint((-14.412, -1.099, 0.000)), rs.coerce3dpoint((-14.418, -0.605, 0.000)), rs.coerce3dpoint((-14.421, -0.393, 0.000)), rs.coerce3dpoint((-14.427, -0.182, 0.000)), rs.coerce3dpoint((-14.429, -0.086, 0.000)), rs.coerce3dpoint((-14.436, 0.009, 0.000)), rs.coerce3dpoint((-14.439, 0.061, 0.000)), rs.coerce3dpoint((-14.447, 0.112, 0.000)), rs.coerce3dpoint((-14.451, 0.136, 0.000)), rs.coerce3dpoint((-14.457, 0.160, 0.000)), rs.coerce3dpoint((-14.473, 0.229, 0.000)), rs.coerce3dpoint((-14.503, 0.293, 0.000)), rs.coerce3dpoint((-14.532, 0.355, 0.000)), rs.coerce3dpoint((-14.566, 0.416, 0.000)), rs.coerce3dpoint((-14.606, 0.486, 0.000)), rs.coerce3dpoint((-14.648, 0.555, 0.000)), rs.coerce3dpoint((-14.774, 0.762, 0.000)), rs.coerce3dpoint((-14.896, 0.971, 0.000)), rs.coerce3dpoint((-14.911, 0.997, 0.000)), rs.coerce3dpoint((-14.926, 1.022, 0.000)), rs.coerce3dpoint((-14.989, 1.129, 0.000)), rs.coerce3dpoint((-15.053, 1.237, 0.000)), rs.coerce3dpoint((-15.118, 1.349, 0.000)), rs.coerce3dpoint((-15.184, 1.461, 0.000)), rs.coerce3dpoint((-15.312, 1.679, 0.000)), rs.coerce3dpoint((-15.442, 1.895, 0.000)), rs.coerce3dpoint((-15.480, 1.959, 0.000)), rs.coerce3dpoint((-15.520, 2.022, 0.000)), rs.coerce3dpoint((-15.577, 2.116, 0.000)), rs.coerce3dpoint((-15.640, 2.206, 0.000)), rs.coerce3dpoint((-15.701, 2.293, 0.000)), rs.coerce3dpoint((-15.772, 2.371, 0.000)), rs.coerce3dpoint((-15.774, 2.374, 0.000)), rs.coerce3dpoint((-15.776, 2.376, 0.000)), rs.coerce3dpoint((-15.838, 2.444, 0.000)), rs.coerce3dpoint((-15.911, 2.500, 0.000)), rs.coerce3dpoint((-15.980, 2.552, 0.000)), rs.coerce3dpoint((-16.061, 2.586, 0.000)), rs.coerce3dpoint((-16.192, 2.641, 0.000)), rs.coerce3dpoint((-16.335, 2.627, 0.000)), rs.coerce3dpoint((-16.374, 2.624, 0.000)), rs.coerce3dpoint((-16.413, 2.615, 0.000)), rs.coerce3dpoint((-16.483, 2.600, 0.000)), rs.coerce3dpoint((-16.547, 2.567, 0.000)), rs.coerce3dpoint((-16.634, 2.524, 0.000)), rs.coerce3dpoint((-16.708, 2.463, 0.000)), rs.coerce3dpoint((-16.818, 2.373, 0.000)), rs.coerce3dpoint((-16.897, 2.255, 0.000)), rs.coerce3dpoint((-16.942, 2.188, 0.000)), rs.coerce3dpoint((-16.970, 2.114, 0.000)), rs.coerce3dpoint((-16.993, 2.056, 0.000)), rs.coerce3dpoint((-17.000, 1.995, 0.000)), rs.coerce3dpoint((-17.002, 1.970, 0.000)), rs.coerce3dpoint((-17.001, 1.945, 0.000)), rs.coerce3dpoint((-17.000, 1.688, 0.000)), rs.coerce3dpoint((-17.000, 1.431, 0.000)), rs.coerce3dpoint((-16.992, -1.111, 0.000)), rs.coerce3dpoint((-16.983, -3.652, 0.000)), rs.coerce3dpoint((-16.979, -4.471, 0.000)), rs.coerce3dpoint((-16.975, -5.290, 0.000)), rs.coerce3dpoint((-16.973, -5.589, 0.000)), rs.coerce3dpoint((-16.968, -5.887, 0.000)), rs.coerce3dpoint((-16.967, -6.004, 0.000)), rs.coerce3dpoint((-16.962, -6.120, 0.000)), rs.coerce3dpoint((-16.959, -6.175, 0.000)), rs.coerce3dpoint((-16.953, -6.229, 0.000)), rs.coerce3dpoint((-16.951, -6.243, 0.000)), rs.coerce3dpoint((-16.949, -6.257, 0.000)), rs.coerce3dpoint((-16.945, -6.292, 0.000)), rs.coerce3dpoint((-16.932, -6.325, 0.000)), rs.coerce3dpoint((-16.916, -6.368, 0.000)), rs.coerce3dpoint((-16.895, -6.409, 0.000)), rs.coerce3dpoint((-16.855, -6.491, 0.000)), rs.coerce3dpoint((-16.810, -6.572, 0.000)), rs.coerce3dpoint((-16.719, -6.737, 0.000)), rs.coerce3dpoint((-16.624, -6.900, 0.000)), rs.coerce3dpoint((-16.569, -6.994, 0.000)), rs.coerce3dpoint((-16.513, -7.088, 0.000)), rs.coerce3dpoint((-16.271, -7.500, 0.000)), rs.coerce3dpoint((-16.025, -7.909, 0.000)), rs.coerce3dpoint((-15.903, -8.112, 0.000)), rs.coerce3dpoint((-15.777, -8.312, 0.000)), rs.coerce3dpoint((-15.717, -8.408, 0.000)), rs.coerce3dpoint((-15.653, -8.503, 0.000)), rs.coerce3dpoint((-15.620, -8.550, 0.000)), rs.coerce3dpoint((-15.585, -8.595, 0.000)), rs.coerce3dpoint((-15.562, -8.623, 0.000)), rs.coerce3dpoint((-15.537, -8.648, 0.000)), rs.coerce3dpoint((-15.449, -8.740, 0.000)), rs.coerce3dpoint((-15.335, -8.795, 0.000)), rs.coerce3dpoint((-15.134, -8.893, 0.000)), rs.coerce3dpoint((-14.915, -8.848, 0.000)), rs.coerce3dpoint((-14.730, -8.809, 0.000)), rs.coerce3dpoint((-14.597, -8.674, 0.000)), rs.coerce3dpoint((-14.496, -8.570, 0.000)), rs.coerce3dpoint((-14.451, -8.433, 0.000)), rs.coerce3dpoint((-14.448, -8.422, 0.000)), rs.coerce3dpoint((-14.445, -8.412, 0.000)), rs.coerce3dpoint((-14.431, -8.366, 0.000)), rs.coerce3dpoint((-14.426, -8.319, 0.000)), rs.coerce3dpoint((-14.419, -8.255, 0.000)), rs.coerce3dpoint((-14.416, -8.192, 0.000)), rs.coerce3dpoint((-14.410, -8.057, 0.000)), rs.coerce3dpoint((-14.408, -7.922, 0.000)), rs.coerce3dpoint((-14.402, -7.625, 0.000)), rs.coerce3dpoint((-14.401, -7.327, 0.000)), rs.coerce3dpoint((-14.397, -6.668, 0.000)), rs.coerce3dpoint((-14.397, -6.009, 0.000)), rs.coerce3dpoint((-14.397, -5.089, 0.000)), rs.coerce3dpoint((-14.398, -4.169, 0.000))], [0.0, 0.0, 2.57628822751, 2.57628822751, 3.56394500655, 3.56394500655, 3.98720264531, 3.98720264531, 4.17838145368, 4.17838145368, 4.28134206261, 4.28134206261, 4.33069021522, 4.33069021522, 4.47104632391, 4.47104632391, 4.60956765203, 4.60956765203, 4.77135739056, 4.77135739056, 5.25591446864, 5.25591446864, 5.3142420856, 5.3142420856, 5.56440380230, 5.56440380230, 5.82400827626, 5.82400827626, 6.32847256369, 6.32847256369, 6.47787802357, 6.47787802357, 6.69790086493, 6.69790086493, 6.90902757421, 6.90902757421, 6.91536218549, 6.91536218549, 7.09868664077, 7.09868664077, 7.27199318047, 7.27199318047, 7.55180557191, 7.55180557191, 7.63153047930, 7.63153047930, 7.77433211677, 7.77433211677, 7.96632552469, 7.96632552469, 8.24869157895, 8.24869157895, 8.40782575409, 8.40782575409, 8.53050536740, 8.53050536740, 8.58021407501, 8.58021407501, 9.09481640934, 9.09481640934, 14.1777122892, 14.1777122892, 15.8155530171, 15.8155530171, 16.4129141868, 16.4129141868, 16.6457798662, 16.6457798662, 16.7548073352, 16.7548073352, 16.7835860235, 16.7835860235, 16.8537886259, 16.8537886259, 16.9450495945, 16.9450495945, 17.1296194757, 17.1296194757, 17.5064737387, 17.5064737387, 17.7247060208, 17.7247060208, 18.6802018691, 18.6802018691, 19.1525664575, 19.1525664575, 19.3808950746, 19.3808950746, 19.4957328078, 19.4957328078, 19.5669368004, 19.5669368004, 19.8178562290, 19.8178562290, 20.2488565897, 20.2488565897, 20.6172747872, 20.6172747872, 20.9010832742, 20.9010832742, 20.9232075256, 20.9232075256, 21.0183215263, 21.0183215263, 21.1451556143, 21.1451556143, 21.4153458555, 21.4153458555, 22.0102822135, 22.0102822135, 23.3289293824, 23.3289293824, 25.1688697053, 25.1688697053], 2, [1.0, 1.0, 1.0, 0.999994220017, 1.0, 0.99996128075, 1.0, 0.999787842508, 1.0, 0.998914809139, 1.0, 0.99937361624, 1.0, 0.994892357404, 1.0, 0.999075927153, 1.0, 0.999819516289, 1.0, 0.99996128075, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999989420056, 1.0, 0.999507141485, 1.0, 0.998141229122, 1.0, 1.0, 1.0, 0.995813501766, 1.0, 0.992168209041, 1.0, 0.969761773367, 1.0, 0.998177582118, 1.0, 0.992658071263, 1.0, 0.99345490943, 1.0, 0.989107646528, 1.0, 0.993858417609, 1.0, 0.991662720602, 1.0, 0.997468488337, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999899185082, 1.0, 0.99931573419, 1.0, 1.0, 1.0, 0.992754166503, 1.0, 0.998867761345, 1.0, 0.999716820101, 1.0, 0.999923122955, 1.0, 0.99999550001, 1.0, 0.999986480091, 1.0, 0.999953921062, 1.0, 0.999823295614, 1.0, 0.999262991691, 1.0, 0.998690138431, 1.0, 0.984700263223, 1.0, 0.946240099623, 1.0, 0.956903965016, 1.0, 0.974074168098, 1.0, 1.0, 1.0, 0.996117929889, 1.0, 0.999449031825, 1.0, 0.999887506328, 1.0, 0.999976880267, 1.0, 0.99999550001, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.134, -21.829, 0.000), (22.134, -20.825, 0.000), (22.134, -19.821, 0.000), (22.133, -19.382, 0.000), (22.129, -18.943, 0.000), (22.128, -18.740, 0.000), (22.122, -18.537, 0.000), (22.119, -18.441, 0.000), (22.112, -18.346, 0.000), (22.109, -18.297, 0.000), (22.101, -18.248, 0.000), (22.096, -18.216, 0.000), (22.086, -18.185, 0.000), (22.068, -18.128, 0.000), (22.036, -18.078, 0.000), (22.007, -18.033, 0.000), (21.972, -17.991, 0.000), (21.937, -17.947, 0.000), (21.900, -17.905, 0.000), (21.816, -17.819, 0.000), (21.706, -17.771, 0.000), (21.557, -17.707, 0.000), (21.397, -17.733, 0.000), (21.237, -17.760, 0.000), (21.119, -17.871, 0.000), (21.056, -17.928, 0.000), (21.012, -18.001, 0.000), (20.105, -19.620, 0.000), (19.198, -21.239, 0.000), (18.966, -21.651, 0.000), (18.734, -22.064, 0.000), (18.526, -22.436, 0.000), (18.318, -22.807, 0.000), (17.773, -23.779, 0.000), (17.228, -24.752, 0.000), (17.184, -24.832, 0.000), (17.139, -24.913, 0.000), (17.093, -24.993, 0.000), (17.070, -25.083, 0.000), (17.046, -25.173, 0.000), (17.053, -25.265, 0.000), (17.065, -25.427, 0.000), (17.173, -25.549, 0.000), (17.234, -25.618, 0.000), (17.314, -25.664, 0.000), (17.395, -25.712, 0.000), (17.486, -25.736, 0.000), (17.491, -25.738, 0.000), (17.495, -25.739, 0.000), (17.604, -25.753, 0.000), (17.713, -25.762, 0.000), (17.750, -25.765, 0.000), (17.787, -25.768, 0.000), (17.793, -25.768, 0.000), (17.799, -25.768, 0.000), (17.860, -25.772, 0.000), (17.921, -25.773, 0.000), (18.086, -25.777, 0.000), (18.251, -25.777, 0.000), (18.618, -25.779, 0.000), (18.984, -25.779, 0.000), (19.628, -25.780, 0.000), (20.273, -25.776, 0.000), (20.607, -25.774, 0.000), (20.941, -25.768, 0.000), (21.119, -25.765, 0.000), (21.298, -25.756, 0.000), (21.396, -25.752, 0.000), (21.494, -25.742, 0.000), (21.555, -25.736, 0.000), (21.615, -25.724, 0.000), (21.625, -25.722, 0.000), (21.635, -25.720, 0.000), (21.680, -25.710, 0.000), (21.722, -25.691, 0.000), (21.760, -25.673, 0.000), (21.796, -25.650, 0.000), (21.847, -25.618, 0.000), (21.897, -25.583, 0.000), (21.931, -25.559, 0.000), (21.959, -25.527, 0.000), (22.001, -25.481, 0.000), (22.035, -25.428, 0.000), (22.082, -25.353, 0.000), (22.114, -25.271, 0.000), (22.127, -25.241, 0.000), (22.133, -25.209, 0.000), (22.135, -25.200, 0.000), (22.136, -25.191, 0.000), (22.139, -25.038, 0.000), (22.139, -24.885, 0.000), (22.141, -24.456, 0.000), (22.140, -24.027, 0.000), (22.137, -22.928, 0.000), (22.134, -21.829, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.134, -21.829, 0.000)), rs.coerce3dpoint((22.134, -20.825, 0.000)), rs.coerce3dpoint((22.134, -19.821, 0.000)), rs.coerce3dpoint((22.133, -19.382, 0.000)), rs.coerce3dpoint((22.129, -18.943, 0.000)), rs.coerce3dpoint((22.128, -18.740, 0.000)), rs.coerce3dpoint((22.122, -18.537, 0.000)), rs.coerce3dpoint((22.119, -18.441, 0.000)), rs.coerce3dpoint((22.112, -18.346, 0.000)), rs.coerce3dpoint((22.109, -18.297, 0.000)), rs.coerce3dpoint((22.101, -18.248, 0.000)), rs.coerce3dpoint((22.096, -18.216, 0.000)), rs.coerce3dpoint((22.086, -18.185, 0.000)), rs.coerce3dpoint((22.068, -18.128, 0.000)), rs.coerce3dpoint((22.036, -18.078, 0.000)), rs.coerce3dpoint((22.007, -18.033, 0.000)), rs.coerce3dpoint((21.972, -17.991, 0.000)), rs.coerce3dpoint((21.937, -17.947, 0.000)), rs.coerce3dpoint((21.900, -17.905, 0.000)), rs.coerce3dpoint((21.816, -17.819, 0.000)), rs.coerce3dpoint((21.706, -17.771, 0.000)), rs.coerce3dpoint((21.557, -17.707, 0.000)), rs.coerce3dpoint((21.397, -17.733, 0.000)), rs.coerce3dpoint((21.237, -17.760, 0.000)), rs.coerce3dpoint((21.119, -17.871, 0.000)), rs.coerce3dpoint((21.056, -17.928, 0.000)), rs.coerce3dpoint((21.012, -18.001, 0.000)), rs.coerce3dpoint((20.105, -19.620, 0.000)), rs.coerce3dpoint((19.198, -21.239, 0.000)), rs.coerce3dpoint((18.966, -21.651, 0.000)), rs.coerce3dpoint((18.734, -22.064, 0.000)), rs.coerce3dpoint((18.526, -22.436, 0.000)), rs.coerce3dpoint((18.318, -22.807, 0.000)), rs.coerce3dpoint((17.773, -23.779, 0.000)), rs.coerce3dpoint((17.228, -24.752, 0.000)), rs.coerce3dpoint((17.184, -24.832, 0.000)), rs.coerce3dpoint((17.139, -24.913, 0.000)), rs.coerce3dpoint((17.093, -24.993, 0.000)), rs.coerce3dpoint((17.070, -25.083, 0.000)), rs.coerce3dpoint((17.046, -25.173, 0.000)), rs.coerce3dpoint((17.053, -25.265, 0.000)), rs.coerce3dpoint((17.065, -25.427, 0.000)), rs.coerce3dpoint((17.173, -25.549, 0.000)), rs.coerce3dpoint((17.234, -25.618, 0.000)), rs.coerce3dpoint((17.314, -25.664, 0.000)), rs.coerce3dpoint((17.395, -25.712, 0.000)), rs.coerce3dpoint((17.486, -25.736, 0.000)), rs.coerce3dpoint((17.491, -25.738, 0.000)), rs.coerce3dpoint((17.495, -25.739, 0.000)), rs.coerce3dpoint((17.604, -25.753, 0.000)), rs.coerce3dpoint((17.713, -25.762, 0.000)), rs.coerce3dpoint((17.750, -25.765, 0.000)), rs.coerce3dpoint((17.787, -25.768, 0.000)), rs.coerce3dpoint((17.793, -25.768, 0.000)), rs.coerce3dpoint((17.799, -25.768, 0.000)), rs.coerce3dpoint((17.860, -25.772, 0.000)), rs.coerce3dpoint((17.921, -25.773, 0.000)), rs.coerce3dpoint((18.086, -25.777, 0.000)), rs.coerce3dpoint((18.251, -25.777, 0.000)), rs.coerce3dpoint((18.618, -25.779, 0.000)), rs.coerce3dpoint((18.984, -25.779, 0.000)), rs.coerce3dpoint((19.628, -25.780, 0.000)), rs.coerce3dpoint((20.273, -25.776, 0.000)), rs.coerce3dpoint((20.607, -25.774, 0.000)), rs.coerce3dpoint((20.941, -25.768, 0.000)), rs.coerce3dpoint((21.119, -25.765, 0.000)), rs.coerce3dpoint((21.298, -25.756, 0.000)), rs.coerce3dpoint((21.396, -25.752, 0.000)), rs.coerce3dpoint((21.494, -25.742, 0.000)), rs.coerce3dpoint((21.555, -25.736, 0.000)), rs.coerce3dpoint((21.615, -25.724, 0.000)), rs.coerce3dpoint((21.625, -25.722, 0.000)), rs.coerce3dpoint((21.635, -25.720, 0.000)), rs.coerce3dpoint((21.680, -25.710, 0.000)), rs.coerce3dpoint((21.722, -25.691, 0.000)), rs.coerce3dpoint((21.760, -25.673, 0.000)), rs.coerce3dpoint((21.796, -25.650, 0.000)), rs.coerce3dpoint((21.847, -25.618, 0.000)), rs.coerce3dpoint((21.897, -25.583, 0.000)), rs.coerce3dpoint((21.931, -25.559, 0.000)), rs.coerce3dpoint((21.959, -25.527, 0.000)), rs.coerce3dpoint((22.001, -25.481, 0.000)), rs.coerce3dpoint((22.035, -25.428, 0.000)), rs.coerce3dpoint((22.082, -25.353, 0.000)), rs.coerce3dpoint((22.114, -25.271, 0.000)), rs.coerce3dpoint((22.127, -25.241, 0.000)), rs.coerce3dpoint((22.133, -25.209, 0.000)), rs.coerce3dpoint((22.135, -25.200, 0.000)), rs.coerce3dpoint((22.136, -25.191, 0.000)), rs.coerce3dpoint((22.139, -25.038, 0.000)), rs.coerce3dpoint((22.139, -24.885, 0.000)), rs.coerce3dpoint((22.141, -24.456, 0.000)), rs.coerce3dpoint((22.140, -24.027, 0.000)), rs.coerce3dpoint((22.137, -22.928, 0.000)), rs.coerce3dpoint((22.134, -21.829, 0.000))], [0.0, 0.0, 2.00728000807, 2.00728000807, 2.88534479659, 2.88534479659, 3.29184262469, 3.29184262469, 3.48263776150, 3.48263776150, 3.58198878144, 3.58198878144, 3.64622783193, 3.64622783193, 3.76437625577, 3.76437625577, 3.87282137252, 3.87282137252, 3.98484737311, 3.98484737311, 4.22260127539, 4.22260127539, 4.53800690728, 4.53800690728, 4.85277136978, 4.85277136978, 5.02192121331, 5.02192121331, 8.73317416162, 8.73317416162, 9.67997180336, 9.67997180336, 10.5311921406, 10.5311921406, 12.7607538787, 12.7607538787, 12.9445844053, 12.9445844053, 13.1291492539, 13.1291492539, 13.3124165374, 13.3124165374, 13.6264283483, 13.6264283483, 13.8094360497, 13.8094360497, 13.9970113102, 13.9970113102, 14.0064335446, 14.0064335446, 14.2252599088, 14.2252599088, 14.2998014523, 14.2998014523, 14.3111456138, 14.3111456138, 14.4335338421, 14.4335338421, 14.7639184227, 14.7639184227, 15.4968614099, 15.4968614099, 16.7855269346, 16.7855269346, 17.4533811477, 17.4533811477, 17.8106895512, 17.8106895512, 18.0070678042, 18.0070678042, 18.1296879559, 18.1296879559, 18.1500848429, 18.1500848429, 18.2419432486, 18.2419432486, 18.3262712178, 18.3262712178, 18.4476089133, 18.4476089133, 18.5316997943, 18.5316997943, 18.6570322896, 18.6570322896, 18.8331916841, 18.8331916841, 18.8977988709, 18.8977988709, 18.9160481516, 18.9160481516, 19.2218547519, 19.2218547519, 20.0797262150, 20.0797262150, 22.2785547876, 22.2785547876], 2, [1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.99995000125, 1.0, 0.999758029278, 1.0, 0.998886700064, 1.0, 0.997510921616, 1.0, 0.990413452265, 1.0, 0.998510530087, 1.0, 0.999771046213, 1.0, 0.980974718801, 1.0, 0.959370493448, 1.0, 0.95814573155, 1.0, 0.990247785849, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.991765067247, 1.0, 0.986577016949, 1.0, 0.947554670318, 1.0, 0.987027413348, 1.0, 0.991739539105, 1.0, 1.0, 1.0, 0.99965683889, 1.0, 0.999974080336, 1.0, 1.0, 1.0, 0.999677472021, 1.0, 0.999968000512, 1.0, 0.999996620006, 1.0, 0.999994220017, 1.0, 0.9999755003, 1.0, 0.999902004802, 1.0, 0.999640944472, 1.0, 0.998710511926, 1.0, 1.0, 1.0, 0.995032349499, 1.0, 0.997622330022, 1.0, 0.999868788609, 1.0, 0.993523043631, 1.0, 0.996117929889, 1.0, 0.995554224477, 1.0, 0.996544859328, 1.0, 0.996528256979, 1.0, 0.999953921062, 1.0, 0.99999550001, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(18.588, -48.194, 0.000), (18.589, -48.267, 0.000), (18.604, -48.339, 0.000), (18.622, -48.427, 0.000), (18.652, -48.513, 0.000), (18.690, -48.621, 0.000), (18.739, -48.725, 0.000), (18.798, -48.851, 0.000), (18.865, -48.974, 0.000), (18.927, -49.087, 0.000), (18.990, -49.200, 0.000), (19.452, -49.997, 0.000), (19.920, -50.790, 0.000), (20.196, -51.258, 0.000), (20.477, -51.723, 0.000), (20.642, -51.996, 0.000), (20.812, -52.265, 0.000), (20.907, -52.417, 0.000), (21.007, -52.565, 0.000), (21.063, -52.648, 0.000), (21.123, -52.728, 0.000), (21.158, -52.774, 0.000), (21.196, -52.816, 0.000), (21.223, -52.845, 0.000), (21.255, -52.870, 0.000), (21.268, -52.879, 0.000), (21.281, -52.887, 0.000), (21.346, -52.932, 0.000), (21.424, -52.949, 0.000), (21.507, -52.966, 0.000), (21.591, -52.948, 0.000), (21.664, -52.932, 0.000), (21.730, -52.896, 0.000), (21.732, -52.894, 0.000), (21.734, -52.893, 0.000), (21.813, -52.850, 0.000), (21.884, -52.794, 0.000), (21.953, -52.739, 0.000), (22.007, -52.669, 0.000), (22.089, -52.562, 0.000), (22.117, -52.430, 0.000), (22.135, -52.346, 0.000), (22.134, -52.260, 0.000), (22.136, -49.624, 0.000), (22.139, -46.988, 0.000), (22.138, -46.190, 0.000), (22.138, -45.391, 0.000), (22.137, -45.124, 0.000), (22.134, -44.856, 0.000), (22.133, -44.763, 0.000), (22.129, -44.669, 0.000), (22.128, -44.635, 0.000), (22.123, -44.600, 0.000), (22.122, -44.588, 0.000), (22.119, -44.577, 0.000), (22.110, -44.529, 0.000), (22.089, -44.484, 0.000), (22.072, -44.450, 0.000), (22.050, -44.419, 0.000), (22.015, -44.367, 0.000), (21.973, -44.321, 0.000), (21.926, -44.269, 0.000), (21.868, -44.231, 0.000), (21.804, -44.189, 0.000), (21.728, -44.173, 0.000), (21.726, -44.173, 0.000), (21.724, -44.172, 0.000), (21.599, -44.149, 0.000), (21.472, -44.141, 0.000), (21.355, -44.134, 0.000), (21.239, -44.147, 0.000), (21.118, -44.161, 0.000), (21.003, -44.203, 0.000), (20.843, -44.262, 0.000), (20.716, -44.376, 0.000), (20.668, -44.418, 0.000), (20.626, -44.466, 0.000), (20.586, -44.510, 0.000), (20.552, -44.560, 0.000), (20.508, -44.626, 0.000), (20.467, -44.694, 0.000), (20.383, -44.835, 0.000), (20.303, -44.976, 0.000), (20.175, -45.200, 0.000), (20.049, -45.424, 0.000), (19.843, -45.790, 0.000), (19.636, -46.157, 0.000), (19.483, -46.428, 0.000), (19.330, -46.700, 0.000), (19.147, -47.024, 0.000), (18.967, -47.350, 0.000), (18.873, -47.520, 0.000), (18.783, -47.693, 0.000), (18.730, -47.793, 0.000), (18.682, -47.896, 0.000), (18.651, -47.962, 0.000), (18.627, -48.031, 0.000), (18.601, -48.103, 0.000), (18.590, -48.178, 0.000), (18.589, -48.186, 0.000), (18.588, -48.194, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((18.588, -48.194, 0.000)), rs.coerce3dpoint((18.589, -48.267, 0.000)), rs.coerce3dpoint((18.604, -48.339, 0.000)), rs.coerce3dpoint((18.622, -48.427, 0.000)), rs.coerce3dpoint((18.652, -48.513, 0.000)), rs.coerce3dpoint((18.690, -48.621, 0.000)), rs.coerce3dpoint((18.739, -48.725, 0.000)), rs.coerce3dpoint((18.798, -48.851, 0.000)), rs.coerce3dpoint((18.865, -48.974, 0.000)), rs.coerce3dpoint((18.927, -49.087, 0.000)), rs.coerce3dpoint((18.990, -49.200, 0.000)), rs.coerce3dpoint((19.452, -49.997, 0.000)), rs.coerce3dpoint((19.920, -50.790, 0.000)), rs.coerce3dpoint((20.196, -51.258, 0.000)), rs.coerce3dpoint((20.477, -51.723, 0.000)), rs.coerce3dpoint((20.642, -51.996, 0.000)), rs.coerce3dpoint((20.812, -52.265, 0.000)), rs.coerce3dpoint((20.907, -52.417, 0.000)), rs.coerce3dpoint((21.007, -52.565, 0.000)), rs.coerce3dpoint((21.063, -52.648, 0.000)), rs.coerce3dpoint((21.123, -52.728, 0.000)), rs.coerce3dpoint((21.158, -52.774, 0.000)), rs.coerce3dpoint((21.196, -52.816, 0.000)), rs.coerce3dpoint((21.223, -52.845, 0.000)), rs.coerce3dpoint((21.255, -52.870, 0.000)), rs.coerce3dpoint((21.268, -52.879, 0.000)), rs.coerce3dpoint((21.281, -52.887, 0.000)), rs.coerce3dpoint((21.346, -52.932, 0.000)), rs.coerce3dpoint((21.424, -52.949, 0.000)), rs.coerce3dpoint((21.507, -52.966, 0.000)), rs.coerce3dpoint((21.591, -52.948, 0.000)), rs.coerce3dpoint((21.664, -52.932, 0.000)), rs.coerce3dpoint((21.730, -52.896, 0.000)), rs.coerce3dpoint((21.732, -52.894, 0.000)), rs.coerce3dpoint((21.734, -52.893, 0.000)), rs.coerce3dpoint((21.813, -52.850, 0.000)), rs.coerce3dpoint((21.884, -52.794, 0.000)), rs.coerce3dpoint((21.953, -52.739, 0.000)), rs.coerce3dpoint((22.007, -52.669, 0.000)), rs.coerce3dpoint((22.089, -52.562, 0.000)), rs.coerce3dpoint((22.117, -52.430, 0.000)), rs.coerce3dpoint((22.135, -52.346, 0.000)), rs.coerce3dpoint((22.134, -52.260, 0.000)), rs.coerce3dpoint((22.136, -49.624, 0.000)), rs.coerce3dpoint((22.139, -46.988, 0.000)), rs.coerce3dpoint((22.138, -46.190, 0.000)), rs.coerce3dpoint((22.138, -45.391, 0.000)), rs.coerce3dpoint((22.137, -45.124, 0.000)), rs.coerce3dpoint((22.134, -44.856, 0.000)), rs.coerce3dpoint((22.133, -44.763, 0.000)), rs.coerce3dpoint((22.129, -44.669, 0.000)), rs.coerce3dpoint((22.128, -44.635, 0.000)), rs.coerce3dpoint((22.123, -44.600, 0.000)), rs.coerce3dpoint((22.122, -44.588, 0.000)), rs.coerce3dpoint((22.119, -44.577, 0.000)), rs.coerce3dpoint((22.110, -44.529, 0.000)), rs.coerce3dpoint((22.089, -44.484, 0.000)), rs.coerce3dpoint((22.072, -44.450, 0.000)), rs.coerce3dpoint((22.050, -44.419, 0.000)), rs.coerce3dpoint((22.015, -44.367, 0.000)), rs.coerce3dpoint((21.973, -44.321, 0.000)), rs.coerce3dpoint((21.926, -44.269, 0.000)), rs.coerce3dpoint((21.868, -44.231, 0.000)), rs.coerce3dpoint((21.804, -44.189, 0.000)), rs.coerce3dpoint((21.728, -44.173, 0.000)), rs.coerce3dpoint((21.726, -44.173, 0.000)), rs.coerce3dpoint((21.724, -44.172, 0.000)), rs.coerce3dpoint((21.599, -44.149, 0.000)), rs.coerce3dpoint((21.472, -44.141, 0.000)), rs.coerce3dpoint((21.355, -44.134, 0.000)), rs.coerce3dpoint((21.239, -44.147, 0.000)), rs.coerce3dpoint((21.118, -44.161, 0.000)), rs.coerce3dpoint((21.003, -44.203, 0.000)), rs.coerce3dpoint((20.843, -44.262, 0.000)), rs.coerce3dpoint((20.716, -44.376, 0.000)), rs.coerce3dpoint((20.668, -44.418, 0.000)), rs.coerce3dpoint((20.626, -44.466, 0.000)), rs.coerce3dpoint((20.586, -44.510, 0.000)), rs.coerce3dpoint((20.552, -44.560, 0.000)), rs.coerce3dpoint((20.508, -44.626, 0.000)), rs.coerce3dpoint((20.467, -44.694, 0.000)), rs.coerce3dpoint((20.383, -44.835, 0.000)), rs.coerce3dpoint((20.303, -44.976, 0.000)), rs.coerce3dpoint((20.175, -45.200, 0.000)), rs.coerce3dpoint((20.049, -45.424, 0.000)), rs.coerce3dpoint((19.843, -45.790, 0.000)), rs.coerce3dpoint((19.636, -46.157, 0.000)), rs.coerce3dpoint((19.483, -46.428, 0.000)), rs.coerce3dpoint((19.330, -46.700, 0.000)), rs.coerce3dpoint((19.147, -47.024, 0.000)), rs.coerce3dpoint((18.967, -47.350, 0.000)), rs.coerce3dpoint((18.873, -47.520, 0.000)), rs.coerce3dpoint((18.783, -47.693, 0.000)), rs.coerce3dpoint((18.730, -47.793, 0.000)), rs.coerce3dpoint((18.682, -47.896, 0.000)), rs.coerce3dpoint((18.651, -47.962, 0.000)), rs.coerce3dpoint((18.627, -48.031, 0.000)), rs.coerce3dpoint((18.601, -48.103, 0.000)), rs.coerce3dpoint((18.590, -48.178, 0.000)), rs.coerce3dpoint((18.589, -48.186, 0.000)), rs.coerce3dpoint((18.588, -48.194, 0.000))], [0.0, 0.0, 0.145559511734, 0.145559511734, 0.326356792966, 0.326356792966, 0.556027208987, 0.556027208987, 0.834987507338, 0.834987507338, 1.09314161756, 1.09314161756, 2.93569548504, 2.93569548504, 4.02168824038, 4.02168824038, 4.65923428511, 4.65923428511, 5.01758267093, 5.01758267093, 5.21751449070, 5.21751449070, 5.33108575865, 5.33108575865, 5.41154493781, 5.41154493781, 5.44234093367, 5.44234093367, 5.59889594659, 5.59889594659, 5.76751269109, 5.76751269109, 5.91596726158, 5.91596726158, 5.92067038820, 5.92067038820, 6.10136021724, 6.10136021724, 6.27646326751, 6.27646326751, 6.54189290781, 6.54189290781, 6.71337425034, 6.71337425034, 11.9853367755, 11.9853367755, 13.5820573048, 13.5820573048, 14.1173836792, 14.1173836792, 14.3040440121, 14.3040440121, 14.3734515459, 14.3734515459, 14.3971691558, 14.3971691558, 14.4948367938, 14.4948367938, 14.5711186146, 14.5711186146, 14.6960997593, 14.6960997593, 14.8339146099, 14.8339146099, 14.9862622014, 14.9862622014, 14.9911593945, 14.9911593945, 15.2450367689, 15.2450367689, 15.4784164944, 15.4784164944, 15.7208371656, 15.7208371656, 16.0584801426, 16.0584801426, 16.1857104591, 16.1857104591, 16.3057919855, 16.3057919855, 16.4644477459, 16.4644477459, 16.7910914233, 16.7910914233, 17.3054743040, 17.3054743040, 18.1462638542, 18.1462638542, 18.7701252594, 18.7701252594, 19.5147764682, 19.5147764682, 19.9037444396, 19.9037444396, 20.1300554576, 20.1300554576, 20.2767535372, 20.2767535372, 20.4280159048, 20.4280159048, 20.4445920714, 20.4445920714], 2, [1.0, 0.995591737851, 1.0, 0.997663452919, 1.0, 0.998800220168, 1.0, 0.999525792463, 1.0, 0.999955820976, 1.0, 0.999993520021, 1.0, 0.999983180141, 1.0, 0.999953921062, 1.0, 0.999872008191, 1.0, 0.999619192521, 1.0, 0.998819716945, 1.0, 0.995684830475, 1.0, 0.999662057112, 1.0, 0.981736318092, 1.0, 0.977901910682, 1.0, 0.989799175141, 1.0, 1.0, 1.0, 0.996222647695, 1.0, 0.992537071949, 1.0, 0.975960289284, 1.0, 0.993725327711, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 0.999878327403, 1.0, 0.999014805543, 1.0, 0.999344994586, 1.0, 0.992018202186, 1.0, 0.997191449524, 1.0, 0.997206387593, 1.0, 0.992242685122, 1.0, 0.982111444216, 1.0, 1.0, 1.0, 0.997941301304, 1.0, 0.996274472728, 1.0, 0.992873404989, 1.0, 0.98292338111, 1.0, 0.998153386566, 1.0, 0.997663452919, 1.0, 0.999630148408, 1.0, 0.999935022111, 1.0, 0.999993520021, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999990320047, 1.0, 0.999930382423, 1.0, 0.99969746577, 1.0, 0.998942559386, 1.0, 0.995091755068, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.142, -38.487, 0.000), (22.142, -37.449, 0.000), (22.142, -36.412, 0.000), (22.141, -35.813, 0.000), (22.140, -35.214, 0.000), (22.140, -35.040, 0.000), (22.137, -34.866, 0.000), (22.136, -34.810, 0.000), (22.133, -34.754, 0.000), (22.131, -34.733, 0.000), (22.128, -34.712, 0.000), (22.113, -34.599, 0.000), (22.075, -34.491, 0.000), (22.039, -34.393, 0.000), (21.981, -34.307, 0.000), (21.926, -34.227, 0.000), (21.850, -34.166, 0.000), (21.739, -34.087, 0.000), (21.603, -34.074, 0.000), (21.381, -34.051, 0.000), (21.219, -34.206, 0.000), (21.194, -34.231, 0.000), (21.172, -34.259, 0.000), (21.130, -34.313, 0.000), (21.095, -34.370, 0.000), (21.075, -34.402, 0.000), (21.056, -34.433, 0.000), (21.038, -34.463, 0.000), (21.020, -34.493, 0.000), (20.638, -35.113, 0.000), (20.257, -35.734, 0.000), (19.821, -36.446, 0.000), (19.385, -37.158, 0.000), (19.173, -37.506, 0.000), (18.965, -37.855, 0.000), (18.856, -38.037, 0.000), (18.751, -38.222, 0.000), (18.694, -38.323, 0.000), (18.642, -38.425, 0.000), (18.611, -38.485, 0.000), (18.585, -38.548, 0.000), (18.565, -38.597, 0.000), (18.553, -38.648, 0.000), (18.550, -38.662, 0.000), (18.548, -38.676, 0.000), (18.539, -38.721, 0.000), (18.540, -38.766, 0.000), (18.542, -38.817, 0.000), (18.555, -38.866, 0.000), (18.571, -38.925, 0.000), (18.594, -38.981, 0.000), (18.627, -39.061, 0.000), (18.667, -39.137, 0.000), (18.694, -39.189, 0.000), (18.723, -39.240, 0.000), (19.043, -39.786, 0.000), (19.374, -40.326, 0.000), (19.623, -40.733, 0.000), (19.882, -41.133, 0.000), (20.073, -41.429, 0.000), (20.274, -41.719, 0.000), (20.423, -41.934, 0.000), (20.582, -42.143, 0.000), (20.696, -42.295, 0.000), (20.820, -42.440, 0.000), (20.911, -42.547, 0.000), (21.011, -42.647, 0.000), (21.086, -42.723, 0.000), (21.168, -42.790, 0.000), (21.233, -42.842, 0.000), (21.304, -42.885, 0.000), (21.367, -42.922, 0.000), (21.435, -42.946, 0.000), (21.520, -42.975, 0.000), (21.609, -42.976, 0.000), (21.683, -42.978, 0.000), (21.756, -42.963, 0.000), (21.818, -42.949, 0.000), (21.873, -42.918, 0.000), (21.912, -42.895, 0.000), (21.944, -42.863, 0.000), (21.981, -42.824, 0.000), (22.004, -42.775, 0.000), (22.027, -42.728, 0.000), (22.040, -42.677, 0.000), (22.058, -42.610, 0.000), (22.068, -42.542, 0.000), (22.080, -42.461, 0.000), (22.087, -42.379, 0.000), (22.101, -42.227, 0.000), (22.108, -42.075, 0.000), (22.119, -41.833, 0.000), (22.123, -41.591, 0.000), (22.131, -41.199, 0.000), (22.133, -40.808, 0.000), (22.138, -40.134, 0.000), (22.139, -39.461, 0.000), (22.140, -39.356, 0.000), (22.140, -39.251, 0.000), (22.141, -38.869, 0.000), (22.142, -38.487, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.142, -38.487, 0.000)), rs.coerce3dpoint((22.142, -37.449, 0.000)), rs.coerce3dpoint((22.142, -36.412, 0.000)), rs.coerce3dpoint((22.141, -35.813, 0.000)), rs.coerce3dpoint((22.140, -35.214, 0.000)), rs.coerce3dpoint((22.140, -35.040, 0.000)), rs.coerce3dpoint((22.137, -34.866, 0.000)), rs.coerce3dpoint((22.136, -34.810, 0.000)), rs.coerce3dpoint((22.133, -34.754, 0.000)), rs.coerce3dpoint((22.131, -34.733, 0.000)), rs.coerce3dpoint((22.128, -34.712, 0.000)), rs.coerce3dpoint((22.113, -34.599, 0.000)), rs.coerce3dpoint((22.075, -34.491, 0.000)), rs.coerce3dpoint((22.039, -34.393, 0.000)), rs.coerce3dpoint((21.981, -34.307, 0.000)), rs.coerce3dpoint((21.926, -34.227, 0.000)), rs.coerce3dpoint((21.850, -34.166, 0.000)), rs.coerce3dpoint((21.739, -34.087, 0.000)), rs.coerce3dpoint((21.603, -34.074, 0.000)), rs.coerce3dpoint((21.381, -34.051, 0.000)), rs.coerce3dpoint((21.219, -34.206, 0.000)), rs.coerce3dpoint((21.194, -34.231, 0.000)), rs.coerce3dpoint((21.172, -34.259, 0.000)), rs.coerce3dpoint((21.130, -34.313, 0.000)), rs.coerce3dpoint((21.095, -34.370, 0.000)), rs.coerce3dpoint((21.075, -34.402, 0.000)), rs.coerce3dpoint((21.056, -34.433, 0.000)), rs.coerce3dpoint((21.038, -34.463, 0.000)), rs.coerce3dpoint((21.020, -34.493, 0.000)), rs.coerce3dpoint((20.638, -35.113, 0.000)), rs.coerce3dpoint((20.257, -35.734, 0.000)), rs.coerce3dpoint((19.821, -36.446, 0.000)), rs.coerce3dpoint((19.385, -37.158, 0.000)), rs.coerce3dpoint((19.173, -37.506, 0.000)), rs.coerce3dpoint((18.965, -37.855, 0.000)), rs.coerce3dpoint((18.856, -38.037, 0.000)), rs.coerce3dpoint((18.751, -38.222, 0.000)), rs.coerce3dpoint((18.694, -38.323, 0.000)), rs.coerce3dpoint((18.642, -38.425, 0.000)), rs.coerce3dpoint((18.611, -38.485, 0.000)), rs.coerce3dpoint((18.585, -38.548, 0.000)), rs.coerce3dpoint((18.565, -38.597, 0.000)), rs.coerce3dpoint((18.553, -38.648, 0.000)), rs.coerce3dpoint((18.550, -38.662, 0.000)), rs.coerce3dpoint((18.548, -38.676, 0.000)), rs.coerce3dpoint((18.539, -38.721, 0.000)), rs.coerce3dpoint((18.540, -38.766, 0.000)), rs.coerce3dpoint((18.542, -38.817, 0.000)), rs.coerce3dpoint((18.555, -38.866, 0.000)), rs.coerce3dpoint((18.571, -38.925, 0.000)), rs.coerce3dpoint((18.594, -38.981, 0.000)), rs.coerce3dpoint((18.627, -39.061, 0.000)), rs.coerce3dpoint((18.667, -39.137, 0.000)), rs.coerce3dpoint((18.694, -39.189, 0.000)), rs.coerce3dpoint((18.723, -39.240, 0.000)), rs.coerce3dpoint((19.043, -39.786, 0.000)), rs.coerce3dpoint((19.374, -40.326, 0.000)), rs.coerce3dpoint((19.623, -40.733, 0.000)), rs.coerce3dpoint((19.882, -41.133, 0.000)), rs.coerce3dpoint((20.073, -41.429, 0.000)), rs.coerce3dpoint((20.274, -41.719, 0.000)), rs.coerce3dpoint((20.423, -41.934, 0.000)), rs.coerce3dpoint((20.582, -42.143, 0.000)), rs.coerce3dpoint((20.696, -42.295, 0.000)), rs.coerce3dpoint((20.820, -42.440, 0.000)), rs.coerce3dpoint((20.911, -42.547, 0.000)), rs.coerce3dpoint((21.011, -42.647, 0.000)), rs.coerce3dpoint((21.086, -42.723, 0.000)), rs.coerce3dpoint((21.168, -42.790, 0.000)), rs.coerce3dpoint((21.233, -42.842, 0.000)), rs.coerce3dpoint((21.304, -42.885, 0.000)), rs.coerce3dpoint((21.367, -42.922, 0.000)), rs.coerce3dpoint((21.435, -42.946, 0.000)), rs.coerce3dpoint((21.520, -42.975, 0.000)), rs.coerce3dpoint((21.609, -42.976, 0.000)), rs.coerce3dpoint((21.683, -42.978, 0.000)), rs.coerce3dpoint((21.756, -42.963, 0.000)), rs.coerce3dpoint((21.818, -42.949, 0.000)), rs.coerce3dpoint((21.873, -42.918, 0.000)), rs.coerce3dpoint((21.912, -42.895, 0.000)), rs.coerce3dpoint((21.944, -42.863, 0.000)), rs.coerce3dpoint((21.981, -42.824, 0.000)), rs.coerce3dpoint((22.004, -42.775, 0.000)), rs.coerce3dpoint((22.027, -42.728, 0.000)), rs.coerce3dpoint((22.040, -42.677, 0.000)), rs.coerce3dpoint((22.058, -42.610, 0.000)), rs.coerce3dpoint((22.068, -42.542, 0.000)), rs.coerce3dpoint((22.080, -42.461, 0.000)), rs.coerce3dpoint((22.087, -42.379, 0.000)), rs.coerce3dpoint((22.101, -42.227, 0.000)), rs.coerce3dpoint((22.108, -42.075, 0.000)), rs.coerce3dpoint((22.119, -41.833, 0.000)), rs.coerce3dpoint((22.123, -41.591, 0.000)), rs.coerce3dpoint((22.131, -41.199, 0.000)), rs.coerce3dpoint((22.133, -40.808, 0.000)), rs.coerce3dpoint((22.138, -40.134, 0.000)), rs.coerce3dpoint((22.139, -39.461, 0.000)), rs.coerce3dpoint((22.140, -39.356, 0.000)), rs.coerce3dpoint((22.140, -39.251, 0.000)), rs.coerce3dpoint((22.141, -38.869, 0.000)), rs.coerce3dpoint((22.142, -38.487, 0.000))], [0.0, 0.0, 2.07479001166, 2.07479001166, 3.27259151859, 3.27259151859, 3.62089042587, 3.62089042587, 3.73303967712, 3.73303967712, 3.77521036312, 3.77521036312, 4.00307036621, 4.00307036621, 4.21030509439, 4.21030509439, 4.40337030033, 4.40337030033, 4.66952574282, 4.66952574282, 5.08884328258, 5.08884328258, 5.16017501262, 5.16017501262, 5.29526941599, 5.29526941599, 5.36944233639, 5.36944233639, 5.43895127945, 5.43895127945, 6.89602958847, 6.89602958847, 8.56578747370, 8.56578747370, 9.37944757544, 9.37944757544, 9.80429954522, 9.80429954522, 10.0349623301, 10.0349623301, 10.1700370260, 10.1700370260, 10.2755248630, 10.2755248630, 10.3036286229, 10.3036286229, 10.3943073088, 10.3943073088, 10.4959280477, 10.4959280477, 10.6167932895, 10.6167932895, 10.7898776834, 10.7898776834, 10.9065532214, 10.9065532214, 12.1727520068, 12.1727520068, 13.1266264935, 13.1266264935, 13.8311017327, 13.8311017327, 14.3553822941, 14.3553822941, 14.7356454857, 14.7356454857, 15.0176419711, 15.0176419711, 15.2306242445, 15.2306242445, 15.3967053704, 15.3967053704, 15.5414703166, 15.5414703166, 15.7186871312, 15.7186871312, 15.8660208491, 15.8660208491, 15.9920560656, 15.9920560656, 16.0817081651, 16.0817081651, 16.1892340517, 16.1892340517, 16.2937238676, 16.2937238676, 16.4315102778, 16.4315102778, 16.5960023256, 16.5960023256, 16.9006935192, 16.9006935192, 17.3845635579, 17.3845635579, 18.1679535851, 18.1679535851, 19.5151082487, 19.5151082487, 19.7247092565, 19.7247092565, 20.4888333462, 20.4888333462], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999707222866, 1.0, 0.999330444228, 1.0, 0.994397736757, 1.0, 0.991942671571, 1.0, 0.989571145552, 1.0, 0.966761726817, 1.0, 0.908228538113, 1.0, 0.997510921616, 1.0, 0.998638507462, 1.0, 0.999972620375, 1.0, 0.99997952021, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999935022111, 1.0, 0.999749151466, 1.0, 0.999093031483, 1.0, 0.996461451758, 1.0, 0.999766747207, 1.0, 0.994689020801, 1.0, 0.993658252844, 1.0, 0.997608542957, 1.0, 0.999014805543, 1.0, 0.999872008191, 1.0, 0.999957680895, 1.0, 0.999925582769, 1.0, 0.999872008191, 1.0, 0.999766747207, 1.0, 0.999585365979, 1.0, 0.999247563187, 1.0, 0.998585880574, 1.0, 0.997339045057, 1.0, 0.994689020801, 1.0, 0.988059219314, 1.0, 0.992585589023, 1.0, 0.988454160226, 1.0, 0.990495760936, 1.0, 0.987059296204, 1.0, 0.995758593879, 1.0, 0.998353975814, 1.0, 0.999556078555, 1.0, 0.999749151466, 1.0, 0.99991550357, 1.0, 0.999978220237, 1.0, 0.999998000002, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-13.393, -36.745, 0.000), (-13.393, -37.441, 0.000), (-13.394, -38.136, 0.000), (-13.394, -38.915, 0.000), (-13.392, -39.693, 0.000), (-13.391, -40.080, 0.000), (-13.385, -40.467, 0.000), (-13.382, -40.676, 0.000), (-13.374, -40.885, 0.000), (-13.370, -41.005, 0.000), (-13.360, -41.124, 0.000), (-13.354, -41.196, 0.000), (-13.342, -41.268, 0.000), (-13.333, -41.321, 0.000), (-13.317, -41.372, 0.000), (-13.307, -41.400, 0.000), (-13.295, -41.427, 0.000), (-13.279, -41.463, 0.000), (-13.257, -41.496, 0.000), (-13.225, -41.541, 0.000), (-13.180, -41.572, 0.000), (-13.138, -41.600, 0.000), (-13.091, -41.620, 0.000), (-13.029, -41.646, 0.000), (-12.965, -41.663, 0.000), (-12.874, -41.687, 0.000), (-12.782, -41.702, 0.000), (-12.772, -41.703, 0.000), (-12.762, -41.705, 0.000), (-12.519, -41.745, 0.000), (-12.273, -41.739, 0.000), (-12.201, -41.737, 0.000), (-12.129, -41.731, 0.000), (-12.023, -41.722, 0.000), (-11.922, -41.690, 0.000), (-11.822, -41.659, 0.000), (-11.736, -41.601, 0.000), (-11.612, -41.517, 0.000), (-11.537, -41.387, 0.000), (-11.488, -41.302, 0.000), (-11.462, -41.207, 0.000), (-11.434, -41.108, 0.000), (-11.426, -41.005, 0.000), (-11.423, -40.975, 0.000), (-11.422, -40.946, 0.000), (-11.414, -38.686, 0.000), (-11.407, -36.427, 0.000), (-11.406, -35.534, 0.000), (-11.404, -34.641, 0.000), (-11.405, -34.241, 0.000), (-11.408, -33.841, 0.000), (-11.410, -33.652, 0.000), (-11.416, -33.463, 0.000), (-11.419, -33.367, 0.000), (-11.426, -33.271, 0.000), (-11.432, -33.198, 0.000), (-11.445, -33.126, 0.000), (-11.446, -33.123, 0.000), (-11.446, -33.120, 0.000), (-11.455, -33.068, 0.000), (-11.476, -33.020, 0.000), (-11.498, -32.967, 0.000), (-11.525, -32.916, 0.000), (-11.573, -32.824, 0.000), (-11.626, -32.734, 0.000), (-11.646, -32.701, 0.000), (-11.666, -32.667, 0.000), (-11.817, -32.432, 0.000), (-11.986, -32.209, 0.000), (-12.078, -32.089, 0.000), (-12.178, -31.975, 0.000), (-12.216, -31.932, 0.000), (-12.257, -31.890, 0.000), (-12.317, -31.828, 0.000), (-12.388, -31.779, 0.000), (-12.454, -31.733, 0.000), (-12.531, -31.705, 0.000), (-12.673, -31.654, 0.000), (-12.819, -31.690, 0.000), (-12.901, -31.711, 0.000), (-12.974, -31.752, 0.000), (-13.055, -31.797, 0.000), (-13.124, -31.859, 0.000), (-13.179, -31.907, 0.000), (-13.227, -31.961, 0.000), (-13.311, -32.091, 0.000), (-13.344, -32.242, 0.000), (-13.354, -32.287, 0.000), (-13.360, -32.333, 0.000), (-13.376, -32.445, 0.000), (-13.384, -32.559, 0.000), (-13.389, -32.644, 0.000), (-13.390, -32.729, 0.000), (-13.391, -32.833, 0.000), (-13.391, -32.938, 0.000), (-13.392, -34.176, 0.000), (-13.392, -35.414, 0.000), (-13.392, -36.080, 0.000), (-13.393, -36.745, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-13.393, -36.745, 0.000)), rs.coerce3dpoint((-13.393, -37.441, 0.000)), rs.coerce3dpoint((-13.394, -38.136, 0.000)), rs.coerce3dpoint((-13.394, -38.915, 0.000)), rs.coerce3dpoint((-13.392, -39.693, 0.000)), rs.coerce3dpoint((-13.391, -40.080, 0.000)), rs.coerce3dpoint((-13.385, -40.467, 0.000)), rs.coerce3dpoint((-13.382, -40.676, 0.000)), rs.coerce3dpoint((-13.374, -40.885, 0.000)), rs.coerce3dpoint((-13.370, -41.005, 0.000)), rs.coerce3dpoint((-13.360, -41.124, 0.000)), rs.coerce3dpoint((-13.354, -41.196, 0.000)), rs.coerce3dpoint((-13.342, -41.268, 0.000)), rs.coerce3dpoint((-13.333, -41.321, 0.000)), rs.coerce3dpoint((-13.317, -41.372, 0.000)), rs.coerce3dpoint((-13.307, -41.400, 0.000)), rs.coerce3dpoint((-13.295, -41.427, 0.000)), rs.coerce3dpoint((-13.279, -41.463, 0.000)), rs.coerce3dpoint((-13.257, -41.496, 0.000)), rs.coerce3dpoint((-13.225, -41.541, 0.000)), rs.coerce3dpoint((-13.180, -41.572, 0.000)), rs.coerce3dpoint((-13.138, -41.600, 0.000)), rs.coerce3dpoint((-13.091, -41.620, 0.000)), rs.coerce3dpoint((-13.029, -41.646, 0.000)), rs.coerce3dpoint((-12.965, -41.663, 0.000)), rs.coerce3dpoint((-12.874, -41.687, 0.000)), rs.coerce3dpoint((-12.782, -41.702, 0.000)), rs.coerce3dpoint((-12.772, -41.703, 0.000)), rs.coerce3dpoint((-12.762, -41.705, 0.000)), rs.coerce3dpoint((-12.519, -41.745, 0.000)), rs.coerce3dpoint((-12.273, -41.739, 0.000)), rs.coerce3dpoint((-12.201, -41.737, 0.000)), rs.coerce3dpoint((-12.129, -41.731, 0.000)), rs.coerce3dpoint((-12.023, -41.722, 0.000)), rs.coerce3dpoint((-11.922, -41.690, 0.000)), rs.coerce3dpoint((-11.822, -41.659, 0.000)), rs.coerce3dpoint((-11.736, -41.601, 0.000)), rs.coerce3dpoint((-11.612, -41.517, 0.000)), rs.coerce3dpoint((-11.537, -41.387, 0.000)), rs.coerce3dpoint((-11.488, -41.302, 0.000)), rs.coerce3dpoint((-11.462, -41.207, 0.000)), rs.coerce3dpoint((-11.434, -41.108, 0.000)), rs.coerce3dpoint((-11.426, -41.005, 0.000)), rs.coerce3dpoint((-11.423, -40.975, 0.000)), rs.coerce3dpoint((-11.422, -40.946, 0.000)), rs.coerce3dpoint((-11.414, -38.686, 0.000)), rs.coerce3dpoint((-11.407, -36.427, 0.000)), rs.coerce3dpoint((-11.406, -35.534, 0.000)), rs.coerce3dpoint((-11.404, -34.641, 0.000)), rs.coerce3dpoint((-11.405, -34.241, 0.000)), rs.coerce3dpoint((-11.408, -33.841, 0.000)), rs.coerce3dpoint((-11.410, -33.652, 0.000)), rs.coerce3dpoint((-11.416, -33.463, 0.000)), rs.coerce3dpoint((-11.419, -33.367, 0.000)), rs.coerce3dpoint((-11.426, -33.271, 0.000)), rs.coerce3dpoint((-11.432, -33.198, 0.000)), rs.coerce3dpoint((-11.445, -33.126, 0.000)), rs.coerce3dpoint((-11.446, -33.123, 0.000)), rs.coerce3dpoint((-11.446, -33.120, 0.000)), rs.coerce3dpoint((-11.455, -33.068, 0.000)), rs.coerce3dpoint((-11.476, -33.020, 0.000)), rs.coerce3dpoint((-11.498, -32.967, 0.000)), rs.coerce3dpoint((-11.525, -32.916, 0.000)), rs.coerce3dpoint((-11.573, -32.824, 0.000)), rs.coerce3dpoint((-11.626, -32.734, 0.000)), rs.coerce3dpoint((-11.646, -32.701, 0.000)), rs.coerce3dpoint((-11.666, -32.667, 0.000)), rs.coerce3dpoint((-11.817, -32.432, 0.000)), rs.coerce3dpoint((-11.986, -32.209, 0.000)), rs.coerce3dpoint((-12.078, -32.089, 0.000)), rs.coerce3dpoint((-12.178, -31.975, 0.000)), rs.coerce3dpoint((-12.216, -31.932, 0.000)), rs.coerce3dpoint((-12.257, -31.890, 0.000)), rs.coerce3dpoint((-12.317, -31.828, 0.000)), rs.coerce3dpoint((-12.388, -31.779, 0.000)), rs.coerce3dpoint((-12.454, -31.733, 0.000)), rs.coerce3dpoint((-12.531, -31.705, 0.000)), rs.coerce3dpoint((-12.673, -31.654, 0.000)), rs.coerce3dpoint((-12.819, -31.690, 0.000)), rs.coerce3dpoint((-12.901, -31.711, 0.000)), rs.coerce3dpoint((-12.974, -31.752, 0.000)), rs.coerce3dpoint((-13.055, -31.797, 0.000)), rs.coerce3dpoint((-13.124, -31.859, 0.000)), rs.coerce3dpoint((-13.179, -31.907, 0.000)), rs.coerce3dpoint((-13.227, -31.961, 0.000)), rs.coerce3dpoint((-13.311, -32.091, 0.000)), rs.coerce3dpoint((-13.344, -32.242, 0.000)), rs.coerce3dpoint((-13.354, -32.287, 0.000)), rs.coerce3dpoint((-13.360, -32.333, 0.000)), rs.coerce3dpoint((-13.376, -32.445, 0.000)), rs.coerce3dpoint((-13.384, -32.559, 0.000)), rs.coerce3dpoint((-13.389, -32.644, 0.000)), rs.coerce3dpoint((-13.390, -32.729, 0.000)), rs.coerce3dpoint((-13.391, -32.833, 0.000)), rs.coerce3dpoint((-13.391, -32.938, 0.000)), rs.coerce3dpoint((-13.392, -34.176, 0.000)), rs.coerce3dpoint((-13.392, -35.414, 0.000)), rs.coerce3dpoint((-13.392, -36.080, 0.000)), rs.coerce3dpoint((-13.393, -36.745, 0.000))], [0.0, 0.0, 1.39088033824, 1.39088033824, 2.94754275348, 2.94754275348, 3.72113706591, 3.72113706591, 4.13995742578, 4.13995742578, 4.37927378944, 4.37927378944, 4.52450053297, 4.52450053297, 4.63190554671, 4.63190554671, 4.69081629819, 4.69081629819, 4.76946341112, 4.76946341112, 4.87797371892, 4.87797371892, 4.97939919528, 4.97939919528, 5.11276420046, 5.11276420046, 5.30032355062, 5.30032355062, 5.32039338869, 5.32039338869, 5.81113900449, 5.81113900449, 5.95568526589, 5.95568526589, 6.16686931558, 6.16686931558, 6.37412863640, 6.37412863640, 6.66817146368, 6.66817146368, 6.86419063815, 6.86419063815, 7.06954627355, 7.06954627355, 7.12899473361, 7.12899473361, 11.6476206365, 11.6476206365, 13.4333321048, 13.4333321048, 14.2335650752, 14.2335650752, 14.6115164490, 14.6115164490, 14.8042102861, 14.8042102861, 14.9503487326, 14.9503487326, 14.9560186973, 14.9560186973, 15.0609153992, 15.0609153992, 15.1759808649, 15.1759808649, 15.3841835975, 15.3841835975, 15.4617937804, 15.4617937804, 16.0211080560, 16.0211080560, 16.3233396475, 16.3233396475, 16.4400230329, 16.4400230329, 16.6115183109, 16.6115183109, 16.7727346202, 16.7727346202, 17.0657103344, 17.0657103344, 17.2330727893, 17.2330727893, 17.4177432508, 17.4177432508, 17.5622866135, 17.5622866135, 17.8689546734, 17.8689546734, 17.9607677552, 17.9607677552, 18.1881528472, 18.1881528472, 18.3580387505, 18.3580387505, 18.5675423466, 18.5675423466, 21.0439827037, 21.0439827037, 22.3749327798, 22.3749327798], 2, [1.0, 1.0, 1.0, 0.999997580003, 1.0, 0.999983180141, 1.0, 0.999928002592, 1.0, 0.999735534975, 1.0, 0.999118388791, 1.0, 0.997039887627, 1.0, 0.998760748348, 1.0, 0.995383460871, 1.0, 0.984142022664, 1.0, 0.994750435227, 1.0, 0.997566943487, 1.0, 0.99884866317, 1.0, 1.0, 1.0, 0.995684830475, 1.0, 0.999513398419, 1.0, 0.993769848041, 1.0, 0.989884046372, 1.0, 0.974474604401, 1.0, 0.992242685122, 1.0, 0.995325829525, 1.0, 0.999744652605, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999941681701, 1.0, 0.99972155877, 1.0, 0.998422025984, 1.0, 1.0, 1.0, 0.993814211347, 1.0, 0.998969950774, 1.0, 0.99969746577, 1.0, 1.0, 1.0, 0.99915164001, 1.0, 0.99937361624, 1.0, 0.99968754882, 1.0, 0.995267843209, 1.0, 0.991611313233, 1.0, 0.956960776899, 1.0, 0.990982263942, 1.0, 0.994313096546, 1.0, 0.998017467168, 1.0, 0.98396557042, 1.0, 0.998979001485, 1.0, 0.999494507793, 1.0, 0.999579588392, 1.0, 0.999982000162, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(12.477, -5.796, 0.000), (12.477, -5.438, 0.000), (12.478, -5.080, 0.000), (12.479, -4.568, 0.000), (12.480, -4.055, 0.000), (12.480, -3.976, 0.000), (12.480, -3.898, 0.000), (12.480, -3.869, 0.000), (12.481, -3.841, 0.000), (12.481, -3.840, 0.000), (12.481, -3.839, 0.000), (12.482, -3.794, 0.000), (12.476, -3.749, 0.000), (12.472, -3.718, 0.000), (12.467, -3.688, 0.000), (12.447, -3.565, 0.000), (12.389, -3.455, 0.000), (12.319, -3.320, 0.000), (12.198, -3.227, 0.000), (11.982, -3.061, 0.000), (11.712, -3.099, 0.000), (11.587, -3.117, 0.000), (11.476, -3.176, 0.000), (11.444, -3.193, 0.000), (11.413, -3.213, 0.000), (11.324, -3.271, 0.000), (11.251, -3.350, 0.000), (11.190, -3.417, 0.000), (11.144, -3.495, 0.000), (10.540, -4.542, 0.000), (9.935, -5.590, 0.000), (9.765, -5.886, 0.000), (9.596, -6.183, 0.000), (9.542, -6.279, 0.000), (9.490, -6.376, 0.000), (9.470, -6.413, 0.000), (9.453, -6.451, 0.000), (9.447, -6.464, 0.000), (9.442, -6.476, 0.000), (9.410, -6.561, 0.000), (9.398, -6.651, 0.000), (9.388, -6.725, 0.000), (9.386, -6.800, 0.000), (9.384, -6.848, 0.000), (9.384, -6.895, 0.000), (9.381, -8.586, 0.000), (9.377, -10.278, 0.000), (9.376, -10.370, 0.000), (9.382, -10.461, 0.000), (9.392, -10.595, 0.000), (9.405, -10.729, 0.000), (9.407, -10.748, 0.000), (9.408, -10.767, 0.000), (9.417, -10.860, 0.000), (9.440, -10.950, 0.000), (9.463, -11.037, 0.000), (9.505, -11.117, 0.000), (9.562, -11.225, 0.000), (9.654, -11.306, 0.000), (9.708, -11.354, 0.000), (9.770, -11.393, 0.000), (9.821, -11.426, 0.000), (9.877, -11.451, 0.000), (9.938, -11.478, 0.000), (10.004, -11.486, 0.000), (10.084, -11.494, 0.000), (10.161, -11.472, 0.000), (10.225, -11.454, 0.000), (10.284, -11.420, 0.000), (10.351, -11.382, 0.000), (10.410, -11.333, 0.000), (10.484, -11.272, 0.000), (10.550, -11.202, 0.000), (10.598, -11.150, 0.000), (10.642, -11.096, 0.000), (10.699, -11.021, 0.000), (10.751, -10.944, 0.000), (10.854, -10.791, 0.000), (10.952, -10.635, 0.000), (11.123, -10.362, 0.000), (11.289, -10.086, 0.000), (11.542, -9.666, 0.000), (11.789, -9.243, 0.000), (11.856, -9.129, 0.000), (11.923, -9.014, 0.000), (12.077, -8.753, 0.000), (12.228, -8.491, 0.000), (12.279, -8.403, 0.000), (12.328, -8.314, 0.000), (12.355, -8.264, 0.000), (12.378, -8.212, 0.000), (12.418, -8.122, 0.000), (12.442, -8.025, 0.000), (12.459, -7.955, 0.000), (12.466, -7.883, 0.000), (12.473, -7.826, 0.000), (12.474, -7.767, 0.000), (12.477, -7.656, 0.000), (12.477, -7.545, 0.000), (12.479, -7.211, 0.000), (12.478, -6.877, 0.000), (12.478, -6.613, 0.000), (12.477, -6.348, 0.000), (12.477, -6.072, 0.000), (12.477, -5.796, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((12.477, -5.796, 0.000)), rs.coerce3dpoint((12.477, -5.438, 0.000)), rs.coerce3dpoint((12.478, -5.080, 0.000)), rs.coerce3dpoint((12.479, -4.568, 0.000)), rs.coerce3dpoint((12.480, -4.055, 0.000)), rs.coerce3dpoint((12.480, -3.976, 0.000)), rs.coerce3dpoint((12.480, -3.898, 0.000)), rs.coerce3dpoint((12.480, -3.869, 0.000)), rs.coerce3dpoint((12.481, -3.841, 0.000)), rs.coerce3dpoint((12.481, -3.840, 0.000)), rs.coerce3dpoint((12.481, -3.839, 0.000)), rs.coerce3dpoint((12.482, -3.794, 0.000)), rs.coerce3dpoint((12.476, -3.749, 0.000)), rs.coerce3dpoint((12.472, -3.718, 0.000)), rs.coerce3dpoint((12.467, -3.688, 0.000)), rs.coerce3dpoint((12.447, -3.565, 0.000)), rs.coerce3dpoint((12.389, -3.455, 0.000)), rs.coerce3dpoint((12.319, -3.320, 0.000)), rs.coerce3dpoint((12.198, -3.227, 0.000)), rs.coerce3dpoint((11.982, -3.061, 0.000)), rs.coerce3dpoint((11.712, -3.099, 0.000)), rs.coerce3dpoint((11.587, -3.117, 0.000)), rs.coerce3dpoint((11.476, -3.176, 0.000)), rs.coerce3dpoint((11.444, -3.193, 0.000)), rs.coerce3dpoint((11.413, -3.213, 0.000)), rs.coerce3dpoint((11.324, -3.271, 0.000)), rs.coerce3dpoint((11.251, -3.350, 0.000)), rs.coerce3dpoint((11.190, -3.417, 0.000)), rs.coerce3dpoint((11.144, -3.495, 0.000)), rs.coerce3dpoint((10.540, -4.542, 0.000)), rs.coerce3dpoint((9.935, -5.590, 0.000)), rs.coerce3dpoint((9.765, -5.886, 0.000)), rs.coerce3dpoint((9.596, -6.183, 0.000)), rs.coerce3dpoint((9.542, -6.279, 0.000)), rs.coerce3dpoint((9.490, -6.376, 0.000)), rs.coerce3dpoint((9.470, -6.413, 0.000)), rs.coerce3dpoint((9.453, -6.451, 0.000)), rs.coerce3dpoint((9.447, -6.464, 0.000)), rs.coerce3dpoint((9.442, -6.476, 0.000)), rs.coerce3dpoint((9.410, -6.561, 0.000)), rs.coerce3dpoint((9.398, -6.651, 0.000)), rs.coerce3dpoint((9.388, -6.725, 0.000)), rs.coerce3dpoint((9.386, -6.800, 0.000)), rs.coerce3dpoint((9.384, -6.848, 0.000)), rs.coerce3dpoint((9.384, -6.895, 0.000)), rs.coerce3dpoint((9.381, -8.586, 0.000)), rs.coerce3dpoint((9.377, -10.278, 0.000)), rs.coerce3dpoint((9.376, -10.370, 0.000)), rs.coerce3dpoint((9.382, -10.461, 0.000)), rs.coerce3dpoint((9.392, -10.595, 0.000)), rs.coerce3dpoint((9.405, -10.729, 0.000)), rs.coerce3dpoint((9.407, -10.748, 0.000)), rs.coerce3dpoint((9.408, -10.767, 0.000)), rs.coerce3dpoint((9.417, -10.860, 0.000)), rs.coerce3dpoint((9.440, -10.950, 0.000)), rs.coerce3dpoint((9.463, -11.037, 0.000)), rs.coerce3dpoint((9.505, -11.117, 0.000)), rs.coerce3dpoint((9.562, -11.225, 0.000)), rs.coerce3dpoint((9.654, -11.306, 0.000)), rs.coerce3dpoint((9.708, -11.354, 0.000)), rs.coerce3dpoint((9.770, -11.393, 0.000)), rs.coerce3dpoint((9.821, -11.426, 0.000)), rs.coerce3dpoint((9.877, -11.451, 0.000)), rs.coerce3dpoint((9.938, -11.478, 0.000)), rs.coerce3dpoint((10.004, -11.486, 0.000)), rs.coerce3dpoint((10.084, -11.494, 0.000)), rs.coerce3dpoint((10.161, -11.472, 0.000)), rs.coerce3dpoint((10.225, -11.454, 0.000)), rs.coerce3dpoint((10.284, -11.420, 0.000)), rs.coerce3dpoint((10.351, -11.382, 0.000)), rs.coerce3dpoint((10.410, -11.333, 0.000)), rs.coerce3dpoint((10.484, -11.272, 0.000)), rs.coerce3dpoint((10.550, -11.202, 0.000)), rs.coerce3dpoint((10.598, -11.150, 0.000)), rs.coerce3dpoint((10.642, -11.096, 0.000)), rs.coerce3dpoint((10.699, -11.021, 0.000)), rs.coerce3dpoint((10.751, -10.944, 0.000)), rs.coerce3dpoint((10.854, -10.791, 0.000)), rs.coerce3dpoint((10.952, -10.635, 0.000)), rs.coerce3dpoint((11.123, -10.362, 0.000)), rs.coerce3dpoint((11.289, -10.086, 0.000)), rs.coerce3dpoint((11.542, -9.666, 0.000)), rs.coerce3dpoint((11.789, -9.243, 0.000)), rs.coerce3dpoint((11.856, -9.129, 0.000)), rs.coerce3dpoint((11.923, -9.014, 0.000)), rs.coerce3dpoint((12.077, -8.753, 0.000)), rs.coerce3dpoint((12.228, -8.491, 0.000)), rs.coerce3dpoint((12.279, -8.403, 0.000)), rs.coerce3dpoint((12.328, -8.314, 0.000)), rs.coerce3dpoint((12.355, -8.264, 0.000)), rs.coerce3dpoint((12.378, -8.212, 0.000)), rs.coerce3dpoint((12.418, -8.122, 0.000)), rs.coerce3dpoint((12.442, -8.025, 0.000)), rs.coerce3dpoint((12.459, -7.955, 0.000)), rs.coerce3dpoint((12.466, -7.883, 0.000)), rs.coerce3dpoint((12.473, -7.826, 0.000)), rs.coerce3dpoint((12.474, -7.767, 0.000)), rs.coerce3dpoint((12.477, -7.656, 0.000)), rs.coerce3dpoint((12.477, -7.545, 0.000)), rs.coerce3dpoint((12.479, -7.211, 0.000)), rs.coerce3dpoint((12.478, -6.877, 0.000)), rs.coerce3dpoint((12.478, -6.613, 0.000)), rs.coerce3dpoint((12.477, -6.348, 0.000)), rs.coerce3dpoint((12.477, -6.072, 0.000)), rs.coerce3dpoint((12.477, -5.796, 0.000))], [0.0, 0.0, 0.715781039704, 0.715781039704, 1.74043274609, 1.74043274609, 1.89822373981, 1.89822373981, 1.95483813206, 1.95483813206, 1.95657839066, 1.95657839066, 2.04679541650, 2.04679541650, 2.10923042801, 2.10923042801, 2.35591561957, 2.35591561957, 2.65476752339, 2.65476752339, 3.17173511650, 3.17173511650, 3.42105513832, 3.42105513832, 3.49338753398, 3.49338753398, 3.70641122563, 3.70641122563, 3.88676097610, 3.88676097610, 6.30580979183, 6.30580979183, 6.98896747260, 6.98896747260, 7.20930522510, 7.20930522510, 7.29323251352, 7.29323251352, 7.32026337757, 7.32026337757, 7.50050541610, 7.50050541610, 7.65082786028, 7.65082786028, 7.74522422664, 7.74522422664, 11.1279126077, 11.1279126077, 11.3118826835, 11.3118826835, 11.5804441227, 11.5804441227, 11.6182786638, 11.6182786638, 11.8049612290, 11.8049612290, 11.9839816642, 11.9839816642, 12.2257315394, 12.2257315394, 12.3715600046, 12.3715600046, 12.4926576031, 12.4926576031, 12.6254728929, 12.6254728929, 12.7834985553, 12.7834985553, 12.9175063996, 12.9175063996, 13.0709305520, 13.0709305520, 13.2629064918, 13.2629064918, 13.4033882214, 13.4033882214, 13.5907632080, 13.5907632080, 13.9593063615, 13.9593063615, 14.6031656770, 14.6031656770, 15.5830598671, 15.5830598671, 15.8490674544, 15.8490674544, 16.4537461573, 16.4537461573, 16.6573828798, 16.6573828798, 16.7705119739, 16.7705119739, 16.9689673968, 16.9689673968, 17.1126600675, 17.1126600675, 17.2289945447, 17.2289945447, 17.4517272307, 17.4517272307, 18.1192486673, 18.1192486673, 18.6483091043, 18.6483091043, 19.2006195736, 19.2006195736], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999971120417, 1.0, 1.0, 1.0, 0.996478212433, 1.0, 0.999740113775, 1.0, 0.98756418851, 1.0, 0.976559565041, 1.0, 0.922261422152, 1.0, 0.984872709468, 1.0, 0.998979001485, 1.0, 0.992242685122, 1.0, 0.994334315586, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99992062315, 1.0, 0.999278260548, 1.0, 0.999707222866, 1.0, 0.993108945408, 1.0, 0.998617576209, 1.0, 0.999848631457, 1.0, 1.0, 1.0, 0.99923978907, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.996643642038, 1.0, 0.993477660053, 1.0, 0.984000937083, 1.0, 0.996740999211, 1.0, 0.99665996724, 1.0, 0.989078348712, 1.0, 0.981395469288, 1.0, 0.992920826357, 1.0, 0.996187899929, 1.0, 0.99778467655, 1.0, 0.999475257713, 1.0, 0.999608076817, 1.0, 0.999862229491, 1.0, 0.99995000125, 1.0, 0.999983180141, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999893425679, 1.0, 0.999176159496, 1.0, 0.995849909532, 1.0, 0.99799223758, 1.0, 0.999176159496, 1.0, 0.99991550357, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.521, -47.256, 0.000), (-14.522, -46.161, 0.000), (-14.522, -45.066, 0.000), (-14.522, -44.683, 0.000), (-14.526, -44.300, 0.000), (-14.527, -44.140, 0.000), (-14.532, -43.981, 0.000), (-14.535, -43.890, 0.000), (-14.541, -43.799, 0.000), (-14.548, -43.702, 0.000), (-14.576, -43.609, 0.000), (-14.605, -43.513, 0.000), (-14.661, -43.430, 0.000), (-14.740, -43.314, 0.000), (-14.862, -43.246, 0.000), (-14.934, -43.206, 0.000), (-15.013, -43.183, 0.000), (-15.095, -43.158, 0.000), (-15.180, -43.155, 0.000), (-15.329, -43.150, 0.000), (-15.459, -43.223, 0.000), (-15.533, -43.264, 0.000), (-15.594, -43.323, 0.000), (-15.654, -43.380, 0.000), (-15.703, -43.448, 0.000), (-15.804, -43.585, 0.000), (-15.895, -43.730, 0.000), (-15.983, -43.872, 0.000), (-16.066, -44.017, 0.000), (-16.679, -45.086, 0.000), (-17.291, -46.155, 0.000), (-17.378, -46.306, 0.000), (-17.463, -46.457, 0.000), (-17.478, -46.484, 0.000), (-17.492, -46.511, 0.000), (-17.558, -46.634, 0.000), (-17.619, -46.759, 0.000), (-17.650, -46.824, 0.000), (-17.682, -46.890, 0.000), (-17.726, -46.982, 0.000), (-17.750, -47.082, 0.000), (-17.788, -47.249, 0.000), (-17.752, -47.417, 0.000), (-17.730, -47.517, 0.000), (-17.687, -47.610, 0.000), (-17.662, -47.666, 0.000), (-17.631, -47.720, 0.000), (-17.148, -48.578, 0.000), (-16.665, -49.435, 0.000), (-16.364, -49.969, 0.000), (-16.062, -50.503, 0.000), (-15.994, -50.625, 0.000), (-15.923, -50.746, 0.000), (-15.902, -50.782, 0.000), (-15.879, -50.817, 0.000), (-15.878, -50.818, 0.000), (-15.877, -50.820, 0.000), (-15.822, -50.901, 0.000), (-15.757, -50.975, 0.000), (-15.700, -51.040, 0.000), (-15.639, -51.103, 0.000), (-15.579, -51.164, 0.000), (-15.509, -51.213, 0.000), (-15.442, -51.260, 0.000), (-15.364, -51.288, 0.000), (-15.256, -51.326, 0.000), (-15.143, -51.313, 0.000), (-15.040, -51.302, 0.000), (-14.946, -51.257, 0.000), (-14.827, -51.200, 0.000), (-14.734, -51.105, 0.000), (-14.641, -51.010, 0.000), (-14.586, -50.888, 0.000), (-14.549, -50.805, 0.000), (-14.537, -50.714, 0.000), (-14.532, -50.673, 0.000), (-14.531, -50.633, 0.000), (-14.527, -50.539, 0.000), (-14.526, -50.445, 0.000), (-14.524, -50.146, 0.000), (-14.523, -49.847, 0.000), (-14.522, -48.801, 0.000), (-14.521, -47.755, 0.000), (-14.521, -47.505, 0.000), (-14.521, -47.256, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.521, -47.256, 0.000)), rs.coerce3dpoint((-14.522, -46.161, 0.000)), rs.coerce3dpoint((-14.522, -45.066, 0.000)), rs.coerce3dpoint((-14.522, -44.683, 0.000)), rs.coerce3dpoint((-14.526, -44.300, 0.000)), rs.coerce3dpoint((-14.527, -44.140, 0.000)), rs.coerce3dpoint((-14.532, -43.981, 0.000)), rs.coerce3dpoint((-14.535, -43.890, 0.000)), rs.coerce3dpoint((-14.541, -43.799, 0.000)), rs.coerce3dpoint((-14.548, -43.702, 0.000)), rs.coerce3dpoint((-14.576, -43.609, 0.000)), rs.coerce3dpoint((-14.605, -43.513, 0.000)), rs.coerce3dpoint((-14.661, -43.430, 0.000)), rs.coerce3dpoint((-14.740, -43.314, 0.000)), rs.coerce3dpoint((-14.862, -43.246, 0.000)), rs.coerce3dpoint((-14.934, -43.206, 0.000)), rs.coerce3dpoint((-15.013, -43.183, 0.000)), rs.coerce3dpoint((-15.095, -43.158, 0.000)), rs.coerce3dpoint((-15.180, -43.155, 0.000)), rs.coerce3dpoint((-15.329, -43.150, 0.000)), rs.coerce3dpoint((-15.459, -43.223, 0.000)), rs.coerce3dpoint((-15.533, -43.264, 0.000)), rs.coerce3dpoint((-15.594, -43.323, 0.000)), rs.coerce3dpoint((-15.654, -43.380, 0.000)), rs.coerce3dpoint((-15.703, -43.448, 0.000)), rs.coerce3dpoint((-15.804, -43.585, 0.000)), rs.coerce3dpoint((-15.895, -43.730, 0.000)), rs.coerce3dpoint((-15.983, -43.872, 0.000)), rs.coerce3dpoint((-16.066, -44.017, 0.000)), rs.coerce3dpoint((-16.679, -45.086, 0.000)), rs.coerce3dpoint((-17.291, -46.155, 0.000)), rs.coerce3dpoint((-17.378, -46.306, 0.000)), rs.coerce3dpoint((-17.463, -46.457, 0.000)), rs.coerce3dpoint((-17.478, -46.484, 0.000)), rs.coerce3dpoint((-17.492, -46.511, 0.000)), rs.coerce3dpoint((-17.558, -46.634, 0.000)), rs.coerce3dpoint((-17.619, -46.759, 0.000)), rs.coerce3dpoint((-17.650, -46.824, 0.000)), rs.coerce3dpoint((-17.682, -46.890, 0.000)), rs.coerce3dpoint((-17.726, -46.982, 0.000)), rs.coerce3dpoint((-17.750, -47.082, 0.000)), rs.coerce3dpoint((-17.788, -47.249, 0.000)), rs.coerce3dpoint((-17.752, -47.417, 0.000)), rs.coerce3dpoint((-17.730, -47.517, 0.000)), rs.coerce3dpoint((-17.687, -47.610, 0.000)), rs.coerce3dpoint((-17.662, -47.666, 0.000)), rs.coerce3dpoint((-17.631, -47.720, 0.000)), rs.coerce3dpoint((-17.148, -48.578, 0.000)), rs.coerce3dpoint((-16.665, -49.435, 0.000)), rs.coerce3dpoint((-16.364, -49.969, 0.000)), rs.coerce3dpoint((-16.062, -50.503, 0.000)), rs.coerce3dpoint((-15.994, -50.625, 0.000)), rs.coerce3dpoint((-15.923, -50.746, 0.000)), rs.coerce3dpoint((-15.902, -50.782, 0.000)), rs.coerce3dpoint((-15.879, -50.817, 0.000)), rs.coerce3dpoint((-15.878, -50.818, 0.000)), rs.coerce3dpoint((-15.877, -50.820, 0.000)), rs.coerce3dpoint((-15.822, -50.901, 0.000)), rs.coerce3dpoint((-15.757, -50.975, 0.000)), rs.coerce3dpoint((-15.700, -51.040, 0.000)), rs.coerce3dpoint((-15.639, -51.103, 0.000)), rs.coerce3dpoint((-15.579, -51.164, 0.000)), rs.coerce3dpoint((-15.509, -51.213, 0.000)), rs.coerce3dpoint((-15.442, -51.260, 0.000)), rs.coerce3dpoint((-15.364, -51.288, 0.000)), rs.coerce3dpoint((-15.256, -51.326, 0.000)), rs.coerce3dpoint((-15.143, -51.313, 0.000)), rs.coerce3dpoint((-15.040, -51.302, 0.000)), rs.coerce3dpoint((-14.946, -51.257, 0.000)), rs.coerce3dpoint((-14.827, -51.200, 0.000)), rs.coerce3dpoint((-14.734, -51.105, 0.000)), rs.coerce3dpoint((-14.641, -51.010, 0.000)), rs.coerce3dpoint((-14.586, -50.888, 0.000)), rs.coerce3dpoint((-14.549, -50.805, 0.000)), rs.coerce3dpoint((-14.537, -50.714, 0.000)), rs.coerce3dpoint((-14.532, -50.673, 0.000)), rs.coerce3dpoint((-14.531, -50.633, 0.000)), rs.coerce3dpoint((-14.527, -50.539, 0.000)), rs.coerce3dpoint((-14.526, -50.445, 0.000)), rs.coerce3dpoint((-14.524, -50.146, 0.000)), rs.coerce3dpoint((-14.523, -49.847, 0.000)), rs.coerce3dpoint((-14.522, -48.801, 0.000)), rs.coerce3dpoint((-14.521, -47.755, 0.000)), rs.coerce3dpoint((-14.521, -47.505, 0.000)), rs.coerce3dpoint((-14.521, -47.256, 0.000))], [0.0, 0.0, 2.18980021484, 2.18980021484, 2.95585143628, 2.95585143628, 3.27499371673, 3.27499371673, 3.45696603451, 3.45696603451, 3.65121823505, 3.65121823505, 3.84984243798, 3.84984243798, 4.12465491848, 4.12465491848, 4.28870750724, 4.28870750724, 4.45819556241, 4.45819556241, 4.74929130210, 4.74929130210, 4.91722183064, 4.91722183064, 5.08354982621, 5.08354982621, 5.42494065063, 5.42494065063, 5.75887938044, 5.75887938044, 8.22374737863, 8.22374737863, 8.57090325262, 8.57090325262, 8.63199595694, 8.63199595694, 8.91037065467, 8.91037065467, 9.05585616480, 9.05585616480, 9.26030828732, 9.26030828732, 9.59755055525, 9.59755055525, 9.80126991298, 9.80126991298, 9.92517679362, 9.92517679362, 11.8933661132, 11.8933661132, 13.1201237064, 13.1201237064, 13.3996465897, 13.3996465897, 13.4833689612, 13.4833689612, 13.4866472687, 13.4866472687, 13.6831738825, 13.6831738825, 13.8572322371, 13.8572322371, 14.0277386689, 14.0277386689, 14.1916961834, 14.1916961834, 14.4157894780, 14.4157894780, 14.6217715285, 14.6217715285, 14.8838436081, 14.8838436081, 15.1475839524, 15.1475839524, 15.3294887814, 15.3294887814, 15.4108800514, 15.4108800514, 15.5982207430, 15.5982207430, 16.1965613831, 16.1965613831, 18.2891422457, 18.2891422457, 18.7878422626, 18.7878422626], 2, [1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.99993950183, 1.0, 0.999775305247, 1.0, 0.993613340048, 1.0, 0.988664117365, 1.0, 0.973670738925, 1.0, 0.993363514784, 1.0, 0.991841417554, 1.0, 0.962942087437, 1.0, 0.992143305546, 1.0, 0.996100338535, 1.0, 0.999278260548, 1.0, 0.999830734327, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.999968000512, 1.0, 0.999775305247, 1.0, 0.999991180039, 1.0, 0.993814211347, 1.0, 0.975960289284, 1.0, 0.994334315586, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999507141485, 1.0, 1.0, 1.0, 0.997850632376, 1.0, 0.999630148408, 1.0, 0.995248435566, 1.0, 0.990982263942, 1.0, 0.975135337261, 1.0, 0.986086096495, 1.0, 0.984387454667, 1.0, 0.984212336753, 1.0, 0.989513750504, 1.0, 0.998896109623, 1.0, 0.999896325374, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-7.415, -31.937, 0.000), (-7.416, -32.759, 0.000), (-7.416, -33.581, 0.000), (-7.416, -33.881, 0.000), (-7.413, -34.181, 0.000), (-7.411, -34.330, 0.000), (-7.406, -34.479, 0.000), (-7.403, -34.555, 0.000), (-7.384, -34.629, 0.000), (-7.368, -34.698, 0.000), (-7.337, -34.762, 0.000), (-7.311, -34.816, 0.000), (-7.271, -34.861, 0.000), (-7.223, -34.915, 0.000), (-7.156, -34.942, 0.000), (-7.123, -34.955, 0.000), (-7.087, -34.961, 0.000), (-6.986, -34.977, 0.000), (-6.882, -34.977, 0.000), (-6.789, -34.978, 0.000), (-6.697, -34.959, 0.000), (-6.594, -34.937, 0.000), (-6.503, -34.886, 0.000), (-6.477, -34.871, 0.000), (-6.452, -34.854, 0.000), (-6.416, -34.829, 0.000), (-6.385, -34.797, 0.000), (-6.335, -34.748, 0.000), (-6.291, -34.694, 0.000), (-6.221, -34.609, 0.000), (-6.157, -34.520, 0.000), (-6.057, -34.380, 0.000), (-5.964, -34.236, 0.000), (-5.853, -34.066, 0.000), (-5.747, -33.893, 0.000), (-5.565, -33.597, 0.000), (-5.389, -33.297, 0.000), (-5.102, -32.811, 0.000), (-4.821, -32.322, 0.000), (-4.600, -31.936, 0.000), (-4.379, -31.550, 0.000), (-4.148, -31.145, 0.000), (-3.916, -30.740, 0.000), (-3.814, -30.561, 0.000), (-3.712, -30.382, 0.000), (-3.635, -30.248, 0.000), (-3.560, -30.113, 0.000), (-3.536, -30.070, 0.000), (-3.515, -30.025, 0.000), (-3.489, -29.973, 0.000), (-3.469, -29.918, 0.000), (-3.448, -29.861, 0.000), (-3.429, -29.803, 0.000), (-3.385, -29.673, 0.000), (-3.388, -29.536, 0.000), (-3.390, -29.424, 0.000), (-3.428, -29.318, 0.000), (-3.469, -29.207, 0.000), (-3.551, -29.121, 0.000), (-3.629, -29.039, 0.000), (-3.733, -28.995, 0.000), (-3.818, -28.958, 0.000), (-3.910, -28.945, 0.000), (-3.932, -28.942, 0.000), (-3.953, -28.940, 0.000), (-5.132, -28.922, 0.000), (-6.311, -28.915, 0.000), (-6.404, -28.915, 0.000), (-6.496, -28.914, 0.000), (-6.571, -28.913, 0.000), (-6.646, -28.916, 0.000), (-6.710, -28.918, 0.000), (-6.773, -28.927, 0.000), (-6.914, -28.948, 0.000), (-7.038, -29.017, 0.000), (-7.250, -29.137, 0.000), (-7.346, -29.359, 0.000), (-7.387, -29.452, 0.000), (-7.402, -29.553, 0.000), (-7.409, -29.592, 0.000), (-7.410, -29.632, 0.000), (-7.413, -29.709, 0.000), (-7.414, -29.786, 0.000), (-7.416, -30.026, 0.000), (-7.415, -30.266, 0.000), (-7.415, -30.574, 0.000), (-7.415, -30.881, 0.000), (-7.415, -31.409, 0.000), (-7.415, -31.937, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-7.415, -31.937, 0.000)), rs.coerce3dpoint((-7.416, -32.759, 0.000)), rs.coerce3dpoint((-7.416, -33.581, 0.000)), rs.coerce3dpoint((-7.416, -33.881, 0.000)), rs.coerce3dpoint((-7.413, -34.181, 0.000)), rs.coerce3dpoint((-7.411, -34.330, 0.000)), rs.coerce3dpoint((-7.406, -34.479, 0.000)), rs.coerce3dpoint((-7.403, -34.555, 0.000)), rs.coerce3dpoint((-7.384, -34.629, 0.000)), rs.coerce3dpoint((-7.368, -34.698, 0.000)), rs.coerce3dpoint((-7.337, -34.762, 0.000)), rs.coerce3dpoint((-7.311, -34.816, 0.000)), rs.coerce3dpoint((-7.271, -34.861, 0.000)), rs.coerce3dpoint((-7.223, -34.915, 0.000)), rs.coerce3dpoint((-7.156, -34.942, 0.000)), rs.coerce3dpoint((-7.123, -34.955, 0.000)), rs.coerce3dpoint((-7.087, -34.961, 0.000)), rs.coerce3dpoint((-6.986, -34.977, 0.000)), rs.coerce3dpoint((-6.882, -34.977, 0.000)), rs.coerce3dpoint((-6.789, -34.978, 0.000)), rs.coerce3dpoint((-6.697, -34.959, 0.000)), rs.coerce3dpoint((-6.594, -34.937, 0.000)), rs.coerce3dpoint((-6.503, -34.886, 0.000)), rs.coerce3dpoint((-6.477, -34.871, 0.000)), rs.coerce3dpoint((-6.452, -34.854, 0.000)), rs.coerce3dpoint((-6.416, -34.829, 0.000)), rs.coerce3dpoint((-6.385, -34.797, 0.000)), rs.coerce3dpoint((-6.335, -34.748, 0.000)), rs.coerce3dpoint((-6.291, -34.694, 0.000)), rs.coerce3dpoint((-6.221, -34.609, 0.000)), rs.coerce3dpoint((-6.157, -34.520, 0.000)), rs.coerce3dpoint((-6.057, -34.380, 0.000)), rs.coerce3dpoint((-5.964, -34.236, 0.000)), rs.coerce3dpoint((-5.853, -34.066, 0.000)), rs.coerce3dpoint((-5.747, -33.893, 0.000)), rs.coerce3dpoint((-5.565, -33.597, 0.000)), rs.coerce3dpoint((-5.389, -33.297, 0.000)), rs.coerce3dpoint((-5.102, -32.811, 0.000)), rs.coerce3dpoint((-4.821, -32.322, 0.000)), rs.coerce3dpoint((-4.600, -31.936, 0.000)), rs.coerce3dpoint((-4.379, -31.550, 0.000)), rs.coerce3dpoint((-4.148, -31.145, 0.000)), rs.coerce3dpoint((-3.916, -30.740, 0.000)), rs.coerce3dpoint((-3.814, -30.561, 0.000)), rs.coerce3dpoint((-3.712, -30.382, 0.000)), rs.coerce3dpoint((-3.635, -30.248, 0.000)), rs.coerce3dpoint((-3.560, -30.113, 0.000)), rs.coerce3dpoint((-3.536, -30.070, 0.000)), rs.coerce3dpoint((-3.515, -30.025, 0.000)), rs.coerce3dpoint((-3.489, -29.973, 0.000)), rs.coerce3dpoint((-3.469, -29.918, 0.000)), rs.coerce3dpoint((-3.448, -29.861, 0.000)), rs.coerce3dpoint((-3.429, -29.803, 0.000)), rs.coerce3dpoint((-3.385, -29.673, 0.000)), rs.coerce3dpoint((-3.388, -29.536, 0.000)), rs.coerce3dpoint((-3.390, -29.424, 0.000)), rs.coerce3dpoint((-3.428, -29.318, 0.000)), rs.coerce3dpoint((-3.469, -29.207, 0.000)), rs.coerce3dpoint((-3.551, -29.121, 0.000)), rs.coerce3dpoint((-3.629, -29.039, 0.000)), rs.coerce3dpoint((-3.733, -28.995, 0.000)), rs.coerce3dpoint((-3.818, -28.958, 0.000)), rs.coerce3dpoint((-3.910, -28.945, 0.000)), rs.coerce3dpoint((-3.932, -28.942, 0.000)), rs.coerce3dpoint((-3.953, -28.940, 0.000)), rs.coerce3dpoint((-5.132, -28.922, 0.000)), rs.coerce3dpoint((-6.311, -28.915, 0.000)), rs.coerce3dpoint((-6.404, -28.915, 0.000)), rs.coerce3dpoint((-6.496, -28.914, 0.000)), rs.coerce3dpoint((-6.571, -28.913, 0.000)), rs.coerce3dpoint((-6.646, -28.916, 0.000)), rs.coerce3dpoint((-6.710, -28.918, 0.000)), rs.coerce3dpoint((-6.773, -28.927, 0.000)), rs.coerce3dpoint((-6.914, -28.948, 0.000)), rs.coerce3dpoint((-7.038, -29.017, 0.000)), rs.coerce3dpoint((-7.250, -29.137, 0.000)), rs.coerce3dpoint((-7.346, -29.359, 0.000)), rs.coerce3dpoint((-7.387, -29.452, 0.000)), rs.coerce3dpoint((-7.402, -29.553, 0.000)), rs.coerce3dpoint((-7.409, -29.592, 0.000)), rs.coerce3dpoint((-7.410, -29.632, 0.000)), rs.coerce3dpoint((-7.413, -29.709, 0.000)), rs.coerce3dpoint((-7.414, -29.786, 0.000)), rs.coerce3dpoint((-7.416, -30.026, 0.000)), rs.coerce3dpoint((-7.415, -30.266, 0.000)), rs.coerce3dpoint((-7.415, -30.574, 0.000)), rs.coerce3dpoint((-7.415, -30.881, 0.000)), rs.coerce3dpoint((-7.415, -31.409, 0.000)), rs.coerce3dpoint((-7.415, -31.937, 0.000))], [0.0, 0.0, 1.64406019464, 1.64406019464, 2.24402284531, 2.24402284531, 2.541353002, 2.541353002, 2.69400226310, 2.69400226310, 2.83464546244, 2.83464546244, 2.95467088991, 2.95467088991, 3.09591637394, 3.09591637394, 3.16738514937, 3.16738514937, 3.37360454877, 3.37360454877, 3.56010759444, 3.56010759444, 3.76818714308, 3.76818714308, 3.82800316915, 3.82800316915, 3.91634785556, 3.91634785556, 4.05579502026, 4.05579502026, 4.27611534092, 4.27611534092, 4.61883132072, 4.61883132072, 5.02468910380, 5.02468910380, 5.72022367237, 5.72022367237, 6.84875063790, 6.84875063790, 7.73838298713, 7.73838298713, 8.67066030194, 8.67066030194, 9.08283169602, 9.08283169602, 9.39240932166, 9.39240932166, 9.49100102456, 9.49100102456, 9.60789989332, 9.60789989332, 9.72940588731, 9.72940588731, 10.0007927246, 10.0007927246, 10.2236129217, 10.2236129217, 10.4576949601, 10.4576949601, 10.6808381909, 10.6808381909, 10.8651439538, 10.8651439538, 10.9085841217, 10.9085841217, 13.2667263651, 13.2667263651, 13.4514095817, 13.4514095817, 13.6019198355, 13.6019198355, 13.7290812173, 13.7290812173, 14.0108162612, 14.0108162612, 14.4792475857, 14.4792475857, 14.6811938406, 14.6811938406, 14.7604768569, 14.7604768569, 14.9147179088, 14.9147179088, 15.3953626458, 15.3953626458, 16.0097426465, 16.0097426465, 17.0663726469, 17.0663726469], 2, [1.0, 1.0, 1.0, 0.999987500078, 1.0, 0.999941681701, 1.0, 0.995189976054, 1.0, 0.994163462437, 1.0, 0.990247785849, 1.0, 0.974163412719, 1.0, 0.993635816066, 1.0, 0.996836930429, 1.0, 0.994606583797, 1.0, 0.988363599127, 1.0, 0.998924099093, 1.0, 0.99665996724, 1.0, 0.998638507462, 1.0, 0.999422166994, 1.0, 0.999744652605, 1.0, 0.99991550357, 1.0, 0.999957680895, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99997952021, 1.0, 0.99965683889, 1.0, 0.998466596565, 1.0, 0.999823295614, 1.0, 0.985552938122, 1.0, 0.986316267235, 1.0, 0.978721443006, 1.0, 0.980393608181, 1.0, 0.991168054624, 1.0, 0.99965683889, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.999735534975, 1.0, 0.998455513641, 1.0, 0.983609809034, 1.0, 0.947865458907, 1.0, 0.991739539105, 1.0, 0.998319413373, 1.0, 0.999838013121, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(12.923, -16.121, 0.000), (13.008, -16.116, 0.000), (13.088, -16.088, 0.000), (13.188, -16.054, 0.000), (13.275, -15.995, 0.000), (13.319, -15.964, 0.000), (13.358, -15.926, 0.000), (13.415, -15.870, 0.000), (13.464, -15.809, 0.000), (13.536, -15.720, 0.000), (13.600, -15.626, 0.000), (13.685, -15.502, 0.000), (13.763, -15.372, 0.000), (13.797, -15.317, 0.000), (13.830, -15.261, 0.000), (13.924, -15.100, 0.000), (14.017, -14.937, 0.000), (14.155, -14.693, 0.000), (14.294, -14.448, 0.000), (14.347, -14.355, 0.000), (14.400, -14.262, 0.000), (14.596, -13.916, 0.000), (14.796, -13.572, 0.000), (14.802, -13.561, 0.000), (14.808, -13.551, 0.000), (14.864, -13.454, 0.000), (14.901, -13.347, 0.000), (14.961, -13.175, 0.000), (14.950, -12.993, 0.000), (14.944, -12.880, 0.000), (14.914, -12.771, 0.000), (14.884, -12.660, 0.000), (14.837, -12.554, 0.000), (14.784, -12.434, 0.000), (14.718, -12.320, 0.000), (14.604, -12.132, 0.000), (14.496, -11.940, 0.000), (14.431, -11.825, 0.000), (14.367, -11.710, 0.000), (14.243, -11.488, 0.000), (14.116, -11.267, 0.000), (13.981, -11.032, 0.000), (13.835, -10.803, 0.000), (13.803, -10.751, 0.000), (13.769, -10.699, 0.000), (13.690, -10.570, 0.000), (13.600, -10.448, 0.000), (13.530, -10.353, 0.000), (13.449, -10.266, 0.000), (13.378, -10.189, 0.000), (13.296, -10.125, 0.000), (13.246, -10.086, 0.000), (13.193, -10.051, 0.000), (13.154, -10.026, 0.000), (13.111, -10.011, 0.000), (13.011, -9.976, 0.000), (12.906, -9.986, 0.000), (12.814, -9.994, 0.000), (12.736, -10.042, 0.000), (12.680, -10.076, 0.000), (12.638, -10.126, 0.000), (12.608, -10.156, 0.000), (12.581, -10.188, 0.000), (12.510, -10.270, 0.000), (12.443, -10.356, 0.000), (12.302, -10.537, 0.000), (12.170, -10.725, 0.000), (12.060, -10.882, 0.000), (11.959, -11.044, 0.000), (11.919, -11.107, 0.000), (11.879, -11.171, 0.000), (11.806, -11.287, 0.000), (11.732, -11.403, 0.000), (11.699, -11.454, 0.000), (11.666, -11.504, 0.000), (11.568, -11.653, 0.000), (11.474, -11.804, 0.000), (11.301, -12.084, 0.000), (11.150, -12.376, 0.000), (11.139, -12.396, 0.000), (11.129, -12.416, 0.000), (11.067, -12.533, 0.000), (11.017, -12.655, 0.000), (10.974, -12.759, 0.000), (10.946, -12.868, 0.000), (10.920, -12.971, 0.000), (10.913, -13.077, 0.000), (10.902, -13.260, 0.000), (10.962, -13.432, 0.000), (10.997, -13.533, 0.000), (11.049, -13.625, 0.000), (11.053, -13.632, 0.000), (11.057, -13.639, 0.000), (11.283, -14.029, 0.000), (11.503, -14.422, 0.000), (11.544, -14.494, 0.000), (11.584, -14.566, 0.000), (11.748, -14.857, 0.000), (11.914, -15.148, 0.000), (11.974, -15.253, 0.000), (12.036, -15.357, 0.000), (12.111, -15.485, 0.000), (12.193, -15.608, 0.000), (12.256, -15.701, 0.000), (12.327, -15.788, 0.000), (12.406, -15.885, 0.000), (12.499, -15.967, 0.000), (12.525, -15.990, 0.000), (12.551, -16.012, 0.000), (12.605, -16.055, 0.000), (12.670, -16.080, 0.000), (12.742, -16.107, 0.000), (12.819, -16.116, 0.000), (12.871, -16.122, 0.000), (12.923, -16.121, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((12.923, -16.121, 0.000)), rs.coerce3dpoint((13.008, -16.116, 0.000)), rs.coerce3dpoint((13.088, -16.088, 0.000)), rs.coerce3dpoint((13.188, -16.054, 0.000)), rs.coerce3dpoint((13.275, -15.995, 0.000)), rs.coerce3dpoint((13.319, -15.964, 0.000)), rs.coerce3dpoint((13.358, -15.926, 0.000)), rs.coerce3dpoint((13.415, -15.870, 0.000)), rs.coerce3dpoint((13.464, -15.809, 0.000)), rs.coerce3dpoint((13.536, -15.720, 0.000)), rs.coerce3dpoint((13.600, -15.626, 0.000)), rs.coerce3dpoint((13.685, -15.502, 0.000)), rs.coerce3dpoint((13.763, -15.372, 0.000)), rs.coerce3dpoint((13.797, -15.317, 0.000)), rs.coerce3dpoint((13.830, -15.261, 0.000)), rs.coerce3dpoint((13.924, -15.100, 0.000)), rs.coerce3dpoint((14.017, -14.937, 0.000)), rs.coerce3dpoint((14.155, -14.693, 0.000)), rs.coerce3dpoint((14.294, -14.448, 0.000)), rs.coerce3dpoint((14.347, -14.355, 0.000)), rs.coerce3dpoint((14.400, -14.262, 0.000)), rs.coerce3dpoint((14.596, -13.916, 0.000)), rs.coerce3dpoint((14.796, -13.572, 0.000)), rs.coerce3dpoint((14.802, -13.561, 0.000)), rs.coerce3dpoint((14.808, -13.551, 0.000)), rs.coerce3dpoint((14.864, -13.454, 0.000)), rs.coerce3dpoint((14.901, -13.347, 0.000)), rs.coerce3dpoint((14.961, -13.175, 0.000)), rs.coerce3dpoint((14.950, -12.993, 0.000)), rs.coerce3dpoint((14.944, -12.880, 0.000)), rs.coerce3dpoint((14.914, -12.771, 0.000)), rs.coerce3dpoint((14.884, -12.660, 0.000)), rs.coerce3dpoint((14.837, -12.554, 0.000)), rs.coerce3dpoint((14.784, -12.434, 0.000)), rs.coerce3dpoint((14.718, -12.320, 0.000)), rs.coerce3dpoint((14.604, -12.132, 0.000)), rs.coerce3dpoint((14.496, -11.940, 0.000)), rs.coerce3dpoint((14.431, -11.825, 0.000)), rs.coerce3dpoint((14.367, -11.710, 0.000)), rs.coerce3dpoint((14.243, -11.488, 0.000)), rs.coerce3dpoint((14.116, -11.267, 0.000)), rs.coerce3dpoint((13.981, -11.032, 0.000)), rs.coerce3dpoint((13.835, -10.803, 0.000)), rs.coerce3dpoint((13.803, -10.751, 0.000)), rs.coerce3dpoint((13.769, -10.699, 0.000)), rs.coerce3dpoint((13.690, -10.570, 0.000)), rs.coerce3dpoint((13.600, -10.448, 0.000)), rs.coerce3dpoint((13.530, -10.353, 0.000)), rs.coerce3dpoint((13.449, -10.266, 0.000)), rs.coerce3dpoint((13.378, -10.189, 0.000)), rs.coerce3dpoint((13.296, -10.125, 0.000)), rs.coerce3dpoint((13.246, -10.086, 0.000)), rs.coerce3dpoint((13.193, -10.051, 0.000)), rs.coerce3dpoint((13.154, -10.026, 0.000)), rs.coerce3dpoint((13.111, -10.011, 0.000)), rs.coerce3dpoint((13.011, -9.976, 0.000)), rs.coerce3dpoint((12.906, -9.986, 0.000)), rs.coerce3dpoint((12.814, -9.994, 0.000)), rs.coerce3dpoint((12.736, -10.042, 0.000)), rs.coerce3dpoint((12.680, -10.076, 0.000)), rs.coerce3dpoint((12.638, -10.126, 0.000)), rs.coerce3dpoint((12.608, -10.156, 0.000)), rs.coerce3dpoint((12.581, -10.188, 0.000)), rs.coerce3dpoint((12.510, -10.270, 0.000)), rs.coerce3dpoint((12.443, -10.356, 0.000)), rs.coerce3dpoint((12.302, -10.537, 0.000)), rs.coerce3dpoint((12.170, -10.725, 0.000)), rs.coerce3dpoint((12.060, -10.882, 0.000)), rs.coerce3dpoint((11.959, -11.044, 0.000)), rs.coerce3dpoint((11.919, -11.107, 0.000)), rs.coerce3dpoint((11.879, -11.171, 0.000)), rs.coerce3dpoint((11.806, -11.287, 0.000)), rs.coerce3dpoint((11.732, -11.403, 0.000)), rs.coerce3dpoint((11.699, -11.454, 0.000)), rs.coerce3dpoint((11.666, -11.504, 0.000)), rs.coerce3dpoint((11.568, -11.653, 0.000)), rs.coerce3dpoint((11.474, -11.804, 0.000)), rs.coerce3dpoint((11.301, -12.084, 0.000)), rs.coerce3dpoint((11.150, -12.376, 0.000)), rs.coerce3dpoint((11.139, -12.396, 0.000)), rs.coerce3dpoint((11.129, -12.416, 0.000)), rs.coerce3dpoint((11.067, -12.533, 0.000)), rs.coerce3dpoint((11.017, -12.655, 0.000)), rs.coerce3dpoint((10.974, -12.759, 0.000)), rs.coerce3dpoint((10.946, -12.868, 0.000)), rs.coerce3dpoint((10.920, -12.971, 0.000)), rs.coerce3dpoint((10.913, -13.077, 0.000)), rs.coerce3dpoint((10.902, -13.260, 0.000)), rs.coerce3dpoint((10.962, -13.432, 0.000)), rs.coerce3dpoint((10.997, -13.533, 0.000)), rs.coerce3dpoint((11.049, -13.625, 0.000)), rs.coerce3dpoint((11.053, -13.632, 0.000)), rs.coerce3dpoint((11.057, -13.639, 0.000)), rs.coerce3dpoint((11.283, -14.029, 0.000)), rs.coerce3dpoint((11.503, -14.422, 0.000)), rs.coerce3dpoint((11.544, -14.494, 0.000)), rs.coerce3dpoint((11.584, -14.566, 0.000)), rs.coerce3dpoint((11.748, -14.857, 0.000)), rs.coerce3dpoint((11.914, -15.148, 0.000)), rs.coerce3dpoint((11.974, -15.253, 0.000)), rs.coerce3dpoint((12.036, -15.357, 0.000)), rs.coerce3dpoint((12.111, -15.485, 0.000)), rs.coerce3dpoint((12.193, -15.608, 0.000)), rs.coerce3dpoint((12.256, -15.701, 0.000)), rs.coerce3dpoint((12.327, -15.788, 0.000)), rs.coerce3dpoint((12.406, -15.885, 0.000)), rs.coerce3dpoint((12.499, -15.967, 0.000)), rs.coerce3dpoint((12.525, -15.990, 0.000)), rs.coerce3dpoint((12.551, -16.012, 0.000)), rs.coerce3dpoint((12.605, -16.055, 0.000)), rs.coerce3dpoint((12.670, -16.080, 0.000)), rs.coerce3dpoint((12.742, -16.107, 0.000)), rs.coerce3dpoint((12.819, -16.116, 0.000)), rs.coerce3dpoint((12.871, -16.122, 0.000)), rs.coerce3dpoint((12.923, -16.121, 0.000))], [0.0, 0.0, 0.168694951239, 0.168694951239, 0.3778330693, 0.3778330693, 0.486600863758, 0.486600863758, 0.644692940682, 0.644692940682, 0.872141569252, 0.872141569252, 1.17375195230, 1.17375195230, 1.30335418605, 1.30335418605, 1.67749778010, 1.67749778010, 2.23955303263, 2.23955303263, 2.45398915202, 2.45398915202, 3.2496978119, 3.2496978119, 3.27342097569, 3.27342097569, 3.49820114574, 3.49820114574, 3.85793526143, 3.85793526143, 4.08331170359, 4.08331170359, 4.31401168148, 4.31401168148, 4.57650843775, 4.57650843775, 5.01685283647, 5.01685283647, 5.28007976193, 5.28007976193, 5.78929456647, 5.78929456647, 6.33199521211, 6.33199521211, 6.45481599397, 6.45481599397, 6.75788779582, 6.75788779582, 6.99430523625, 6.99430523625, 7.20301191688, 7.20301191688, 7.32993539216, 7.32993539216, 7.42145149774, 7.42145149774, 7.62948003472, 7.62948003472, 7.81010190005, 7.81010190005, 7.93999272401, 7.93999272401, 8.02373679666, 8.02373679666, 8.24122387341, 8.24122387341, 8.70015991913, 8.70015991913, 9.08297353505, 9.08297353505, 9.23270725737, 9.23270725737, 9.50755139918, 9.50755139918, 9.62865032899, 9.62865032899, 9.98399142948, 9.98399142948, 10.6425679680, 10.6425679680, 10.6870037025, 10.6870037025, 10.9516013492, 10.9516013492, 11.1753605286, 11.1753605286, 11.3879165190, 11.3879165190, 11.7489904756, 11.7489904756, 11.9606348661, 11.9606348661, 11.9769962903, 11.9769962903, 12.8783434227, 12.8783434227, 13.0429552355, 13.0429552355, 13.7121224050, 13.7121224050, 13.9537604513, 13.9537604513, 14.2500536659, 14.2500536659, 14.4744357618, 14.4744357618, 14.7233883794, 14.7233883794, 14.7918758662, 14.7918758662, 14.9289114589, 14.9289114589, 15.0828036978, 15.0828036978, 15.1877581421, 15.1877581421], 2, [1.0, 0.990767596288, 1.0, 0.990982263942, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.987501615963, 1.0, 0.992043300966, 1.0, 0.997744626227, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.392, -16.810, 0.000), (0.395, -17.707, 0.000), (0.403, -18.604, 0.000), (0.407, -19.091, 0.000), (0.417, -19.578, 0.000), (0.421, -19.835, 0.000), (0.431, -20.093, 0.000), (0.436, -20.230, 0.000), (0.447, -20.366, 0.000), (0.452, -20.441, 0.000), (0.462, -20.515, 0.000), (0.469, -20.561, 0.000), (0.481, -20.606, 0.000), (0.489, -20.631, 0.000), (0.498, -20.654, 0.000), (0.605, -20.939, 0.000), (0.894, -21.033, 0.000), (1.166, -21.123, 0.000), (1.414, -20.980, 0.000), (1.417, -20.978, 0.000), (1.421, -20.977, 0.000), (1.487, -20.938, 0.000), (1.541, -20.884, 0.000), (1.587, -20.837, 0.000), (1.627, -20.786, 0.000), (1.685, -20.711, 0.000), (1.738, -20.631, 0.000), (1.820, -20.508, 0.000), (1.895, -20.381, 0.000), (1.920, -20.340, 0.000), (1.944, -20.300, 0.000), (2.062, -20.100, 0.000), (2.178, -19.900, 0.000), (2.222, -19.822, 0.000), (2.264, -19.744, 0.000), (2.286, -19.704, 0.000), (2.303, -19.661, 0.000), (2.308, -19.650, 0.000), (2.312, -19.639, 0.000), (2.327, -19.601, 0.000), (2.333, -19.561, 0.000), (2.341, -19.509, 0.000), (2.345, -19.456, 0.000), (2.353, -19.352, 0.000), (2.356, -19.247, 0.000), (2.363, -19.033, 0.000), (2.366, -18.819, 0.000), (2.368, -18.681, 0.000), (2.369, -18.544, 0.000), (2.379, -17.428, 0.000), (2.388, -16.312, 0.000), (2.392, -15.815, 0.000), (2.392, -15.318, 0.000), (2.393, -15.066, 0.000), (2.388, -14.814, 0.000), (2.386, -14.676, 0.000), (2.379, -14.537, 0.000), (2.374, -14.452, 0.000), (2.364, -14.368, 0.000), (2.355, -14.296, 0.000), (2.337, -14.226, 0.000), (2.324, -14.171, 0.000), (2.300, -14.119, 0.000), (2.274, -14.060, 0.000), (2.243, -14.003, 0.000), (2.189, -13.903, 0.000), (2.131, -13.806, 0.000), (2.017, -13.611, 0.000), (1.896, -13.420, 0.000), (1.814, -13.291, 0.000), (1.725, -13.167, 0.000), (1.663, -13.082, 0.000), (1.595, -13.001, 0.000), (1.548, -12.945, 0.000), (1.494, -12.895, 0.000), (1.469, -12.872, 0.000), (1.442, -12.852, 0.000), (1.304, -12.748, 0.000), (1.132, -12.743, 0.000), (1.025, -12.740, 0.000), (0.922, -12.772, 0.000), (0.737, -12.829, 0.000), (0.603, -12.969, 0.000), (0.542, -13.034, 0.000), (0.501, -13.113, 0.000), (0.471, -13.171, 0.000), (0.458, -13.235, 0.000), (0.451, -13.274, 0.000), (0.448, -13.314, 0.000), (0.442, -13.387, 0.000), (0.440, -13.460, 0.000), (0.433, -13.650, 0.000), (0.430, -13.840, 0.000), (0.420, -14.329, 0.000), (0.414, -14.817, 0.000), (0.403, -15.813, 0.000), (0.392, -16.810, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.392, -16.810, 0.000)), rs.coerce3dpoint((0.395, -17.707, 0.000)), rs.coerce3dpoint((0.403, -18.604, 0.000)), rs.coerce3dpoint((0.407, -19.091, 0.000)), rs.coerce3dpoint((0.417, -19.578, 0.000)), rs.coerce3dpoint((0.421, -19.835, 0.000)), rs.coerce3dpoint((0.431, -20.093, 0.000)), rs.coerce3dpoint((0.436, -20.230, 0.000)), rs.coerce3dpoint((0.447, -20.366, 0.000)), rs.coerce3dpoint((0.452, -20.441, 0.000)), rs.coerce3dpoint((0.462, -20.515, 0.000)), rs.coerce3dpoint((0.469, -20.561, 0.000)), rs.coerce3dpoint((0.481, -20.606, 0.000)), rs.coerce3dpoint((0.489, -20.631, 0.000)), rs.coerce3dpoint((0.498, -20.654, 0.000)), rs.coerce3dpoint((0.605, -20.939, 0.000)), rs.coerce3dpoint((0.894, -21.033, 0.000)), rs.coerce3dpoint((1.166, -21.123, 0.000)), rs.coerce3dpoint((1.414, -20.980, 0.000)), rs.coerce3dpoint((1.417, -20.978, 0.000)), rs.coerce3dpoint((1.421, -20.977, 0.000)), rs.coerce3dpoint((1.487, -20.938, 0.000)), rs.coerce3dpoint((1.541, -20.884, 0.000)), rs.coerce3dpoint((1.587, -20.837, 0.000)), rs.coerce3dpoint((1.627, -20.786, 0.000)), rs.coerce3dpoint((1.685, -20.711, 0.000)), rs.coerce3dpoint((1.738, -20.631, 0.000)), rs.coerce3dpoint((1.820, -20.508, 0.000)), rs.coerce3dpoint((1.895, -20.381, 0.000)), rs.coerce3dpoint((1.920, -20.340, 0.000)), rs.coerce3dpoint((1.944, -20.300, 0.000)), rs.coerce3dpoint((2.062, -20.100, 0.000)), rs.coerce3dpoint((2.178, -19.900, 0.000)), rs.coerce3dpoint((2.222, -19.822, 0.000)), rs.coerce3dpoint((2.264, -19.744, 0.000)), rs.coerce3dpoint((2.286, -19.704, 0.000)), rs.coerce3dpoint((2.303, -19.661, 0.000)), rs.coerce3dpoint((2.308, -19.650, 0.000)), rs.coerce3dpoint((2.312, -19.639, 0.000)), rs.coerce3dpoint((2.327, -19.601, 0.000)), rs.coerce3dpoint((2.333, -19.561, 0.000)), rs.coerce3dpoint((2.341, -19.509, 0.000)), rs.coerce3dpoint((2.345, -19.456, 0.000)), rs.coerce3dpoint((2.353, -19.352, 0.000)), rs.coerce3dpoint((2.356, -19.247, 0.000)), rs.coerce3dpoint((2.363, -19.033, 0.000)), rs.coerce3dpoint((2.366, -18.819, 0.000)), rs.coerce3dpoint((2.368, -18.681, 0.000)), rs.coerce3dpoint((2.369, -18.544, 0.000)), rs.coerce3dpoint((2.379, -17.428, 0.000)), rs.coerce3dpoint((2.388, -16.312, 0.000)), rs.coerce3dpoint((2.392, -15.815, 0.000)), rs.coerce3dpoint((2.392, -15.318, 0.000)), rs.coerce3dpoint((2.393, -15.066, 0.000)), rs.coerce3dpoint((2.388, -14.814, 0.000)), rs.coerce3dpoint((2.386, -14.676, 0.000)), rs.coerce3dpoint((2.379, -14.537, 0.000)), rs.coerce3dpoint((2.374, -14.452, 0.000)), rs.coerce3dpoint((2.364, -14.368, 0.000)), rs.coerce3dpoint((2.355, -14.296, 0.000)), rs.coerce3dpoint((2.337, -14.226, 0.000)), rs.coerce3dpoint((2.324, -14.171, 0.000)), rs.coerce3dpoint((2.300, -14.119, 0.000)), rs.coerce3dpoint((2.274, -14.060, 0.000)), rs.coerce3dpoint((2.243, -14.003, 0.000)), rs.coerce3dpoint((2.189, -13.903, 0.000)), rs.coerce3dpoint((2.131, -13.806, 0.000)), rs.coerce3dpoint((2.017, -13.611, 0.000)), rs.coerce3dpoint((1.896, -13.420, 0.000)), rs.coerce3dpoint((1.814, -13.291, 0.000)), rs.coerce3dpoint((1.725, -13.167, 0.000)), rs.coerce3dpoint((1.663, -13.082, 0.000)), rs.coerce3dpoint((1.595, -13.001, 0.000)), rs.coerce3dpoint((1.548, -12.945, 0.000)), rs.coerce3dpoint((1.494, -12.895, 0.000)), rs.coerce3dpoint((1.469, -12.872, 0.000)), rs.coerce3dpoint((1.442, -12.852, 0.000)), rs.coerce3dpoint((1.304, -12.748, 0.000)), rs.coerce3dpoint((1.132, -12.743, 0.000)), rs.coerce3dpoint((1.025, -12.740, 0.000)), rs.coerce3dpoint((0.922, -12.772, 0.000)), rs.coerce3dpoint((0.737, -12.829, 0.000)), rs.coerce3dpoint((0.603, -12.969, 0.000)), rs.coerce3dpoint((0.542, -13.034, 0.000)), rs.coerce3dpoint((0.501, -13.113, 0.000)), rs.coerce3dpoint((0.471, -13.171, 0.000)), rs.coerce3dpoint((0.458, -13.235, 0.000)), rs.coerce3dpoint((0.451, -13.274, 0.000)), rs.coerce3dpoint((0.448, -13.314, 0.000)), rs.coerce3dpoint((0.442, -13.387, 0.000)), rs.coerce3dpoint((0.440, -13.460, 0.000)), rs.coerce3dpoint((0.433, -13.650, 0.000)), rs.coerce3dpoint((0.430, -13.840, 0.000)), rs.coerce3dpoint((0.420, -14.329, 0.000)), rs.coerce3dpoint((0.414, -14.817, 0.000)), rs.coerce3dpoint((0.403, -15.813, 0.000)), rs.coerce3dpoint((0.392, -16.810, 0.000))], [0.0, 0.0, 1.79428606304, 1.79428606304, 2.76843559698, 2.76843559698, 3.28325403935, 3.28325403935, 3.55749443424, 3.55749443424, 3.70694157016, 3.70694157016, 3.80034127947, 3.80034127947, 3.85109344615, 3.85109344615, 4.41798846097, 4.41798846097, 4.95646781491, 4.95646781491, 4.96443339084, 4.96443339084, 5.11694283877, 5.11694283877, 5.24712656384, 5.24712656384, 5.43744059721, 5.43744059721, 5.73329867620, 5.73329867620, 5.82790324404, 5.82790324404, 6.29133564824, 6.29133564824, 6.46938897560, 6.46938897560, 6.56069814749, 6.56069814749, 6.58476201459, 6.58476201459, 6.66585488677, 6.66585488677, 6.77102176662, 6.77102176662, 6.98076620829, 6.98076620829, 7.40926884450, 7.40926884450, 7.68393802897, 7.68393802897, 9.91540158021, 9.91540158021, 10.9095221412, 10.9095221412, 11.4134958677, 11.4134958677, 11.6911592789, 11.6911592789, 11.8603350411, 11.8603350411, 12.0056454120, 12.0056454120, 12.1182946689, 12.1182946689, 12.2482427678, 12.2482427678, 12.4744879590, 12.4744879590, 12.9266821035, 12.9266821035, 13.2318761688, 13.2318761688, 13.4423274071, 13.4423274071, 13.5892802217, 13.5892802217, 13.6569718642, 13.6569718642, 13.9907541486, 13.9907541486, 14.2036623637, 14.2036623637, 14.5829400788, 14.5829400788, 14.7599428771, 14.7599428771, 14.8896469201, 14.8896469201, 14.9691590020, 14.9691590020, 15.1159979784, 15.1159979784, 15.4961784493, 15.4961784493, 16.4726888648, 16.4726888648, 18.4656737407, 18.4656737407], 2, [1.0, 0.999996080008, 1.0, 0.999985420106, 1.0, 0.999951981153, 1.0, 0.999830734327, 1.0, 0.999401599095, 1.0, 0.997824369262, 1.0, 0.999049971492, 1.0, 0.901416697095, 1.0, 0.913200027933, 1.0, 1.0, 1.0, 0.990902055423, 1.0, 0.998153386566, 1.0, 0.999285835107, 1.0, 0.999716820101, 1.0, 0.999990320047, 1.0, 0.999983180141, 1.0, 0.999834393714, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 0.994502652065, 1.0, 0.999084499263, 1.0, 0.999775305247, 1.0, 0.999943821578, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99995950082, 1.0, 0.99982703496, 1.0, 0.999359385259, 1.0, 0.998165504232, 1.0, 0.995573000899, 1.0, 0.999262991691, 1.0, 0.999811837704, 1.0, 0.999819516289, 1.0, 0.999613654646, 1.0, 0.999159853072, 1.0, 0.998177582118, 1.0, 0.998760748348, 1.0, 0.953490344664, 1.0, 0.986184971261, 1.0, 0.967760216611, 1.0, 0.98959978494, 1.0, 0.990632164658, 1.0, 0.998042537706, 1.0, 0.999766747207, 1.0, 0.999963020684, 1.0, 0.999993520021, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(15.367, -55.521, 0.000), (15.368, -56.082, 0.000), (15.369, -56.644, 0.000), (15.369, -56.917, 0.000), (15.369, -57.190, 0.000), (15.369, -57.274, 0.000), (15.372, -57.358, 0.000), (15.374, -57.413, 0.000), (15.380, -57.468, 0.000), (15.390, -57.558, 0.000), (15.420, -57.643, 0.000), (15.474, -57.795, 0.000), (15.596, -57.901, 0.000), (15.648, -57.946, 0.000), (15.708, -57.981, 0.000), (15.821, -58.048, 0.000), (15.949, -58.075, 0.000), (16.039, -58.094, 0.000), (16.132, -58.098, 0.000), (16.167, -58.099, 0.000), (16.203, -58.099, 0.000), (16.632, -58.098, 0.000), (17.062, -58.098, 0.000), (17.528, -58.097, 0.000), (17.994, -58.096, 0.000), (18.071, -58.097, 0.000), (18.148, -58.091, 0.000), (18.210, -58.087, 0.000), (18.271, -58.075, 0.000), (18.540, -58.018, 0.000), (18.704, -57.799, 0.000), (18.781, -57.695, 0.000), (18.814, -57.570, 0.000), (18.858, -57.397, 0.000), (18.798, -57.228, 0.000), (18.787, -57.197, 0.000), (18.773, -57.167, 0.000), (18.750, -57.117, 0.000), (18.729, -57.066, 0.000), (18.705, -57.006, 0.000), (18.677, -56.947, 0.000), (18.668, -56.930, 0.000), (18.659, -56.913, 0.000), (18.624, -56.846, 0.000), (18.588, -56.779, 0.000), (18.447, -56.511, 0.000), (18.303, -56.244, 0.000), (18.228, -56.106, 0.000), (18.151, -55.969, 0.000), (17.604, -54.997, 0.000), (17.050, -54.029, 0.000), (16.942, -53.842, 0.000), (16.835, -53.655, 0.000), (16.774, -53.548, 0.000), (16.707, -53.444, 0.000), (16.644, -53.346, 0.000), (16.570, -53.254, 0.000), (16.534, -53.210, 0.000), (16.494, -53.168, 0.000), (16.426, -53.094, 0.000), (16.340, -53.040, 0.000), (16.253, -52.985, 0.000), (16.153, -52.960, 0.000), (15.957, -52.912, 0.000), (15.776, -53.002, 0.000), (15.681, -53.049, 0.000), (15.606, -53.126, 0.000), (15.532, -53.201, 0.000), (15.481, -53.294, 0.000), (15.466, -53.320, 0.000), (15.453, -53.347, 0.000), (15.390, -53.480, 0.000), (15.373, -53.626, 0.000), (15.364, -53.698, 0.000), (15.365, -53.771, 0.000), (15.368, -54.333, 0.000), (15.367, -54.895, 0.000), (15.367, -54.971, 0.000), (15.367, -55.047, 0.000), (15.367, -55.284, 0.000), (15.367, -55.521, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((15.367, -55.521, 0.000)), rs.coerce3dpoint((15.368, -56.082, 0.000)), rs.coerce3dpoint((15.369, -56.644, 0.000)), rs.coerce3dpoint((15.369, -56.917, 0.000)), rs.coerce3dpoint((15.369, -57.190, 0.000)), rs.coerce3dpoint((15.369, -57.274, 0.000)), rs.coerce3dpoint((15.372, -57.358, 0.000)), rs.coerce3dpoint((15.374, -57.413, 0.000)), rs.coerce3dpoint((15.380, -57.468, 0.000)), rs.coerce3dpoint((15.390, -57.558, 0.000)), rs.coerce3dpoint((15.420, -57.643, 0.000)), rs.coerce3dpoint((15.474, -57.795, 0.000)), rs.coerce3dpoint((15.596, -57.901, 0.000)), rs.coerce3dpoint((15.648, -57.946, 0.000)), rs.coerce3dpoint((15.708, -57.981, 0.000)), rs.coerce3dpoint((15.821, -58.048, 0.000)), rs.coerce3dpoint((15.949, -58.075, 0.000)), rs.coerce3dpoint((16.039, -58.094, 0.000)), rs.coerce3dpoint((16.132, -58.098, 0.000)), rs.coerce3dpoint((16.167, -58.099, 0.000)), rs.coerce3dpoint((16.203, -58.099, 0.000)), rs.coerce3dpoint((16.632, -58.098, 0.000)), rs.coerce3dpoint((17.062, -58.098, 0.000)), rs.coerce3dpoint((17.528, -58.097, 0.000)), rs.coerce3dpoint((17.994, -58.096, 0.000)), rs.coerce3dpoint((18.071, -58.097, 0.000)), rs.coerce3dpoint((18.148, -58.091, 0.000)), rs.coerce3dpoint((18.210, -58.087, 0.000)), rs.coerce3dpoint((18.271, -58.075, 0.000)), rs.coerce3dpoint((18.540, -58.018, 0.000)), rs.coerce3dpoint((18.704, -57.799, 0.000)), rs.coerce3dpoint((18.781, -57.695, 0.000)), rs.coerce3dpoint((18.814, -57.570, 0.000)), rs.coerce3dpoint((18.858, -57.397, 0.000)), rs.coerce3dpoint((18.798, -57.228, 0.000)), rs.coerce3dpoint((18.787, -57.197, 0.000)), rs.coerce3dpoint((18.773, -57.167, 0.000)), rs.coerce3dpoint((18.750, -57.117, 0.000)), rs.coerce3dpoint((18.729, -57.066, 0.000)), rs.coerce3dpoint((18.705, -57.006, 0.000)), rs.coerce3dpoint((18.677, -56.947, 0.000)), rs.coerce3dpoint((18.668, -56.930, 0.000)), rs.coerce3dpoint((18.659, -56.913, 0.000)), rs.coerce3dpoint((18.624, -56.846, 0.000)), rs.coerce3dpoint((18.588, -56.779, 0.000)), rs.coerce3dpoint((18.447, -56.511, 0.000)), rs.coerce3dpoint((18.303, -56.244, 0.000)), rs.coerce3dpoint((18.228, -56.106, 0.000)), rs.coerce3dpoint((18.151, -55.969, 0.000)), rs.coerce3dpoint((17.604, -54.997, 0.000)), rs.coerce3dpoint((17.050, -54.029, 0.000)), rs.coerce3dpoint((16.942, -53.842, 0.000)), rs.coerce3dpoint((16.835, -53.655, 0.000)), rs.coerce3dpoint((16.774, -53.548, 0.000)), rs.coerce3dpoint((16.707, -53.444, 0.000)), rs.coerce3dpoint((16.644, -53.346, 0.000)), rs.coerce3dpoint((16.570, -53.254, 0.000)), rs.coerce3dpoint((16.534, -53.210, 0.000)), rs.coerce3dpoint((16.494, -53.168, 0.000)), rs.coerce3dpoint((16.426, -53.094, 0.000)), rs.coerce3dpoint((16.340, -53.040, 0.000)), rs.coerce3dpoint((16.253, -52.985, 0.000)), rs.coerce3dpoint((16.153, -52.960, 0.000)), rs.coerce3dpoint((15.957, -52.912, 0.000)), rs.coerce3dpoint((15.776, -53.002, 0.000)), rs.coerce3dpoint((15.681, -53.049, 0.000)), rs.coerce3dpoint((15.606, -53.126, 0.000)), rs.coerce3dpoint((15.532, -53.201, 0.000)), rs.coerce3dpoint((15.481, -53.294, 0.000)), rs.coerce3dpoint((15.466, -53.320, 0.000)), rs.coerce3dpoint((15.453, -53.347, 0.000)), rs.coerce3dpoint((15.390, -53.480, 0.000)), rs.coerce3dpoint((15.373, -53.626, 0.000)), rs.coerce3dpoint((15.364, -53.698, 0.000)), rs.coerce3dpoint((15.365, -53.771, 0.000)), rs.coerce3dpoint((15.368, -54.333, 0.000)), rs.coerce3dpoint((15.367, -54.895, 0.000)), rs.coerce3dpoint((15.367, -54.971, 0.000)), rs.coerce3dpoint((15.367, -55.047, 0.000)), rs.coerce3dpoint((15.367, -55.284, 0.000)), rs.coerce3dpoint((15.367, -55.521, 0.000))], [0.0, 0.0, 1.12311217436, 1.12311217436, 1.66917251508, 1.66917251508, 1.83746312938, 1.83746312938, 1.94776645812, 1.94776645812, 2.12746314237, 2.12746314237, 2.44336165843, 2.44336165843, 2.58096883064, 2.58096883064, 2.84101006663, 2.84101006663, 3.02498255909, 3.02498255909, 3.09649190812, 3.09649190812, 3.95523280338, 3.95523280338, 4.88742401021, 4.88742401021, 5.04171075791, 5.04171075791, 5.16588193633, 5.16588193633, 5.69040010340, 5.69040010340, 5.94550925108, 5.94550925108, 6.29252112122, 6.29252112122, 6.35928274241, 6.35928274241, 6.46895317088, 6.46895317088, 6.59920370663, 6.59920370663, 6.63770688434, 6.63770688434, 6.78947354636, 6.78947354636, 7.39505851880, 7.39505851880, 7.70948292744, 7.70948292744, 9.94020222204, 9.94020222204, 10.3717763553, 10.3717763553, 10.6179112118, 10.6179112118, 10.8527369752, 10.8527369752, 10.9672895773, 10.9672895773, 11.1680090416, 11.1680090416, 11.3727739239, 11.3727739239, 11.7600726046, 11.7600726046, 11.9711068331, 11.9711068331, 12.1817537599, 12.1817537599, 12.2416780219, 12.2416780219, 12.5327849938, 12.5327849938, 12.6779395514, 12.6779395514, 13.8026442562, 13.8026442562, 13.9547743404, 13.9547743404, 14.4282444624, 14.4282444624], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.99979600081, 1.0, 0.999359385259, 1.0, 0.993202064766, 1.0, 0.96716285858, 1.0, 0.995758593879, 1.0, 0.986738737469, 1.0, 0.996360056672, 1.0, 0.999730916208, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999337739367, 1.0, 0.997979563147, 1.0, 0.935534600705, 1.0, 0.980897727795, 1.0, 0.957357479713, 1.0, 0.998679891918, 1.0, 0.99982703496, 1.0, 0.99965683889, 1.0, 0.999838013121, 1.0, 1.0, 1.0, 0.999984320123, 1.0, 0.999972620375, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 0.999635566418, 1.0, 0.998585880574, 1.0, 0.999308319294, 1.0, 0.992018202186, 1.0, 0.986963532265, 1.0, 0.938845403602, 1.0, 0.986086096495, 1.0, 0.990875241415, 1.0, 0.9994556482, 1.0, 0.986867422268, 1.0, 0.997889728974, 1.0, 0.999992780026, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(18.636, -28.782, 0.000), (19.183, -28.789, 0.000), (19.731, -28.789, 0.000), (20.089, -28.790, 0.000), (20.447, -28.784, 0.000), (20.686, -28.779, 0.000), (20.925, -28.768, 0.000), (21.090, -28.760, 0.000), (21.255, -28.743, 0.000), (21.368, -28.732, 0.000), (21.480, -28.712, 0.000), (21.563, -28.698, 0.000), (21.642, -28.675, 0.000), (21.707, -28.656, 0.000), (21.767, -28.627, 0.000), (21.855, -28.583, 0.000), (21.922, -28.511, 0.000), (21.929, -28.503, 0.000), (21.937, -28.495, 0.000), (22.025, -28.396, 0.000), (22.073, -28.273, 0.000), (22.096, -28.212, 0.000), (22.111, -28.149, 0.000), (22.135, -28.044, 0.000), (22.140, -27.938, 0.000), (22.146, -27.820, 0.000), (22.136, -27.703, 0.000), (22.129, -27.616, 0.000), (22.116, -27.530, 0.000), (22.092, -27.370, 0.000), (21.997, -27.239, 0.000), (21.926, -27.139, 0.000), (21.826, -27.066, 0.000), (21.716, -26.986, 0.000), (21.588, -26.940, 0.000), (21.433, -26.885, 0.000), (21.269, -26.878, 0.000), (21.246, -26.877, 0.000), (21.223, -26.877, 0.000), (20.938, -26.875, 0.000), (20.653, -26.869, 0.000), (20.608, -26.868, 0.000), (20.563, -26.867, 0.000), (20.229, -26.860, 0.000), (19.895, -26.856, 0.000), (19.801, -26.856, 0.000), (19.707, -26.855, 0.000), (19.252, -26.853, 0.000), (18.797, -26.852, 0.000), (18.144, -26.848, 0.000), (17.492, -26.847, 0.000), (16.929, -26.847, 0.000), (16.367, -26.854, 0.000), (16.214, -26.860, 0.000), (16.064, -26.887, 0.000), (15.938, -26.910, 0.000), (15.816, -26.953, 0.000), (15.710, -26.990, 0.000), (15.614, -27.047, 0.000), (15.522, -27.101, 0.000), (15.446, -27.175, 0.000), (15.391, -27.230, 0.000), (15.349, -27.294, 0.000), (15.298, -27.371, 0.000), (15.258, -27.455, 0.000), (15.221, -27.533, 0.000), (15.199, -27.616, 0.000), (15.176, -27.707, 0.000), (15.175, -27.800, 0.000), (15.175, -27.859, 0.000), (15.179, -27.917, 0.000), (15.183, -27.991, 0.000), (15.195, -28.065, 0.000), (15.208, -28.150, 0.000), (15.240, -28.230, 0.000), (15.285, -28.343, 0.000), (15.365, -28.435, 0.000), (15.396, -28.469, 0.000), (15.430, -28.500, 0.000), (15.489, -28.555, 0.000), (15.556, -28.599, 0.000), (15.653, -28.662, 0.000), (15.765, -28.692, 0.000), (15.837, -28.711, 0.000), (15.912, -28.721, 0.000), (16.000, -28.732, 0.000), (16.088, -28.738, 0.000), (16.101, -28.739, 0.000), (16.115, -28.740, 0.000), (16.291, -28.751, 0.000), (16.466, -28.757, 0.000), (16.736, -28.765, 0.000), (17.006, -28.768, 0.000), (17.533, -28.776, 0.000), (18.060, -28.779, 0.000), (18.348, -28.780, 0.000), (18.636, -28.782, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((18.636, -28.782, 0.000)), rs.coerce3dpoint((19.183, -28.789, 0.000)), rs.coerce3dpoint((19.731, -28.789, 0.000)), rs.coerce3dpoint((20.089, -28.790, 0.000)), rs.coerce3dpoint((20.447, -28.784, 0.000)), rs.coerce3dpoint((20.686, -28.779, 0.000)), rs.coerce3dpoint((20.925, -28.768, 0.000)), rs.coerce3dpoint((21.090, -28.760, 0.000)), rs.coerce3dpoint((21.255, -28.743, 0.000)), rs.coerce3dpoint((21.368, -28.732, 0.000)), rs.coerce3dpoint((21.480, -28.712, 0.000)), rs.coerce3dpoint((21.563, -28.698, 0.000)), rs.coerce3dpoint((21.642, -28.675, 0.000)), rs.coerce3dpoint((21.707, -28.656, 0.000)), rs.coerce3dpoint((21.767, -28.627, 0.000)), rs.coerce3dpoint((21.855, -28.583, 0.000)), rs.coerce3dpoint((21.922, -28.511, 0.000)), rs.coerce3dpoint((21.929, -28.503, 0.000)), rs.coerce3dpoint((21.937, -28.495, 0.000)), rs.coerce3dpoint((22.025, -28.396, 0.000)), rs.coerce3dpoint((22.073, -28.273, 0.000)), rs.coerce3dpoint((22.096, -28.212, 0.000)), rs.coerce3dpoint((22.111, -28.149, 0.000)), rs.coerce3dpoint((22.135, -28.044, 0.000)), rs.coerce3dpoint((22.140, -27.938, 0.000)), rs.coerce3dpoint((22.146, -27.820, 0.000)), rs.coerce3dpoint((22.136, -27.703, 0.000)), rs.coerce3dpoint((22.129, -27.616, 0.000)), rs.coerce3dpoint((22.116, -27.530, 0.000)), rs.coerce3dpoint((22.092, -27.370, 0.000)), rs.coerce3dpoint((21.997, -27.239, 0.000)), rs.coerce3dpoint((21.926, -27.139, 0.000)), rs.coerce3dpoint((21.826, -27.066, 0.000)), rs.coerce3dpoint((21.716, -26.986, 0.000)), rs.coerce3dpoint((21.588, -26.940, 0.000)), rs.coerce3dpoint((21.433, -26.885, 0.000)), rs.coerce3dpoint((21.269, -26.878, 0.000)), rs.coerce3dpoint((21.246, -26.877, 0.000)), rs.coerce3dpoint((21.223, -26.877, 0.000)), rs.coerce3dpoint((20.938, -26.875, 0.000)), rs.coerce3dpoint((20.653, -26.869, 0.000)), rs.coerce3dpoint((20.608, -26.868, 0.000)), rs.coerce3dpoint((20.563, -26.867, 0.000)), rs.coerce3dpoint((20.229, -26.860, 0.000)), rs.coerce3dpoint((19.895, -26.856, 0.000)), rs.coerce3dpoint((19.801, -26.856, 0.000)), rs.coerce3dpoint((19.707, -26.855, 0.000)), rs.coerce3dpoint((19.252, -26.853, 0.000)), rs.coerce3dpoint((18.797, -26.852, 0.000)), rs.coerce3dpoint((18.144, -26.848, 0.000)), rs.coerce3dpoint((17.492, -26.847, 0.000)), rs.coerce3dpoint((16.929, -26.847, 0.000)), rs.coerce3dpoint((16.367, -26.854, 0.000)), rs.coerce3dpoint((16.214, -26.860, 0.000)), rs.coerce3dpoint((16.064, -26.887, 0.000)), rs.coerce3dpoint((15.938, -26.910, 0.000)), rs.coerce3dpoint((15.816, -26.953, 0.000)), rs.coerce3dpoint((15.710, -26.990, 0.000)), rs.coerce3dpoint((15.614, -27.047, 0.000)), rs.coerce3dpoint((15.522, -27.101, 0.000)), rs.coerce3dpoint((15.446, -27.175, 0.000)), rs.coerce3dpoint((15.391, -27.230, 0.000)), rs.coerce3dpoint((15.349, -27.294, 0.000)), rs.coerce3dpoint((15.298, -27.371, 0.000)), rs.coerce3dpoint((15.258, -27.455, 0.000)), rs.coerce3dpoint((15.221, -27.533, 0.000)), rs.coerce3dpoint((15.199, -27.616, 0.000)), rs.coerce3dpoint((15.176, -27.707, 0.000)), rs.coerce3dpoint((15.175, -27.800, 0.000)), rs.coerce3dpoint((15.175, -27.859, 0.000)), rs.coerce3dpoint((15.179, -27.917, 0.000)), rs.coerce3dpoint((15.183, -27.991, 0.000)), rs.coerce3dpoint((15.195, -28.065, 0.000)), rs.coerce3dpoint((15.208, -28.150, 0.000)), rs.coerce3dpoint((15.240, -28.230, 0.000)), rs.coerce3dpoint((15.285, -28.343, 0.000)), rs.coerce3dpoint((15.365, -28.435, 0.000)), rs.coerce3dpoint((15.396, -28.469, 0.000)), rs.coerce3dpoint((15.430, -28.500, 0.000)), rs.coerce3dpoint((15.489, -28.555, 0.000)), rs.coerce3dpoint((15.556, -28.599, 0.000)), rs.coerce3dpoint((15.653, -28.662, 0.000)), rs.coerce3dpoint((15.765, -28.692, 0.000)), rs.coerce3dpoint((15.837, -28.711, 0.000)), rs.coerce3dpoint((15.912, -28.721, 0.000)), rs.coerce3dpoint((16.000, -28.732, 0.000)), rs.coerce3dpoint((16.088, -28.738, 0.000)), rs.coerce3dpoint((16.101, -28.739, 0.000)), rs.coerce3dpoint((16.115, -28.740, 0.000)), rs.coerce3dpoint((16.291, -28.751, 0.000)), rs.coerce3dpoint((16.466, -28.757, 0.000)), rs.coerce3dpoint((16.736, -28.765, 0.000)), rs.coerce3dpoint((17.006, -28.768, 0.000)), rs.coerce3dpoint((17.533, -28.776, 0.000)), rs.coerce3dpoint((18.060, -28.779, 0.000)), rs.coerce3dpoint((18.348, -28.780, 0.000)), rs.coerce3dpoint((18.636, -28.782, 0.000))], [0.0, 0.0, 1.09526998510, 1.09526998510, 1.81100534941, 1.81100534941, 2.28959046511, 2.28959046511, 2.62044063553, 2.62044063553, 2.84823988853, 2.84823988853, 3.01472735509, 3.01472735509, 3.14821711981, 3.14821711981, 3.34291950009, 3.34291950009, 3.36417473239, 3.36417473239, 3.62676938350, 3.62676938350, 3.75667463909, 3.75667463909, 3.96996341551, 3.96996341551, 4.20510495404, 4.20510495404, 4.37943227647, 4.37943227647, 4.69609846561, 4.69609846561, 4.94031606748, 4.94031606748, 5.21082541435, 5.21082541435, 5.53697574252, 5.53697574252, 5.58311359516, 5.58311359516, 6.15296702154, 6.15296702154, 6.24310381758, 6.24310381758, 6.91118060910, 6.91118060910, 7.09921403161, 7.09921403161, 8.00936147132, 8.00936147132, 9.31469941241, 9.31469941241, 10.4395394222, 10.4395394222, 10.7440793937, 10.7440793937, 11.0009751760, 11.0009751760, 11.2244385675, 11.2244385675, 11.4366190133, 11.4366190133, 11.5898237215, 11.5898237215, 11.7745896993, 11.7745896993, 11.9473247215, 11.9473247215, 12.1327886794, 12.1327886794, 12.2501116279, 12.2501116279, 12.3982506096, 12.3982506096, 12.5700383975, 12.5700383975, 12.8114236395, 12.8114236395, 12.9036676806, 12.9036676806, 13.0642378831, 13.0642378831, 13.2935185739, 13.2935185739, 13.4435120523, 13.4435120523, 13.6201652041, 13.6201652041, 13.6475818158, 13.6475818158, 13.9993859735, 13.9993859735, 14.5393215873, 14.5393215873, 15.5927549480, 15.5927549480, 16.1687543440, 16.1687543440], 2, [1.0, 0.999985420106, 1.0, 0.999951981153, 1.0, 0.99987518779, 1.0, 0.999682530401, 1.0, 0.999285835107, 1.0, 0.998399501823, 1.0, 0.996427811681, 1.0, 0.98321407606, 1.0, 1.0, 1.0, 0.983894722801, 1.0, 0.997468488337, 1.0, 0.996065037228, 1.0, 0.997744626227, 1.0, 0.99937361624, 1.0, 0.97239652756, 1.0, 0.987657758409, 1.0, 0.989398495418, 1.0, 0.988783242624, 1.0, 0.99980399921, 1.0, 0.999978220237, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.999978220237, 1.0, 0.997622330022, 1.0, 0.996724872029, 1.0, 0.995287211418, 1.0, 0.992464003025, 1.0, 0.99443982089, 1.0, 0.99771772736, 1.0, 0.995150805918, 1.0, 0.993155583453, 1.0, 0.999184252857, 1.0, 0.998690138431, 1.0, 0.994334315586, 1.0, 0.985078384145, 1.0, 0.998466596565, 1.0, 0.996528256979, 1.0, 0.98743888936, 1.0, 0.997837520689, 1.0, 0.999519615412, 1.0, 1.0, 1.0, 0.999834393714, 1.0, 0.999963020684, 1.0, 0.999992000032, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.425, -0.099, 0.000), (-11.424, 0.021, 0.000), (-11.422, 0.140, 0.000), (-11.419, 0.289, 0.000), (-11.419, 0.437, 0.000), (-11.419, 0.538, 0.000), (-11.424, 0.639, 0.000), (-11.430, 0.731, 0.000), (-11.446, 0.821, 0.000), (-11.460, 0.902, 0.000), (-11.492, 0.979, 0.000), (-11.520, 1.046, 0.000), (-11.554, 1.109, 0.000), (-11.607, 1.209, 0.000), (-11.665, 1.305, 0.000), (-11.671, 1.314, 0.000), (-11.676, 1.323, 0.000), (-11.876, 1.656, 0.000), (-12.068, 1.992, 0.000), (-12.221, 2.261, 0.000), (-12.372, 2.530, 0.000), (-12.562, 2.867, 0.000), (-12.754, 3.203, 0.000), (-12.779, 3.246, 0.000), (-12.805, 3.290, 0.000), (-13.046, 3.706, 0.000), (-13.300, 4.115, 0.000), (-13.382, 4.247, 0.000), (-13.465, 4.379, 0.000), (-13.525, 4.475, 0.000), (-13.607, 4.554, 0.000), (-13.703, 4.645, 0.000), (-13.825, 4.698, 0.000), (-13.961, 4.756, 0.000), (-14.109, 4.757, 0.000), (-14.116, 4.757, 0.000), (-14.123, 4.757, 0.000), (-14.397, 4.770, 0.000), (-14.671, 4.758, 0.000), (-14.779, 4.753, 0.000), (-14.887, 4.741, 0.000), (-14.925, 4.736, 0.000), (-14.963, 4.729, 0.000), (-15.063, 4.709, 0.000), (-15.154, 4.662, 0.000), (-15.253, 4.610, 0.000), (-15.325, 4.526, 0.000), (-15.422, 4.412, 0.000), (-15.448, 4.265, 0.000), (-15.466, 4.162, 0.000), (-15.451, 4.059, 0.000), (-15.443, 4.007, 0.000), (-15.429, 3.957, 0.000), (-15.414, 3.906, 0.000), (-15.392, 3.857, 0.000), (-15.362, 3.790, 0.000), (-15.328, 3.726, 0.000), (-15.260, 3.594, 0.000), (-15.187, 3.464, 0.000), (-15.036, 3.192, 0.000), (-14.881, 2.921, 0.000), (-14.806, 2.791, 0.000), (-14.731, 2.661, 0.000), (-14.318, 1.944, 0.000), (-13.899, 1.230, 0.000), (-13.632, 0.774, 0.000), (-13.358, 0.321, 0.000), (-13.185, 0.034, 0.000), (-13.005, -0.249, 0.000), (-12.891, -0.429, 0.000), (-12.771, -0.605, 0.000), (-12.695, -0.717, 0.000), (-12.613, -0.825, 0.000), (-12.558, -0.897, 0.000), (-12.497, -0.965, 0.000), (-12.451, -1.016, 0.000), (-12.398, -1.061, 0.000), (-12.363, -1.091, 0.000), (-12.324, -1.116, 0.000), (-12.271, -1.151, 0.000), (-12.213, -1.176, 0.000), (-12.150, -1.203, 0.000), (-12.082, -1.211, 0.000), (-12.031, -1.217, 0.000), (-11.981, -1.207, 0.000), (-11.934, -1.197, 0.000), (-11.892, -1.177, 0.000), (-11.839, -1.152, 0.000), (-11.792, -1.119, 0.000), (-11.759, -1.096, 0.000), (-11.728, -1.072, 0.000), (-11.671, -1.028, 0.000), (-11.619, -0.978, 0.000), (-11.579, -0.939, 0.000), (-11.547, -0.893, 0.000), (-11.510, -0.840, 0.000), (-11.490, -0.780, 0.000), (-11.485, -0.764, 0.000), (-11.480, -0.749, 0.000), (-11.459, -0.680, 0.000), (-11.450, -0.610, 0.000), (-11.440, -0.532, 0.000), (-11.435, -0.455, 0.000), (-11.428, -0.325, 0.000), (-11.426, -0.196, 0.000), (-11.426, -0.147, 0.000), (-11.425, -0.099, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.425, -0.099, 0.000)), rs.coerce3dpoint((-11.424, 0.021, 0.000)), rs.coerce3dpoint((-11.422, 0.140, 0.000)), rs.coerce3dpoint((-11.419, 0.289, 0.000)), rs.coerce3dpoint((-11.419, 0.437, 0.000)), rs.coerce3dpoint((-11.419, 0.538, 0.000)), rs.coerce3dpoint((-11.424, 0.639, 0.000)), rs.coerce3dpoint((-11.430, 0.731, 0.000)), rs.coerce3dpoint((-11.446, 0.821, 0.000)), rs.coerce3dpoint((-11.460, 0.902, 0.000)), rs.coerce3dpoint((-11.492, 0.979, 0.000)), rs.coerce3dpoint((-11.520, 1.046, 0.000)), rs.coerce3dpoint((-11.554, 1.109, 0.000)), rs.coerce3dpoint((-11.607, 1.209, 0.000)), rs.coerce3dpoint((-11.665, 1.305, 0.000)), rs.coerce3dpoint((-11.671, 1.314, 0.000)), rs.coerce3dpoint((-11.676, 1.323, 0.000)), rs.coerce3dpoint((-11.876, 1.656, 0.000)), rs.coerce3dpoint((-12.068, 1.992, 0.000)), rs.coerce3dpoint((-12.221, 2.261, 0.000)), rs.coerce3dpoint((-12.372, 2.530, 0.000)), rs.coerce3dpoint((-12.562, 2.867, 0.000)), rs.coerce3dpoint((-12.754, 3.203, 0.000)), rs.coerce3dpoint((-12.779, 3.246, 0.000)), rs.coerce3dpoint((-12.805, 3.290, 0.000)), rs.coerce3dpoint((-13.046, 3.706, 0.000)), rs.coerce3dpoint((-13.300, 4.115, 0.000)), rs.coerce3dpoint((-13.382, 4.247, 0.000)), rs.coerce3dpoint((-13.465, 4.379, 0.000)), rs.coerce3dpoint((-13.525, 4.475, 0.000)), rs.coerce3dpoint((-13.607, 4.554, 0.000)), rs.coerce3dpoint((-13.703, 4.645, 0.000)), rs.coerce3dpoint((-13.825, 4.698, 0.000)), rs.coerce3dpoint((-13.961, 4.756, 0.000)), rs.coerce3dpoint((-14.109, 4.757, 0.000)), rs.coerce3dpoint((-14.116, 4.757, 0.000)), rs.coerce3dpoint((-14.123, 4.757, 0.000)), rs.coerce3dpoint((-14.397, 4.770, 0.000)), rs.coerce3dpoint((-14.671, 4.758, 0.000)), rs.coerce3dpoint((-14.779, 4.753, 0.000)), rs.coerce3dpoint((-14.887, 4.741, 0.000)), rs.coerce3dpoint((-14.925, 4.736, 0.000)), rs.coerce3dpoint((-14.963, 4.729, 0.000)), rs.coerce3dpoint((-15.063, 4.709, 0.000)), rs.coerce3dpoint((-15.154, 4.662, 0.000)), rs.coerce3dpoint((-15.253, 4.610, 0.000)), rs.coerce3dpoint((-15.325, 4.526, 0.000)), rs.coerce3dpoint((-15.422, 4.412, 0.000)), rs.coerce3dpoint((-15.448, 4.265, 0.000)), rs.coerce3dpoint((-15.466, 4.162, 0.000)), rs.coerce3dpoint((-15.451, 4.059, 0.000)), rs.coerce3dpoint((-15.443, 4.007, 0.000)), rs.coerce3dpoint((-15.429, 3.957, 0.000)), rs.coerce3dpoint((-15.414, 3.906, 0.000)), rs.coerce3dpoint((-15.392, 3.857, 0.000)), rs.coerce3dpoint((-15.362, 3.790, 0.000)), rs.coerce3dpoint((-15.328, 3.726, 0.000)), rs.coerce3dpoint((-15.260, 3.594, 0.000)), rs.coerce3dpoint((-15.187, 3.464, 0.000)), rs.coerce3dpoint((-15.036, 3.192, 0.000)), rs.coerce3dpoint((-14.881, 2.921, 0.000)), rs.coerce3dpoint((-14.806, 2.791, 0.000)), rs.coerce3dpoint((-14.731, 2.661, 0.000)), rs.coerce3dpoint((-14.318, 1.944, 0.000)), rs.coerce3dpoint((-13.899, 1.230, 0.000)), rs.coerce3dpoint((-13.632, 0.774, 0.000)), rs.coerce3dpoint((-13.358, 0.321, 0.000)), rs.coerce3dpoint((-13.185, 0.034, 0.000)), rs.coerce3dpoint((-13.005, -0.249, 0.000)), rs.coerce3dpoint((-12.891, -0.429, 0.000)), rs.coerce3dpoint((-12.771, -0.605, 0.000)), rs.coerce3dpoint((-12.695, -0.717, 0.000)), rs.coerce3dpoint((-12.613, -0.825, 0.000)), rs.coerce3dpoint((-12.558, -0.897, 0.000)), rs.coerce3dpoint((-12.497, -0.965, 0.000)), rs.coerce3dpoint((-12.451, -1.016, 0.000)), rs.coerce3dpoint((-12.398, -1.061, 0.000)), rs.coerce3dpoint((-12.363, -1.091, 0.000)), rs.coerce3dpoint((-12.324, -1.116, 0.000)), rs.coerce3dpoint((-12.271, -1.151, 0.000)), rs.coerce3dpoint((-12.213, -1.176, 0.000)), rs.coerce3dpoint((-12.150, -1.203, 0.000)), rs.coerce3dpoint((-12.082, -1.211, 0.000)), rs.coerce3dpoint((-12.031, -1.217, 0.000)), rs.coerce3dpoint((-11.981, -1.207, 0.000)), rs.coerce3dpoint((-11.934, -1.197, 0.000)), rs.coerce3dpoint((-11.892, -1.177, 0.000)), rs.coerce3dpoint((-11.839, -1.152, 0.000)), rs.coerce3dpoint((-11.792, -1.119, 0.000)), rs.coerce3dpoint((-11.759, -1.096, 0.000)), rs.coerce3dpoint((-11.728, -1.072, 0.000)), rs.coerce3dpoint((-11.671, -1.028, 0.000)), rs.coerce3dpoint((-11.619, -0.978, 0.000)), rs.coerce3dpoint((-11.579, -0.939, 0.000)), rs.coerce3dpoint((-11.547, -0.893, 0.000)), rs.coerce3dpoint((-11.510, -0.840, 0.000)), rs.coerce3dpoint((-11.490, -0.780, 0.000)), rs.coerce3dpoint((-11.485, -0.764, 0.000)), rs.coerce3dpoint((-11.480, -0.749, 0.000)), rs.coerce3dpoint((-11.459, -0.680, 0.000)), rs.coerce3dpoint((-11.450, -0.610, 0.000)), rs.coerce3dpoint((-11.440, -0.532, 0.000)), rs.coerce3dpoint((-11.435, -0.455, 0.000)), rs.coerce3dpoint((-11.428, -0.325, 0.000)), rs.coerce3dpoint((-11.426, -0.196, 0.000)), rs.coerce3dpoint((-11.426, -0.147, 0.000)), rs.coerce3dpoint((-11.425, -0.099, 0.000))], [0.0, 0.0, 0.239661825634, 0.239661825634, 0.536629772699, 0.536629772699, 0.738605939267, 0.738605939267, 0.921500286922, 0.921500286922, 1.08652002459, 1.08652002459, 1.23124605096, 1.23124605096, 1.45605954462, 1.45605954462, 1.47756376049, 1.47756376049, 2.25266856529, 2.25266856529, 2.87019285069, 2.87019285069, 3.64409409376, 3.64409409376, 3.74488079130, 3.74488079130, 4.70758736440, 4.70758736440, 5.01853197044, 5.01853197044, 5.24444852573, 5.24444852573, 5.50682710909, 5.50682710909, 5.79903707993, 5.79903707993, 5.81303709421, 5.81303709421, 6.36178871464, 6.36178871464, 6.57776993416, 6.57776993416, 6.65478915830, 6.65478915830, 6.85780773652, 6.85780773652, 7.07838017361, 7.07838017361, 7.36954719743, 7.36954719743, 7.57681967519, 7.57681967519, 7.68137111845, 7.68137111845, 7.78788736534, 7.78788736534, 7.93382232475, 7.93382232475, 8.23098753202, 8.23098753202, 8.85435838648, 8.85435838648, 9.15449848461, 9.15449848461, 10.8099881995, 10.8099881995, 11.8675203757, 11.8675203757, 12.5381460371, 12.5381460371, 12.9642046786, 12.9642046786, 13.2349149604, 13.2349149604, 13.4170363323, 13.4170363323, 13.5548843186, 13.5548843186, 13.6470282740, 13.6470282740, 13.7738594417, 13.7738594417, 13.9100070411, 13.9100070411, 14.0114122366, 14.0114122366, 14.1057030009, 14.1057030009, 14.2212625607, 14.2212625607, 14.3009891437, 14.3009891437, 14.4443176431, 14.4443176431, 14.5564412992, 14.5564412992, 14.6833490352, 14.6833490352, 14.7157310048, 14.7157310048, 14.8584171868, 14.8584171868, 15.0139489716, 15.0139489716, 15.2732260304, 15.2732260304, 15.3696049337, 15.3696049337], 2, [1.0, 0.999997580003, 1.0, 0.999964720622, 1.0, 0.999556078555, 1.0, 0.998201618543, 1.0, 0.993769848041, 1.0, 0.998886700064, 1.0, 0.999624690442, 1.0, 1.0, 1.0, 0.999932722263, 1.0, 0.999996080008, 1.0, 0.999990320047, 1.0, 1.0, 1.0, 0.999890485997, 1.0, 0.999994880013, 1.0, 0.992043300966, 1.0, 0.984457234823, 1.0, 0.980040871212, 1.0, 1.0, 1.0, 0.99884866317, 1.0, 0.999408494991, 1.0, 0.999262991691, 1.0, 0.989656947428, 1.0, 0.982148748549, 1.0, 0.96523692405, 1.0, 0.986770966315, 1.0, 0.997566943487, 1.0, 0.997309843345, 1.0, 0.999550101227, 1.0, 0.999896325374, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.999976880267, 1.0, 0.999941681701, 1.0, 0.999855510439, 1.0, 0.999651580709, 1.0, 0.999126761439, 1.0, 0.99771772736, 1.0, 0.998225495831, 1.0, 0.995776936003, 1.0, 0.989571145552, 1.0, 0.987218133477, 1.0, 0.992706197142, 1.0, 0.996852780301, 1.0, 0.999494507793, 1.0, 0.998261013353, 1.0, 0.995740212261, 1.0, 0.990024722475, 1.0, 0.999807938446, 1.0, 0.996478212433, 1.0, 0.999262991691, 1.0, 0.999779524307, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.369, -17.787, 0.000), (-14.369, -17.105, 0.000), (-14.369, -16.423, 0.000), (-14.369, -16.257, 0.000), (-14.371, -16.091, 0.000), (-14.372, -16.042, 0.000), (-14.375, -15.994, 0.000), (-14.376, -15.978, 0.000), (-14.379, -15.961, 0.000), (-14.397, -15.831, 0.000), (-14.461, -15.717, 0.000), (-14.594, -15.482, 0.000), (-14.854, -15.409, 0.000), (-15.060, -15.352, 0.000), (-15.259, -15.431, 0.000), (-15.337, -15.461, 0.000), (-15.405, -15.508, 0.000), (-15.472, -15.554, 0.000), (-15.532, -15.611, 0.000), (-15.590, -15.667, 0.000), (-15.640, -15.729, 0.000), (-15.707, -15.811, 0.000), (-15.768, -15.897, 0.000), (-15.859, -16.025, 0.000), (-15.943, -16.158, 0.000), (-16.015, -16.270, 0.000), (-16.085, -16.383, 0.000), (-16.230, -16.616, 0.000), (-16.369, -16.853, 0.000), (-16.460, -17.007, 0.000), (-16.544, -17.165, 0.000), (-16.604, -17.276, 0.000), (-16.656, -17.391, 0.000), (-16.686, -17.457, 0.000), (-16.711, -17.524, 0.000), (-16.735, -17.586, 0.000), (-16.751, -17.649, 0.000), (-16.769, -17.720, 0.000), (-16.771, -17.793, 0.000), (-16.772, -17.866, 0.000), (-16.756, -17.937, 0.000), (-16.740, -18.009, 0.000), (-16.715, -18.079, 0.000), (-16.695, -18.132, 0.000), (-16.673, -18.184, 0.000), (-16.662, -18.210, 0.000), (-16.651, -18.237, 0.000), (-16.633, -18.283, 0.000), (-16.612, -18.328, 0.000), (-16.603, -18.347, 0.000), (-16.593, -18.365, 0.000), (-16.488, -18.523, 0.000), (-16.383, -18.682, 0.000), (-16.253, -18.877, 0.000), (-16.124, -19.072, 0.000), (-15.959, -19.322, 0.000), (-15.790, -19.570, 0.000), (-15.693, -19.713, 0.000), (-15.592, -19.853, 0.000), (-15.524, -19.948, 0.000), (-15.450, -20.038, 0.000), (-15.387, -20.115, 0.000), (-15.316, -20.185, 0.000), (-15.269, -20.230, 0.000), (-15.218, -20.272, 0.000), (-15.164, -20.316, 0.000), (-15.098, -20.339, 0.000), (-15.015, -20.369, 0.000), (-14.928, -20.372, 0.000), (-14.844, -20.375, 0.000), (-14.763, -20.353, 0.000), (-14.745, -20.348, 0.000), (-14.728, -20.341, 0.000), (-14.626, -20.304, 0.000), (-14.561, -20.216, 0.000), (-14.523, -20.165, 0.000), (-14.499, -20.106, 0.000), (-14.482, -20.065, 0.000), (-14.470, -20.022, 0.000), (-14.446, -19.938, 0.000), (-14.430, -19.852, 0.000), (-14.412, -19.757, 0.000), (-14.404, -19.661, 0.000), (-14.393, -19.535, 0.000), (-14.388, -19.409, 0.000), (-14.379, -19.204, 0.000), (-14.376, -19.000, 0.000), (-14.371, -18.640, 0.000), (-14.370, -18.279, 0.000), (-14.369, -18.033, 0.000), (-14.369, -17.787, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.369, -17.787, 0.000)), rs.coerce3dpoint((-14.369, -17.105, 0.000)), rs.coerce3dpoint((-14.369, -16.423, 0.000)), rs.coerce3dpoint((-14.369, -16.257, 0.000)), rs.coerce3dpoint((-14.371, -16.091, 0.000)), rs.coerce3dpoint((-14.372, -16.042, 0.000)), rs.coerce3dpoint((-14.375, -15.994, 0.000)), rs.coerce3dpoint((-14.376, -15.978, 0.000)), rs.coerce3dpoint((-14.379, -15.961, 0.000)), rs.coerce3dpoint((-14.397, -15.831, 0.000)), rs.coerce3dpoint((-14.461, -15.717, 0.000)), rs.coerce3dpoint((-14.594, -15.482, 0.000)), rs.coerce3dpoint((-14.854, -15.409, 0.000)), rs.coerce3dpoint((-15.060, -15.352, 0.000)), rs.coerce3dpoint((-15.259, -15.431, 0.000)), rs.coerce3dpoint((-15.337, -15.461, 0.000)), rs.coerce3dpoint((-15.405, -15.508, 0.000)), rs.coerce3dpoint((-15.472, -15.554, 0.000)), rs.coerce3dpoint((-15.532, -15.611, 0.000)), rs.coerce3dpoint((-15.590, -15.667, 0.000)), rs.coerce3dpoint((-15.640, -15.729, 0.000)), rs.coerce3dpoint((-15.707, -15.811, 0.000)), rs.coerce3dpoint((-15.768, -15.897, 0.000)), rs.coerce3dpoint((-15.859, -16.025, 0.000)), rs.coerce3dpoint((-15.943, -16.158, 0.000)), rs.coerce3dpoint((-16.015, -16.270, 0.000)), rs.coerce3dpoint((-16.085, -16.383, 0.000)), rs.coerce3dpoint((-16.230, -16.616, 0.000)), rs.coerce3dpoint((-16.369, -16.853, 0.000)), rs.coerce3dpoint((-16.460, -17.007, 0.000)), rs.coerce3dpoint((-16.544, -17.165, 0.000)), rs.coerce3dpoint((-16.604, -17.276, 0.000)), rs.coerce3dpoint((-16.656, -17.391, 0.000)), rs.coerce3dpoint((-16.686, -17.457, 0.000)), rs.coerce3dpoint((-16.711, -17.524, 0.000)), rs.coerce3dpoint((-16.735, -17.586, 0.000)), rs.coerce3dpoint((-16.751, -17.649, 0.000)), rs.coerce3dpoint((-16.769, -17.720, 0.000)), rs.coerce3dpoint((-16.771, -17.793, 0.000)), rs.coerce3dpoint((-16.772, -17.866, 0.000)), rs.coerce3dpoint((-16.756, -17.937, 0.000)), rs.coerce3dpoint((-16.740, -18.009, 0.000)), rs.coerce3dpoint((-16.715, -18.079, 0.000)), rs.coerce3dpoint((-16.695, -18.132, 0.000)), rs.coerce3dpoint((-16.673, -18.184, 0.000)), rs.coerce3dpoint((-16.662, -18.210, 0.000)), rs.coerce3dpoint((-16.651, -18.237, 0.000)), rs.coerce3dpoint((-16.633, -18.283, 0.000)), rs.coerce3dpoint((-16.612, -18.328, 0.000)), rs.coerce3dpoint((-16.603, -18.347, 0.000)), rs.coerce3dpoint((-16.593, -18.365, 0.000)), rs.coerce3dpoint((-16.488, -18.523, 0.000)), rs.coerce3dpoint((-16.383, -18.682, 0.000)), rs.coerce3dpoint((-16.253, -18.877, 0.000)), rs.coerce3dpoint((-16.124, -19.072, 0.000)), rs.coerce3dpoint((-15.959, -19.322, 0.000)), rs.coerce3dpoint((-15.790, -19.570, 0.000)), rs.coerce3dpoint((-15.693, -19.713, 0.000)), rs.coerce3dpoint((-15.592, -19.853, 0.000)), rs.coerce3dpoint((-15.524, -19.948, 0.000)), rs.coerce3dpoint((-15.450, -20.038, 0.000)), rs.coerce3dpoint((-15.387, -20.115, 0.000)), rs.coerce3dpoint((-15.316, -20.185, 0.000)), rs.coerce3dpoint((-15.269, -20.230, 0.000)), rs.coerce3dpoint((-15.218, -20.272, 0.000)), rs.coerce3dpoint((-15.164, -20.316, 0.000)), rs.coerce3dpoint((-15.098, -20.339, 0.000)), rs.coerce3dpoint((-15.015, -20.369, 0.000)), rs.coerce3dpoint((-14.928, -20.372, 0.000)), rs.coerce3dpoint((-14.844, -20.375, 0.000)), rs.coerce3dpoint((-14.763, -20.353, 0.000)), rs.coerce3dpoint((-14.745, -20.348, 0.000)), rs.coerce3dpoint((-14.728, -20.341, 0.000)), rs.coerce3dpoint((-14.626, -20.304, 0.000)), rs.coerce3dpoint((-14.561, -20.216, 0.000)), rs.coerce3dpoint((-14.523, -20.165, 0.000)), rs.coerce3dpoint((-14.499, -20.106, 0.000)), rs.coerce3dpoint((-14.482, -20.065, 0.000)), rs.coerce3dpoint((-14.470, -20.022, 0.000)), rs.coerce3dpoint((-14.446, -19.938, 0.000)), rs.coerce3dpoint((-14.430, -19.852, 0.000)), rs.coerce3dpoint((-14.412, -19.757, 0.000)), rs.coerce3dpoint((-14.404, -19.661, 0.000)), rs.coerce3dpoint((-14.393, -19.535, 0.000)), rs.coerce3dpoint((-14.388, -19.409, 0.000)), rs.coerce3dpoint((-14.379, -19.204, 0.000)), rs.coerce3dpoint((-14.376, -19.000, 0.000)), rs.coerce3dpoint((-14.371, -18.640, 0.000)), rs.coerce3dpoint((-14.370, -18.279, 0.000)), rs.coerce3dpoint((-14.369, -18.033, 0.000)), rs.coerce3dpoint((-14.369, -17.787, 0.000))], [0.0, 0.0, 1.36393006778, 1.36393006778, 1.69591101483, 1.69591101483, 1.79248195729, 1.79248195729, 1.82605125863, 1.82605125863, 2.08524861982, 2.08524861982, 2.59666616348, 2.59666616348, 3.01027865077, 3.01027865077, 3.17516008687, 3.17516008687, 3.33908310947, 3.33908310947, 3.49927070471, 3.49927070471, 3.71060683581, 3.71060683581, 4.02478493319, 4.02478493319, 4.29059671469, 4.29059671469, 4.84016510206, 4.84016510206, 5.19785258041, 5.19785258041, 5.45051455866, 5.45051455866, 5.59409564089, 5.59409564089, 5.72560873036, 5.72560873036, 5.87079707245, 5.87079707245, 6.01584384429, 6.01584384429, 6.16395836332, 6.16395836332, 6.27701730207, 6.27701730207, 6.33465047988, 6.33465047988, 6.43402162242, 6.43402162242, 6.47532649958, 6.47532649958, 6.85550602585, 6.85550602585, 7.32346419492, 7.32346419492, 7.92331711839, 7.92331711839, 8.26897299547, 8.26897299547, 8.50140765012, 8.50140765012, 8.70069902478, 8.70069902478, 8.83226110075, 8.83226110075, 8.96997953573, 8.96997953573, 9.14433154716, 9.14433154716, 9.31036174775, 9.31036174775, 9.34722989935, 9.34722989935, 9.55858431058, 9.55858431058, 9.68561516787, 9.68561516787, 9.77469135575, 9.77469135575, 9.9493976722, 9.9493976722, 10.1420265214, 10.1420265214, 10.3952016633, 10.3952016633, 10.8043010244, 10.8043010244, 11.5245945532, 11.5245945532, 12.0172858036, 12.0172858036], 2, [1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999667235375, 1.0, 0.999184252857, 1.0, 0.98303267666, 1.0, 0.923741335241, 1.0, 0.948484486303, 1.0, 0.993085567618, 1.0, 0.996692498843, 1.0, 0.998261013353, 1.0, 0.999344994586, 1.0, 0.999744652605, 1.0, 0.999957680895, 1.0, 0.999923122955, 1.0, 0.999791941646, 1.0, 0.9994556482, 1.0, 0.999494507793, 1.0, 0.998444390902, 1.0, 0.993225246641, 1.0, 0.993545676582, 1.0, 0.997608542957, 1.0, 0.999556078555, 1.0, 0.999935022111, 1.0, 0.999415350957, 1.0, 0.999380671843, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999980780185, 1.0, 0.99988142703, 1.0, 0.999550101227, 1.0, 0.998499606435, 1.0, 0.999101523811, 1.0, 0.986053061539, 1.0, 0.987281399046, 1.0, 0.988634239413, 1.0, 0.999101523811, 1.0, 0.958927097196, 1.0, 0.991866789606, 1.0, 0.998153386566, 1.0, 0.998933349176, 1.0, 0.998969950774, 1.0, 0.999692527277, 1.0, 0.999912883795, 1.0, 0.99997952021, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(11.239, -55.921, 0.000), (11.239, -55.838, 0.000), (11.238, -55.755, 0.000), (11.236, -55.353, 0.000), (11.231, -54.950, 0.000), (11.230, -54.793, 0.000), (11.225, -54.635, 0.000), (11.222, -54.536, 0.000), (11.213, -54.438, 0.000), (11.212, -54.424, 0.000), (11.210, -54.409, 0.000), (11.202, -54.323, 0.000), (11.170, -54.241, 0.000), (11.125, -54.126, 0.000), (11.035, -54.041, 0.000), (10.972, -53.983, 0.000), (10.897, -53.941, 0.000), (10.841, -53.909, 0.000), (10.780, -53.886, 0.000), (10.715, -53.859, 0.000), (10.646, -53.853, 0.000), (10.553, -53.845, 0.000), (10.466, -53.878, 0.000), (10.404, -53.901, 0.000), (10.348, -53.938, 0.000), (10.296, -53.973, 0.000), (10.249, -54.014, 0.000), (10.214, -54.044, 0.000), (10.183, -54.079, 0.000), (10.123, -54.145, 0.000), (10.069, -54.216, 0.000), (9.964, -54.353, 0.000), (9.869, -54.497, 0.000), (9.803, -54.597, 0.000), (9.742, -54.700, 0.000), (9.672, -54.819, 0.000), (9.614, -54.944, 0.000), (9.569, -55.040, 0.000), (9.536, -55.141, 0.000), (9.520, -55.192, 0.000), (9.508, -55.245, 0.000), (9.502, -55.273, 0.000), (9.500, -55.301, 0.000), (9.494, -55.379, 0.000), (9.492, -55.457, 0.000), (9.486, -55.639, 0.000), (9.485, -55.820, 0.000), (9.483, -56.151, 0.000), (9.485, -56.482, 0.000), (9.485, -56.497, 0.000), (9.485, -56.513, 0.000), (9.486, -56.749, 0.000), (9.489, -56.985, 0.000), (9.490, -57.123, 0.000), (9.497, -57.261, 0.000), (9.502, -57.354, 0.000), (9.513, -57.446, 0.000), (9.521, -57.516, 0.000), (9.539, -57.583, 0.000), (9.555, -57.649, 0.000), (9.586, -57.710, 0.000), (9.616, -57.767, 0.000), (9.658, -57.817, 0.000), (9.673, -57.835, 0.000), (9.689, -57.852, 0.000), (9.731, -57.900, 0.000), (9.780, -57.939, 0.000), (9.856, -57.998, 0.000), (9.946, -58.029, 0.000), (10.022, -58.056, 0.000), (10.102, -58.068, 0.000), (10.192, -58.081, 0.000), (10.284, -58.080, 0.000), (10.413, -58.081, 0.000), (10.542, -58.071, 0.000), (10.635, -58.065, 0.000), (10.726, -58.048, 0.000), (10.794, -58.036, 0.000), (10.859, -58.013, 0.000), (10.911, -57.995, 0.000), (10.959, -57.966, 0.000), (11.011, -57.935, 0.000), (11.048, -57.886, 0.000), (11.078, -57.847, 0.000), (11.096, -57.802, 0.000), (11.112, -57.763, 0.000), (11.125, -57.723, 0.000), (11.156, -57.631, 0.000), (11.173, -57.536, 0.000), (11.190, -57.443, 0.000), (11.200, -57.348, 0.000), (11.214, -57.209, 0.000), (11.220, -57.069, 0.000), (11.231, -56.851, 0.000), (11.235, -56.632, 0.000), (11.241, -56.288, 0.000), (11.239, -55.943, 0.000), (11.239, -55.932, 0.000), (11.239, -55.921, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((11.239, -55.921, 0.000)), rs.coerce3dpoint((11.239, -55.838, 0.000)), rs.coerce3dpoint((11.238, -55.755, 0.000)), rs.coerce3dpoint((11.236, -55.353, 0.000)), rs.coerce3dpoint((11.231, -54.950, 0.000)), rs.coerce3dpoint((11.230, -54.793, 0.000)), rs.coerce3dpoint((11.225, -54.635, 0.000)), rs.coerce3dpoint((11.222, -54.536, 0.000)), rs.coerce3dpoint((11.213, -54.438, 0.000)), rs.coerce3dpoint((11.212, -54.424, 0.000)), rs.coerce3dpoint((11.210, -54.409, 0.000)), rs.coerce3dpoint((11.202, -54.323, 0.000)), rs.coerce3dpoint((11.170, -54.241, 0.000)), rs.coerce3dpoint((11.125, -54.126, 0.000)), rs.coerce3dpoint((11.035, -54.041, 0.000)), rs.coerce3dpoint((10.972, -53.983, 0.000)), rs.coerce3dpoint((10.897, -53.941, 0.000)), rs.coerce3dpoint((10.841, -53.909, 0.000)), rs.coerce3dpoint((10.780, -53.886, 0.000)), rs.coerce3dpoint((10.715, -53.859, 0.000)), rs.coerce3dpoint((10.646, -53.853, 0.000)), rs.coerce3dpoint((10.553, -53.845, 0.000)), rs.coerce3dpoint((10.466, -53.878, 0.000)), rs.coerce3dpoint((10.404, -53.901, 0.000)), rs.coerce3dpoint((10.348, -53.938, 0.000)), rs.coerce3dpoint((10.296, -53.973, 0.000)), rs.coerce3dpoint((10.249, -54.014, 0.000)), rs.coerce3dpoint((10.214, -54.044, 0.000)), rs.coerce3dpoint((10.183, -54.079, 0.000)), rs.coerce3dpoint((10.123, -54.145, 0.000)), rs.coerce3dpoint((10.069, -54.216, 0.000)), rs.coerce3dpoint((9.964, -54.353, 0.000)), rs.coerce3dpoint((9.869, -54.497, 0.000)), rs.coerce3dpoint((9.803, -54.597, 0.000)), rs.coerce3dpoint((9.742, -54.700, 0.000)), rs.coerce3dpoint((9.672, -54.819, 0.000)), rs.coerce3dpoint((9.614, -54.944, 0.000)), rs.coerce3dpoint((9.569, -55.040, 0.000)), rs.coerce3dpoint((9.536, -55.141, 0.000)), rs.coerce3dpoint((9.520, -55.192, 0.000)), rs.coerce3dpoint((9.508, -55.245, 0.000)), rs.coerce3dpoint((9.502, -55.273, 0.000)), rs.coerce3dpoint((9.500, -55.301, 0.000)), rs.coerce3dpoint((9.494, -55.379, 0.000)), rs.coerce3dpoint((9.492, -55.457, 0.000)), rs.coerce3dpoint((9.486, -55.639, 0.000)), rs.coerce3dpoint((9.485, -55.820, 0.000)), rs.coerce3dpoint((9.483, -56.151, 0.000)), rs.coerce3dpoint((9.485, -56.482, 0.000)), rs.coerce3dpoint((9.485, -56.497, 0.000)), rs.coerce3dpoint((9.485, -56.513, 0.000)), rs.coerce3dpoint((9.486, -56.749, 0.000)), rs.coerce3dpoint((9.489, -56.985, 0.000)), rs.coerce3dpoint((9.490, -57.123, 0.000)), rs.coerce3dpoint((9.497, -57.261, 0.000)), rs.coerce3dpoint((9.502, -57.354, 0.000)), rs.coerce3dpoint((9.513, -57.446, 0.000)), rs.coerce3dpoint((9.521, -57.516, 0.000)), rs.coerce3dpoint((9.539, -57.583, 0.000)), rs.coerce3dpoint((9.555, -57.649, 0.000)), rs.coerce3dpoint((9.586, -57.710, 0.000)), rs.coerce3dpoint((9.616, -57.767, 0.000)), rs.coerce3dpoint((9.658, -57.817, 0.000)), rs.coerce3dpoint((9.673, -57.835, 0.000)), rs.coerce3dpoint((9.689, -57.852, 0.000)), rs.coerce3dpoint((9.731, -57.900, 0.000)), rs.coerce3dpoint((9.780, -57.939, 0.000)), rs.coerce3dpoint((9.856, -57.998, 0.000)), rs.coerce3dpoint((9.946, -58.029, 0.000)), rs.coerce3dpoint((10.022, -58.056, 0.000)), rs.coerce3dpoint((10.102, -58.068, 0.000)), rs.coerce3dpoint((10.192, -58.081, 0.000)), rs.coerce3dpoint((10.284, -58.080, 0.000)), rs.coerce3dpoint((10.413, -58.081, 0.000)), rs.coerce3dpoint((10.542, -58.071, 0.000)), rs.coerce3dpoint((10.635, -58.065, 0.000)), rs.coerce3dpoint((10.726, -58.048, 0.000)), rs.coerce3dpoint((10.794, -58.036, 0.000)), rs.coerce3dpoint((10.859, -58.013, 0.000)), rs.coerce3dpoint((10.911, -57.995, 0.000)), rs.coerce3dpoint((10.959, -57.966, 0.000)), rs.coerce3dpoint((11.011, -57.935, 0.000)), rs.coerce3dpoint((11.048, -57.886, 0.000)), rs.coerce3dpoint((11.078, -57.847, 0.000)), rs.coerce3dpoint((11.096, -57.802, 0.000)), rs.coerce3dpoint((11.112, -57.763, 0.000)), rs.coerce3dpoint((11.125, -57.723, 0.000)), rs.coerce3dpoint((11.156, -57.631, 0.000)), rs.coerce3dpoint((11.173, -57.536, 0.000)), rs.coerce3dpoint((11.190, -57.443, 0.000)), rs.coerce3dpoint((11.200, -57.348, 0.000)), rs.coerce3dpoint((11.214, -57.209, 0.000)), rs.coerce3dpoint((11.220, -57.069, 0.000)), rs.coerce3dpoint((11.231, -56.851, 0.000)), rs.coerce3dpoint((11.235, -56.632, 0.000)), rs.coerce3dpoint((11.241, -56.288, 0.000)), rs.coerce3dpoint((11.239, -55.943, 0.000)), rs.coerce3dpoint((11.239, -55.932, 0.000)), rs.coerce3dpoint((11.239, -55.921, 0.000))], [0.0, 0.0, 0.165804415201, 0.165804415201, 0.97117394184, 0.97117394184, 1.28589493812, 1.28589493812, 1.48386329092, 1.48386329092, 1.51245971902, 1.51245971902, 1.68573604049, 1.68573604049, 1.92936273691, 1.92936273691, 2.09967468423, 2.09967468423, 2.22956304163, 2.22956304163, 2.36866016485, 2.36866016485, 2.55141003317, 2.55141003317, 2.6841323177, 2.6841323177, 2.80928765919, 2.80928765919, 2.90201390140, 2.90201390140, 3.08014566033, 3.08014566033, 3.42575849378, 3.42575849378, 3.66452700941, 3.66452700941, 3.94081811074, 3.94081811074, 4.15237660826, 4.15237660826, 4.25989084664, 4.25989084664, 4.31644675647, 4.31644675647, 4.47339318148, 4.47339318148, 4.83601050262, 4.83601050262, 5.49758379048, 5.49758379048, 5.52923398163, 5.52923398163, 6.00093931625, 6.00093931625, 6.27763613987, 6.27763613987, 6.46277196095, 6.46277196095, 6.60285065506, 6.60285065506, 6.73792739643, 6.73792739643, 6.86749075138, 6.86749075138, 6.91405020416, 6.91405020416, 7.04065318583, 7.04065318583, 7.22992018044, 7.22992018044, 7.39085699057, 7.39085699057, 7.57358496771, 7.57358496771, 7.83166601817, 7.83166601817, 8.01730145348, 8.01730145348, 8.15459266661, 8.15459266661, 8.26541860591, 8.26541860591, 8.38612525490, 8.38612525490, 8.48346812969, 8.48346812969, 8.5679215321, 8.5679215321, 8.76046800099, 8.76046800099, 8.9506559879, 8.9506559879, 9.23070828118, 9.23070828118, 9.66727395146, 9.66727395146, 10.3572126026, 10.3572126026, 10.3786126610, 10.3786126610], 2, [1.0, 1.0, 1.0, 0.999997580003, 1.0, 0.999941681701, 1.0, 0.999556078555, 1.0, 1.0, 1.0, 0.990604961668, 1.0, 0.97574449609, 1.0, 0.992609788889, 1.0, 0.997690669586, 1.0, 0.989019636984, 1.0, 0.976003336442, 1.0, 0.993317582204, 1.0, 0.998116794902, 1.0, 0.998116794902, 1.0, 0.999200319872, 1.0, 0.999337739367, 1.0, 0.99965683889, 1.0, 0.998780563966, 1.0, 0.998153386566, 1.0, 0.998969950774, 1.0, 0.998261013353, 1.0, 0.999672373678, 1.0, 0.99992062315, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999983180141, 1.0, 0.999830734327, 1.0, 0.999330444228, 1.0, 0.997928467847, 1.0, 0.993725327711, 1.0, 0.994313096546, 1.0, 0.999712041466, 1.0, 0.99617046673, 1.0, 0.9873129741, 1.0, 0.995052190765, 1.0, 0.997250963801, 1.0, 0.999247563187, 1.0, 0.998543062108, 1.0, 0.997146397342, 1.0, 0.994011902496, 1.0, 0.983322459603, 1.0, 0.992043300966, 1.0, 0.999023656856, 1.0, 0.997580849688, 1.0, 0.999159853072, 1.0, 0.999672373678, 1.0, 0.999868788609, 1.0, 0.999945921462, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(8.374, -53.107, 0.000), (8.374, -52.472, 0.000), (8.374, -51.837, 0.000), (8.374, -50.477, 0.000), (8.374, -49.118, 0.000), (8.374, -48.980, 0.000), (8.372, -48.842, 0.000), (8.372, -48.825, 0.000), (8.372, -48.809, 0.000), (8.370, -48.710, 0.000), (8.341, -48.614, 0.000), (8.305, -48.501, 0.000), (8.232, -48.407, 0.000), (8.175, -48.335, 0.000), (8.104, -48.276, 0.000), (8.037, -48.219, 0.000), (7.962, -48.173, 0.000), (7.903, -48.140, 0.000), (7.837, -48.127, 0.000), (7.764, -48.113, 0.000), (7.690, -48.118, 0.000), (7.605, -48.122, 0.000), (7.523, -48.147, 0.000), (7.496, -48.155, 0.000), (7.471, -48.168, 0.000), (7.421, -48.197, 0.000), (7.376, -48.234, 0.000), (7.318, -48.282, 0.000), (7.267, -48.338, 0.000), (7.195, -48.415, 0.000), (7.131, -48.498, 0.000), (7.040, -48.616, 0.000), (6.957, -48.739, 0.000), (6.893, -48.835, 0.000), (6.831, -48.933, 0.000), (6.751, -49.060, 0.000), (6.678, -49.192, 0.000), (6.612, -49.310, 0.000), (6.557, -49.433, 0.000), (6.513, -49.534, 0.000), (6.481, -49.639, 0.000), (6.456, -49.723, 0.000), (6.444, -49.810, 0.000), (6.427, -49.941, 0.000), (6.412, -50.073, 0.000), (6.407, -50.120, 0.000), (6.404, -50.167, 0.000), (6.404, -50.176, 0.000), (6.404, -50.186, 0.000), (6.402, -50.251, 0.000), (6.402, -50.317, 0.000), (6.398, -50.963, 0.000), (6.395, -51.610, 0.000), (6.393, -51.979, 0.000), (6.391, -52.349, 0.000), (6.389, -52.926, 0.000), (6.386, -53.504, 0.000), (6.383, -54.404, 0.000), (6.379, -55.304, 0.000), (6.378, -55.915, 0.000), (6.383, -56.526, 0.000), (6.385, -56.851, 0.000), (6.392, -57.176, 0.000), (6.396, -57.328, 0.000), (6.404, -57.479, 0.000), (6.407, -57.540, 0.000), (6.414, -57.602, 0.000), (6.416, -57.623, 0.000), (6.421, -57.643, 0.000), (6.454, -57.737, 0.000), (6.508, -57.821, 0.000), (6.561, -57.903, 0.000), (6.636, -57.966, 0.000), (6.737, -58.049, 0.000), (6.864, -58.080, 0.000), (6.918, -58.093, 0.000), (6.974, -58.098, 0.000), (7.138, -58.111, 0.000), (7.302, -58.116, 0.000), (7.462, -58.120, 0.000), (7.620, -58.110, 0.000), (7.654, -58.108, 0.000), (7.689, -58.104, 0.000), (7.792, -58.095, 0.000), (7.890, -58.063, 0.000), (7.993, -58.029, 0.000), (8.080, -57.966, 0.000), (8.197, -57.881, 0.000), (8.267, -57.755, 0.000), (8.318, -57.664, 0.000), (8.343, -57.564, 0.000), (8.367, -57.465, 0.000), (8.372, -57.364, 0.000), (8.374, -57.305, 0.000), (8.374, -57.246, 0.000), (8.375, -57.020, 0.000), (8.375, -56.795, 0.000), (8.375, -56.577, 0.000), (8.375, -56.359, 0.000), (8.374, -54.733, 0.000), (8.374, -53.107, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((8.374, -53.107, 0.000)), rs.coerce3dpoint((8.374, -52.472, 0.000)), rs.coerce3dpoint((8.374, -51.837, 0.000)), rs.coerce3dpoint((8.374, -50.477, 0.000)), rs.coerce3dpoint((8.374, -49.118, 0.000)), rs.coerce3dpoint((8.374, -48.980, 0.000)), rs.coerce3dpoint((8.372, -48.842, 0.000)), rs.coerce3dpoint((8.372, -48.825, 0.000)), rs.coerce3dpoint((8.372, -48.809, 0.000)), rs.coerce3dpoint((8.370, -48.710, 0.000)), rs.coerce3dpoint((8.341, -48.614, 0.000)), rs.coerce3dpoint((8.305, -48.501, 0.000)), rs.coerce3dpoint((8.232, -48.407, 0.000)), rs.coerce3dpoint((8.175, -48.335, 0.000)), rs.coerce3dpoint((8.104, -48.276, 0.000)), rs.coerce3dpoint((8.037, -48.219, 0.000)), rs.coerce3dpoint((7.962, -48.173, 0.000)), rs.coerce3dpoint((7.903, -48.140, 0.000)), rs.coerce3dpoint((7.837, -48.127, 0.000)), rs.coerce3dpoint((7.764, -48.113, 0.000)), rs.coerce3dpoint((7.690, -48.118, 0.000)), rs.coerce3dpoint((7.605, -48.122, 0.000)), rs.coerce3dpoint((7.523, -48.147, 0.000)), rs.coerce3dpoint((7.496, -48.155, 0.000)), rs.coerce3dpoint((7.471, -48.168, 0.000)), rs.coerce3dpoint((7.421, -48.197, 0.000)), rs.coerce3dpoint((7.376, -48.234, 0.000)), rs.coerce3dpoint((7.318, -48.282, 0.000)), rs.coerce3dpoint((7.267, -48.338, 0.000)), rs.coerce3dpoint((7.195, -48.415, 0.000)), rs.coerce3dpoint((7.131, -48.498, 0.000)), rs.coerce3dpoint((7.040, -48.616, 0.000)), rs.coerce3dpoint((6.957, -48.739, 0.000)), rs.coerce3dpoint((6.893, -48.835, 0.000)), rs.coerce3dpoint((6.831, -48.933, 0.000)), rs.coerce3dpoint((6.751, -49.060, 0.000)), rs.coerce3dpoint((6.678, -49.192, 0.000)), rs.coerce3dpoint((6.612, -49.310, 0.000)), rs.coerce3dpoint((6.557, -49.433, 0.000)), rs.coerce3dpoint((6.513, -49.534, 0.000)), rs.coerce3dpoint((6.481, -49.639, 0.000)), rs.coerce3dpoint((6.456, -49.723, 0.000)), rs.coerce3dpoint((6.444, -49.810, 0.000)), rs.coerce3dpoint((6.427, -49.941, 0.000)), rs.coerce3dpoint((6.412, -50.073, 0.000)), rs.coerce3dpoint((6.407, -50.120, 0.000)), rs.coerce3dpoint((6.404, -50.167, 0.000)), rs.coerce3dpoint((6.404, -50.176, 0.000)), rs.coerce3dpoint((6.404, -50.186, 0.000)), rs.coerce3dpoint((6.402, -50.251, 0.000)), rs.coerce3dpoint((6.402, -50.317, 0.000)), rs.coerce3dpoint((6.398, -50.963, 0.000)), rs.coerce3dpoint((6.395, -51.610, 0.000)), rs.coerce3dpoint((6.393, -51.979, 0.000)), rs.coerce3dpoint((6.391, -52.349, 0.000)), rs.coerce3dpoint((6.389, -52.926, 0.000)), rs.coerce3dpoint((6.386, -53.504, 0.000)), rs.coerce3dpoint((6.383, -54.404, 0.000)), rs.coerce3dpoint((6.379, -55.304, 0.000)), rs.coerce3dpoint((6.378, -55.915, 0.000)), rs.coerce3dpoint((6.383, -56.526, 0.000)), rs.coerce3dpoint((6.385, -56.851, 0.000)), rs.coerce3dpoint((6.392, -57.176, 0.000)), rs.coerce3dpoint((6.396, -57.328, 0.000)), rs.coerce3dpoint((6.404, -57.479, 0.000)), rs.coerce3dpoint((6.407, -57.540, 0.000)), rs.coerce3dpoint((6.414, -57.602, 0.000)), rs.coerce3dpoint((6.416, -57.623, 0.000)), rs.coerce3dpoint((6.421, -57.643, 0.000)), rs.coerce3dpoint((6.454, -57.737, 0.000)), rs.coerce3dpoint((6.508, -57.821, 0.000)), rs.coerce3dpoint((6.561, -57.903, 0.000)), rs.coerce3dpoint((6.636, -57.966, 0.000)), rs.coerce3dpoint((6.737, -58.049, 0.000)), rs.coerce3dpoint((6.864, -58.080, 0.000)), rs.coerce3dpoint((6.918, -58.093, 0.000)), rs.coerce3dpoint((6.974, -58.098, 0.000)), rs.coerce3dpoint((7.138, -58.111, 0.000)), rs.coerce3dpoint((7.302, -58.116, 0.000)), rs.coerce3dpoint((7.462, -58.120, 0.000)), rs.coerce3dpoint((7.620, -58.110, 0.000)), rs.coerce3dpoint((7.654, -58.108, 0.000)), rs.coerce3dpoint((7.689, -58.104, 0.000)), rs.coerce3dpoint((7.792, -58.095, 0.000)), rs.coerce3dpoint((7.890, -58.063, 0.000)), rs.coerce3dpoint((7.993, -58.029, 0.000)), rs.coerce3dpoint((8.080, -57.966, 0.000)), rs.coerce3dpoint((8.197, -57.881, 0.000)), rs.coerce3dpoint((8.267, -57.755, 0.000)), rs.coerce3dpoint((8.318, -57.664, 0.000)), rs.coerce3dpoint((8.343, -57.564, 0.000)), rs.coerce3dpoint((8.367, -57.465, 0.000)), rs.coerce3dpoint((8.372, -57.364, 0.000)), rs.coerce3dpoint((8.374, -57.305, 0.000)), rs.coerce3dpoint((8.374, -57.246, 0.000)), rs.coerce3dpoint((8.375, -57.020, 0.000)), rs.coerce3dpoint((8.375, -56.795, 0.000)), rs.coerce3dpoint((8.375, -56.577, 0.000)), rs.coerce3dpoint((8.375, -56.359, 0.000)), rs.coerce3dpoint((8.374, -54.733, 0.000)), rs.coerce3dpoint((8.374, -53.107, 0.000))], [0.0, 0.0, 1.26922000016, 1.26922000016, 3.98911003738, 3.98911003738, 4.26501335562, 4.26501335562, 4.29729856585, 4.29729856585, 4.49544924637, 4.49544924637, 4.73042332385, 4.73042332385, 4.91445678621, 4.91445678621, 5.09001962358, 5.09001962358, 5.22385751274, 5.22385751274, 5.37079768516, 5.37079768516, 5.54075125690, 5.54075125690, 5.59694041342, 5.59694041342, 5.71257876668, 5.71257876668, 5.86353355176, 5.86353355176, 6.07434614324, 6.07434614324, 6.37114702100, 6.37114702100, 6.60263818585, 6.60263818585, 6.90324029803, 6.90324029803, 7.17330966354, 7.17330966354, 7.39304608121, 7.39304608121, 7.56792615054, 7.56792615054, 7.83287269618, 7.83287269618, 7.92686348094, 7.92686348094, 7.94635499960, 7.94635499960, 8.07687923037, 8.07687923037, 9.37003689949, 9.37003689949, 10.1090356195, 10.1090356195, 11.2641292428, 11.2641292428, 13.0647009752, 13.0647009752, 14.2859295535, 14.2859295535, 14.9367601836, 14.9367601836, 15.2391437964, 15.2391437964, 15.3629563100, 15.3629563100, 15.4047976197, 15.4047976197, 15.6033975148, 15.6033975148, 15.7974800691, 15.7974800691, 16.0544185930, 16.0544185930, 16.1662008532, 16.1662008532, 16.4948479462, 16.4948479462, 16.8128855444, 16.8128855444, 16.8813112457, 16.8813112457, 17.0878163962, 17.0878163962, 17.3018387135, 17.3018387135, 17.5860340909, 17.5860340909, 17.7925156393, 17.7925156393, 17.9939792883, 17.9939792883, 18.1123801453, 18.1123801453, 18.5636316476, 18.5636316476, 18.9993017137, 18.9993017137, 22.2518717934, 22.2518717934], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 0.990024722475, 1.0, 0.984142022664, 1.0, 0.994184956666, 1.0, 0.997510921616, 1.0, 0.986995492034, 1.0, 0.992242685122, 1.0, 0.992341439507, 1.0, 0.995684830475, 1.0, 0.995813501766, 1.0, 0.997954095007, 1.0, 0.998924099093, 1.0, 0.999422166994, 1.0, 0.999872008191, 1.0, 0.999602459035, 1.0, 0.998942559386, 1.0, 0.998079845269, 1.0, 0.996868590551, 1.0, 0.999941681701, 1.0, 0.999525792463, 1.0, 1.0, 1.0, 0.99993950183, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.999966380565, 1.0, 0.999884486672, 1.0, 0.999525792463, 1.0, 0.997622330022, 1.0, 0.992991664741, 1.0, 0.988544373687, 1.0, 0.974916018918, 1.0, 0.996544859328, 1.0, 0.999640944472, 1.0, 0.998914809139, 1.0, 0.999918083355, 1.0, 0.993409290533, 1.0, 0.988484270011, 1.0, 0.976260838605, 1.0, 0.991273363959, 1.0, 0.995071992622, 1.0, 0.999762408228, 1.0, 0.999993520021, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(3.468, -53.128, 0.000), (3.468, -54.754, 0.000), (3.468, -56.380, 0.000), (3.468, -56.788, 0.000), (3.468, -57.195, 0.000), (3.468, -57.274, 0.000), (3.469, -57.353, 0.000), (3.470, -57.369, 0.000), (3.471, -57.385, 0.000), (3.475, -57.493, 0.000), (3.503, -57.597, 0.000), (3.529, -57.697, 0.000), (3.581, -57.787, 0.000), (3.676, -57.952, 0.000), (3.846, -58.039, 0.000), (3.937, -58.086, 0.000), (4.038, -58.107, 0.000), (4.095, -58.120, 0.000), (4.154, -58.125, 0.000), (4.312, -58.140, 0.000), (4.470, -58.138, 0.000), (4.633, -58.136, 0.000), (4.796, -58.124, 0.000), (4.832, -58.121, 0.000), (4.868, -58.119, 0.000), (4.960, -58.112, 0.000), (5.046, -58.080, 0.000), (5.171, -58.032, 0.000), (5.262, -57.934, 0.000), (5.328, -57.864, 0.000), (5.372, -57.778, 0.000), (5.401, -57.723, 0.000), (5.421, -57.664, 0.000), (5.427, -57.643, 0.000), (5.429, -57.621, 0.000), (5.436, -57.558, 0.000), (5.439, -57.496, 0.000), (5.447, -57.339, 0.000), (5.450, -57.182, 0.000), (5.458, -56.853, 0.000), (5.460, -56.523, 0.000), (5.464, -55.904, 0.000), (5.463, -55.286, 0.000), (5.460, -54.405, 0.000), (5.456, -53.525, 0.000), (5.454, -52.947, 0.000), (5.451, -52.370, 0.000), (5.446, -51.381, 0.000), (5.441, -50.392, 0.000), (5.440, -50.326, 0.000), (5.440, -50.260, 0.000), (5.439, -50.233, 0.000), (5.439, -50.207, 0.000), (5.438, -50.163, 0.000), (5.433, -50.120, 0.000), (5.422, -50.014, 0.000), (5.408, -49.909, 0.000), (5.403, -49.870, 0.000), (5.398, -49.831, 0.000), (5.386, -49.741, 0.000), (5.360, -49.655, 0.000), (5.327, -49.548, 0.000), (5.282, -49.447, 0.000), (5.226, -49.323, 0.000), (5.160, -49.204, 0.000), (5.089, -49.077, 0.000), (5.011, -48.954, 0.000), (4.915, -48.800, 0.000), (4.809, -48.651, 0.000), (4.735, -48.546, 0.000), (4.654, -48.447, 0.000), (4.595, -48.376, 0.000), (4.529, -48.312, 0.000), (4.481, -48.264, 0.000), (4.427, -48.225, 0.000), (4.400, -48.205, 0.000), (4.371, -48.189, 0.000), (4.346, -48.176, 0.000), (4.319, -48.168, 0.000), (4.237, -48.143, 0.000), (4.152, -48.139, 0.000), (4.078, -48.134, 0.000), (4.005, -48.148, 0.000), (3.939, -48.161, 0.000), (3.881, -48.194, 0.000), (3.757, -48.271, 0.000), (3.650, -48.370, 0.000), (3.594, -48.422, 0.000), (3.547, -48.482, 0.000), (3.518, -48.518, 0.000), (3.497, -48.559, 0.000), (3.483, -48.584, 0.000), (3.477, -48.612, 0.000), (3.475, -48.621, 0.000), (3.475, -48.631, 0.000), (3.472, -48.767, 0.000), (3.471, -48.902, 0.000), (3.469, -49.369, 0.000), (3.469, -49.836, 0.000), (3.469, -51.482, 0.000), (3.468, -53.128, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((3.468, -53.128, 0.000)), rs.coerce3dpoint((3.468, -54.754, 0.000)), rs.coerce3dpoint((3.468, -56.380, 0.000)), rs.coerce3dpoint((3.468, -56.788, 0.000)), rs.coerce3dpoint((3.468, -57.195, 0.000)), rs.coerce3dpoint((3.468, -57.274, 0.000)), rs.coerce3dpoint((3.469, -57.353, 0.000)), rs.coerce3dpoint((3.470, -57.369, 0.000)), rs.coerce3dpoint((3.471, -57.385, 0.000)), rs.coerce3dpoint((3.475, -57.493, 0.000)), rs.coerce3dpoint((3.503, -57.597, 0.000)), rs.coerce3dpoint((3.529, -57.697, 0.000)), rs.coerce3dpoint((3.581, -57.787, 0.000)), rs.coerce3dpoint((3.676, -57.952, 0.000)), rs.coerce3dpoint((3.846, -58.039, 0.000)), rs.coerce3dpoint((3.937, -58.086, 0.000)), rs.coerce3dpoint((4.038, -58.107, 0.000)), rs.coerce3dpoint((4.095, -58.120, 0.000)), rs.coerce3dpoint((4.154, -58.125, 0.000)), rs.coerce3dpoint((4.312, -58.140, 0.000)), rs.coerce3dpoint((4.470, -58.138, 0.000)), rs.coerce3dpoint((4.633, -58.136, 0.000)), rs.coerce3dpoint((4.796, -58.124, 0.000)), rs.coerce3dpoint((4.832, -58.121, 0.000)), rs.coerce3dpoint((4.868, -58.119, 0.000)), rs.coerce3dpoint((4.960, -58.112, 0.000)), rs.coerce3dpoint((5.046, -58.080, 0.000)), rs.coerce3dpoint((5.171, -58.032, 0.000)), rs.coerce3dpoint((5.262, -57.934, 0.000)), rs.coerce3dpoint((5.328, -57.864, 0.000)), rs.coerce3dpoint((5.372, -57.778, 0.000)), rs.coerce3dpoint((5.401, -57.723, 0.000)), rs.coerce3dpoint((5.421, -57.664, 0.000)), rs.coerce3dpoint((5.427, -57.643, 0.000)), rs.coerce3dpoint((5.429, -57.621, 0.000)), rs.coerce3dpoint((5.436, -57.558, 0.000)), rs.coerce3dpoint((5.439, -57.496, 0.000)), rs.coerce3dpoint((5.447, -57.339, 0.000)), rs.coerce3dpoint((5.450, -57.182, 0.000)), rs.coerce3dpoint((5.458, -56.853, 0.000)), rs.coerce3dpoint((5.460, -56.523, 0.000)), rs.coerce3dpoint((5.464, -55.904, 0.000)), rs.coerce3dpoint((5.463, -55.286, 0.000)), rs.coerce3dpoint((5.460, -54.405, 0.000)), rs.coerce3dpoint((5.456, -53.525, 0.000)), rs.coerce3dpoint((5.454, -52.947, 0.000)), rs.coerce3dpoint((5.451, -52.370, 0.000)), rs.coerce3dpoint((5.446, -51.381, 0.000)), rs.coerce3dpoint((5.441, -50.392, 0.000)), rs.coerce3dpoint((5.440, -50.326, 0.000)), rs.coerce3dpoint((5.440, -50.260, 0.000)), rs.coerce3dpoint((5.439, -50.233, 0.000)), rs.coerce3dpoint((5.439, -50.207, 0.000)), rs.coerce3dpoint((5.438, -50.163, 0.000)), rs.coerce3dpoint((5.433, -50.120, 0.000)), rs.coerce3dpoint((5.422, -50.014, 0.000)), rs.coerce3dpoint((5.408, -49.909, 0.000)), rs.coerce3dpoint((5.403, -49.870, 0.000)), rs.coerce3dpoint((5.398, -49.831, 0.000)), rs.coerce3dpoint((5.386, -49.741, 0.000)), rs.coerce3dpoint((5.360, -49.655, 0.000)), rs.coerce3dpoint((5.327, -49.548, 0.000)), rs.coerce3dpoint((5.282, -49.447, 0.000)), rs.coerce3dpoint((5.226, -49.323, 0.000)), rs.coerce3dpoint((5.160, -49.204, 0.000)), rs.coerce3dpoint((5.089, -49.077, 0.000)), rs.coerce3dpoint((5.011, -48.954, 0.000)), rs.coerce3dpoint((4.915, -48.800, 0.000)), rs.coerce3dpoint((4.809, -48.651, 0.000)), rs.coerce3dpoint((4.735, -48.546, 0.000)), rs.coerce3dpoint((4.654, -48.447, 0.000)), rs.coerce3dpoint((4.595, -48.376, 0.000)), rs.coerce3dpoint((4.529, -48.312, 0.000)), rs.coerce3dpoint((4.481, -48.264, 0.000)), rs.coerce3dpoint((4.427, -48.225, 0.000)), rs.coerce3dpoint((4.400, -48.205, 0.000)), rs.coerce3dpoint((4.371, -48.189, 0.000)), rs.coerce3dpoint((4.346, -48.176, 0.000)), rs.coerce3dpoint((4.319, -48.168, 0.000)), rs.coerce3dpoint((4.237, -48.143, 0.000)), rs.coerce3dpoint((4.152, -48.139, 0.000)), rs.coerce3dpoint((4.078, -48.134, 0.000)), rs.coerce3dpoint((4.005, -48.148, 0.000)), rs.coerce3dpoint((3.939, -48.161, 0.000)), rs.coerce3dpoint((3.881, -48.194, 0.000)), rs.coerce3dpoint((3.757, -48.271, 0.000)), rs.coerce3dpoint((3.650, -48.370, 0.000)), rs.coerce3dpoint((3.594, -48.422, 0.000)), rs.coerce3dpoint((3.547, -48.482, 0.000)), rs.coerce3dpoint((3.518, -48.518, 0.000)), rs.coerce3dpoint((3.497, -48.559, 0.000)), rs.coerce3dpoint((3.483, -48.584, 0.000)), rs.coerce3dpoint((3.477, -48.612, 0.000)), rs.coerce3dpoint((3.475, -48.621, 0.000)), rs.coerce3dpoint((3.475, -48.631, 0.000)), rs.coerce3dpoint((3.472, -48.767, 0.000)), rs.coerce3dpoint((3.471, -48.902, 0.000)), rs.coerce3dpoint((3.469, -49.369, 0.000)), rs.coerce3dpoint((3.469, -49.836, 0.000)), rs.coerce3dpoint((3.469, -51.482, 0.000)), rs.coerce3dpoint((3.468, -53.128, 0.000))], [0.0, 0.0, 3.25257007749, 3.25257007749, 4.06784007847, 4.06784007847, 4.22556525416, 4.22556525416, 4.25789140457, 4.25789140457, 4.47193144189, 4.47193144189, 4.67782795558, 4.67782795558, 5.04886549895, 5.04886549895, 5.25327427478, 5.25327427478, 5.37057826527, 5.37057826527, 5.68706086144, 5.68706086144, 6.01346799907, 6.01346799907, 6.08568717934, 6.08568717934, 6.26835671275, 6.26835671275, 6.53096312908, 6.53096312908, 6.72260019406, 6.72260019406, 6.84708634080, 6.84708634080, 6.89119345909, 6.89119345909, 7.01640562339, 7.01640562339, 7.33063823473, 7.33063823473, 7.98946477261, 7.98946477261, 9.22688237774, 9.22688237774, 10.9877541908, 10.9877541908, 12.1428478141, 12.1428478141, 14.1208429914, 14.1208429914, 14.2531376481, 14.2531376481, 14.3055278386, 14.3055278386, 14.3931682906, 14.3931682906, 14.6054685456, 14.6054685456, 14.6839579462, 14.6839579462, 14.8646593075, 14.8646593075, 15.0867456975, 15.0867456975, 15.3585090410, 15.3585090410, 15.6492460470, 15.6492460470, 16.0136119434, 16.0136119434, 16.2702935174, 16.2702935174, 16.4543886414, 16.4543886414, 16.5887661548, 16.5887661548, 16.6549511656, 16.6549511656, 16.7115742284, 16.7115742284, 16.8812668230, 16.8812668230, 17.0283835977, 17.0283835977, 17.1618644030, 17.1618644030, 17.4524144177, 17.4524144177, 17.6046328059, 17.6046328059, 17.6970466853, 17.6970466853, 17.7534834591, 17.7534834591, 17.7723627408, 17.7723627408, 18.0437886328, 18.0437886328, 18.9774120253, 18.9774120253, 22.2691221456, 22.2691221456], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 1.0, 1.0, 0.994334315586, 1.0, 0.991088663666, 1.0, 0.959591345253, 1.0, 0.991351936895, 1.0, 0.9981290319, 1.0, 0.998700345101, 1.0, 0.999519615412, 1.0, 1.0, 1.0, 0.989855794753, 1.0, 0.97389523551, 1.0, 0.990794565927, 1.0, 0.997524986641, 1.0, 0.997552997578, 1.0, 0.999556078555, 1.0, 0.999884486672, 1.0, 0.999968000512, 1.0, 0.999990320047, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999963020684, 1.0, 0.999192306316, 1.0, 0.99991550357, 1.0, 1.0, 1.0, 0.996708705239, 1.0, 0.998092201585, 1.0, 0.998960860186, 1.0, 0.999635566418, 1.0, 0.999591103615, 1.0, 0.999270646076, 1.0, 0.998617576209, 1.0, 0.997280482922, 1.0, 0.998272772946, 1.0, 0.995647711862, 1.0, 0.992366030394, 1.0, 0.992217898833, 1.0, 0.987059296204, 1.0, 0.995287211418, 1.0, 0.997039887627, 1.0, 0.995629093335, 1.0, 0.990982263942, 1.0, 0.996187899929, 1.0, 0.999951981153, 1.0, 0.999997580003, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-18.583, -45.352, 0.000), (-18.470, -45.342, 0.000), (-18.365, -45.297, 0.000), (-18.295, -45.268, 0.000), (-18.232, -45.225, 0.000), (-18.187, -45.194, 0.000), (-18.148, -45.156, 0.000), (-18.092, -45.100, 0.000), (-18.042, -45.039, 0.000), (-17.970, -44.950, 0.000), (-17.906, -44.856, 0.000), (-17.821, -44.732, 0.000), (-17.743, -44.602, 0.000), (-17.710, -44.547, 0.000), (-17.677, -44.491, 0.000), (-17.582, -44.330, 0.000), (-17.490, -44.167, 0.000), (-17.351, -43.923, 0.000), (-17.212, -43.679, 0.000), (-17.159, -43.585, 0.000), (-17.106, -43.492, 0.000), (-16.910, -43.146, 0.000), (-16.711, -42.802, 0.000), (-16.705, -42.791, 0.000), (-16.699, -42.781, 0.000), (-16.642, -42.684, 0.000), (-16.605, -42.577, 0.000), (-16.546, -42.405, 0.000), (-16.556, -42.223, 0.000), (-16.563, -42.110, 0.000), (-16.592, -42.001, 0.000), (-16.623, -41.890, 0.000), (-16.670, -41.784, 0.000), (-16.723, -41.664, 0.000), (-16.789, -41.550, 0.000), (-16.902, -41.362, 0.000), (-17.010, -41.170, 0.000), (-17.075, -41.055, 0.000), (-17.139, -40.940, 0.000), (-17.263, -40.718, 0.000), (-17.390, -40.497, 0.000), (-17.526, -40.262, 0.000), (-17.671, -40.033, 0.000), (-17.704, -39.981, 0.000), (-17.737, -39.930, 0.000), (-17.816, -39.800, 0.000), (-17.906, -39.678, 0.000), (-17.977, -39.583, 0.000), (-18.057, -39.496, 0.000), (-18.128, -39.420, 0.000), (-18.210, -39.355, 0.000), (-18.260, -39.316, 0.000), (-18.314, -39.281, 0.000), (-18.352, -39.256, 0.000), (-18.396, -39.241, 0.000), (-18.495, -39.206, 0.000), (-18.601, -39.216, 0.000), (-18.692, -39.224, 0.000), (-18.771, -39.272, 0.000), (-18.827, -39.306, 0.000), (-18.869, -39.356, 0.000), (-18.899, -39.386, 0.000), (-18.926, -39.418, 0.000), (-18.997, -39.500, 0.000), (-19.063, -39.586, 0.000), (-19.205, -39.767, 0.000), (-19.337, -39.955, 0.000), (-19.446, -40.112, 0.000), (-19.548, -40.274, 0.000), (-19.588, -40.337, 0.000), (-19.628, -40.401, 0.000), (-19.700, -40.517, 0.000), (-19.775, -40.633, 0.000), (-19.808, -40.684, 0.000), (-19.841, -40.734, 0.000), (-19.938, -40.883, 0.000), (-20.032, -41.034, 0.000), (-20.205, -41.314, 0.000), (-20.357, -41.607, 0.000), (-20.367, -41.626, 0.000), (-20.377, -41.646, 0.000), (-20.440, -41.763, 0.000), (-20.490, -41.885, 0.000), (-20.532, -41.989, 0.000), (-20.560, -42.098, 0.000), (-20.587, -42.201, 0.000), (-20.594, -42.307, 0.000), (-20.605, -42.490, 0.000), (-20.545, -42.663, 0.000), (-20.510, -42.763, 0.000), (-20.457, -42.855, 0.000), (-20.453, -42.862, 0.000), (-20.449, -42.869, 0.000), (-20.224, -43.260, 0.000), (-20.003, -43.652, 0.000), (-19.963, -43.724, 0.000), (-19.922, -43.796, 0.000), (-19.758, -44.088, 0.000), (-19.592, -44.378, 0.000), (-19.532, -44.483, 0.000), (-19.471, -44.587, 0.000), (-19.396, -44.715, 0.000), (-19.313, -44.838, 0.000), (-19.250, -44.931, 0.000), (-19.180, -45.018, 0.000), (-19.101, -45.115, 0.000), (-19.007, -45.197, 0.000), (-18.982, -45.220, 0.000), (-18.955, -45.242, 0.000), (-18.906, -45.282, 0.000), (-18.846, -45.305, 0.000), (-18.782, -45.330, 0.000), (-18.714, -45.341, 0.000), (-18.649, -45.351, 0.000), (-18.583, -45.352, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-18.583, -45.352, 0.000)), rs.coerce3dpoint((-18.470, -45.342, 0.000)), rs.coerce3dpoint((-18.365, -45.297, 0.000)), rs.coerce3dpoint((-18.295, -45.268, 0.000)), rs.coerce3dpoint((-18.232, -45.225, 0.000)), rs.coerce3dpoint((-18.187, -45.194, 0.000)), rs.coerce3dpoint((-18.148, -45.156, 0.000)), rs.coerce3dpoint((-18.092, -45.100, 0.000)), rs.coerce3dpoint((-18.042, -45.039, 0.000)), rs.coerce3dpoint((-17.970, -44.950, 0.000)), rs.coerce3dpoint((-17.906, -44.856, 0.000)), rs.coerce3dpoint((-17.821, -44.732, 0.000)), rs.coerce3dpoint((-17.743, -44.602, 0.000)), rs.coerce3dpoint((-17.710, -44.547, 0.000)), rs.coerce3dpoint((-17.677, -44.491, 0.000)), rs.coerce3dpoint((-17.582, -44.330, 0.000)), rs.coerce3dpoint((-17.490, -44.167, 0.000)), rs.coerce3dpoint((-17.351, -43.923, 0.000)), rs.coerce3dpoint((-17.212, -43.679, 0.000)), rs.coerce3dpoint((-17.159, -43.585, 0.000)), rs.coerce3dpoint((-17.106, -43.492, 0.000)), rs.coerce3dpoint((-16.910, -43.146, 0.000)), rs.coerce3dpoint((-16.711, -42.802, 0.000)), rs.coerce3dpoint((-16.705, -42.791, 0.000)), rs.coerce3dpoint((-16.699, -42.781, 0.000)), rs.coerce3dpoint((-16.642, -42.684, 0.000)), rs.coerce3dpoint((-16.605, -42.577, 0.000)), rs.coerce3dpoint((-16.546, -42.405, 0.000)), rs.coerce3dpoint((-16.556, -42.223, 0.000)), rs.coerce3dpoint((-16.563, -42.110, 0.000)), rs.coerce3dpoint((-16.592, -42.001, 0.000)), rs.coerce3dpoint((-16.623, -41.890, 0.000)), rs.coerce3dpoint((-16.670, -41.784, 0.000)), rs.coerce3dpoint((-16.723, -41.664, 0.000)), rs.coerce3dpoint((-16.789, -41.550, 0.000)), rs.coerce3dpoint((-16.902, -41.362, 0.000)), rs.coerce3dpoint((-17.010, -41.170, 0.000)), rs.coerce3dpoint((-17.075, -41.055, 0.000)), rs.coerce3dpoint((-17.139, -40.940, 0.000)), rs.coerce3dpoint((-17.263, -40.718, 0.000)), rs.coerce3dpoint((-17.390, -40.497, 0.000)), rs.coerce3dpoint((-17.526, -40.262, 0.000)), rs.coerce3dpoint((-17.671, -40.033, 0.000)), rs.coerce3dpoint((-17.704, -39.981, 0.000)), rs.coerce3dpoint((-17.737, -39.930, 0.000)), rs.coerce3dpoint((-17.816, -39.800, 0.000)), rs.coerce3dpoint((-17.906, -39.678, 0.000)), rs.coerce3dpoint((-17.977, -39.583, 0.000)), rs.coerce3dpoint((-18.057, -39.496, 0.000)), rs.coerce3dpoint((-18.128, -39.420, 0.000)), rs.coerce3dpoint((-18.210, -39.355, 0.000)), rs.coerce3dpoint((-18.260, -39.316, 0.000)), rs.coerce3dpoint((-18.314, -39.281, 0.000)), rs.coerce3dpoint((-18.352, -39.256, 0.000)), rs.coerce3dpoint((-18.396, -39.241, 0.000)), rs.coerce3dpoint((-18.495, -39.206, 0.000)), rs.coerce3dpoint((-18.601, -39.216, 0.000)), rs.coerce3dpoint((-18.692, -39.224, 0.000)), rs.coerce3dpoint((-18.771, -39.272, 0.000)), rs.coerce3dpoint((-18.827, -39.306, 0.000)), rs.coerce3dpoint((-18.869, -39.356, 0.000)), rs.coerce3dpoint((-18.899, -39.386, 0.000)), rs.coerce3dpoint((-18.926, -39.418, 0.000)), rs.coerce3dpoint((-18.997, -39.500, 0.000)), rs.coerce3dpoint((-19.063, -39.586, 0.000)), rs.coerce3dpoint((-19.205, -39.767, 0.000)), rs.coerce3dpoint((-19.337, -39.955, 0.000)), rs.coerce3dpoint((-19.446, -40.112, 0.000)), rs.coerce3dpoint((-19.548, -40.274, 0.000)), rs.coerce3dpoint((-19.588, -40.337, 0.000)), rs.coerce3dpoint((-19.628, -40.401, 0.000)), rs.coerce3dpoint((-19.700, -40.517, 0.000)), rs.coerce3dpoint((-19.775, -40.633, 0.000)), rs.coerce3dpoint((-19.808, -40.684, 0.000)), rs.coerce3dpoint((-19.841, -40.734, 0.000)), rs.coerce3dpoint((-19.938, -40.883, 0.000)), rs.coerce3dpoint((-20.032, -41.034, 0.000)), rs.coerce3dpoint((-20.205, -41.314, 0.000)), rs.coerce3dpoint((-20.357, -41.607, 0.000)), rs.coerce3dpoint((-20.367, -41.626, 0.000)), rs.coerce3dpoint((-20.377, -41.646, 0.000)), rs.coerce3dpoint((-20.440, -41.763, 0.000)), rs.coerce3dpoint((-20.490, -41.885, 0.000)), rs.coerce3dpoint((-20.532, -41.989, 0.000)), rs.coerce3dpoint((-20.560, -42.098, 0.000)), rs.coerce3dpoint((-20.587, -42.201, 0.000)), rs.coerce3dpoint((-20.594, -42.307, 0.000)), rs.coerce3dpoint((-20.605, -42.490, 0.000)), rs.coerce3dpoint((-20.545, -42.663, 0.000)), rs.coerce3dpoint((-20.510, -42.763, 0.000)), rs.coerce3dpoint((-20.457, -42.855, 0.000)), rs.coerce3dpoint((-20.453, -42.862, 0.000)), rs.coerce3dpoint((-20.449, -42.869, 0.000)), rs.coerce3dpoint((-20.224, -43.260, 0.000)), rs.coerce3dpoint((-20.003, -43.652, 0.000)), rs.coerce3dpoint((-19.963, -43.724, 0.000)), rs.coerce3dpoint((-19.922, -43.796, 0.000)), rs.coerce3dpoint((-19.758, -44.088, 0.000)), rs.coerce3dpoint((-19.592, -44.378, 0.000)), rs.coerce3dpoint((-19.532, -44.483, 0.000)), rs.coerce3dpoint((-19.471, -44.587, 0.000)), rs.coerce3dpoint((-19.396, -44.715, 0.000)), rs.coerce3dpoint((-19.313, -44.838, 0.000)), rs.coerce3dpoint((-19.250, -44.931, 0.000)), rs.coerce3dpoint((-19.180, -45.018, 0.000)), rs.coerce3dpoint((-19.101, -45.115, 0.000)), rs.coerce3dpoint((-19.007, -45.197, 0.000)), rs.coerce3dpoint((-18.982, -45.220, 0.000)), rs.coerce3dpoint((-18.955, -45.242, 0.000)), rs.coerce3dpoint((-18.906, -45.282, 0.000)), rs.coerce3dpoint((-18.846, -45.305, 0.000)), rs.coerce3dpoint((-18.782, -45.330, 0.000)), rs.coerce3dpoint((-18.714, -45.341, 0.000)), rs.coerce3dpoint((-18.649, -45.351, 0.000)), rs.coerce3dpoint((-18.583, -45.352, 0.000))], [0.0, 0.0, 0.225497675883, 0.225497675883, 0.377676939942, 0.377676939942, 0.486446037454, 0.486446037454, 0.644538786251, 0.644538786251, 0.871993385874, 0.871993385874, 1.17359836826, 1.17359836826, 1.30319715061, 1.30319715061, 1.67734940594, 1.67734940594, 2.23939971899, 2.23939971899, 2.45382713981, 2.45382713981, 3.24954447555, 3.24954447555, 3.27326763934, 3.27326763934, 3.49804780940, 3.49804780940, 3.85778330863, 3.85778330863, 4.08315149030, 4.08315149030, 4.31386090088, 4.31386090088, 4.57634874713, 4.57634874713, 5.01669675782, 5.01669675782, 5.27992368327, 5.27992368327, 5.78913848782, 5.78913848782, 6.33184430360, 6.33184430360, 6.45465966884, 6.45465966884, 6.7577287414, 6.7577287414, 6.99414749277, 6.99414749277, 7.20284738001, 7.20284738001, 7.32978480988, 7.32978480988, 7.42130091546, 7.42130091546, 7.62931822971, 7.62931822971, 7.80994967682, 7.80994967682, 7.93984050078, 7.93984050078, 8.02358457343, 8.02358457343, 8.24105757754, 8.24105757754, 8.69999362327, 8.69999362327, 9.08281275811, 9.08281275811, 9.23254115789, 9.23254115789, 9.50739909795, 9.50739909795, 9.62849802776, 9.62849802776, 9.98382531596, 9.98382531596, 10.6424154897, 10.6424154897, 10.6868423487, 10.6868423487, 10.9514357486, 10.9514357486, 11.1751949280, 11.1751949280, 11.3877623862, 11.3877623862, 11.7488263705, 11.7488263705, 11.9604798755, 11.9604798755, 11.9768326153, 11.9768326153, 12.8781846967, 12.8781846967, 13.0428003111, 13.0428003111, 13.7119674805, 13.7119674805, 13.9536105545, 13.9536105545, 14.2498984443, 14.2498984443, 14.4742725003, 14.4742725003, 14.7232251178, 14.7232251178, 14.7917202202, 14.7917202202, 14.9179151981, 14.9179151981, 15.0555960349, 15.0555960349, 15.1867358611, 15.1867358611], 2, [1.0, 0.987843857727, 1.0, 0.994992548753, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988242310391, 1.0, 0.99383633411, 1.0, 0.997510921616, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(17.912, -46.459, 0.000), (18.000, -46.454, 0.000), (18.083, -46.424, 0.000), (18.179, -46.389, 0.000), (18.264, -46.331, 0.000), (18.308, -46.300, 0.000), (18.347, -46.262, 0.000), (18.404, -46.206, 0.000), (18.454, -46.145, 0.000), (18.525, -46.056, 0.000), (18.589, -45.962, 0.000), (18.674, -45.838, 0.000), (18.752, -45.708, 0.000), (18.786, -45.653, 0.000), (18.819, -45.597, 0.000), (18.913, -45.436, 0.000), (19.006, -45.273, 0.000), (19.144, -45.029, 0.000), (19.283, -44.784, 0.000), (19.336, -44.691, 0.000), (19.389, -44.598, 0.000), (19.585, -44.252, 0.000), (19.785, -43.908, 0.000), (19.791, -43.897, 0.000), (19.797, -43.887, 0.000), (19.853, -43.790, 0.000), (19.890, -43.683, 0.000), (19.950, -43.511, 0.000), (19.940, -43.329, 0.000), (19.933, -43.216, 0.000), (19.903, -43.107, 0.000), (19.873, -42.996, 0.000), (19.826, -42.890, 0.000), (19.773, -42.770, 0.000), (19.707, -42.656, 0.000), (19.593, -42.468, 0.000), (19.485, -42.276, 0.000), (19.420, -42.161, 0.000), (19.356, -42.046, 0.000), (19.232, -41.824, 0.000), (19.105, -41.603, 0.000), (18.970, -41.368, 0.000), (18.825, -41.139, 0.000), (18.792, -41.087, 0.000), (18.758, -41.035, 0.000), (18.679, -40.906, 0.000), (18.589, -40.784, 0.000), (18.519, -40.689, 0.000), (18.438, -40.602, 0.000), (18.367, -40.525, 0.000), (18.285, -40.461, 0.000), (18.235, -40.422, 0.000), (18.182, -40.387, 0.000), (18.143, -40.362, 0.000), (18.100, -40.347, 0.000), (18.000, -40.312, 0.000), (17.895, -40.322, 0.000), (17.803, -40.330, 0.000), (17.725, -40.378, 0.000), (17.669, -40.412, 0.000), (17.627, -40.462, 0.000), (17.597, -40.492, 0.000), (17.570, -40.524, 0.000), (17.499, -40.606, 0.000), (17.432, -40.692, 0.000), (17.291, -40.873, 0.000), (17.159, -41.061, 0.000), (17.049, -41.218, 0.000), (16.948, -41.380, 0.000), (16.908, -41.443, 0.000), (16.868, -41.507, 0.000), (16.795, -41.623, 0.000), (16.721, -41.739, 0.000), (16.688, -41.790, 0.000), (16.655, -41.840, 0.000), (16.557, -41.989, 0.000), (16.463, -42.140, 0.000), (16.290, -42.420, 0.000), (16.139, -42.712, 0.000), (16.128, -42.732, 0.000), (16.118, -42.752, 0.000), (16.056, -42.869, 0.000), (16.006, -42.991, 0.000), (15.963, -43.095, 0.000), (15.935, -43.204, 0.000), (15.909, -43.307, 0.000), (15.902, -43.413, 0.000), (15.891, -43.596, 0.000), (15.951, -43.769, 0.000), (15.986, -43.869, 0.000), (16.038, -43.961, 0.000), (16.042, -43.968, 0.000), (16.046, -43.975, 0.000), (16.272, -44.365, 0.000), (16.492, -44.758, 0.000), (16.533, -44.830, 0.000), (16.573, -44.902, 0.000), (16.737, -45.193, 0.000), (16.903, -45.484, 0.000), (16.963, -45.589, 0.000), (17.025, -45.693, 0.000), (17.100, -45.821, 0.000), (17.182, -45.944, 0.000), (17.245, -46.037, 0.000), (17.316, -46.124, 0.000), (17.395, -46.221, 0.000), (17.488, -46.303, 0.000), (17.514, -46.326, 0.000), (17.540, -46.348, 0.000), (17.591, -46.389, 0.000), (17.652, -46.413, 0.000), (17.722, -46.441, 0.000), (17.796, -46.451, 0.000), (17.854, -46.459, 0.000), (17.912, -46.459, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((17.912, -46.459, 0.000)), rs.coerce3dpoint((18.000, -46.454, 0.000)), rs.coerce3dpoint((18.083, -46.424, 0.000)), rs.coerce3dpoint((18.179, -46.389, 0.000)), rs.coerce3dpoint((18.264, -46.331, 0.000)), rs.coerce3dpoint((18.308, -46.300, 0.000)), rs.coerce3dpoint((18.347, -46.262, 0.000)), rs.coerce3dpoint((18.404, -46.206, 0.000)), rs.coerce3dpoint((18.454, -46.145, 0.000)), rs.coerce3dpoint((18.525, -46.056, 0.000)), rs.coerce3dpoint((18.589, -45.962, 0.000)), rs.coerce3dpoint((18.674, -45.838, 0.000)), rs.coerce3dpoint((18.752, -45.708, 0.000)), rs.coerce3dpoint((18.786, -45.653, 0.000)), rs.coerce3dpoint((18.819, -45.597, 0.000)), rs.coerce3dpoint((18.913, -45.436, 0.000)), rs.coerce3dpoint((19.006, -45.273, 0.000)), rs.coerce3dpoint((19.144, -45.029, 0.000)), rs.coerce3dpoint((19.283, -44.784, 0.000)), rs.coerce3dpoint((19.336, -44.691, 0.000)), rs.coerce3dpoint((19.389, -44.598, 0.000)), rs.coerce3dpoint((19.585, -44.252, 0.000)), rs.coerce3dpoint((19.785, -43.908, 0.000)), rs.coerce3dpoint((19.791, -43.897, 0.000)), rs.coerce3dpoint((19.797, -43.887, 0.000)), rs.coerce3dpoint((19.853, -43.790, 0.000)), rs.coerce3dpoint((19.890, -43.683, 0.000)), rs.coerce3dpoint((19.950, -43.511, 0.000)), rs.coerce3dpoint((19.940, -43.329, 0.000)), rs.coerce3dpoint((19.933, -43.216, 0.000)), rs.coerce3dpoint((19.903, -43.107, 0.000)), rs.coerce3dpoint((19.873, -42.996, 0.000)), rs.coerce3dpoint((19.826, -42.890, 0.000)), rs.coerce3dpoint((19.773, -42.770, 0.000)), rs.coerce3dpoint((19.707, -42.656, 0.000)), rs.coerce3dpoint((19.593, -42.468, 0.000)), rs.coerce3dpoint((19.485, -42.276, 0.000)), rs.coerce3dpoint((19.420, -42.161, 0.000)), rs.coerce3dpoint((19.356, -42.046, 0.000)), rs.coerce3dpoint((19.232, -41.824, 0.000)), rs.coerce3dpoint((19.105, -41.603, 0.000)), rs.coerce3dpoint((18.970, -41.368, 0.000)), rs.coerce3dpoint((18.825, -41.139, 0.000)), rs.coerce3dpoint((18.792, -41.087, 0.000)), rs.coerce3dpoint((18.758, -41.035, 0.000)), rs.coerce3dpoint((18.679, -40.906, 0.000)), rs.coerce3dpoint((18.589, -40.784, 0.000)), rs.coerce3dpoint((18.519, -40.689, 0.000)), rs.coerce3dpoint((18.438, -40.602, 0.000)), rs.coerce3dpoint((18.367, -40.525, 0.000)), rs.coerce3dpoint((18.285, -40.461, 0.000)), rs.coerce3dpoint((18.235, -40.422, 0.000)), rs.coerce3dpoint((18.182, -40.387, 0.000)), rs.coerce3dpoint((18.143, -40.362, 0.000)), rs.coerce3dpoint((18.100, -40.347, 0.000)), rs.coerce3dpoint((18.000, -40.312, 0.000)), rs.coerce3dpoint((17.895, -40.322, 0.000)), rs.coerce3dpoint((17.803, -40.330, 0.000)), rs.coerce3dpoint((17.725, -40.378, 0.000)), rs.coerce3dpoint((17.669, -40.412, 0.000)), rs.coerce3dpoint((17.627, -40.462, 0.000)), rs.coerce3dpoint((17.597, -40.492, 0.000)), rs.coerce3dpoint((17.570, -40.524, 0.000)), rs.coerce3dpoint((17.499, -40.606, 0.000)), rs.coerce3dpoint((17.432, -40.692, 0.000)), rs.coerce3dpoint((17.291, -40.873, 0.000)), rs.coerce3dpoint((17.159, -41.061, 0.000)), rs.coerce3dpoint((17.049, -41.218, 0.000)), rs.coerce3dpoint((16.948, -41.380, 0.000)), rs.coerce3dpoint((16.908, -41.443, 0.000)), rs.coerce3dpoint((16.868, -41.507, 0.000)), rs.coerce3dpoint((16.795, -41.623, 0.000)), rs.coerce3dpoint((16.721, -41.739, 0.000)), rs.coerce3dpoint((16.688, -41.790, 0.000)), rs.coerce3dpoint((16.655, -41.840, 0.000)), rs.coerce3dpoint((16.557, -41.989, 0.000)), rs.coerce3dpoint((16.463, -42.140, 0.000)), rs.coerce3dpoint((16.290, -42.420, 0.000)), rs.coerce3dpoint((16.139, -42.712, 0.000)), rs.coerce3dpoint((16.128, -42.732, 0.000)), rs.coerce3dpoint((16.118, -42.752, 0.000)), rs.coerce3dpoint((16.056, -42.869, 0.000)), rs.coerce3dpoint((16.006, -42.991, 0.000)), rs.coerce3dpoint((15.963, -43.095, 0.000)), rs.coerce3dpoint((15.935, -43.204, 0.000)), rs.coerce3dpoint((15.909, -43.307, 0.000)), rs.coerce3dpoint((15.902, -43.413, 0.000)), rs.coerce3dpoint((15.891, -43.596, 0.000)), rs.coerce3dpoint((15.951, -43.769, 0.000)), rs.coerce3dpoint((15.986, -43.869, 0.000)), rs.coerce3dpoint((16.038, -43.961, 0.000)), rs.coerce3dpoint((16.042, -43.968, 0.000)), rs.coerce3dpoint((16.046, -43.975, 0.000)), rs.coerce3dpoint((16.272, -44.365, 0.000)), rs.coerce3dpoint((16.492, -44.758, 0.000)), rs.coerce3dpoint((16.533, -44.830, 0.000)), rs.coerce3dpoint((16.573, -44.902, 0.000)), rs.coerce3dpoint((16.737, -45.193, 0.000)), rs.coerce3dpoint((16.903, -45.484, 0.000)), rs.coerce3dpoint((16.963, -45.589, 0.000)), rs.coerce3dpoint((17.025, -45.693, 0.000)), rs.coerce3dpoint((17.100, -45.821, 0.000)), rs.coerce3dpoint((17.182, -45.944, 0.000)), rs.coerce3dpoint((17.245, -46.037, 0.000)), rs.coerce3dpoint((17.316, -46.124, 0.000)), rs.coerce3dpoint((17.395, -46.221, 0.000)), rs.coerce3dpoint((17.488, -46.303, 0.000)), rs.coerce3dpoint((17.514, -46.326, 0.000)), rs.coerce3dpoint((17.540, -46.348, 0.000)), rs.coerce3dpoint((17.591, -46.389, 0.000)), rs.coerce3dpoint((17.652, -46.413, 0.000)), rs.coerce3dpoint((17.722, -46.441, 0.000)), rs.coerce3dpoint((17.796, -46.451, 0.000)), rs.coerce3dpoint((17.854, -46.459, 0.000)), rs.coerce3dpoint((17.912, -46.459, 0.000))], [0.0, 0.0, 0.174467594924, 0.174467594924, 0.378427854129, 0.378427854129, 0.487203349184, 0.487203349184, 0.645288694863, 0.645288694863, 0.872743294485, 0.872743294485, 1.17434827687, 1.17434827687, 1.30395564204, 1.30395564204, 1.67809923608, 1.67809923608, 2.24015824410, 2.24015824410, 2.45459059824, 2.45459059824, 3.25029428520, 3.25029428520, 3.27401744899, 3.27401744899, 3.49880671821, 3.49880671821, 3.85853224951, 3.85853224951, 4.08391031627, 4.08391031627, 4.31461029416, 4.31461029416, 4.57710705043, 4.57710705043, 5.01744641827, 5.01744641827, 5.28067334373, 5.28067334373, 5.78988814827, 5.78988814827, 6.33259396405, 6.33259396405, 6.45540932929, 6.45540932929, 6.75848670703, 6.75848670703, 6.99489775841, 6.99489775841, 7.20360443905, 7.20360443905, 7.33053605134, 7.33053605134, 7.42205215692, 7.42205215692, 7.63007069168, 7.63007069168, 7.81069255701, 7.81069255701, 7.94059098435, 7.94059098435, 8.02432823684, 8.02432823684, 8.24181531359, 8.24181531359, 8.70075135931, 8.70075135931, 9.08356215401, 9.08356215401, 9.23329901988, 9.23329901988, 9.50814316169, 9.50814316169, 9.62924209150, 9.62924209150, 9.98458319199, 9.98458319199, 10.6431646660, 10.6431646660, 10.6876004005, 10.6876004005, 10.9521938003, 10.9521938003, 11.1759529798, 11.1759529798, 11.3885089702, 11.3885089702, 11.7495815572, 11.7495815572, 11.9612259477, 11.9612259477, 11.9775873718, 11.9775873718, 12.8789394532, 12.8789394532, 13.0435463559, 13.0435463559, 13.7127135253, 13.7127135253, 13.9543565993, 13.9543565993, 14.2506444891, 14.2506444891, 14.4750325372, 14.4750325372, 14.7239782188, 14.7239782188, 14.7924668403, 14.7924668403, 14.9223332821, 14.9223332821, 15.0716973371, 15.0716973371, 15.1884784753, 15.1884784753], 2, [1.0, 0.989628385567, 1.0, 0.991841417554, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988484270011, 1.0, 0.992778092482, 1.0, 0.997454264514, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.865, -31.438, 0.000), (-10.742, -31.425, 0.000), (-10.630, -31.374, 0.000), (-10.569, -31.347, 0.000), (-10.514, -31.309, 0.000), (-10.469, -31.278, 0.000), (-10.430, -31.240, 0.000), (-10.374, -31.185, 0.000), (-10.324, -31.123, 0.000), (-10.253, -31.035, 0.000), (-10.188, -30.941, 0.000), (-10.103, -30.816, 0.000), (-10.026, -30.687, 0.000), (-9.992, -30.631, 0.000), (-9.959, -30.576, 0.000), (-9.864, -30.414, 0.000), (-9.772, -30.252, 0.000), (-9.633, -30.007, 0.000), (-9.494, -29.763, 0.000), (-9.442, -29.670, 0.000), (-9.389, -29.576, 0.000), (-9.192, -29.230, 0.000), (-8.993, -28.886, 0.000), (-8.987, -28.876, 0.000), (-8.981, -28.866, 0.000), (-8.924, -28.768, 0.000), (-8.887, -28.662, 0.000), (-8.828, -28.489, 0.000), (-8.838, -28.308, 0.000), (-8.845, -28.195, 0.000), (-8.875, -28.086, 0.000), (-8.905, -27.974, 0.000), (-8.952, -27.868, 0.000), (-9.005, -27.748, 0.000), (-9.071, -27.635, 0.000), (-9.185, -27.446, 0.000), (-9.293, -27.254, 0.000), (-9.357, -27.140, 0.000), (-9.422, -27.025, 0.000), (-9.546, -26.802, 0.000), (-9.673, -26.582, 0.000), (-9.808, -26.347, 0.000), (-9.953, -26.117, 0.000), (-9.986, -26.065, 0.000), (-10.020, -26.014, 0.000), (-10.098, -25.884, 0.000), (-10.189, -25.762, 0.000), (-10.259, -25.667, 0.000), (-10.339, -25.581, 0.000), (-10.411, -25.504, 0.000), (-10.493, -25.439, 0.000), (-10.543, -25.400, 0.000), (-10.596, -25.365, 0.000), (-10.634, -25.340, 0.000), (-10.678, -25.325, 0.000), (-10.778, -25.291, 0.000), (-10.883, -25.300, 0.000), (-10.974, -25.309, 0.000), (-11.053, -25.356, 0.000), (-11.109, -25.391, 0.000), (-11.151, -25.441, 0.000), (-11.181, -25.470, 0.000), (-11.208, -25.502, 0.000), (-11.279, -25.585, 0.000), (-11.346, -25.670, 0.000), (-11.487, -25.851, 0.000), (-11.619, -26.039, 0.000), (-11.728, -26.196, 0.000), (-11.830, -26.358, 0.000), (-11.870, -26.422, 0.000), (-11.910, -26.485, 0.000), (-11.983, -26.602, 0.000), (-12.057, -26.717, 0.000), (-12.090, -26.768, 0.000), (-12.123, -26.819, 0.000), (-12.221, -26.967, 0.000), (-12.314, -27.118, 0.000), (-12.487, -27.399, 0.000), (-12.639, -27.691, 0.000), (-12.649, -27.711, 0.000), (-12.660, -27.730, 0.000), (-12.722, -27.847, 0.000), (-12.772, -27.970, 0.000), (-12.814, -28.074, 0.000), (-12.842, -28.182, 0.000), (-12.869, -28.285, 0.000), (-12.876, -28.392, 0.000), (-12.887, -28.574, 0.000), (-12.827, -28.747, 0.000), (-12.792, -28.847, 0.000), (-12.739, -28.939, 0.000), (-12.735, -28.947, 0.000), (-12.731, -28.954, 0.000), (-12.506, -29.344, 0.000), (-12.285, -29.737, 0.000), (-12.245, -29.809, 0.000), (-12.204, -29.880, 0.000), (-12.041, -30.172, 0.000), (-11.874, -30.462, 0.000), (-11.814, -30.567, 0.000), (-11.753, -30.671, 0.000), (-11.678, -30.799, 0.000), (-11.595, -30.922, 0.000), (-11.533, -31.015, 0.000), (-11.462, -31.102, 0.000), (-11.383, -31.199, 0.000), (-11.290, -31.282, 0.000), (-11.264, -31.304, 0.000), (-11.237, -31.326, 0.000), (-11.189, -31.366, 0.000), (-11.130, -31.389, 0.000), (-11.067, -31.414, 0.000), (-11.000, -31.425, 0.000), (-10.933, -31.436, 0.000), (-10.865, -31.438, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.865, -31.438, 0.000)), rs.coerce3dpoint((-10.742, -31.425, 0.000)), rs.coerce3dpoint((-10.630, -31.374, 0.000)), rs.coerce3dpoint((-10.569, -31.347, 0.000)), rs.coerce3dpoint((-10.514, -31.309, 0.000)), rs.coerce3dpoint((-10.469, -31.278, 0.000)), rs.coerce3dpoint((-10.430, -31.240, 0.000)), rs.coerce3dpoint((-10.374, -31.185, 0.000)), rs.coerce3dpoint((-10.324, -31.123, 0.000)), rs.coerce3dpoint((-10.253, -31.035, 0.000)), rs.coerce3dpoint((-10.188, -30.941, 0.000)), rs.coerce3dpoint((-10.103, -30.816, 0.000)), rs.coerce3dpoint((-10.026, -30.687, 0.000)), rs.coerce3dpoint((-9.992, -30.631, 0.000)), rs.coerce3dpoint((-9.959, -30.576, 0.000)), rs.coerce3dpoint((-9.864, -30.414, 0.000)), rs.coerce3dpoint((-9.772, -30.252, 0.000)), rs.coerce3dpoint((-9.633, -30.007, 0.000)), rs.coerce3dpoint((-9.494, -29.763, 0.000)), rs.coerce3dpoint((-9.442, -29.670, 0.000)), rs.coerce3dpoint((-9.389, -29.576, 0.000)), rs.coerce3dpoint((-9.192, -29.230, 0.000)), rs.coerce3dpoint((-8.993, -28.886, 0.000)), rs.coerce3dpoint((-8.987, -28.876, 0.000)), rs.coerce3dpoint((-8.981, -28.866, 0.000)), rs.coerce3dpoint((-8.924, -28.768, 0.000)), rs.coerce3dpoint((-8.887, -28.662, 0.000)), rs.coerce3dpoint((-8.828, -28.489, 0.000)), rs.coerce3dpoint((-8.838, -28.308, 0.000)), rs.coerce3dpoint((-8.845, -28.195, 0.000)), rs.coerce3dpoint((-8.875, -28.086, 0.000)), rs.coerce3dpoint((-8.905, -27.974, 0.000)), rs.coerce3dpoint((-8.952, -27.868, 0.000)), rs.coerce3dpoint((-9.005, -27.748, 0.000)), rs.coerce3dpoint((-9.071, -27.635, 0.000)), rs.coerce3dpoint((-9.185, -27.446, 0.000)), rs.coerce3dpoint((-9.293, -27.254, 0.000)), rs.coerce3dpoint((-9.357, -27.140, 0.000)), rs.coerce3dpoint((-9.422, -27.025, 0.000)), rs.coerce3dpoint((-9.546, -26.802, 0.000)), rs.coerce3dpoint((-9.673, -26.582, 0.000)), rs.coerce3dpoint((-9.808, -26.347, 0.000)), rs.coerce3dpoint((-9.953, -26.117, 0.000)), rs.coerce3dpoint((-9.986, -26.065, 0.000)), rs.coerce3dpoint((-10.020, -26.014, 0.000)), rs.coerce3dpoint((-10.098, -25.884, 0.000)), rs.coerce3dpoint((-10.189, -25.762, 0.000)), rs.coerce3dpoint((-10.259, -25.667, 0.000)), rs.coerce3dpoint((-10.339, -25.581, 0.000)), rs.coerce3dpoint((-10.411, -25.504, 0.000)), rs.coerce3dpoint((-10.493, -25.439, 0.000)), rs.coerce3dpoint((-10.543, -25.400, 0.000)), rs.coerce3dpoint((-10.596, -25.365, 0.000)), rs.coerce3dpoint((-10.634, -25.340, 0.000)), rs.coerce3dpoint((-10.678, -25.325, 0.000)), rs.coerce3dpoint((-10.778, -25.291, 0.000)), rs.coerce3dpoint((-10.883, -25.300, 0.000)), rs.coerce3dpoint((-10.974, -25.309, 0.000)), rs.coerce3dpoint((-11.053, -25.356, 0.000)), rs.coerce3dpoint((-11.109, -25.391, 0.000)), rs.coerce3dpoint((-11.151, -25.441, 0.000)), rs.coerce3dpoint((-11.181, -25.470, 0.000)), rs.coerce3dpoint((-11.208, -25.502, 0.000)), rs.coerce3dpoint((-11.279, -25.585, 0.000)), rs.coerce3dpoint((-11.346, -25.670, 0.000)), rs.coerce3dpoint((-11.487, -25.851, 0.000)), rs.coerce3dpoint((-11.619, -26.039, 0.000)), rs.coerce3dpoint((-11.728, -26.196, 0.000)), rs.coerce3dpoint((-11.830, -26.358, 0.000)), rs.coerce3dpoint((-11.870, -26.422, 0.000)), rs.coerce3dpoint((-11.910, -26.485, 0.000)), rs.coerce3dpoint((-11.983, -26.602, 0.000)), rs.coerce3dpoint((-12.057, -26.717, 0.000)), rs.coerce3dpoint((-12.090, -26.768, 0.000)), rs.coerce3dpoint((-12.123, -26.819, 0.000)), rs.coerce3dpoint((-12.221, -26.967, 0.000)), rs.coerce3dpoint((-12.314, -27.118, 0.000)), rs.coerce3dpoint((-12.487, -27.399, 0.000)), rs.coerce3dpoint((-12.639, -27.691, 0.000)), rs.coerce3dpoint((-12.649, -27.711, 0.000)), rs.coerce3dpoint((-12.660, -27.730, 0.000)), rs.coerce3dpoint((-12.722, -27.847, 0.000)), rs.coerce3dpoint((-12.772, -27.970, 0.000)), rs.coerce3dpoint((-12.814, -28.074, 0.000)), rs.coerce3dpoint((-12.842, -28.182, 0.000)), rs.coerce3dpoint((-12.869, -28.285, 0.000)), rs.coerce3dpoint((-12.876, -28.392, 0.000)), rs.coerce3dpoint((-12.887, -28.574, 0.000)), rs.coerce3dpoint((-12.827, -28.747, 0.000)), rs.coerce3dpoint((-12.792, -28.847, 0.000)), rs.coerce3dpoint((-12.739, -28.939, 0.000)), rs.coerce3dpoint((-12.735, -28.947, 0.000)), rs.coerce3dpoint((-12.731, -28.954, 0.000)), rs.coerce3dpoint((-12.506, -29.344, 0.000)), rs.coerce3dpoint((-12.285, -29.737, 0.000)), rs.coerce3dpoint((-12.245, -29.809, 0.000)), rs.coerce3dpoint((-12.204, -29.880, 0.000)), rs.coerce3dpoint((-12.041, -30.172, 0.000)), rs.coerce3dpoint((-11.874, -30.462, 0.000)), rs.coerce3dpoint((-11.814, -30.567, 0.000)), rs.coerce3dpoint((-11.753, -30.671, 0.000)), rs.coerce3dpoint((-11.678, -30.799, 0.000)), rs.coerce3dpoint((-11.595, -30.922, 0.000)), rs.coerce3dpoint((-11.533, -31.015, 0.000)), rs.coerce3dpoint((-11.462, -31.102, 0.000)), rs.coerce3dpoint((-11.383, -31.199, 0.000)), rs.coerce3dpoint((-11.290, -31.282, 0.000)), rs.coerce3dpoint((-11.264, -31.304, 0.000)), rs.coerce3dpoint((-11.237, -31.326, 0.000)), rs.coerce3dpoint((-11.189, -31.366, 0.000)), rs.coerce3dpoint((-11.130, -31.389, 0.000)), rs.coerce3dpoint((-11.067, -31.414, 0.000)), rs.coerce3dpoint((-11.000, -31.425, 0.000)), rs.coerce3dpoint((-10.933, -31.436, 0.000)), rs.coerce3dpoint((-10.865, -31.438, 0.000))], [0.0, 0.0, 0.244966399175, 0.244966399175, 0.377753526569, 0.377753526569, 0.48652262408, 0.48652262408, 0.644607969759, 0.644607969759, 0.872062569381, 0.872062569381, 1.17367295243, 1.17367295243, 1.30327518618, 1.30327518618, 1.67741878023, 1.67741878023, 2.23948272765, 2.23948272765, 2.45391014848, 2.45391014848, 3.24961880835, 3.24961880835, 3.27334563073, 3.27334563073, 3.49812998725, 3.49812998725, 3.85785413496, 3.85785413496, 4.08323057713, 4.08323057713, 4.31393998771, 4.31393998771, 4.57642783396, 4.57642783396, 5.01677223269, 5.01677223269, 5.27999915814, 5.27999915814, 5.78921396268, 5.78921396268, 6.33191460832, 6.33191460832, 6.45473539018, 6.45473539018, 6.75781276793, 6.75781276793, 6.99422381931, 6.99422381931, 7.20293049994, 7.20293049994, 7.32985397521, 7.32985397521, 7.42137910519, 7.42137910519, 7.62939763995, 7.62939763995, 7.81001950528, 7.81001950528, 7.93991793262, 7.93991793262, 8.02365518511, 8.02365518511, 8.24113451831, 8.24113451831, 8.70007859928, 8.70007859928, 9.08288387493, 9.08288387493, 9.23262606304, 9.23262606304, 9.50747020486, 9.50747020486, 9.62856913466, 9.62856913466, 9.98391023515, 9.98391023515, 10.6424917091, 10.6424917091, 10.6869139615, 10.6869139615, 10.9515206662, 10.9515206662, 11.1752798457, 11.1752798457, 11.3878358361, 11.3878358361, 11.7489097927, 11.7489097927, 11.9605541831, 11.9605541831, 11.9769106528, 11.9769106528, 12.8782627342, 12.8782627342, 13.0428745470, 13.0428745470, 13.7120367858, 13.7120367858, 13.9536798598, 13.9536798598, 14.2499730743, 14.2499730743, 14.4743551703, 14.4743551703, 14.7233077878, 14.7233077878, 14.7917887930, 14.7917887930, 14.9165216476, 14.9165216476, 15.0519314358, 15.0519314358, 15.1873036372, 15.1873036372], 2, [1.0, 0.986803156732, 1.0, 0.996222647695, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988544373687, 1.0, 0.994163462437, 1.0, 0.997552997578, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.891, -29.141, 0.000), (5.744, -29.148, 0.000), (5.610, -29.206, 0.000), (5.565, -29.226, 0.000), (5.524, -29.251, 0.000), (5.400, -29.327, 0.000), (5.301, -29.435, 0.000), (5.218, -29.524, 0.000), (5.152, -29.626, 0.000), (5.113, -29.686, 0.000), (5.079, -29.748, 0.000), (4.647, -30.508, 0.000), (4.208, -31.265, 0.000), (3.981, -31.655, 0.000), (3.753, -32.044, 0.000), (3.644, -32.231, 0.000), (3.535, -32.417, 0.000), (2.948, -33.421, 0.000), (2.361, -34.425, 0.000), (1.662, -35.630, 0.000), (0.963, -36.836, 0.000), (0.804, -37.110, 0.000), (0.645, -37.385, 0.000), (0.596, -37.471, 0.000), (0.553, -37.560, 0.000), (0.532, -37.604, 0.000), (0.511, -37.648, 0.000), (0.497, -37.676, 0.000), (0.484, -37.704, 0.000), (0.439, -37.795, 0.000), (0.416, -37.894, 0.000), (0.386, -38.021, 0.000), (0.404, -38.151, 0.000), (0.419, -38.259, 0.000), (0.464, -38.359, 0.000), (0.480, -38.395, 0.000), (0.499, -38.429, 0.000), (0.513, -38.454, 0.000), (0.527, -38.478, 0.000), (0.687, -38.768, 0.000), (0.851, -39.055, 0.000), (0.860, -39.071, 0.000), (0.869, -39.087, 0.000), (1.126, -39.537, 0.000), (1.384, -39.987, 0.000), (2.072, -41.189, 0.000), (2.761, -42.391, 0.000), (2.883, -42.603, 0.000), (3.005, -42.816, 0.000), (4.079, -44.676, 0.000), (5.162, -46.531, 0.000), (5.218, -46.629, 0.000), (5.284, -46.720, 0.000), (5.344, -46.803, 0.000), (5.415, -46.875, 0.000), (5.432, -46.892, 0.000), (5.450, -46.909, 0.000), (5.523, -46.977, 0.000), (5.610, -47.030, 0.000), (5.687, -47.076, 0.000), (5.773, -47.102, 0.000), (5.872, -47.132, 0.000), (5.975, -47.124, 0.000), (6.076, -47.115, 0.000), (6.168, -47.072, 0.000), (6.247, -47.034, 0.000), (6.315, -46.979, 0.000), (6.345, -46.954, 0.000), (6.373, -46.927, 0.000), (6.485, -46.819, 0.000), (6.580, -46.697, 0.000), (6.680, -46.569, 0.000), (6.765, -46.431, 0.000), (7.368, -45.373, 0.000), (7.977, -44.320, 0.000), (8.228, -43.887, 0.000), (8.479, -43.454, 0.000), (8.565, -43.306, 0.000), (8.651, -43.158, 0.000), (8.672, -43.122, 0.000), (8.693, -43.086, 0.000), (9.930, -40.954, 0.000), (11.167, -38.822, 0.000), (11.219, -38.731, 0.000), (11.265, -38.635, 0.000), (11.292, -38.582, 0.000), (11.317, -38.528, 0.000), (11.332, -38.498, 0.000), (11.346, -38.468, 0.000), (11.390, -38.378, 0.000), (11.412, -38.280, 0.000), (11.452, -38.101, 0.000), (11.399, -37.926, 0.000), (11.370, -37.831, 0.000), (11.319, -37.744, 0.000), (11.228, -37.585, 0.000), (11.137, -37.425, 0.000), (10.903, -37.014, 0.000), (10.668, -36.605, 0.000), (10.521, -36.349, 0.000), (10.374, -36.093, 0.000), (9.744, -34.998, 0.000), (9.115, -33.903, 0.000), (9.088, -33.857, 0.000), (9.062, -33.812, 0.000), (8.544, -32.922, 0.000), (8.027, -32.033, 0.000), (7.980, -31.951, 0.000), (7.932, -31.870, 0.000), (7.676, -31.431, 0.000), (7.420, -30.992, 0.000), (7.383, -30.929, 0.000), (7.346, -30.866, 0.000), (7.147, -30.523, 0.000), (6.948, -30.181, 0.000), (6.820, -29.960, 0.000), (6.690, -29.741, 0.000), (6.643, -29.661, 0.000), (6.593, -29.583, 0.000), (6.567, -29.543, 0.000), (6.538, -29.504, 0.000), (6.483, -29.427, 0.000), (6.418, -29.357, 0.000), (6.369, -29.303, 0.000), (6.311, -29.258, 0.000), (6.280, -29.234, 0.000), (6.246, -29.214, 0.000), (6.186, -29.180, 0.000), (6.118, -29.163, 0.000), (6.006, -29.133, 0.000), (5.891, -29.141, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.891, -29.141, 0.000)), rs.coerce3dpoint((5.744, -29.148, 0.000)), rs.coerce3dpoint((5.610, -29.206, 0.000)), rs.coerce3dpoint((5.565, -29.226, 0.000)), rs.coerce3dpoint((5.524, -29.251, 0.000)), rs.coerce3dpoint((5.400, -29.327, 0.000)), rs.coerce3dpoint((5.301, -29.435, 0.000)), rs.coerce3dpoint((5.218, -29.524, 0.000)), rs.coerce3dpoint((5.152, -29.626, 0.000)), rs.coerce3dpoint((5.113, -29.686, 0.000)), rs.coerce3dpoint((5.079, -29.748, 0.000)), rs.coerce3dpoint((4.647, -30.508, 0.000)), rs.coerce3dpoint((4.208, -31.265, 0.000)), rs.coerce3dpoint((3.981, -31.655, 0.000)), rs.coerce3dpoint((3.753, -32.044, 0.000)), rs.coerce3dpoint((3.644, -32.231, 0.000)), rs.coerce3dpoint((3.535, -32.417, 0.000)), rs.coerce3dpoint((2.948, -33.421, 0.000)), rs.coerce3dpoint((2.361, -34.425, 0.000)), rs.coerce3dpoint((1.662, -35.630, 0.000)), rs.coerce3dpoint((0.963, -36.836, 0.000)), rs.coerce3dpoint((0.804, -37.110, 0.000)), rs.coerce3dpoint((0.645, -37.385, 0.000)), rs.coerce3dpoint((0.596, -37.471, 0.000)), rs.coerce3dpoint((0.553, -37.560, 0.000)), rs.coerce3dpoint((0.532, -37.604, 0.000)), rs.coerce3dpoint((0.511, -37.648, 0.000)), rs.coerce3dpoint((0.497, -37.676, 0.000)), rs.coerce3dpoint((0.484, -37.704, 0.000)), rs.coerce3dpoint((0.439, -37.795, 0.000)), rs.coerce3dpoint((0.416, -37.894, 0.000)), rs.coerce3dpoint((0.386, -38.021, 0.000)), rs.coerce3dpoint((0.404, -38.151, 0.000)), rs.coerce3dpoint((0.419, -38.259, 0.000)), rs.coerce3dpoint((0.464, -38.359, 0.000)), rs.coerce3dpoint((0.480, -38.395, 0.000)), rs.coerce3dpoint((0.499, -38.429, 0.000)), rs.coerce3dpoint((0.513, -38.454, 0.000)), rs.coerce3dpoint((0.527, -38.478, 0.000)), rs.coerce3dpoint((0.687, -38.768, 0.000)), rs.coerce3dpoint((0.851, -39.055, 0.000)), rs.coerce3dpoint((0.860, -39.071, 0.000)), rs.coerce3dpoint((0.869, -39.087, 0.000)), rs.coerce3dpoint((1.126, -39.537, 0.000)), rs.coerce3dpoint((1.384, -39.987, 0.000)), rs.coerce3dpoint((2.072, -41.189, 0.000)), rs.coerce3dpoint((2.761, -42.391, 0.000)), rs.coerce3dpoint((2.883, -42.603, 0.000)), rs.coerce3dpoint((3.005, -42.816, 0.000)), rs.coerce3dpoint((4.079, -44.676, 0.000)), rs.coerce3dpoint((5.162, -46.531, 0.000)), rs.coerce3dpoint((5.218, -46.629, 0.000)), rs.coerce3dpoint((5.284, -46.720, 0.000)), rs.coerce3dpoint((5.344, -46.803, 0.000)), rs.coerce3dpoint((5.415, -46.875, 0.000)), rs.coerce3dpoint((5.432, -46.892, 0.000)), rs.coerce3dpoint((5.450, -46.909, 0.000)), rs.coerce3dpoint((5.523, -46.977, 0.000)), rs.coerce3dpoint((5.610, -47.030, 0.000)), rs.coerce3dpoint((5.687, -47.076, 0.000)), rs.coerce3dpoint((5.773, -47.102, 0.000)), rs.coerce3dpoint((5.872, -47.132, 0.000)), rs.coerce3dpoint((5.975, -47.124, 0.000)), rs.coerce3dpoint((6.076, -47.115, 0.000)), rs.coerce3dpoint((6.168, -47.072, 0.000)), rs.coerce3dpoint((6.247, -47.034, 0.000)), rs.coerce3dpoint((6.315, -46.979, 0.000)), rs.coerce3dpoint((6.345, -46.954, 0.000)), rs.coerce3dpoint((6.373, -46.927, 0.000)), rs.coerce3dpoint((6.485, -46.819, 0.000)), rs.coerce3dpoint((6.580, -46.697, 0.000)), rs.coerce3dpoint((6.680, -46.569, 0.000)), rs.coerce3dpoint((6.765, -46.431, 0.000)), rs.coerce3dpoint((7.368, -45.373, 0.000)), rs.coerce3dpoint((7.977, -44.320, 0.000)), rs.coerce3dpoint((8.228, -43.887, 0.000)), rs.coerce3dpoint((8.479, -43.454, 0.000)), rs.coerce3dpoint((8.565, -43.306, 0.000)), rs.coerce3dpoint((8.651, -43.158, 0.000)), rs.coerce3dpoint((8.672, -43.122, 0.000)), rs.coerce3dpoint((8.693, -43.086, 0.000)), rs.coerce3dpoint((9.930, -40.954, 0.000)), rs.coerce3dpoint((11.167, -38.822, 0.000)), rs.coerce3dpoint((11.219, -38.731, 0.000)), rs.coerce3dpoint((11.265, -38.635, 0.000)), rs.coerce3dpoint((11.292, -38.582, 0.000)), rs.coerce3dpoint((11.317, -38.528, 0.000)), rs.coerce3dpoint((11.332, -38.498, 0.000)), rs.coerce3dpoint((11.346, -38.468, 0.000)), rs.coerce3dpoint((11.390, -38.378, 0.000)), rs.coerce3dpoint((11.412, -38.280, 0.000)), rs.coerce3dpoint((11.452, -38.101, 0.000)), rs.coerce3dpoint((11.399, -37.926, 0.000)), rs.coerce3dpoint((11.370, -37.831, 0.000)), rs.coerce3dpoint((11.319, -37.744, 0.000)), rs.coerce3dpoint((11.228, -37.585, 0.000)), rs.coerce3dpoint((11.137, -37.425, 0.000)), rs.coerce3dpoint((10.903, -37.014, 0.000)), rs.coerce3dpoint((10.668, -36.605, 0.000)), rs.coerce3dpoint((10.521, -36.349, 0.000)), rs.coerce3dpoint((10.374, -36.093, 0.000)), rs.coerce3dpoint((9.744, -34.998, 0.000)), rs.coerce3dpoint((9.115, -33.903, 0.000)), rs.coerce3dpoint((9.088, -33.857, 0.000)), rs.coerce3dpoint((9.062, -33.812, 0.000)), rs.coerce3dpoint((8.544, -32.922, 0.000)), rs.coerce3dpoint((8.027, -32.033, 0.000)), rs.coerce3dpoint((7.980, -31.951, 0.000)), rs.coerce3dpoint((7.932, -31.870, 0.000)), rs.coerce3dpoint((7.676, -31.431, 0.000)), rs.coerce3dpoint((7.420, -30.992, 0.000)), rs.coerce3dpoint((7.383, -30.929, 0.000)), rs.coerce3dpoint((7.346, -30.866, 0.000)), rs.coerce3dpoint((7.147, -30.523, 0.000)), rs.coerce3dpoint((6.948, -30.181, 0.000)), rs.coerce3dpoint((6.820, -29.960, 0.000)), rs.coerce3dpoint((6.690, -29.741, 0.000)), rs.coerce3dpoint((6.643, -29.661, 0.000)), rs.coerce3dpoint((6.593, -29.583, 0.000)), rs.coerce3dpoint((6.567, -29.543, 0.000)), rs.coerce3dpoint((6.538, -29.504, 0.000)), rs.coerce3dpoint((6.483, -29.427, 0.000)), rs.coerce3dpoint((6.418, -29.357, 0.000)), rs.coerce3dpoint((6.369, -29.303, 0.000)), rs.coerce3dpoint((6.311, -29.258, 0.000)), rs.coerce3dpoint((6.280, -29.234, 0.000)), rs.coerce3dpoint((6.246, -29.214, 0.000)), rs.coerce3dpoint((6.186, -29.180, 0.000)), rs.coerce3dpoint((6.118, -29.163, 0.000)), rs.coerce3dpoint((6.006, -29.133, 0.000)), rs.coerce3dpoint((5.891, -29.141, 0.000))], [0.0, 0.0, 0.290264050577, 0.290264050577, 0.386311549775, 0.386311549775, 0.676854491783, 0.676854491783, 0.919555194446, 0.919555194446, 1.06219707641, 1.06219707641, 2.81049794284, 2.81049794284, 3.71305320738, 3.71305320738, 4.14537615171, 4.14537615171, 6.47145897191, 6.47145897191, 9.25786180344, 9.25786180344, 9.89266309093, 9.89266309093, 10.0903700406, 10.0903700406, 10.1879128032, 10.1879128032, 10.2504813904, 10.2504813904, 10.4521821145, 10.4521821145, 10.7110096417, 10.7110096417, 10.9283663585, 10.9283663585, 11.0063626811, 11.0063626811, 11.0631479697, 11.0631479697, 11.7247112838, 11.7247112838, 11.7615334754, 11.7615334754, 12.7980533810, 12.7980533810, 15.5683261950, 15.5683261950, 16.0586863926, 16.0586863926, 20.3546656291, 20.3546656291, 20.5796162364, 20.5796162364, 20.7828512176, 20.7828512176, 20.8308901484, 20.8308901484, 21.0320972299, 21.0320972299, 21.2113877475, 21.2113877475, 21.4156423914, 21.4156423914, 21.6164769470, 21.6164769470, 21.7909560435, 21.7909560435, 21.8683475503, 21.8683475503, 22.1786262033, 22.1786262033, 22.5022320799, 22.5022320799, 24.9367796332, 24.9367796332, 25.9376501443, 25.9376501443, 26.2798783921, 26.2798783921, 26.3631014958, 26.3631014958, 31.2925761127, 31.2925761127, 31.5039973282, 31.5039973282, 31.6237964032, 31.6237964032, 31.6902123365, 31.6902123365, 31.8893192102, 31.8893192102, 32.2476954227, 32.2476954227, 32.4462661715, 32.4462661715, 32.8145144983, 32.8145144983, 33.7590174508, 33.7590174508, 34.3490232254, 34.3490232254, 36.8753633615, 36.8753633615, 36.9811303214, 36.9811303214, 39.0387396884, 39.0387396884, 39.2273882850, 39.2273882850, 40.2437846853, 40.2437846853, 40.3900420127, 40.3900420127, 41.1817670252, 41.1817670252, 41.6925336161, 41.6925336161, 41.8774547137, 41.8774547137, 41.9741199017, 41.9741199017, 42.1635283765, 42.1635283765, 42.3092117593, 42.3092117593, 42.3878128790, 42.3878128790, 42.5267459734, 42.5267459734, 42.7559117056, 42.7559117056], 2, [1.0, 0.983430500932, 1.0, 0.997704218335, 1.0, 0.990928830516, 1.0, 0.99617046673, 1.0, 0.999262991691, 1.0, 0.999992000032, 1.0, 0.999998000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 0.993613340048, 1.0, 0.983645556499, 1.0, 0.989685470521, 1.0, 0.999058663266, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.998720638906, 1.0, 0.997176471791, 1.0, 0.999735534975, 1.0, 0.994689020801, 1.0, 0.992043300966, 1.0, 0.983286369773, 1.0, 0.983859241854, 1.0, 0.992585589023, 1.0, 0.999084499263, 1.0, 0.997539011962, 1.0, 0.998521413917, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 0.993178843702, 1.0, 0.967112843595, 1.0, 0.993248389326, 1.0, 0.999997120004, 1.0, 0.999997580003, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999855510439, 1.0, 0.999507141485, 1.0, 0.998272772946, 1.0, 0.996836930429, 1.0, 0.997622330022, 1.0, 0.991559749864, 1.0, 0.987186442969, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.504, -37.367, 0.000), (-14.505, -36.272, 0.000), (-14.505, -35.177, 0.000), (-14.506, -34.794, 0.000), (-14.509, -34.411, 0.000), (-14.510, -34.252, 0.000), (-14.515, -34.092, 0.000), (-14.518, -34.001, 0.000), (-14.525, -33.911, 0.000), (-14.531, -33.813, 0.000), (-14.559, -33.720, 0.000), (-14.588, -33.624, 0.000), (-14.644, -33.541, 0.000), (-14.723, -33.426, 0.000), (-14.845, -33.357, 0.000), (-14.917, -33.317, 0.000), (-14.996, -33.294, 0.000), (-15.078, -33.269, 0.000), (-15.163, -33.266, 0.000), (-15.312, -33.261, 0.000), (-15.442, -33.334, 0.000), (-15.516, -33.376, 0.000), (-15.577, -33.434, 0.000), (-15.637, -33.492, 0.000), (-15.686, -33.559, 0.000), (-15.788, -33.697, 0.000), (-15.878, -33.841, 0.000), (-15.966, -33.983, 0.000), (-16.049, -34.128, 0.000), (-16.662, -35.197, 0.000), (-17.275, -36.267, 0.000), (-17.361, -36.417, 0.000), (-17.446, -36.569, 0.000), (-17.461, -36.595, 0.000), (-17.475, -36.622, 0.000), (-17.541, -36.745, 0.000), (-17.602, -36.870, 0.000), (-17.634, -36.936, 0.000), (-17.665, -37.001, 0.000), (-17.710, -37.094, 0.000), (-17.733, -37.194, 0.000), (-17.771, -37.361, 0.000), (-17.735, -37.528, 0.000), (-17.713, -37.628, 0.000), (-17.671, -37.721, 0.000), (-17.645, -37.778, 0.000), (-17.614, -37.831, 0.000), (-17.131, -38.689, 0.000), (-16.649, -39.546, 0.000), (-16.347, -40.081, 0.000), (-16.045, -40.615, 0.000), (-15.977, -40.736, 0.000), (-15.906, -40.857, 0.000), (-15.885, -40.893, 0.000), (-15.862, -40.928, 0.000), (-15.861, -40.930, 0.000), (-15.860, -40.931, 0.000), (-15.805, -41.013, 0.000), (-15.740, -41.086, 0.000), (-15.683, -41.152, 0.000), (-15.622, -41.214, 0.000), (-15.563, -41.276, 0.000), (-15.492, -41.324, 0.000), (-15.425, -41.372, 0.000), (-15.347, -41.399, 0.000), (-15.240, -41.437, 0.000), (-15.126, -41.425, 0.000), (-15.023, -41.413, 0.000), (-14.929, -41.368, 0.000), (-14.810, -41.311, 0.000), (-14.717, -41.216, 0.000), (-14.624, -41.121, 0.000), (-14.569, -41.000, 0.000), (-14.532, -40.916, 0.000), (-14.520, -40.825, 0.000), (-14.515, -40.785, 0.000), (-14.514, -40.744, 0.000), (-14.510, -40.651, 0.000), (-14.510, -40.557, 0.000), (-14.507, -40.258, 0.000), (-14.506, -39.959, 0.000), (-14.505, -38.912, 0.000), (-14.505, -37.866, 0.000), (-14.504, -37.617, 0.000), (-14.504, -37.367, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.504, -37.367, 0.000)), rs.coerce3dpoint((-14.505, -36.272, 0.000)), rs.coerce3dpoint((-14.505, -35.177, 0.000)), rs.coerce3dpoint((-14.506, -34.794, 0.000)), rs.coerce3dpoint((-14.509, -34.411, 0.000)), rs.coerce3dpoint((-14.510, -34.252, 0.000)), rs.coerce3dpoint((-14.515, -34.092, 0.000)), rs.coerce3dpoint((-14.518, -34.001, 0.000)), rs.coerce3dpoint((-14.525, -33.911, 0.000)), rs.coerce3dpoint((-14.531, -33.813, 0.000)), rs.coerce3dpoint((-14.559, -33.720, 0.000)), rs.coerce3dpoint((-14.588, -33.624, 0.000)), rs.coerce3dpoint((-14.644, -33.541, 0.000)), rs.coerce3dpoint((-14.723, -33.426, 0.000)), rs.coerce3dpoint((-14.845, -33.357, 0.000)), rs.coerce3dpoint((-14.917, -33.317, 0.000)), rs.coerce3dpoint((-14.996, -33.294, 0.000)), rs.coerce3dpoint((-15.078, -33.269, 0.000)), rs.coerce3dpoint((-15.163, -33.266, 0.000)), rs.coerce3dpoint((-15.312, -33.261, 0.000)), rs.coerce3dpoint((-15.442, -33.334, 0.000)), rs.coerce3dpoint((-15.516, -33.376, 0.000)), rs.coerce3dpoint((-15.577, -33.434, 0.000)), rs.coerce3dpoint((-15.637, -33.492, 0.000)), rs.coerce3dpoint((-15.686, -33.559, 0.000)), rs.coerce3dpoint((-15.788, -33.697, 0.000)), rs.coerce3dpoint((-15.878, -33.841, 0.000)), rs.coerce3dpoint((-15.966, -33.983, 0.000)), rs.coerce3dpoint((-16.049, -34.128, 0.000)), rs.coerce3dpoint((-16.662, -35.197, 0.000)), rs.coerce3dpoint((-17.275, -36.267, 0.000)), rs.coerce3dpoint((-17.361, -36.417, 0.000)), rs.coerce3dpoint((-17.446, -36.569, 0.000)), rs.coerce3dpoint((-17.461, -36.595, 0.000)), rs.coerce3dpoint((-17.475, -36.622, 0.000)), rs.coerce3dpoint((-17.541, -36.745, 0.000)), rs.coerce3dpoint((-17.602, -36.870, 0.000)), rs.coerce3dpoint((-17.634, -36.936, 0.000)), rs.coerce3dpoint((-17.665, -37.001, 0.000)), rs.coerce3dpoint((-17.710, -37.094, 0.000)), rs.coerce3dpoint((-17.733, -37.194, 0.000)), rs.coerce3dpoint((-17.771, -37.361, 0.000)), rs.coerce3dpoint((-17.735, -37.528, 0.000)), rs.coerce3dpoint((-17.713, -37.628, 0.000)), rs.coerce3dpoint((-17.671, -37.721, 0.000)), rs.coerce3dpoint((-17.645, -37.778, 0.000)), rs.coerce3dpoint((-17.614, -37.831, 0.000)), rs.coerce3dpoint((-17.131, -38.689, 0.000)), rs.coerce3dpoint((-16.649, -39.546, 0.000)), rs.coerce3dpoint((-16.347, -40.081, 0.000)), rs.coerce3dpoint((-16.045, -40.615, 0.000)), rs.coerce3dpoint((-15.977, -40.736, 0.000)), rs.coerce3dpoint((-15.906, -40.857, 0.000)), rs.coerce3dpoint((-15.885, -40.893, 0.000)), rs.coerce3dpoint((-15.862, -40.928, 0.000)), rs.coerce3dpoint((-15.861, -40.930, 0.000)), rs.coerce3dpoint((-15.860, -40.931, 0.000)), rs.coerce3dpoint((-15.805, -41.013, 0.000)), rs.coerce3dpoint((-15.740, -41.086, 0.000)), rs.coerce3dpoint((-15.683, -41.152, 0.000)), rs.coerce3dpoint((-15.622, -41.214, 0.000)), rs.coerce3dpoint((-15.563, -41.276, 0.000)), rs.coerce3dpoint((-15.492, -41.324, 0.000)), rs.coerce3dpoint((-15.425, -41.372, 0.000)), rs.coerce3dpoint((-15.347, -41.399, 0.000)), rs.coerce3dpoint((-15.240, -41.437, 0.000)), rs.coerce3dpoint((-15.126, -41.425, 0.000)), rs.coerce3dpoint((-15.023, -41.413, 0.000)), rs.coerce3dpoint((-14.929, -41.368, 0.000)), rs.coerce3dpoint((-14.810, -41.311, 0.000)), rs.coerce3dpoint((-14.717, -41.216, 0.000)), rs.coerce3dpoint((-14.624, -41.121, 0.000)), rs.coerce3dpoint((-14.569, -41.000, 0.000)), rs.coerce3dpoint((-14.532, -40.916, 0.000)), rs.coerce3dpoint((-14.520, -40.825, 0.000)), rs.coerce3dpoint((-14.515, -40.785, 0.000)), rs.coerce3dpoint((-14.514, -40.744, 0.000)), rs.coerce3dpoint((-14.510, -40.651, 0.000)), rs.coerce3dpoint((-14.510, -40.557, 0.000)), rs.coerce3dpoint((-14.507, -40.258, 0.000)), rs.coerce3dpoint((-14.506, -39.959, 0.000)), rs.coerce3dpoint((-14.505, -38.912, 0.000)), rs.coerce3dpoint((-14.505, -37.866, 0.000)), rs.coerce3dpoint((-14.504, -37.617, 0.000)), rs.coerce3dpoint((-14.504, -37.367, 0.000))], [0.0, 0.0, 2.18980021043, 2.18980021043, 2.95584143196, 2.95584143196, 3.27498389964, 3.27498389964, 3.45696620451, 3.45696620451, 3.65120854597, 3.65120854597, 3.84982843966, 3.84982843966, 4.12464836242, 4.12464836242, 4.28870095118, 4.28870095118, 4.45817911415, 4.45817911415, 4.74928469286, 4.74928469286, 4.91721522141, 4.91721522141, 5.08352908641, 5.08352908641, 5.42492819071, 5.42492819071, 5.75886692053, 5.75886692053, 8.22373121215, 8.22373121215, 8.57089578203, 8.57089578203, 8.63198848635, 8.63198848635, 8.91035427358, 8.91035427358, 9.05584445147, 9.05584445147, 9.26029657399, 9.26029657399, 9.59752876118, 9.59752876118, 9.80125762520, 9.80125762520, 9.92515560093, 9.92515560093, 11.8933487281, 11.8933487281, 13.1201025289, 13.1201025289, 13.3996204327, 13.3996204327, 13.4833428042, 13.4833428042, 13.4866294134, 13.4866294134, 13.6831621447, 13.6831621447, 13.8572204993, 13.8572204993, 14.0277269311, 14.0277269311, 14.1916709348, 14.1916709348, 14.4157742472, 14.4157742472, 14.6217466400, 14.6217466400, 14.8838187195, 14.8838187195, 15.1475590639, 15.1475590639, 15.3294666235, 15.3294666235, 15.4108578935, 15.4108578935, 15.5981985851, 15.5981985851, 16.1965291709, 16.1965291709, 18.2891200335, 18.2891200335, 18.7878200504, 18.7878200504], 2, [1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.99993950183, 1.0, 0.999775305247, 1.0, 0.993613340048, 1.0, 0.988664117365, 1.0, 0.973670738925, 1.0, 0.993363514784, 1.0, 0.991841417554, 1.0, 0.962942087437, 1.0, 0.992143305546, 1.0, 0.996100338535, 1.0, 0.999278260548, 1.0, 0.999830734327, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.999968000512, 1.0, 0.999775305247, 1.0, 0.999991180039, 1.0, 0.993814211347, 1.0, 0.975960289284, 1.0, 0.994334315586, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999507141485, 1.0, 1.0, 1.0, 0.997850632376, 1.0, 0.999630148408, 1.0, 0.995248435566, 1.0, 0.990982263942, 1.0, 0.975135337261, 1.0, 0.986086096495, 1.0, 0.984387454667, 1.0, 0.984212336753, 1.0, 0.989513750504, 1.0, 0.998896109623, 1.0, 0.999896325374, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-12.470, -25.342, 0.000), (-12.410, -25.343, 0.000), (-12.359, -25.313, 0.000), (-12.324, -25.293, 0.000), (-12.296, -25.265, 0.000), (-12.262, -25.232, 0.000), (-12.232, -25.195, 0.000), (-12.218, -25.178, 0.000), (-12.205, -25.160, 0.000), (-12.191, -25.140, 0.000), (-12.180, -25.120, 0.000), (-12.104, -24.993, 0.000), (-12.030, -24.866, 0.000), (-11.780, -24.437, 0.000), (-11.529, -24.008, 0.000), (-11.501, -23.962, 0.000), (-11.486, -23.911, 0.000), (-11.461, -23.825, 0.000), (-11.489, -23.739, 0.000), (-11.496, -23.718, 0.000), (-11.505, -23.697, 0.000), (-11.535, -23.631, 0.000), (-11.568, -23.566, 0.000), (-11.571, -23.560, 0.000), (-11.574, -23.554, 0.000), (-11.597, -23.509, 0.000), (-11.622, -23.465, 0.000), (-11.858, -23.038, 0.000), (-12.094, -22.610, 0.000), (-12.138, -22.531, 0.000), (-12.186, -22.456, 0.000), (-12.206, -22.425, 0.000), (-12.227, -22.395, 0.000), (-12.254, -22.356, 0.000), (-12.291, -22.327, 0.000), (-12.332, -22.294, 0.000), (-12.384, -22.283, 0.000), (-12.404, -22.279, 0.000), (-12.424, -22.279, 0.000), (-12.495, -22.278, 0.000), (-12.552, -22.319, 0.000), (-12.590, -22.346, 0.000), (-12.618, -22.382, 0.000), (-12.621, -22.385, 0.000), (-12.623, -22.389, 0.000), (-12.677, -22.460, 0.000), (-12.724, -22.536, 0.000), (-12.744, -22.568, 0.000), (-12.763, -22.600, 0.000), (-12.992, -22.986, 0.000), (-13.221, -23.372, 0.000), (-13.255, -23.430, 0.000), (-13.290, -23.488, 0.000), (-13.301, -23.507, 0.000), (-13.312, -23.527, 0.000), (-13.346, -23.589, 0.000), (-13.378, -23.653, 0.000), (-13.381, -23.660, 0.000), (-13.385, -23.668, 0.000), (-13.410, -23.717, 0.000), (-13.418, -23.771, 0.000), (-13.426, -23.834, 0.000), (-13.407, -23.895, 0.000), (-13.393, -23.939, 0.000), (-13.371, -23.979, 0.000), (-13.091, -24.494, 0.000), (-12.811, -25.009, 0.000), (-12.778, -25.071, 0.000), (-12.743, -25.132, 0.000), (-12.738, -25.142, 0.000), (-12.731, -25.152, 0.000), (-12.706, -25.191, 0.000), (-12.675, -25.225, 0.000), (-12.659, -25.242, 0.000), (-12.644, -25.259, 0.000), (-12.607, -25.299, 0.000), (-12.559, -25.322, 0.000), (-12.517, -25.342, 0.000), (-12.470, -25.342, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-12.470, -25.342, 0.000)), rs.coerce3dpoint((-12.410, -25.343, 0.000)), rs.coerce3dpoint((-12.359, -25.313, 0.000)), rs.coerce3dpoint((-12.324, -25.293, 0.000)), rs.coerce3dpoint((-12.296, -25.265, 0.000)), rs.coerce3dpoint((-12.262, -25.232, 0.000)), rs.coerce3dpoint((-12.232, -25.195, 0.000)), rs.coerce3dpoint((-12.218, -25.178, 0.000)), rs.coerce3dpoint((-12.205, -25.160, 0.000)), rs.coerce3dpoint((-12.191, -25.140, 0.000)), rs.coerce3dpoint((-12.180, -25.120, 0.000)), rs.coerce3dpoint((-12.104, -24.993, 0.000)), rs.coerce3dpoint((-12.030, -24.866, 0.000)), rs.coerce3dpoint((-11.780, -24.437, 0.000)), rs.coerce3dpoint((-11.529, -24.008, 0.000)), rs.coerce3dpoint((-11.501, -23.962, 0.000)), rs.coerce3dpoint((-11.486, -23.911, 0.000)), rs.coerce3dpoint((-11.461, -23.825, 0.000)), rs.coerce3dpoint((-11.489, -23.739, 0.000)), rs.coerce3dpoint((-11.496, -23.718, 0.000)), rs.coerce3dpoint((-11.505, -23.697, 0.000)), rs.coerce3dpoint((-11.535, -23.631, 0.000)), rs.coerce3dpoint((-11.568, -23.566, 0.000)), rs.coerce3dpoint((-11.571, -23.560, 0.000)), rs.coerce3dpoint((-11.574, -23.554, 0.000)), rs.coerce3dpoint((-11.597, -23.509, 0.000)), rs.coerce3dpoint((-11.622, -23.465, 0.000)), rs.coerce3dpoint((-11.858, -23.038, 0.000)), rs.coerce3dpoint((-12.094, -22.610, 0.000)), rs.coerce3dpoint((-12.138, -22.531, 0.000)), rs.coerce3dpoint((-12.186, -22.456, 0.000)), rs.coerce3dpoint((-12.206, -22.425, 0.000)), rs.coerce3dpoint((-12.227, -22.395, 0.000)), rs.coerce3dpoint((-12.254, -22.356, 0.000)), rs.coerce3dpoint((-12.291, -22.327, 0.000)), rs.coerce3dpoint((-12.332, -22.294, 0.000)), rs.coerce3dpoint((-12.384, -22.283, 0.000)), rs.coerce3dpoint((-12.404, -22.279, 0.000)), rs.coerce3dpoint((-12.424, -22.279, 0.000)), rs.coerce3dpoint((-12.495, -22.278, 0.000)), rs.coerce3dpoint((-12.552, -22.319, 0.000)), rs.coerce3dpoint((-12.590, -22.346, 0.000)), rs.coerce3dpoint((-12.618, -22.382, 0.000)), rs.coerce3dpoint((-12.621, -22.385, 0.000)), rs.coerce3dpoint((-12.623, -22.389, 0.000)), rs.coerce3dpoint((-12.677, -22.460, 0.000)), rs.coerce3dpoint((-12.724, -22.536, 0.000)), rs.coerce3dpoint((-12.744, -22.568, 0.000)), rs.coerce3dpoint((-12.763, -22.600, 0.000)), rs.coerce3dpoint((-12.992, -22.986, 0.000)), rs.coerce3dpoint((-13.221, -23.372, 0.000)), rs.coerce3dpoint((-13.255, -23.430, 0.000)), rs.coerce3dpoint((-13.290, -23.488, 0.000)), rs.coerce3dpoint((-13.301, -23.507, 0.000)), rs.coerce3dpoint((-13.312, -23.527, 0.000)), rs.coerce3dpoint((-13.346, -23.589, 0.000)), rs.coerce3dpoint((-13.378, -23.653, 0.000)), rs.coerce3dpoint((-13.381, -23.660, 0.000)), rs.coerce3dpoint((-13.385, -23.668, 0.000)), rs.coerce3dpoint((-13.410, -23.717, 0.000)), rs.coerce3dpoint((-13.418, -23.771, 0.000)), rs.coerce3dpoint((-13.426, -23.834, 0.000)), rs.coerce3dpoint((-13.407, -23.895, 0.000)), rs.coerce3dpoint((-13.393, -23.939, 0.000)), rs.coerce3dpoint((-13.371, -23.979, 0.000)), rs.coerce3dpoint((-13.091, -24.494, 0.000)), rs.coerce3dpoint((-12.811, -25.009, 0.000)), rs.coerce3dpoint((-12.778, -25.071, 0.000)), rs.coerce3dpoint((-12.743, -25.132, 0.000)), rs.coerce3dpoint((-12.738, -25.142, 0.000)), rs.coerce3dpoint((-12.731, -25.152, 0.000)), rs.coerce3dpoint((-12.706, -25.191, 0.000)), rs.coerce3dpoint((-12.675, -25.225, 0.000)), rs.coerce3dpoint((-12.659, -25.242, 0.000)), rs.coerce3dpoint((-12.644, -25.259, 0.000)), rs.coerce3dpoint((-12.607, -25.299, 0.000)), rs.coerce3dpoint((-12.559, -25.322, 0.000)), rs.coerce3dpoint((-12.517, -25.342, 0.000)), rs.coerce3dpoint((-12.470, -25.342, 0.000))], [0.0, 0.0, 0.116524427225, 0.116524427225, 0.196217819512, 0.196217819512, 0.29048627059, 0.29048627059, 0.335185473283, 0.335185473283, 0.382451403705, 0.382451403705, 0.6766728604, 0.6766728604, 1.67073631763, 1.67073631763, 1.77719367530, 1.77719367530, 1.95135698043, 1.95135698043, 1.99675055228, 1.99675055228, 2.14142828650, 2.14142828650, 2.15569983162, 2.15569983162, 2.25614217910, 2.25614217910, 3.23311698583, 3.23311698583, 3.41277844708, 3.41277844708, 3.48636637183, 3.48636637183, 3.57947543094, 3.57947543094, 3.68375265554, 3.68375265554, 3.72385088558, 3.72385088558, 3.86072135243, 3.86072135243, 3.95219915846, 3.95219915846, 3.96055050565, 3.96055050565, 4.13908036834, 4.13908036834, 4.21379474776, 4.21379474776, 5.11185687000, 5.11185687000, 5.24644552629, 5.24644552629, 5.29121202058, 5.29121202058, 5.43355624768, 5.43355624768, 5.45016579012, 5.45016579012, 5.55893041867, 5.55893041867, 5.68456454514, 5.68456454514, 5.77615704469, 5.77615704469, 6.94834167289, 6.94834167289, 7.08909635486, 7.08909635486, 7.11170904781, 7.11170904781, 7.20455671979, 7.20455671979, 7.25068503139, 7.25068503139, 7.35695764269, 7.35695764269, 7.44832468441, 7.44832468441], 2, [1.0, 0.962570618565, 1.0, 0.991088663666, 1.0, 0.998790411994, 1.0, 0.99914338705, 1.0, 0.999323109168, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.991559749864, 1.0, 0.955645261438, 1.0, 0.998067449182, 1.0, 0.999762408228, 1.0, 1.0, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 0.999488131038, 1.0, 0.9997023643, 1.0, 0.989884046372, 1.0, 0.972212142301, 1.0, 0.995868054161, 1.0, 0.951288045239, 1.0, 0.989369584793, 1.0, 1.0, 1.0, 0.998867761345, 1.0, 0.99996128075, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999935022111, 1.0, 0.999692527277, 1.0, 1.0, 1.0, 0.986184971261, 1.0, 0.977569907714, 1.0, 0.994163462437, 1.0, 1.0, 1.0, 0.999943821578, 1.0, 0.999591103615, 1.0, 0.99697815269, 1.0, 0.999862229491, 1.0, 0.982111444216, 1.0, 0.975874083472, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-17.459, -16.200, 0.000), (-17.328, -16.201, 0.000), (-17.211, -16.144, 0.000), (-17.130, -16.105, 0.000), (-17.062, -16.047, 0.000), (-17.028, -16.018, 0.000), (-16.997, -15.986, 0.000), (-16.929, -15.917, 0.000), (-16.865, -15.843, 0.000), (-16.808, -15.777, 0.000), (-16.759, -15.703, 0.000), (-16.736, -15.669, 0.000), (-16.715, -15.633, 0.000), (-16.648, -15.518, 0.000), (-16.582, -15.402, 0.000), (-16.293, -14.890, 0.000), (-16.004, -14.377, 0.000), (-15.504, -13.491, 0.000), (-15.005, -12.604, 0.000), (-14.953, -12.514, 0.000), (-14.918, -12.417, 0.000), (-14.881, -12.317, 0.000), (-14.871, -12.212, 0.000), (-14.857, -12.070, 0.000), (-14.895, -11.932, 0.000), (-14.917, -11.850, 0.000), (-14.954, -11.774, 0.000), (-15.018, -11.639, 0.000), (-15.085, -11.506, 0.000), (-15.114, -11.450, 0.000), (-15.144, -11.395, 0.000), (-15.181, -11.326, 0.000), (-15.219, -11.259, 0.000), (-15.431, -10.888, 0.000), (-15.643, -10.517, 0.000), (-16.106, -9.709, 0.000), (-16.570, -8.900, 0.000), (-16.656, -8.750, 0.000), (-16.748, -8.603, 0.000), (-16.836, -8.464, 0.000), (-16.933, -8.331, 0.000), (-16.987, -8.258, 0.000), (-17.053, -8.196, 0.000), (-17.118, -8.136, 0.000), (-17.196, -8.095, 0.000), (-17.321, -8.030, 0.000), (-17.462, -8.030, 0.000), (-17.581, -8.031, 0.000), (-17.690, -8.078, 0.000), (-17.773, -8.115, 0.000), (-17.843, -8.174, 0.000), (-17.911, -8.232, 0.000), (-17.967, -8.302, 0.000), (-17.978, -8.317, 0.000), (-17.989, -8.332, 0.000), (-18.091, -8.469, 0.000), (-18.181, -8.614, 0.000), (-18.269, -8.756, 0.000), (-18.352, -8.901, 0.000), (-18.965, -9.970, 0.000), (-19.578, -11.039, 0.000), (-19.664, -11.190, 0.000), (-19.749, -11.341, 0.000), (-19.764, -11.368, 0.000), (-19.778, -11.395, 0.000), (-19.844, -11.518, 0.000), (-19.905, -11.643, 0.000), (-19.937, -11.708, 0.000), (-19.968, -11.774, 0.000), (-20.013, -11.866, 0.000), (-20.036, -11.966, 0.000), (-20.074, -12.133, 0.000), (-20.038, -12.301, 0.000), (-20.016, -12.401, 0.000), (-19.974, -12.494, 0.000), (-19.948, -12.550, 0.000), (-19.917, -12.604, 0.000), (-19.434, -13.462, 0.000), (-18.951, -14.319, 0.000), (-18.650, -14.853, 0.000), (-18.348, -15.387, 0.000), (-18.280, -15.509, 0.000), (-18.209, -15.630, 0.000), (-18.188, -15.666, 0.000), (-18.165, -15.701, 0.000), (-18.164, -15.702, 0.000), (-18.163, -15.704, 0.000), (-18.108, -15.785, 0.000), (-18.043, -15.859, 0.000), (-17.986, -15.924, 0.000), (-17.925, -15.987, 0.000), (-17.851, -16.063, 0.000), (-17.759, -16.117, 0.000), (-17.677, -16.166, 0.000), (-17.583, -16.187, 0.000), (-17.522, -16.201, 0.000), (-17.459, -16.200, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-17.459, -16.200, 0.000)), rs.coerce3dpoint((-17.328, -16.201, 0.000)), rs.coerce3dpoint((-17.211, -16.144, 0.000)), rs.coerce3dpoint((-17.130, -16.105, 0.000)), rs.coerce3dpoint((-17.062, -16.047, 0.000)), rs.coerce3dpoint((-17.028, -16.018, 0.000)), rs.coerce3dpoint((-16.997, -15.986, 0.000)), rs.coerce3dpoint((-16.929, -15.917, 0.000)), rs.coerce3dpoint((-16.865, -15.843, 0.000)), rs.coerce3dpoint((-16.808, -15.777, 0.000)), rs.coerce3dpoint((-16.759, -15.703, 0.000)), rs.coerce3dpoint((-16.736, -15.669, 0.000)), rs.coerce3dpoint((-16.715, -15.633, 0.000)), rs.coerce3dpoint((-16.648, -15.518, 0.000)), rs.coerce3dpoint((-16.582, -15.402, 0.000)), rs.coerce3dpoint((-16.293, -14.890, 0.000)), rs.coerce3dpoint((-16.004, -14.377, 0.000)), rs.coerce3dpoint((-15.504, -13.491, 0.000)), rs.coerce3dpoint((-15.005, -12.604, 0.000)), rs.coerce3dpoint((-14.953, -12.514, 0.000)), rs.coerce3dpoint((-14.918, -12.417, 0.000)), rs.coerce3dpoint((-14.881, -12.317, 0.000)), rs.coerce3dpoint((-14.871, -12.212, 0.000)), rs.coerce3dpoint((-14.857, -12.070, 0.000)), rs.coerce3dpoint((-14.895, -11.932, 0.000)), rs.coerce3dpoint((-14.917, -11.850, 0.000)), rs.coerce3dpoint((-14.954, -11.774, 0.000)), rs.coerce3dpoint((-15.018, -11.639, 0.000)), rs.coerce3dpoint((-15.085, -11.506, 0.000)), rs.coerce3dpoint((-15.114, -11.450, 0.000)), rs.coerce3dpoint((-15.144, -11.395, 0.000)), rs.coerce3dpoint((-15.181, -11.326, 0.000)), rs.coerce3dpoint((-15.219, -11.259, 0.000)), rs.coerce3dpoint((-15.431, -10.888, 0.000)), rs.coerce3dpoint((-15.643, -10.517, 0.000)), rs.coerce3dpoint((-16.106, -9.709, 0.000)), rs.coerce3dpoint((-16.570, -8.900, 0.000)), rs.coerce3dpoint((-16.656, -8.750, 0.000)), rs.coerce3dpoint((-16.748, -8.603, 0.000)), rs.coerce3dpoint((-16.836, -8.464, 0.000)), rs.coerce3dpoint((-16.933, -8.331, 0.000)), rs.coerce3dpoint((-16.987, -8.258, 0.000)), rs.coerce3dpoint((-17.053, -8.196, 0.000)), rs.coerce3dpoint((-17.118, -8.136, 0.000)), rs.coerce3dpoint((-17.196, -8.095, 0.000)), rs.coerce3dpoint((-17.321, -8.030, 0.000)), rs.coerce3dpoint((-17.462, -8.030, 0.000)), rs.coerce3dpoint((-17.581, -8.031, 0.000)), rs.coerce3dpoint((-17.690, -8.078, 0.000)), rs.coerce3dpoint((-17.773, -8.115, 0.000)), rs.coerce3dpoint((-17.843, -8.174, 0.000)), rs.coerce3dpoint((-17.911, -8.232, 0.000)), rs.coerce3dpoint((-17.967, -8.302, 0.000)), rs.coerce3dpoint((-17.978, -8.317, 0.000)), rs.coerce3dpoint((-17.989, -8.332, 0.000)), rs.coerce3dpoint((-18.091, -8.469, 0.000)), rs.coerce3dpoint((-18.181, -8.614, 0.000)), rs.coerce3dpoint((-18.269, -8.756, 0.000)), rs.coerce3dpoint((-18.352, -8.901, 0.000)), rs.coerce3dpoint((-18.965, -9.970, 0.000)), rs.coerce3dpoint((-19.578, -11.039, 0.000)), rs.coerce3dpoint((-19.664, -11.190, 0.000)), rs.coerce3dpoint((-19.749, -11.341, 0.000)), rs.coerce3dpoint((-19.764, -11.368, 0.000)), rs.coerce3dpoint((-19.778, -11.395, 0.000)), rs.coerce3dpoint((-19.844, -11.518, 0.000)), rs.coerce3dpoint((-19.905, -11.643, 0.000)), rs.coerce3dpoint((-19.937, -11.708, 0.000)), rs.coerce3dpoint((-19.968, -11.774, 0.000)), rs.coerce3dpoint((-20.013, -11.866, 0.000)), rs.coerce3dpoint((-20.036, -11.966, 0.000)), rs.coerce3dpoint((-20.074, -12.133, 0.000)), rs.coerce3dpoint((-20.038, -12.301, 0.000)), rs.coerce3dpoint((-20.016, -12.401, 0.000)), rs.coerce3dpoint((-19.974, -12.494, 0.000)), rs.coerce3dpoint((-19.948, -12.550, 0.000)), rs.coerce3dpoint((-19.917, -12.604, 0.000)), rs.coerce3dpoint((-19.434, -13.462, 0.000)), rs.coerce3dpoint((-18.951, -14.319, 0.000)), rs.coerce3dpoint((-18.650, -14.853, 0.000)), rs.coerce3dpoint((-18.348, -15.387, 0.000)), rs.coerce3dpoint((-18.280, -15.509, 0.000)), rs.coerce3dpoint((-18.209, -15.630, 0.000)), rs.coerce3dpoint((-18.188, -15.666, 0.000)), rs.coerce3dpoint((-18.165, -15.701, 0.000)), rs.coerce3dpoint((-18.164, -15.702, 0.000)), rs.coerce3dpoint((-18.163, -15.704, 0.000)), rs.coerce3dpoint((-18.108, -15.785, 0.000)), rs.coerce3dpoint((-18.043, -15.859, 0.000)), rs.coerce3dpoint((-17.986, -15.924, 0.000)), rs.coerce3dpoint((-17.925, -15.987, 0.000)), rs.coerce3dpoint((-17.851, -16.063, 0.000)), rs.coerce3dpoint((-17.759, -16.117, 0.000)), rs.coerce3dpoint((-17.677, -16.166, 0.000)), rs.coerce3dpoint((-17.583, -16.187, 0.000)), rs.coerce3dpoint((-17.522, -16.201, 0.000)), rs.coerce3dpoint((-17.459, -16.200, 0.000))], [0.0, 0.0, 0.25650882943, 0.25650882943, 0.434249332058, 0.434249332058, 0.523223059754, 0.523223059754, 0.717906155304, 0.717906155304, 0.893806250162, 0.893806250162, 0.976426932155, 0.976426932155, 1.24343266445, 1.24343266445, 2.42009384542, 2.42009384542, 4.45527682984, 4.45527682984, 4.66156042684, 4.66156042684, 4.87309829725, 4.87309829725, 5.15512508164, 5.15512508164, 5.32458074701, 5.32458074701, 5.62288625374, 5.62288625374, 5.74844065625, 5.74844065625, 5.90391153474, 5.90391153474, 6.7578261844, 6.7578261844, 8.62155735047, 8.62155735047, 8.96869912029, 8.96869912029, 9.29689511672, 9.29689511672, 9.47843154598, 9.47843154598, 9.65360594965, 9.65360594965, 9.93018645371, 9.93018645371, 10.1644074231, 10.1644074231, 10.3458106681, 10.3458106681, 10.5239016474, 10.5239016474, 10.5613275878, 10.5613275878, 10.9027184122, 10.9027184122, 11.2366571420, 11.2366571420, 13.7015251402, 13.7015251402, 14.0486810142, 14.0486810142, 14.1097737185, 14.1097737185, 14.3881484162, 14.3881484162, 14.5336339264, 14.5336339264, 14.7380860489, 14.7380860489, 15.0753283168, 15.0753283168, 15.2790476745, 15.2790476745, 15.4029545552, 15.4029545552, 17.3711438748, 17.3711438748, 18.5979014680, 18.5979014680, 18.8774193717, 18.8774193717, 18.9611470128, 18.9611470128, 18.9644253203, 18.9644253203, 19.1609519341, 19.1609519341, 19.3350102888, 19.3350102888, 19.5466497232, 19.5466497232, 19.7368227910, 19.7368227910, 19.8620763120, 19.8620763120], 2, [1.0, 0.97362572888, 1.0, 0.991967887486, 1.0, 0.998770676083, 1.0, 0.999481714345, 1.0, 0.99821357708, 1.0, 0.9994556482, 1.0, 0.999969580463, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996117929889, 1.0, 0.992366030394, 1.0, 0.983250241924, 1.0, 0.995940237597, 1.0, 0.999912883795, 1.0, 0.99993950183, 1.0, 0.999925582769, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999811837704, 1.0, 0.99931573419, 1.0, 0.995287211418, 1.0, 0.991559749864, 1.0, 0.970621171619, 1.0, 0.979605608124, 1.0, 0.989884046372, 1.0, 0.994750435227, 1.0, 0.999852090939, 1.0, 0.999278260548, 1.0, 0.999830734327, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.999968000512, 1.0, 0.999775305247, 1.0, 0.999991180039, 1.0, 0.993814211347, 1.0, 0.975960289284, 1.0, 0.994334315586, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999507141485, 1.0, 1.0, 1.0, 0.997850632376, 1.0, 0.999630148408, 1.0, 0.990848388494, 1.0, 0.987997880277, 1.0, 0.992968091106, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(15.480, -3.722, 0.000), (15.479, -3.574, 0.000), (15.478, -3.426, 0.000), (15.468, -1.707, 0.000), (15.458, 0.012, 0.000), (15.455, 0.495, 0.000), (15.450, 0.977, 0.000), (15.448, 1.135, 0.000), (15.444, 1.293, 0.000), (15.442, 1.350, 0.000), (15.438, 1.407, 0.000), (15.436, 1.430, 0.000), (15.433, 1.453, 0.000), (15.415, 1.575, 0.000), (15.357, 1.684, 0.000), (15.116, 2.130, 0.000), (14.627, 1.996, 0.000), (14.504, 1.961, 0.000), (14.401, 1.885, 0.000), (14.389, 1.876, 0.000), (14.377, 1.866, 0.000), (14.315, 1.817, 0.000), (14.261, 1.759, 0.000), (14.206, 1.700, 0.000), (14.153, 1.639, 0.000), (14.149, 1.635, 0.000), (14.146, 1.631, 0.000), (14.137, 1.621, 0.000), (14.128, 1.610, 0.000), (13.942, 1.351, 0.000), (13.772, 1.082, 0.000), (13.697, 0.963, 0.000), (13.627, 0.840, 0.000), (13.595, 0.785, 0.000), (13.568, 0.727, 0.000), (13.560, 0.710, 0.000), (13.554, 0.693, 0.000), (13.531, 0.630, 0.000), (13.519, 0.565, 0.000), (13.499, 0.462, 0.000), (13.494, 0.358, 0.000), (13.490, 0.292, 0.000), (13.491, 0.226, 0.000), (13.491, -2.051, 0.000), (13.492, -4.327, 0.000), (13.492, -5.303, 0.000), (13.493, -6.278, 0.000), (13.493, -6.700, 0.000), (13.494, -7.123, 0.000), (13.494, -7.423, 0.000), (13.496, -7.723, 0.000), (13.496, -7.785, 0.000), (13.498, -7.847, 0.000), (13.498, -7.852, 0.000), (13.499, -7.856, 0.000), (13.500, -7.901, 0.000), (13.510, -7.945, 0.000), (13.523, -7.999, 0.000), (13.541, -8.052, 0.000), (13.547, -8.069, 0.000), (13.552, -8.086, 0.000), (13.623, -8.293, 0.000), (13.718, -8.490, 0.000), (13.844, -8.754, 0.000), (14.005, -8.997, 0.000), (14.052, -9.069, 0.000), (14.103, -9.138, 0.000), (14.160, -9.214, 0.000), (14.221, -9.287, 0.000), (14.257, -9.331, 0.000), (14.298, -9.370, 0.000), (14.332, -9.404, 0.000), (14.371, -9.430, 0.000), (14.466, -9.497, 0.000), (14.575, -9.536, 0.000), (14.691, -9.577, 0.000), (14.814, -9.575, 0.000), (14.999, -9.573, 0.000), (15.153, -9.471, 0.000), (15.266, -9.395, 0.000), (15.340, -9.280, 0.000), (15.402, -9.182, 0.000), (15.433, -9.070, 0.000), (15.445, -9.023, 0.000), (15.453, -8.975, 0.000), (15.460, -8.933, 0.000), (15.462, -8.891, 0.000), (15.466, -8.808, 0.000), (15.467, -8.724, 0.000), (15.472, -8.496, 0.000), (15.473, -8.269, 0.000), (15.476, -7.630, 0.000), (15.477, -6.991, 0.000), (15.478, -5.356, 0.000), (15.480, -3.722, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((15.480, -3.722, 0.000)), rs.coerce3dpoint((15.479, -3.574, 0.000)), rs.coerce3dpoint((15.478, -3.426, 0.000)), rs.coerce3dpoint((15.468, -1.707, 0.000)), rs.coerce3dpoint((15.458, 0.012, 0.000)), rs.coerce3dpoint((15.455, 0.495, 0.000)), rs.coerce3dpoint((15.450, 0.977, 0.000)), rs.coerce3dpoint((15.448, 1.135, 0.000)), rs.coerce3dpoint((15.444, 1.293, 0.000)), rs.coerce3dpoint((15.442, 1.350, 0.000)), rs.coerce3dpoint((15.438, 1.407, 0.000)), rs.coerce3dpoint((15.436, 1.430, 0.000)), rs.coerce3dpoint((15.433, 1.453, 0.000)), rs.coerce3dpoint((15.415, 1.575, 0.000)), rs.coerce3dpoint((15.357, 1.684, 0.000)), rs.coerce3dpoint((15.116, 2.130, 0.000)), rs.coerce3dpoint((14.627, 1.996, 0.000)), rs.coerce3dpoint((14.504, 1.961, 0.000)), rs.coerce3dpoint((14.401, 1.885, 0.000)), rs.coerce3dpoint((14.389, 1.876, 0.000)), rs.coerce3dpoint((14.377, 1.866, 0.000)), rs.coerce3dpoint((14.315, 1.817, 0.000)), rs.coerce3dpoint((14.261, 1.759, 0.000)), rs.coerce3dpoint((14.206, 1.700, 0.000)), rs.coerce3dpoint((14.153, 1.639, 0.000)), rs.coerce3dpoint((14.149, 1.635, 0.000)), rs.coerce3dpoint((14.146, 1.631, 0.000)), rs.coerce3dpoint((14.137, 1.621, 0.000)), rs.coerce3dpoint((14.128, 1.610, 0.000)), rs.coerce3dpoint((13.942, 1.351, 0.000)), rs.coerce3dpoint((13.772, 1.082, 0.000)), rs.coerce3dpoint((13.697, 0.963, 0.000)), rs.coerce3dpoint((13.627, 0.840, 0.000)), rs.coerce3dpoint((13.595, 0.785, 0.000)), rs.coerce3dpoint((13.568, 0.727, 0.000)), rs.coerce3dpoint((13.560, 0.710, 0.000)), rs.coerce3dpoint((13.554, 0.693, 0.000)), rs.coerce3dpoint((13.531, 0.630, 0.000)), rs.coerce3dpoint((13.519, 0.565, 0.000)), rs.coerce3dpoint((13.499, 0.462, 0.000)), rs.coerce3dpoint((13.494, 0.358, 0.000)), rs.coerce3dpoint((13.490, 0.292, 0.000)), rs.coerce3dpoint((13.491, 0.226, 0.000)), rs.coerce3dpoint((13.491, -2.051, 0.000)), rs.coerce3dpoint((13.492, -4.327, 0.000)), rs.coerce3dpoint((13.492, -5.303, 0.000)), rs.coerce3dpoint((13.493, -6.278, 0.000)), rs.coerce3dpoint((13.493, -6.700, 0.000)), rs.coerce3dpoint((13.494, -7.123, 0.000)), rs.coerce3dpoint((13.494, -7.423, 0.000)), rs.coerce3dpoint((13.496, -7.723, 0.000)), rs.coerce3dpoint((13.496, -7.785, 0.000)), rs.coerce3dpoint((13.498, -7.847, 0.000)), rs.coerce3dpoint((13.498, -7.852, 0.000)), rs.coerce3dpoint((13.499, -7.856, 0.000)), rs.coerce3dpoint((13.500, -7.901, 0.000)), rs.coerce3dpoint((13.510, -7.945, 0.000)), rs.coerce3dpoint((13.523, -7.999, 0.000)), rs.coerce3dpoint((13.541, -8.052, 0.000)), rs.coerce3dpoint((13.547, -8.069, 0.000)), rs.coerce3dpoint((13.552, -8.086, 0.000)), rs.coerce3dpoint((13.623, -8.293, 0.000)), rs.coerce3dpoint((13.718, -8.490, 0.000)), rs.coerce3dpoint((13.844, -8.754, 0.000)), rs.coerce3dpoint((14.005, -8.997, 0.000)), rs.coerce3dpoint((14.052, -9.069, 0.000)), rs.coerce3dpoint((14.103, -9.138, 0.000)), rs.coerce3dpoint((14.160, -9.214, 0.000)), rs.coerce3dpoint((14.221, -9.287, 0.000)), rs.coerce3dpoint((14.257, -9.331, 0.000)), rs.coerce3dpoint((14.298, -9.370, 0.000)), rs.coerce3dpoint((14.332, -9.404, 0.000)), rs.coerce3dpoint((14.371, -9.430, 0.000)), rs.coerce3dpoint((14.466, -9.497, 0.000)), rs.coerce3dpoint((14.575, -9.536, 0.000)), rs.coerce3dpoint((14.691, -9.577, 0.000)), rs.coerce3dpoint((14.814, -9.575, 0.000)), rs.coerce3dpoint((14.999, -9.573, 0.000)), rs.coerce3dpoint((15.153, -9.471, 0.000)), rs.coerce3dpoint((15.266, -9.395, 0.000)), rs.coerce3dpoint((15.340, -9.280, 0.000)), rs.coerce3dpoint((15.402, -9.182, 0.000)), rs.coerce3dpoint((15.433, -9.070, 0.000)), rs.coerce3dpoint((15.445, -9.023, 0.000)), rs.coerce3dpoint((15.453, -8.975, 0.000)), rs.coerce3dpoint((15.460, -8.933, 0.000)), rs.coerce3dpoint((15.462, -8.891, 0.000)), rs.coerce3dpoint((15.466, -8.808, 0.000)), rs.coerce3dpoint((15.467, -8.724, 0.000)), rs.coerce3dpoint((15.472, -8.496, 0.000)), rs.coerce3dpoint((15.473, -8.269, 0.000)), rs.coerce3dpoint((15.476, -7.630, 0.000)), rs.coerce3dpoint((15.477, -6.991, 0.000)), rs.coerce3dpoint((15.478, -5.356, 0.000)), rs.coerce3dpoint((15.480, -3.722, 0.000))], [0.0, 0.0, 0.296124652807, 0.296124652807, 3.73441381485, 3.73441381485, 4.69927025895, 4.69927025895, 5.01539977508, 5.01539977508, 5.12950972782, 5.12950972782, 5.17568440671, 5.17568440671, 5.41990607849, 5.41990607849, 6.27650102210, 6.27650102210, 6.52910888982, 6.52910888982, 6.56020512696, 6.56020512696, 6.71779364321, 6.71779364321, 6.87958399138, 6.87958399138, 6.89071180339, 6.89071180339, 6.91757317342, 6.91757317342, 7.55468650845, 7.55468650845, 7.83652920166, 7.83652920166, 7.96418935133, 7.96418935133, 8.0012156115, 8.0012156115, 8.13454889090, 8.13454889090, 8.34277468565, 8.34277468565, 8.47441953438, 8.47441953438, 13.0282097087, 13.0282097087, 14.9787100022, 14.9787100022, 15.8237805704, 15.8237805704, 16.4239251798, 16.4239251798, 16.5477405199, 16.5477405199, 16.5571585982, 16.5571585982, 16.6468948547, 16.6468948547, 16.7576598603, 16.7576598603, 16.7938015329, 16.7938015329, 17.2310116077, 17.2310116077, 17.8140286907, 17.8140286907, 17.9857084880, 17.9857084880, 18.1758112495, 18.1758112495, 18.2890576079, 18.2890576079, 18.3843733408, 18.3843733408, 18.6138563309, 18.6138563309, 18.8572700235, 18.8572700235, 19.2172488354, 19.2172488354, 19.4863554838, 19.4863554838, 19.7171184426, 19.7171184426, 19.8139075007, 19.8139075007, 19.8987455202, 19.8987455202, 20.0658543234, 20.0658543234, 20.5209775640, 20.5209775640, 21.7990759297, 21.7990759297, 25.0680170120, 25.0680170120], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.99996128075, 1.0, 0.999646282569, 1.0, 0.999494507793, 1.0, 0.984561618872, 1.0, 0.782181492801, 1.0, 0.983105350419, 1.0, 0.999787842508, 1.0, 0.99786370432, 1.0, 0.999716820101, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999596801301, 1.0, 0.99968754882, 1.0, 0.999293369751, 1.0, 0.999192306316, 1.0, 0.997085772557, 1.0, 0.997744626227, 1.0, 0.999442375516, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.994355495303, 1.0, 0.999067315153, 1.0, 1.0, 1.0, 0.998284492746, 1.0, 0.997622330022, 1.0, 0.999591103615, 1.0, 0.999591103615, 1.0, 0.998679891918, 1.0, 0.996377054776, 1.0, 0.990468363575, 1.0, 0.984803845557, 1.0, 0.958927097196, 1.0, 0.978721443006, 1.0, 0.988363599127, 1.0, 0.998466596565, 1.0, 0.998543062108, 1.0, 0.999823295614, 1.0, 0.999978220237, 1.0, 0.999997580003, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(12.308, -57.180, 0.000), (12.308, -57.297, 0.000), (12.315, -57.413, 0.000), (12.320, -57.491, 0.000), (12.332, -57.569, 0.000), (12.339, -57.606, 0.000), (12.349, -57.643, 0.000), (12.382, -57.737, 0.000), (12.436, -57.821, 0.000), (12.489, -57.903, 0.000), (12.564, -57.966, 0.000), (12.665, -58.049, 0.000), (12.792, -58.080, 0.000), (12.846, -58.093, 0.000), (12.902, -58.098, 0.000), (13.066, -58.111, 0.000), (13.230, -58.116, 0.000), (13.389, -58.120, 0.000), (13.548, -58.110, 0.000), (13.582, -58.108, 0.000), (13.616, -58.104, 0.000), (13.720, -58.095, 0.000), (13.818, -58.063, 0.000), (13.921, -58.029, 0.000), (14.008, -57.966, 0.000), (14.125, -57.882, 0.000), (14.195, -57.755, 0.000), (14.246, -57.664, 0.000), (14.271, -57.564, 0.000), (14.295, -57.466, 0.000), (14.299, -57.365, 0.000), (14.304, -57.273, 0.000), (14.303, -57.180, 0.000), (14.296, -55.917, 0.000), (14.296, -54.654, 0.000), (14.296, -54.065, 0.000), (14.295, -53.475, 0.000), (14.296, -53.475, 0.000), (14.296, -53.475, 0.000), (14.296, -51.485, 0.000), (14.296, -49.496, 0.000), (14.296, -49.479, 0.000), (14.296, -49.462, 0.000), (14.297, -49.320, 0.000), (14.294, -49.177, 0.000), (14.292, -49.078, 0.000), (14.263, -48.982, 0.000), (14.227, -48.869, 0.000), (14.154, -48.775, 0.000), (14.097, -48.703, 0.000), (14.026, -48.644, 0.000), (13.959, -48.587, 0.000), (13.884, -48.541, 0.000), (13.825, -48.508, 0.000), (13.759, -48.495, 0.000), (13.686, -48.481, 0.000), (13.613, -48.486, 0.000), (13.527, -48.490, 0.000), (13.446, -48.515, 0.000), (13.419, -48.523, 0.000), (13.394, -48.536, 0.000), (13.343, -48.565, 0.000), (13.299, -48.602, 0.000), (13.240, -48.650, 0.000), (13.189, -48.706, 0.000), (13.117, -48.783, 0.000), (13.053, -48.866, 0.000), (12.962, -48.984, 0.000), (12.879, -49.107, 0.000), (12.815, -49.203, 0.000), (12.753, -49.301, 0.000), (12.673, -49.428, 0.000), (12.600, -49.560, 0.000), (12.534, -49.678, 0.000), (12.479, -49.801, 0.000), (12.435, -49.902, 0.000), (12.403, -50.007, 0.000), (12.378, -50.091, 0.000), (12.366, -50.178, 0.000), (12.347, -50.319, 0.000), (12.335, -50.460, 0.000), (12.323, -50.597, 0.000), (12.323, -50.735, 0.000), (12.323, -51.591, 0.000), (12.323, -52.447, 0.000), (12.323, -54.178, 0.000), (12.322, -55.908, 0.000), (12.322, -56.286, 0.000), (12.318, -56.664, 0.000), (12.315, -56.889, 0.000), (12.310, -57.115, 0.000), (12.309, -57.148, 0.000), (12.308, -57.180, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((12.308, -57.180, 0.000)), rs.coerce3dpoint((12.308, -57.297, 0.000)), rs.coerce3dpoint((12.315, -57.413, 0.000)), rs.coerce3dpoint((12.320, -57.491, 0.000)), rs.coerce3dpoint((12.332, -57.569, 0.000)), rs.coerce3dpoint((12.339, -57.606, 0.000)), rs.coerce3dpoint((12.349, -57.643, 0.000)), rs.coerce3dpoint((12.382, -57.737, 0.000)), rs.coerce3dpoint((12.436, -57.821, 0.000)), rs.coerce3dpoint((12.489, -57.903, 0.000)), rs.coerce3dpoint((12.564, -57.966, 0.000)), rs.coerce3dpoint((12.665, -58.049, 0.000)), rs.coerce3dpoint((12.792, -58.080, 0.000)), rs.coerce3dpoint((12.846, -58.093, 0.000)), rs.coerce3dpoint((12.902, -58.098, 0.000)), rs.coerce3dpoint((13.066, -58.111, 0.000)), rs.coerce3dpoint((13.230, -58.116, 0.000)), rs.coerce3dpoint((13.389, -58.120, 0.000)), rs.coerce3dpoint((13.548, -58.110, 0.000)), rs.coerce3dpoint((13.582, -58.108, 0.000)), rs.coerce3dpoint((13.616, -58.104, 0.000)), rs.coerce3dpoint((13.720, -58.095, 0.000)), rs.coerce3dpoint((13.818, -58.063, 0.000)), rs.coerce3dpoint((13.921, -58.029, 0.000)), rs.coerce3dpoint((14.008, -57.966, 0.000)), rs.coerce3dpoint((14.125, -57.882, 0.000)), rs.coerce3dpoint((14.195, -57.755, 0.000)), rs.coerce3dpoint((14.246, -57.664, 0.000)), rs.coerce3dpoint((14.271, -57.564, 0.000)), rs.coerce3dpoint((14.295, -57.466, 0.000)), rs.coerce3dpoint((14.299, -57.365, 0.000)), rs.coerce3dpoint((14.304, -57.273, 0.000)), rs.coerce3dpoint((14.303, -57.180, 0.000)), rs.coerce3dpoint((14.296, -55.917, 0.000)), rs.coerce3dpoint((14.296, -54.654, 0.000)), rs.coerce3dpoint((14.296, -54.065, 0.000)), rs.coerce3dpoint((14.295, -53.475, 0.000)), rs.coerce3dpoint((14.296, -53.475, 0.000)), rs.coerce3dpoint((14.296, -53.475, 0.000)), rs.coerce3dpoint((14.296, -51.485, 0.000)), rs.coerce3dpoint((14.296, -49.496, 0.000)), rs.coerce3dpoint((14.296, -49.479, 0.000)), rs.coerce3dpoint((14.296, -49.462, 0.000)), rs.coerce3dpoint((14.297, -49.320, 0.000)), rs.coerce3dpoint((14.294, -49.177, 0.000)), rs.coerce3dpoint((14.292, -49.078, 0.000)), rs.coerce3dpoint((14.263, -48.982, 0.000)), rs.coerce3dpoint((14.227, -48.869, 0.000)), rs.coerce3dpoint((14.154, -48.775, 0.000)), rs.coerce3dpoint((14.097, -48.703, 0.000)), rs.coerce3dpoint((14.026, -48.644, 0.000)), rs.coerce3dpoint((13.959, -48.587, 0.000)), rs.coerce3dpoint((13.884, -48.541, 0.000)), rs.coerce3dpoint((13.825, -48.508, 0.000)), rs.coerce3dpoint((13.759, -48.495, 0.000)), rs.coerce3dpoint((13.686, -48.481, 0.000)), rs.coerce3dpoint((13.613, -48.486, 0.000)), rs.coerce3dpoint((13.527, -48.490, 0.000)), rs.coerce3dpoint((13.446, -48.515, 0.000)), rs.coerce3dpoint((13.419, -48.523, 0.000)), rs.coerce3dpoint((13.394, -48.536, 0.000)), rs.coerce3dpoint((13.343, -48.565, 0.000)), rs.coerce3dpoint((13.299, -48.602, 0.000)), rs.coerce3dpoint((13.240, -48.650, 0.000)), rs.coerce3dpoint((13.189, -48.706, 0.000)), rs.coerce3dpoint((13.117, -48.783, 0.000)), rs.coerce3dpoint((13.053, -48.866, 0.000)), rs.coerce3dpoint((12.962, -48.984, 0.000)), rs.coerce3dpoint((12.879, -49.107, 0.000)), rs.coerce3dpoint((12.815, -49.203, 0.000)), rs.coerce3dpoint((12.753, -49.301, 0.000)), rs.coerce3dpoint((12.673, -49.428, 0.000)), rs.coerce3dpoint((12.600, -49.560, 0.000)), rs.coerce3dpoint((12.534, -49.678, 0.000)), rs.coerce3dpoint((12.479, -49.801, 0.000)), rs.coerce3dpoint((12.435, -49.902, 0.000)), rs.coerce3dpoint((12.403, -50.007, 0.000)), rs.coerce3dpoint((12.378, -50.091, 0.000)), rs.coerce3dpoint((12.366, -50.178, 0.000)), rs.coerce3dpoint((12.347, -50.319, 0.000)), rs.coerce3dpoint((12.335, -50.460, 0.000)), rs.coerce3dpoint((12.323, -50.597, 0.000)), rs.coerce3dpoint((12.323, -50.735, 0.000)), rs.coerce3dpoint((12.323, -51.591, 0.000)), rs.coerce3dpoint((12.323, -52.447, 0.000)), rs.coerce3dpoint((12.323, -54.178, 0.000)), rs.coerce3dpoint((12.322, -55.908, 0.000)), rs.coerce3dpoint((12.322, -56.286, 0.000)), rs.coerce3dpoint((12.318, -56.664, 0.000)), rs.coerce3dpoint((12.315, -56.889, 0.000)), rs.coerce3dpoint((12.310, -57.115, 0.000)), rs.coerce3dpoint((12.309, -57.148, 0.000)), rs.coerce3dpoint((12.308, -57.180, 0.000))], [0.0, 0.0, 0.232725613203, 0.232725613203, 0.389319726172, 0.389319726172, 0.465808515438, 0.465808515438, 0.664408410579, 0.664408410579, 0.858490964891, 0.858490964891, 1.11542948878, 1.11542948878, 1.22721174903, 1.22721174903, 1.55585884197, 1.55585884197, 1.87389644020, 1.87389644020, 1.94231217389, 1.94231217389, 2.14882713967, 2.14882713967, 2.36284945695, 2.36284945695, 2.64704483435, 2.64704483435, 2.85352638282, 2.85352638282, 3.05498859781, 3.05498859781, 3.23917032035, 3.23917032035, 5.76519303238, 5.76519303238, 6.94496305679, 6.94496305679, 6.94566305679, 6.94566305679, 10.9246030576, 10.9246030576, 10.9584930591, 10.9584930591, 11.2429563931, 11.2429563931, 11.4411169824, 11.4411169824, 11.6760910599, 11.6760910599, 11.8601245223, 11.8601245223, 12.0356954883, 12.0356954883, 12.1695239479, 12.1695239479, 12.3164641204, 12.3164641204, 12.4864176921, 12.4864176921, 12.5426068486, 12.5426068486, 12.6582452019, 12.6582452019, 12.8091999870, 12.8091999870, 13.0200125784, 13.0200125784, 13.3168134562, 13.3168134562, 13.5483130066, 13.5483130066, 13.8489116335, 13.8489116335, 14.1189765379, 14.1189765379, 14.3387129556, 14.3387129556, 14.5135951465, 14.5135951465, 14.7969518742, 14.7969518742, 15.0723792416, 15.0723792416, 16.7848992544, 16.7848992544, 20.2452994625, 20.2452994625, 21.0014241542, 21.0014241542, 21.4523256693, 21.4523256693, 21.5181463538, 21.5181463538], 2, [1.0, 0.999519615412, 1.0, 0.99873072604, 1.0, 0.998638507462, 1.0, 0.992991664741, 1.0, 0.988544373687, 1.0, 0.974916018918, 1.0, 0.996544859328, 1.0, 0.999640944472, 1.0, 0.998914809139, 1.0, 0.999918083355, 1.0, 0.993409290533, 1.0, 0.988484270011, 1.0, 0.976260838605, 1.0, 0.991273363959, 1.0, 0.995071992622, 1.0, 0.99965683889, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999937281967, 1.0, 0.990024722475, 1.0, 0.984142022664, 1.0, 0.994184956666, 1.0, 0.997510921616, 1.0, 0.986995492034, 1.0, 0.992242685122, 1.0, 0.992341439507, 1.0, 0.995684830475, 1.0, 0.995813501766, 1.0, 0.997954095007, 1.0, 0.998924099093, 1.0, 0.999422166994, 1.0, 0.999872008191, 1.0, 0.999602459035, 1.0, 0.998942559386, 1.0, 0.998079845269, 1.0, 0.996868590551, 1.0, 0.999762408228, 1.0, 0.998979001485, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999984320123, 1.0, 0.99997952021, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-8.390, -36.745, 0.000), (-8.391, -34.889, 0.000), (-8.392, -33.033, 0.000), (-8.392, -32.921, 0.000), (-8.392, -32.808, 0.000), (-8.392, -32.768, 0.000), (-8.393, -32.729, 0.000), (-8.393, -32.628, 0.000), (-8.401, -32.528, 0.000), (-8.409, -32.430, 0.000), (-8.422, -32.333, 0.000), (-8.437, -32.221, 0.000), (-8.477, -32.116, 0.000), (-8.508, -32.034, 0.000), (-8.556, -31.961, 0.000), (-8.625, -31.882, 0.000), (-8.709, -31.818, 0.000), (-8.779, -31.763, 0.000), (-8.861, -31.726, 0.000), (-8.939, -31.690, 0.000), (-9.025, -31.679, 0.000), (-9.142, -31.665, 0.000), (-9.253, -31.706, 0.000), (-9.329, -31.734, 0.000), (-9.396, -31.780, 0.000), (-9.466, -31.829, 0.000), (-9.525, -31.890, 0.000), (-9.602, -31.969, 0.000), (-9.673, -32.054, 0.000), (-9.793, -32.199, 0.000), (-9.903, -32.352, 0.000), (-10.014, -32.507, 0.000), (-10.117, -32.667, 0.000), (-10.180, -32.772, 0.000), (-10.238, -32.879, 0.000), (-10.270, -32.937, 0.000), (-10.298, -32.998, 0.000), (-10.315, -33.037, 0.000), (-10.327, -33.077, 0.000), (-10.333, -33.098, 0.000), (-10.337, -33.120, 0.000), (-10.351, -33.195, 0.000), (-10.357, -33.271, 0.000), (-10.364, -33.369, 0.000), (-10.367, -33.466, 0.000), (-10.373, -33.660, 0.000), (-10.374, -33.854, 0.000), (-10.378, -34.264, 0.000), (-10.378, -34.674, 0.000), (-10.377, -35.594, 0.000), (-10.376, -36.513, 0.000), (-10.368, -38.729, 0.000), (-10.361, -40.946, 0.000), (-10.357, -41.051, 0.000), (-10.335, -41.153, 0.000), (-10.314, -41.250, 0.000), (-10.271, -41.340, 0.000), (-10.221, -41.442, 0.000), (-10.141, -41.523, 0.000), (-10.056, -41.607, 0.000), (-9.947, -41.657, 0.000), (-9.853, -41.699, 0.000), (-9.752, -41.718, 0.000), (-9.703, -41.727, 0.000), (-9.654, -41.731, 0.000), (-9.449, -41.748, 0.000), (-9.244, -41.732, 0.000), (-9.132, -41.723, 0.000), (-9.021, -41.705, 0.000), (-8.925, -41.690, 0.000), (-8.830, -41.666, 0.000), (-8.764, -41.649, 0.000), (-8.701, -41.624, 0.000), (-8.653, -41.605, 0.000), (-8.610, -41.576, 0.000), (-8.567, -41.548, 0.000), (-8.535, -41.508, 0.000), (-8.509, -41.475, 0.000), (-8.492, -41.437, 0.000), (-8.490, -41.432, 0.000), (-8.488, -41.427, 0.000), (-8.460, -41.366, 0.000), (-8.447, -41.301, 0.000), (-8.434, -41.238, 0.000), (-8.428, -41.175, 0.000), (-8.417, -41.074, 0.000), (-8.413, -40.973, 0.000), (-8.404, -40.798, 0.000), (-8.401, -40.623, 0.000), (-8.394, -40.303, 0.000), (-8.393, -39.983, 0.000), (-8.389, -39.366, 0.000), (-8.389, -38.749, 0.000), (-8.390, -37.747, 0.000), (-8.390, -36.745, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-8.390, -36.745, 0.000)), rs.coerce3dpoint((-8.391, -34.889, 0.000)), rs.coerce3dpoint((-8.392, -33.033, 0.000)), rs.coerce3dpoint((-8.392, -32.921, 0.000)), rs.coerce3dpoint((-8.392, -32.808, 0.000)), rs.coerce3dpoint((-8.392, -32.768, 0.000)), rs.coerce3dpoint((-8.393, -32.729, 0.000)), rs.coerce3dpoint((-8.393, -32.628, 0.000)), rs.coerce3dpoint((-8.401, -32.528, 0.000)), rs.coerce3dpoint((-8.409, -32.430, 0.000)), rs.coerce3dpoint((-8.422, -32.333, 0.000)), rs.coerce3dpoint((-8.437, -32.221, 0.000)), rs.coerce3dpoint((-8.477, -32.116, 0.000)), rs.coerce3dpoint((-8.508, -32.034, 0.000)), rs.coerce3dpoint((-8.556, -31.961, 0.000)), rs.coerce3dpoint((-8.625, -31.882, 0.000)), rs.coerce3dpoint((-8.709, -31.818, 0.000)), rs.coerce3dpoint((-8.779, -31.763, 0.000)), rs.coerce3dpoint((-8.861, -31.726, 0.000)), rs.coerce3dpoint((-8.939, -31.690, 0.000)), rs.coerce3dpoint((-9.025, -31.679, 0.000)), rs.coerce3dpoint((-9.142, -31.665, 0.000)), rs.coerce3dpoint((-9.253, -31.706, 0.000)), rs.coerce3dpoint((-9.329, -31.734, 0.000)), rs.coerce3dpoint((-9.396, -31.780, 0.000)), rs.coerce3dpoint((-9.466, -31.829, 0.000)), rs.coerce3dpoint((-9.525, -31.890, 0.000)), rs.coerce3dpoint((-9.602, -31.969, 0.000)), rs.coerce3dpoint((-9.673, -32.054, 0.000)), rs.coerce3dpoint((-9.793, -32.199, 0.000)), rs.coerce3dpoint((-9.903, -32.352, 0.000)), rs.coerce3dpoint((-10.014, -32.507, 0.000)), rs.coerce3dpoint((-10.117, -32.667, 0.000)), rs.coerce3dpoint((-10.180, -32.772, 0.000)), rs.coerce3dpoint((-10.238, -32.879, 0.000)), rs.coerce3dpoint((-10.270, -32.937, 0.000)), rs.coerce3dpoint((-10.298, -32.998, 0.000)), rs.coerce3dpoint((-10.315, -33.037, 0.000)), rs.coerce3dpoint((-10.327, -33.077, 0.000)), rs.coerce3dpoint((-10.333, -33.098, 0.000)), rs.coerce3dpoint((-10.337, -33.120, 0.000)), rs.coerce3dpoint((-10.351, -33.195, 0.000)), rs.coerce3dpoint((-10.357, -33.271, 0.000)), rs.coerce3dpoint((-10.364, -33.369, 0.000)), rs.coerce3dpoint((-10.367, -33.466, 0.000)), rs.coerce3dpoint((-10.373, -33.660, 0.000)), rs.coerce3dpoint((-10.374, -33.854, 0.000)), rs.coerce3dpoint((-10.378, -34.264, 0.000)), rs.coerce3dpoint((-10.378, -34.674, 0.000)), rs.coerce3dpoint((-10.377, -35.594, 0.000)), rs.coerce3dpoint((-10.376, -36.513, 0.000)), rs.coerce3dpoint((-10.368, -38.729, 0.000)), rs.coerce3dpoint((-10.361, -40.946, 0.000)), rs.coerce3dpoint((-10.357, -41.051, 0.000)), rs.coerce3dpoint((-10.335, -41.153, 0.000)), rs.coerce3dpoint((-10.314, -41.250, 0.000)), rs.coerce3dpoint((-10.271, -41.340, 0.000)), rs.coerce3dpoint((-10.221, -41.442, 0.000)), rs.coerce3dpoint((-10.141, -41.523, 0.000)), rs.coerce3dpoint((-10.056, -41.607, 0.000)), rs.coerce3dpoint((-9.947, -41.657, 0.000)), rs.coerce3dpoint((-9.853, -41.699, 0.000)), rs.coerce3dpoint((-9.752, -41.718, 0.000)), rs.coerce3dpoint((-9.703, -41.727, 0.000)), rs.coerce3dpoint((-9.654, -41.731, 0.000)), rs.coerce3dpoint((-9.449, -41.748, 0.000)), rs.coerce3dpoint((-9.244, -41.732, 0.000)), rs.coerce3dpoint((-9.132, -41.723, 0.000)), rs.coerce3dpoint((-9.021, -41.705, 0.000)), rs.coerce3dpoint((-8.925, -41.690, 0.000)), rs.coerce3dpoint((-8.830, -41.666, 0.000)), rs.coerce3dpoint((-8.764, -41.649, 0.000)), rs.coerce3dpoint((-8.701, -41.624, 0.000)), rs.coerce3dpoint((-8.653, -41.605, 0.000)), rs.coerce3dpoint((-8.610, -41.576, 0.000)), rs.coerce3dpoint((-8.567, -41.548, 0.000)), rs.coerce3dpoint((-8.535, -41.508, 0.000)), rs.coerce3dpoint((-8.509, -41.475, 0.000)), rs.coerce3dpoint((-8.492, -41.437, 0.000)), rs.coerce3dpoint((-8.490, -41.432, 0.000)), rs.coerce3dpoint((-8.488, -41.427, 0.000)), rs.coerce3dpoint((-8.460, -41.366, 0.000)), rs.coerce3dpoint((-8.447, -41.301, 0.000)), rs.coerce3dpoint((-8.434, -41.238, 0.000)), rs.coerce3dpoint((-8.428, -41.175, 0.000)), rs.coerce3dpoint((-8.417, -41.074, 0.000)), rs.coerce3dpoint((-8.413, -40.973, 0.000)), rs.coerce3dpoint((-8.404, -40.798, 0.000)), rs.coerce3dpoint((-8.401, -40.623, 0.000)), rs.coerce3dpoint((-8.394, -40.303, 0.000)), rs.coerce3dpoint((-8.393, -39.983, 0.000)), rs.coerce3dpoint((-8.389, -39.366, 0.000)), rs.coerce3dpoint((-8.389, -38.749, 0.000)), rs.coerce3dpoint((-8.390, -37.747, 0.000)), rs.coerce3dpoint((-8.390, -36.745, 0.000))], [0.0, 0.0, 3.71248036224, 3.71248036224, 3.93705089681, 3.93705089681, 4.01689346190, 4.01689346190, 4.21739313652, 4.21739313652, 4.41416371887, 4.41416371887, 4.63813489847, 4.63813489847, 4.81264552949, 4.81264552949, 5.02206977450, 5.02206977450, 5.20013493782, 5.20013493782, 5.37143443640, 5.37143443640, 5.60321662717, 5.60321662717, 5.76451186682, 5.76451186682, 5.93487776171, 5.93487776171, 6.15519250579, 6.15519250579, 6.53228496812, 6.53228496812, 6.91311335828, 6.91311335828, 7.15710932031, 7.15710932031, 7.29046655841, 7.29046655841, 7.37445314772, 7.37445314772, 7.41887633472, 7.41887633472, 7.57121673585, 7.57121673585, 7.76667101923, 7.76667101923, 8.15434149980, 8.15434149980, 8.97467377850, 8.97467377850, 10.8135755604, 10.8135755604, 15.2459011797, 15.2459011797, 15.4556475181, 15.4556475181, 15.6532587635, 15.6532587635, 15.8785309125, 15.8785309125, 16.1155720128, 16.1155720128, 16.3205897904, 16.3205897904, 16.4191979940, 16.4191979940, 16.8301303524, 16.8301303524, 17.0544993865, 17.0544993865, 17.2491226148, 17.2491226148, 17.3854305902, 17.3854305902, 17.4885410498, 17.4885410498, 17.5903383555, 17.5903383555, 17.6731433790, 17.6731433790, 17.6840703410, 17.6840703410, 17.8172052515, 17.8172052515, 17.9445573826, 17.9445573826, 18.1467123571, 18.1467123571, 18.4969184094, 18.4969184094, 19.1373766229, 19.1373766229, 20.3712433530, 20.3712433530, 22.3748935783, 22.3748935783], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999366520712, 1.0, 0.999667235375, 1.0, 0.992801979323, 1.0, 0.994627252088, 1.0, 0.995383460871, 1.0, 0.993340568096, 1.0, 0.988544373687, 1.0, 0.972854917068, 1.0, 0.991637036419, 1.0, 0.995345079418, 1.0, 0.999224121111, 1.0, 0.999380671843, 1.0, 0.999635566418, 1.0, 0.999775305247, 1.0, 0.99923978907, 1.0, 0.997250963801, 1.0, 0.999126761439, 1.0, 0.998284492746, 1.0, 0.999716820101, 1.0, 0.999941681701, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 1.0, 1.0, 0.995940237597, 1.0, 0.993202064766, 1.0, 0.985953726623, 1.0, 0.984247436608, 1.0, 0.992415094899, 1.0, 0.998839054289, 1.0, 0.996561422091, 1.0, 0.99915164001, 1.0, 0.998896109623, 1.0, 0.997744626227, 1.0, 0.995131161718, 1.0, 0.986803156732, 1.0, 0.993477660053, 1.0, 1.0, 1.0, 0.993568270304, 1.0, 0.998760748348, 1.0, 0.999619192521, 1.0, 0.999890485997, 1.0, 0.999972620375, 1.0, 0.99999550001, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.403, -3.721, 0.000), (0.396, -4.965, 0.000), (0.390, -6.208, 0.000), (0.384, -7.311, 0.000), (0.379, -8.413, 0.000), (0.376, -8.959, 0.000), (0.373, -9.505, 0.000), (0.373, -9.535, 0.000), (0.378, -9.564, 0.000), (0.389, -9.639, 0.000), (0.410, -9.711, 0.000), (0.473, -9.944, 0.000), (0.591, -10.154, 0.000), (0.611, -10.189, 0.000), (0.632, -10.223, 0.000), (0.700, -10.332, 0.000), (0.763, -10.444, 0.000), (0.780, -10.474, 0.000), (0.797, -10.503, 0.000), (0.860, -10.616, 0.000), (0.926, -10.726, 0.000), (0.971, -10.800, 0.000), (1.018, -10.871, 0.000), (1.091, -10.979, 0.000), (1.183, -11.070, 0.000), (1.246, -11.133, 0.000), (1.316, -11.188, 0.000), (1.391, -11.248, 0.000), (1.479, -11.287, 0.000), (1.579, -11.330, 0.000), (1.687, -11.335, 0.000), (1.805, -11.340, 0.000), (1.915, -11.297, 0.000), (2.006, -11.263, 0.000), (2.083, -11.204, 0.000), (2.117, -11.179, 0.000), (2.149, -11.151, 0.000), (2.215, -11.091, 0.000), (2.264, -11.017, 0.000), (2.345, -10.895, 0.000), (2.359, -10.749, 0.000), (2.362, -10.722, 0.000), (2.362, -10.696, 0.000), (2.368, -8.990, 0.000), (2.374, -7.284, 0.000), (2.380, -5.502, 0.000), (2.386, -3.721, 0.000), (2.386, -3.146, 0.000), (2.386, -2.571, 0.000), (2.393, -1.327, 0.000), (2.399, -0.084, 0.000), (2.405, 1.019, 0.000), (2.410, 2.122, 0.000), (2.413, 2.668, 0.000), (2.416, 3.214, 0.000), (2.416, 3.243, 0.000), (2.411, 3.273, 0.000), (2.400, 3.347, 0.000), (2.380, 3.420, 0.000), (2.316, 3.652, 0.000), (2.198, 3.862, 0.000), (2.178, 3.897, 0.000), (2.157, 3.931, 0.000), (2.089, 4.040, 0.000), (2.026, 4.152, 0.000), (2.009, 4.182, 0.000), (1.992, 4.211, 0.000), (1.929, 4.324, 0.000), (1.863, 4.434, 0.000), (1.818, 4.508, 0.000), (1.771, 4.580, 0.000), (1.698, 4.687, 0.000), (1.606, 4.778, 0.000), (1.543, 4.841, 0.000), (1.473, 4.896, 0.000), (1.398, 4.956, 0.000), (1.310, 4.995, 0.000), (1.210, 5.038, 0.000), (1.102, 5.043, 0.000), (0.984, 5.048, 0.000), (0.874, 5.006, 0.000), (0.784, 4.971, 0.000), (0.706, 4.913, 0.000), (0.672, 4.887, 0.000), (0.640, 4.859, 0.000), (0.574, 4.799, 0.000), (0.525, 4.726, 0.000), (0.444, 4.603, 0.000), (0.430, 4.457, 0.000), (0.428, 4.431, 0.000), (0.427, 4.404, 0.000), (0.421, 2.698, 0.000), (0.415, 0.992, 0.000), (0.409, -0.789, 0.000), (0.403, -2.571, 0.000), (0.403, -3.146, 0.000), (0.403, -3.721, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.403, -3.721, 0.000)), rs.coerce3dpoint((0.396, -4.965, 0.000)), rs.coerce3dpoint((0.390, -6.208, 0.000)), rs.coerce3dpoint((0.384, -7.311, 0.000)), rs.coerce3dpoint((0.379, -8.413, 0.000)), rs.coerce3dpoint((0.376, -8.959, 0.000)), rs.coerce3dpoint((0.373, -9.505, 0.000)), rs.coerce3dpoint((0.373, -9.535, 0.000)), rs.coerce3dpoint((0.378, -9.564, 0.000)), rs.coerce3dpoint((0.389, -9.639, 0.000)), rs.coerce3dpoint((0.410, -9.711, 0.000)), rs.coerce3dpoint((0.473, -9.944, 0.000)), rs.coerce3dpoint((0.591, -10.154, 0.000)), rs.coerce3dpoint((0.611, -10.189, 0.000)), rs.coerce3dpoint((0.632, -10.223, 0.000)), rs.coerce3dpoint((0.700, -10.332, 0.000)), rs.coerce3dpoint((0.763, -10.444, 0.000)), rs.coerce3dpoint((0.780, -10.474, 0.000)), rs.coerce3dpoint((0.797, -10.503, 0.000)), rs.coerce3dpoint((0.860, -10.616, 0.000)), rs.coerce3dpoint((0.926, -10.726, 0.000)), rs.coerce3dpoint((0.971, -10.800, 0.000)), rs.coerce3dpoint((1.018, -10.871, 0.000)), rs.coerce3dpoint((1.091, -10.979, 0.000)), rs.coerce3dpoint((1.183, -11.070, 0.000)), rs.coerce3dpoint((1.246, -11.133, 0.000)), rs.coerce3dpoint((1.316, -11.188, 0.000)), rs.coerce3dpoint((1.391, -11.248, 0.000)), rs.coerce3dpoint((1.479, -11.287, 0.000)), rs.coerce3dpoint((1.579, -11.330, 0.000)), rs.coerce3dpoint((1.687, -11.335, 0.000)), rs.coerce3dpoint((1.805, -11.340, 0.000)), rs.coerce3dpoint((1.915, -11.297, 0.000)), rs.coerce3dpoint((2.006, -11.263, 0.000)), rs.coerce3dpoint((2.083, -11.204, 0.000)), rs.coerce3dpoint((2.117, -11.179, 0.000)), rs.coerce3dpoint((2.149, -11.151, 0.000)), rs.coerce3dpoint((2.215, -11.091, 0.000)), rs.coerce3dpoint((2.264, -11.017, 0.000)), rs.coerce3dpoint((2.345, -10.895, 0.000)), rs.coerce3dpoint((2.359, -10.749, 0.000)), rs.coerce3dpoint((2.362, -10.722, 0.000)), rs.coerce3dpoint((2.362, -10.696, 0.000)), rs.coerce3dpoint((2.368, -8.990, 0.000)), rs.coerce3dpoint((2.374, -7.284, 0.000)), rs.coerce3dpoint((2.380, -5.502, 0.000)), rs.coerce3dpoint((2.386, -3.721, 0.000)), rs.coerce3dpoint((2.386, -3.146, 0.000)), rs.coerce3dpoint((2.386, -2.571, 0.000)), rs.coerce3dpoint((2.393, -1.327, 0.000)), rs.coerce3dpoint((2.399, -0.084, 0.000)), rs.coerce3dpoint((2.405, 1.019, 0.000)), rs.coerce3dpoint((2.410, 2.122, 0.000)), rs.coerce3dpoint((2.413, 2.668, 0.000)), rs.coerce3dpoint((2.416, 3.214, 0.000)), rs.coerce3dpoint((2.416, 3.243, 0.000)), rs.coerce3dpoint((2.411, 3.273, 0.000)), rs.coerce3dpoint((2.400, 3.347, 0.000)), rs.coerce3dpoint((2.380, 3.420, 0.000)), rs.coerce3dpoint((2.316, 3.652, 0.000)), rs.coerce3dpoint((2.198, 3.862, 0.000)), rs.coerce3dpoint((2.178, 3.897, 0.000)), rs.coerce3dpoint((2.157, 3.931, 0.000)), rs.coerce3dpoint((2.089, 4.040, 0.000)), rs.coerce3dpoint((2.026, 4.152, 0.000)), rs.coerce3dpoint((2.009, 4.182, 0.000)), rs.coerce3dpoint((1.992, 4.211, 0.000)), rs.coerce3dpoint((1.929, 4.324, 0.000)), rs.coerce3dpoint((1.863, 4.434, 0.000)), rs.coerce3dpoint((1.818, 4.508, 0.000)), rs.coerce3dpoint((1.771, 4.580, 0.000)), rs.coerce3dpoint((1.698, 4.687, 0.000)), rs.coerce3dpoint((1.606, 4.778, 0.000)), rs.coerce3dpoint((1.543, 4.841, 0.000)), rs.coerce3dpoint((1.473, 4.896, 0.000)), rs.coerce3dpoint((1.398, 4.956, 0.000)), rs.coerce3dpoint((1.310, 4.995, 0.000)), rs.coerce3dpoint((1.210, 5.038, 0.000)), rs.coerce3dpoint((1.102, 5.043, 0.000)), rs.coerce3dpoint((0.984, 5.048, 0.000)), rs.coerce3dpoint((0.874, 5.006, 0.000)), rs.coerce3dpoint((0.784, 4.971, 0.000)), rs.coerce3dpoint((0.706, 4.913, 0.000)), rs.coerce3dpoint((0.672, 4.887, 0.000)), rs.coerce3dpoint((0.640, 4.859, 0.000)), rs.coerce3dpoint((0.574, 4.799, 0.000)), rs.coerce3dpoint((0.525, 4.726, 0.000)), rs.coerce3dpoint((0.444, 4.603, 0.000)), rs.coerce3dpoint((0.430, 4.457, 0.000)), rs.coerce3dpoint((0.428, 4.431, 0.000)), rs.coerce3dpoint((0.427, 4.404, 0.000)), rs.coerce3dpoint((0.421, 2.698, 0.000)), rs.coerce3dpoint((0.415, 0.992, 0.000)), rs.coerce3dpoint((0.409, -0.789, 0.000)), rs.coerce3dpoint((0.403, -2.571, 0.000)), rs.coerce3dpoint((0.403, -3.146, 0.000)), rs.coerce3dpoint((0.403, -3.721, 0.000))], [0.0, 0.0, 2.48716242471, 2.48716242471, 4.69238107004, 4.69238107004, 5.78437799623, 5.78437799623, 5.84366489471, 5.84366489471, 5.99426937863, 5.99426937863, 6.47349518501, 6.47349518501, 6.55386376578, 6.55386376578, 6.81115208559, 6.81115208559, 6.87916041228, 6.87916041228, 7.13695758325, 7.13695758325, 7.30882244828, 7.30882244828, 7.56715350121, 7.56715350121, 7.74531348022, 7.74531348022, 7.93647636512, 7.93647636512, 8.15110372690, 8.15110372690, 8.38375472032, 8.38375472032, 8.57643299820, 8.57643299820, 8.66134464882, 8.66134464882, 8.83788742422, 8.83788742422, 9.12601340880, 9.12601340880, 9.17857342272, 9.17857342272, 12.5907353046, 12.5907353046, 16.1536364325, 16.1536364325, 17.3038964325, 17.3038964325, 19.7910588062, 19.7910588062, 21.9962774515, 21.9962774515, 23.0882743777, 23.0882743777, 23.1475612762, 23.1475612762, 23.2981657601, 23.2981657601, 23.7773915665, 23.7773915665, 23.8577464405, 23.8577464405, 24.1150433647, 24.1150433647, 24.1830566399, 24.1830566399, 24.4408538109, 24.4408538109, 24.6127102312, 24.6127102312, 24.8710425997, 24.8710425997, 25.0492100569, 25.0492100569, 25.2403729418, 25.2403729418, 25.4549882281, 25.4549882281, 25.6876475094, 25.6876475094, 25.8803306423, 25.8803306423, 25.9652359366, 25.9652359366, 26.1417787120, 26.1417787120, 26.4299046966, 26.4299046966, 26.4824647105, 26.4824647105, 29.8946265923, 29.8946265923, 33.4575276858, 33.4575276858, 34.6077876858, 34.6077876858], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(3.382, -7.919, 0.000), (3.376, -9.162, 0.000), (3.370, -10.406, 0.000), (3.364, -11.508, 0.000), (3.358, -12.611, 0.000), (3.355, -13.157, 0.000), (3.352, -13.703, 0.000), (3.353, -13.733, 0.000), (3.357, -13.763, 0.000), (3.369, -13.841, 0.000), (3.387, -13.918, 0.000), (3.416, -14.039, 0.000), (3.458, -14.157, 0.000), (3.483, -14.225, 0.000), (3.516, -14.290, 0.000), (3.519, -14.296, 0.000), (3.523, -14.303, 0.000), (3.678, -14.551, 0.000), (3.838, -14.797, 0.000), (3.928, -14.935, 0.000), (4.022, -15.070, 0.000), (4.078, -15.149, 0.000), (4.138, -15.225, 0.000), (4.177, -15.275, 0.000), (4.222, -15.320, 0.000), (4.257, -15.355, 0.000), (4.296, -15.386, 0.000), (4.371, -15.446, 0.000), (4.459, -15.484, 0.000), (4.558, -15.528, 0.000), (4.667, -15.533, 0.000), (4.785, -15.537, 0.000), (4.895, -15.495, 0.000), (4.985, -15.460, 0.000), (5.063, -15.402, 0.000), (5.097, -15.377, 0.000), (5.128, -15.348, 0.000), (5.194, -15.289, 0.000), (5.244, -15.215, 0.000), (5.325, -15.092, 0.000), (5.339, -14.946, 0.000), (5.341, -14.920, 0.000), (5.342, -14.894, 0.000), (5.348, -13.187, 0.000), (5.354, -11.481, 0.000), (5.360, -9.700, 0.000), (5.366, -7.919, 0.000), (5.366, -7.343, 0.000), (5.366, -6.768, 0.000), (5.372, -5.525, 0.000), (5.379, -4.281, 0.000), (5.384, -3.179, 0.000), (5.390, -2.076, 0.000), (5.393, -1.530, 0.000), (5.396, -0.984, 0.000), (5.396, -0.954, 0.000), (5.391, -0.925, 0.000), (5.379, -0.850, 0.000), (5.359, -0.778, 0.000), (5.295, -0.546, 0.000), (5.178, -0.336, 0.000), (5.158, -0.301, 0.000), (5.137, -0.266, 0.000), (5.069, -0.157, 0.000), (5.005, -0.045, 0.000), (4.989, -0.016, 0.000), (4.972, 0.014, 0.000), (4.909, 0.126, 0.000), (4.842, 0.237, 0.000), (4.798, 0.311, 0.000), (4.750, 0.382, 0.000), (4.678, 0.489, 0.000), (4.586, 0.581, 0.000), (4.523, 0.644, 0.000), (4.453, 0.699, 0.000), (4.378, 0.759, 0.000), (4.289, 0.797, 0.000), (4.190, 0.841, 0.000), (4.082, 0.846, 0.000), (3.964, 0.850, 0.000), (3.854, 0.808, 0.000), (3.763, 0.773, 0.000), (3.686, 0.715, 0.000), (3.651, 0.690, 0.000), (3.620, 0.661, 0.000), (3.554, 0.602, 0.000), (3.505, 0.528, 0.000), (3.423, 0.406, 0.000), (3.410, 0.259, 0.000), (3.407, 0.233, 0.000), (3.407, 0.207, 0.000), (3.401, -1.499, 0.000), (3.395, -3.205, 0.000), (3.388, -4.987, 0.000), (3.382, -6.768, 0.000), (3.382, -7.343, 0.000), (3.382, -7.919, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((3.382, -7.919, 0.000)), rs.coerce3dpoint((3.376, -9.162, 0.000)), rs.coerce3dpoint((3.370, -10.406, 0.000)), rs.coerce3dpoint((3.364, -11.508, 0.000)), rs.coerce3dpoint((3.358, -12.611, 0.000)), rs.coerce3dpoint((3.355, -13.157, 0.000)), rs.coerce3dpoint((3.352, -13.703, 0.000)), rs.coerce3dpoint((3.353, -13.733, 0.000)), rs.coerce3dpoint((3.357, -13.763, 0.000)), rs.coerce3dpoint((3.369, -13.841, 0.000)), rs.coerce3dpoint((3.387, -13.918, 0.000)), rs.coerce3dpoint((3.416, -14.039, 0.000)), rs.coerce3dpoint((3.458, -14.157, 0.000)), rs.coerce3dpoint((3.483, -14.225, 0.000)), rs.coerce3dpoint((3.516, -14.290, 0.000)), rs.coerce3dpoint((3.519, -14.296, 0.000)), rs.coerce3dpoint((3.523, -14.303, 0.000)), rs.coerce3dpoint((3.678, -14.551, 0.000)), rs.coerce3dpoint((3.838, -14.797, 0.000)), rs.coerce3dpoint((3.928, -14.935, 0.000)), rs.coerce3dpoint((4.022, -15.070, 0.000)), rs.coerce3dpoint((4.078, -15.149, 0.000)), rs.coerce3dpoint((4.138, -15.225, 0.000)), rs.coerce3dpoint((4.177, -15.275, 0.000)), rs.coerce3dpoint((4.222, -15.320, 0.000)), rs.coerce3dpoint((4.257, -15.355, 0.000)), rs.coerce3dpoint((4.296, -15.386, 0.000)), rs.coerce3dpoint((4.371, -15.446, 0.000)), rs.coerce3dpoint((4.459, -15.484, 0.000)), rs.coerce3dpoint((4.558, -15.528, 0.000)), rs.coerce3dpoint((4.667, -15.533, 0.000)), rs.coerce3dpoint((4.785, -15.537, 0.000)), rs.coerce3dpoint((4.895, -15.495, 0.000)), rs.coerce3dpoint((4.985, -15.460, 0.000)), rs.coerce3dpoint((5.063, -15.402, 0.000)), rs.coerce3dpoint((5.097, -15.377, 0.000)), rs.coerce3dpoint((5.128, -15.348, 0.000)), rs.coerce3dpoint((5.194, -15.289, 0.000)), rs.coerce3dpoint((5.244, -15.215, 0.000)), rs.coerce3dpoint((5.325, -15.092, 0.000)), rs.coerce3dpoint((5.339, -14.946, 0.000)), rs.coerce3dpoint((5.341, -14.920, 0.000)), rs.coerce3dpoint((5.342, -14.894, 0.000)), rs.coerce3dpoint((5.348, -13.187, 0.000)), rs.coerce3dpoint((5.354, -11.481, 0.000)), rs.coerce3dpoint((5.360, -9.700, 0.000)), rs.coerce3dpoint((5.366, -7.919, 0.000)), rs.coerce3dpoint((5.366, -7.343, 0.000)), rs.coerce3dpoint((5.366, -6.768, 0.000)), rs.coerce3dpoint((5.372, -5.525, 0.000)), rs.coerce3dpoint((5.379, -4.281, 0.000)), rs.coerce3dpoint((5.384, -3.179, 0.000)), rs.coerce3dpoint((5.390, -2.076, 0.000)), rs.coerce3dpoint((5.393, -1.530, 0.000)), rs.coerce3dpoint((5.396, -0.984, 0.000)), rs.coerce3dpoint((5.396, -0.954, 0.000)), rs.coerce3dpoint((5.391, -0.925, 0.000)), rs.coerce3dpoint((5.379, -0.850, 0.000)), rs.coerce3dpoint((5.359, -0.778, 0.000)), rs.coerce3dpoint((5.295, -0.546, 0.000)), rs.coerce3dpoint((5.178, -0.336, 0.000)), rs.coerce3dpoint((5.158, -0.301, 0.000)), rs.coerce3dpoint((5.137, -0.266, 0.000)), rs.coerce3dpoint((5.069, -0.157, 0.000)), rs.coerce3dpoint((5.005, -0.045, 0.000)), rs.coerce3dpoint((4.989, -0.016, 0.000)), rs.coerce3dpoint((4.972, 0.014, 0.000)), rs.coerce3dpoint((4.909, 0.126, 0.000)), rs.coerce3dpoint((4.842, 0.237, 0.000)), rs.coerce3dpoint((4.798, 0.311, 0.000)), rs.coerce3dpoint((4.750, 0.382, 0.000)), rs.coerce3dpoint((4.678, 0.489, 0.000)), rs.coerce3dpoint((4.586, 0.581, 0.000)), rs.coerce3dpoint((4.523, 0.644, 0.000)), rs.coerce3dpoint((4.453, 0.699, 0.000)), rs.coerce3dpoint((4.378, 0.759, 0.000)), rs.coerce3dpoint((4.289, 0.797, 0.000)), rs.coerce3dpoint((4.190, 0.841, 0.000)), rs.coerce3dpoint((4.082, 0.846, 0.000)), rs.coerce3dpoint((3.964, 0.850, 0.000)), rs.coerce3dpoint((3.854, 0.808, 0.000)), rs.coerce3dpoint((3.763, 0.773, 0.000)), rs.coerce3dpoint((3.686, 0.715, 0.000)), rs.coerce3dpoint((3.651, 0.690, 0.000)), rs.coerce3dpoint((3.620, 0.661, 0.000)), rs.coerce3dpoint((3.554, 0.602, 0.000)), rs.coerce3dpoint((3.505, 0.528, 0.000)), rs.coerce3dpoint((3.423, 0.406, 0.000)), rs.coerce3dpoint((3.410, 0.259, 0.000)), rs.coerce3dpoint((3.407, 0.233, 0.000)), rs.coerce3dpoint((3.407, 0.207, 0.000)), rs.coerce3dpoint((3.401, -1.499, 0.000)), rs.coerce3dpoint((3.395, -3.205, 0.000)), rs.coerce3dpoint((3.388, -4.987, 0.000)), rs.coerce3dpoint((3.382, -6.768, 0.000)), rs.coerce3dpoint((3.382, -7.343, 0.000)), rs.coerce3dpoint((3.382, -7.919, 0.000))], [0.0, 0.0, 2.48716237367, 2.48716237367, 4.69238101900, 4.69238101900, 5.78437794518, 5.78437794518, 5.84499411842, 5.84499411842, 6.00299260671, 6.00299260671, 6.25183025328, 6.25183025328, 6.39736953434, 6.39736953434, 6.41147427467, 6.41147427467, 6.99791881810, 6.99791881810, 7.32706946942, 7.32706946942, 7.52103396262, 7.52103396262, 7.64726367141, 7.64726367141, 7.74645918967, 7.74645918967, 7.93762207458, 7.93762207458, 8.15223964226, 8.15223964226, 8.38489063568, 8.38489063568, 8.57757769237, 8.57757769237, 8.66248934299, 8.66248934299, 8.83902555057, 8.83902555057, 9.12715489667, 9.12715489667, 9.17971433857, 9.17971433857, 12.5918762563, 12.5918762563, 16.1547773497, 16.1547773497, 17.3050373497, 17.3050373497, 19.7921997234, 19.7921997234, 21.9974183687, 21.9974183687, 23.0894153507, 23.0894153507, 23.1487022491, 23.1487022491, 23.2993067331, 23.2993067331, 23.7785363449, 23.7785363449, 23.8588912189, 23.8588912189, 24.1161881432, 24.1161881432, 24.1842014183, 24.1842014183, 24.4419985893, 24.4419985893, 24.6138496520, 24.6138496520, 24.8721884141, 24.8721884141, 25.0503558713, 25.0503558713, 25.2415101732, 25.2415101732, 25.4561352537, 25.4561352537, 25.6887846014, 25.6887846014, 25.8814765129, 25.8814765129, 25.9663818072, 25.9663818072, 26.1429180148, 26.1429180148, 26.4310473609, 26.4310473609, 26.4836068028, 26.4836068028, 29.8957687205, 29.8957687205, 33.4586698139, 33.4586698139, 34.6089298139, 34.6089298139], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99771772736, 1.0, 0.998905479316, 1.0, 0.998319413373, 1.0, 0.998079845269, 1.0, 1.0, 1.0, 0.999951981153, 1.0, 0.999855510439, 1.0, 0.999550101227, 1.0, 0.9985752357, 1.0, 0.99799223758, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(6.391, -19.572, 0.000), (6.377, -22.940, 0.000), (6.363, -26.307, 0.000), (6.362, -26.407, 0.000), (6.361, -26.507, 0.000), (6.362, -26.536, 0.000), (6.367, -26.566, 0.000), (6.378, -26.640, 0.000), (6.398, -26.713, 0.000), (6.462, -26.945, 0.000), (6.580, -27.155, 0.000), (6.600, -27.190, 0.000), (6.621, -27.224, 0.000), (6.689, -27.334, 0.000), (6.752, -27.446, 0.000), (6.769, -27.475, 0.000), (6.786, -27.505, 0.000), (6.849, -27.617, 0.000), (6.915, -27.728, 0.000), (6.959, -27.801, 0.000), (7.007, -27.873, 0.000), (7.080, -27.980, 0.000), (7.172, -28.071, 0.000), (7.235, -28.134, 0.000), (7.305, -28.190, 0.000), (7.380, -28.250, 0.000), (7.468, -28.288, 0.000), (7.568, -28.332, 0.000), (7.676, -28.337, 0.000), (7.794, -28.341, 0.000), (7.904, -28.299, 0.000), (7.994, -28.264, 0.000), (8.072, -28.206, 0.000), (8.106, -28.180, 0.000), (8.138, -28.152, 0.000), (8.204, -28.093, 0.000), (8.253, -28.019, 0.000), (8.334, -27.896, 0.000), (8.348, -27.750, 0.000), (8.350, -27.724, 0.000), (8.351, -27.697, 0.000), (8.351, -27.535, 0.000), (8.352, -27.372, 0.000), (8.358, -24.652, 0.000), (8.364, -21.933, 0.000), (8.367, -17.881, 0.000), (8.369, -13.830, 0.000), (8.369, -10.867, 0.000), (8.370, -7.904, 0.000), (8.362, -5.118, 0.000), (8.354, -2.332, 0.000), (8.353, -2.018, 0.000), (8.352, -1.703, 0.000), (8.348, -0.741, 0.000), (8.345, 0.221, 0.000), (8.344, 0.320, 0.000), (8.312, 0.413, 0.000), (8.277, 0.511, 0.000), (8.211, 0.592, 0.000), (8.175, 0.637, 0.000), (8.132, 0.676, 0.000), (8.060, 0.742, 0.000), (7.973, 0.789, 0.000), (7.884, 0.837, 0.000), (7.784, 0.853, 0.000), (7.647, 0.876, 0.000), (7.516, 0.832, 0.000), (7.425, 0.802, 0.000), (7.346, 0.748, 0.000), (7.322, 0.731, 0.000), (7.299, 0.713, 0.000), (7.172, 0.613, 0.000), (7.070, 0.488, 0.000), (7.033, 0.444, 0.000), (7.002, 0.396, 0.000), (6.930, 0.289, 0.000), (6.866, 0.178, 0.000), (6.822, 0.103, 0.000), (6.780, 0.028, 0.000), (6.717, -0.084, 0.000), (6.651, -0.194, 0.000), (6.633, -0.223, 0.000), (6.615, -0.252, 0.000), (6.525, -0.397, 0.000), (6.462, -0.557, 0.000), (6.410, -0.686, 0.000), (6.378, -0.822, 0.000), (6.365, -0.878, 0.000), (6.358, -0.935, 0.000), (6.356, -0.952, 0.000), (6.356, -0.970, 0.000), (6.356, -1.095, 0.000), (6.357, -1.220, 0.000), (6.362, -2.515, 0.000), (6.366, -3.810, 0.000), (6.374, -7.693, 0.000), (6.381, -11.577, 0.000), (6.386, -15.574, 0.000), (6.391, -19.572, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((6.391, -19.572, 0.000)), rs.coerce3dpoint((6.377, -22.940, 0.000)), rs.coerce3dpoint((6.363, -26.307, 0.000)), rs.coerce3dpoint((6.362, -26.407, 0.000)), rs.coerce3dpoint((6.361, -26.507, 0.000)), rs.coerce3dpoint((6.362, -26.536, 0.000)), rs.coerce3dpoint((6.367, -26.566, 0.000)), rs.coerce3dpoint((6.378, -26.640, 0.000)), rs.coerce3dpoint((6.398, -26.713, 0.000)), rs.coerce3dpoint((6.462, -26.945, 0.000)), rs.coerce3dpoint((6.580, -27.155, 0.000)), rs.coerce3dpoint((6.600, -27.190, 0.000)), rs.coerce3dpoint((6.621, -27.224, 0.000)), rs.coerce3dpoint((6.689, -27.334, 0.000)), rs.coerce3dpoint((6.752, -27.446, 0.000)), rs.coerce3dpoint((6.769, -27.475, 0.000)), rs.coerce3dpoint((6.786, -27.505, 0.000)), rs.coerce3dpoint((6.849, -27.617, 0.000)), rs.coerce3dpoint((6.915, -27.728, 0.000)), rs.coerce3dpoint((6.959, -27.801, 0.000)), rs.coerce3dpoint((7.007, -27.873, 0.000)), rs.coerce3dpoint((7.080, -27.980, 0.000)), rs.coerce3dpoint((7.172, -28.071, 0.000)), rs.coerce3dpoint((7.235, -28.134, 0.000)), rs.coerce3dpoint((7.305, -28.190, 0.000)), rs.coerce3dpoint((7.380, -28.250, 0.000)), rs.coerce3dpoint((7.468, -28.288, 0.000)), rs.coerce3dpoint((7.568, -28.332, 0.000)), rs.coerce3dpoint((7.676, -28.337, 0.000)), rs.coerce3dpoint((7.794, -28.341, 0.000)), rs.coerce3dpoint((7.904, -28.299, 0.000)), rs.coerce3dpoint((7.994, -28.264, 0.000)), rs.coerce3dpoint((8.072, -28.206, 0.000)), rs.coerce3dpoint((8.106, -28.180, 0.000)), rs.coerce3dpoint((8.138, -28.152, 0.000)), rs.coerce3dpoint((8.204, -28.093, 0.000)), rs.coerce3dpoint((8.253, -28.019, 0.000)), rs.coerce3dpoint((8.334, -27.896, 0.000)), rs.coerce3dpoint((8.348, -27.750, 0.000)), rs.coerce3dpoint((8.350, -27.724, 0.000)), rs.coerce3dpoint((8.351, -27.697, 0.000)), rs.coerce3dpoint((8.351, -27.535, 0.000)), rs.coerce3dpoint((8.352, -27.372, 0.000)), rs.coerce3dpoint((8.358, -24.652, 0.000)), rs.coerce3dpoint((8.364, -21.933, 0.000)), rs.coerce3dpoint((8.367, -17.881, 0.000)), rs.coerce3dpoint((8.369, -13.830, 0.000)), rs.coerce3dpoint((8.369, -10.867, 0.000)), rs.coerce3dpoint((8.370, -7.904, 0.000)), rs.coerce3dpoint((8.362, -5.118, 0.000)), rs.coerce3dpoint((8.354, -2.332, 0.000)), rs.coerce3dpoint((8.353, -2.018, 0.000)), rs.coerce3dpoint((8.352, -1.703, 0.000)), rs.coerce3dpoint((8.348, -0.741, 0.000)), rs.coerce3dpoint((8.345, 0.221, 0.000)), rs.coerce3dpoint((8.344, 0.320, 0.000)), rs.coerce3dpoint((8.312, 0.413, 0.000)), rs.coerce3dpoint((8.277, 0.511, 0.000)), rs.coerce3dpoint((8.211, 0.592, 0.000)), rs.coerce3dpoint((8.175, 0.637, 0.000)), rs.coerce3dpoint((8.132, 0.676, 0.000)), rs.coerce3dpoint((8.060, 0.742, 0.000)), rs.coerce3dpoint((7.973, 0.789, 0.000)), rs.coerce3dpoint((7.884, 0.837, 0.000)), rs.coerce3dpoint((7.784, 0.853, 0.000)), rs.coerce3dpoint((7.647, 0.876, 0.000)), rs.coerce3dpoint((7.516, 0.832, 0.000)), rs.coerce3dpoint((7.425, 0.802, 0.000)), rs.coerce3dpoint((7.346, 0.748, 0.000)), rs.coerce3dpoint((7.322, 0.731, 0.000)), rs.coerce3dpoint((7.299, 0.713, 0.000)), rs.coerce3dpoint((7.172, 0.613, 0.000)), rs.coerce3dpoint((7.070, 0.488, 0.000)), rs.coerce3dpoint((7.033, 0.444, 0.000)), rs.coerce3dpoint((7.002, 0.396, 0.000)), rs.coerce3dpoint((6.930, 0.289, 0.000)), rs.coerce3dpoint((6.866, 0.178, 0.000)), rs.coerce3dpoint((6.822, 0.103, 0.000)), rs.coerce3dpoint((6.780, 0.028, 0.000)), rs.coerce3dpoint((6.717, -0.084, 0.000)), rs.coerce3dpoint((6.651, -0.194, 0.000)), rs.coerce3dpoint((6.633, -0.223, 0.000)), rs.coerce3dpoint((6.615, -0.252, 0.000)), rs.coerce3dpoint((6.525, -0.397, 0.000)), rs.coerce3dpoint((6.462, -0.557, 0.000)), rs.coerce3dpoint((6.410, -0.686, 0.000)), rs.coerce3dpoint((6.378, -0.822, 0.000)), rs.coerce3dpoint((6.365, -0.878, 0.000)), rs.coerce3dpoint((6.358, -0.935, 0.000)), rs.coerce3dpoint((6.356, -0.952, 0.000)), rs.coerce3dpoint((6.356, -0.970, 0.000)), rs.coerce3dpoint((6.356, -1.095, 0.000)), rs.coerce3dpoint((6.357, -1.220, 0.000)), rs.coerce3dpoint((6.362, -2.515, 0.000)), rs.coerce3dpoint((6.366, -3.810, 0.000)), rs.coerce3dpoint((6.374, -7.693, 0.000)), rs.coerce3dpoint((6.381, -11.577, 0.000)), rs.coerce3dpoint((6.386, -15.574, 0.000)), rs.coerce3dpoint((6.391, -19.572, 0.000))], [0.0, 0.0, 6.73504127777, 6.73504127777, 6.93462544673, 6.93462544673, 6.99391234522, 6.99391234522, 7.14451682913, 7.14451682913, 7.62374263551, 7.62374263551, 7.70411121629, 7.70411121629, 7.96139953610, 7.96139953610, 8.02942150093, 8.02942150093, 8.28721002279, 8.28721002279, 8.45906953048, 8.45906953048, 8.71740058340, 8.71740058340, 8.89556804067, 8.89556804067, 9.08672234256, 9.08672234256, 9.30134970434, 9.30134970434, 9.53400069776, 9.53400069776, 9.72668775446, 9.72668775446, 9.81159940507, 9.81159940507, 9.98813561266, 9.98813561266, 10.2762649588, 10.2762649588, 10.3288244006, 10.3288244006, 10.6537862624, 10.6537862624, 16.0937305779, 16.0937305779, 24.1960519820, 24.1960519820, 30.1221919976, 30.1221919976, 35.6943237509, 35.6943237509, 36.3230276705, 36.3230276705, 38.2475093334, 38.2475093334, 38.4426758787, 38.4426758787, 38.6488704928, 38.6488704928, 38.7647214972, 38.7647214972, 38.9599857526, 38.9599857526, 39.1611159113, 39.1611159113, 39.4321413299, 39.4321413299, 39.6227802065, 39.6227802065, 39.6807517483, 39.6807517483, 40.0028859650, 40.0028859650, 40.1172558344, 40.1172558344, 40.3747119046, 40.3747119046, 40.5469043695, 40.5469043695, 40.8042724781, 40.8042724781, 40.8722145804, 40.8722145804, 41.2137343985, 41.2137343985, 41.4921020166, 41.4921020166, 41.6072225747, 41.6072225747, 41.6417098277, 41.6417098277, 41.8924940776, 41.8924940776, 44.4817486267, 44.4817486267, 52.2489938339, 52.2489938339, 60.2443803657, 60.2443803657], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995958184676, 1.0, 0.997250963801, 1.0, 0.998272772946, 1.0, 0.998433228349, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.395, -18.174, 0.000), (-10.401, -18.725, 0.000), (-10.404, -19.276, 0.000), (-10.413, -20.730, 0.000), (-10.422, -22.184, 0.000), (-10.424, -22.573, 0.000), (-10.426, -22.962, 0.000), (-10.426, -22.992, 0.000), (-10.421, -23.021, 0.000), (-10.410, -23.096, 0.000), (-10.389, -23.168, 0.000), (-10.326, -23.401, 0.000), (-10.208, -23.611, 0.000), (-10.188, -23.646, 0.000), (-10.167, -23.680, 0.000), (-10.099, -23.789, 0.000), (-10.036, -23.901, 0.000), (-10.019, -23.931, 0.000), (-10.002, -23.960, 0.000), (-9.939, -24.072, 0.000), (-9.873, -24.183, 0.000), (-9.828, -24.257, 0.000), (-9.781, -24.328, 0.000), (-9.708, -24.435, 0.000), (-9.616, -24.527, 0.000), (-9.553, -24.590, 0.000), (-9.483, -24.645, 0.000), (-9.408, -24.705, 0.000), (-9.320, -24.744, 0.000), (-9.220, -24.787, 0.000), (-9.112, -24.792, 0.000), (-8.994, -24.797, 0.000), (-8.884, -24.754, 0.000), (-8.793, -24.719, 0.000), (-8.716, -24.661, 0.000), (-8.682, -24.636, 0.000), (-8.650, -24.607, 0.000), (-8.584, -24.548, 0.000), (-8.535, -24.474, 0.000), (-8.454, -24.352, 0.000), (-8.440, -24.205, 0.000), (-8.438, -24.179, 0.000), (-8.437, -24.153, 0.000), (-8.436, -23.957, 0.000), (-8.436, -23.762, 0.000), (-8.429, -20.861, 0.000), (-8.422, -17.959, 0.000), (-8.420, -13.770, 0.000), (-8.417, -9.580, 0.000), (-8.417, -8.043, 0.000), (-8.416, -6.506, 0.000), (-8.424, -3.720, 0.000), (-8.432, -0.934, 0.000), (-8.433, -0.619, 0.000), (-8.434, -0.305, 0.000), (-8.438, 0.657, 0.000), (-8.441, 1.619, 0.000), (-8.442, 1.718, 0.000), (-8.474, 1.811, 0.000), (-8.509, 1.909, 0.000), (-8.575, 1.990, 0.000), (-8.611, 2.035, 0.000), (-8.654, 2.074, 0.000), (-8.726, 2.140, 0.000), (-8.813, 2.187, 0.000), (-8.902, 2.235, 0.000), (-9.002, 2.252, 0.000), (-9.139, 2.274, 0.000), (-9.270, 2.230, 0.000), (-9.361, 2.200, 0.000), (-9.440, 2.146, 0.000), (-9.464, 2.130, 0.000), (-9.487, 2.112, 0.000), (-9.614, 2.012, 0.000), (-9.716, 1.887, 0.000), (-9.753, 1.842, 0.000), (-9.784, 1.795, 0.000), (-9.856, 1.687, 0.000), (-9.920, 1.576, 0.000), (-9.964, 1.502, 0.000), (-10.006, 1.427, 0.000), (-10.069, 1.314, 0.000), (-10.135, 1.204, 0.000), (-10.153, 1.175, 0.000), (-10.171, 1.146, 0.000), (-10.261, 1.001, 0.000), (-10.324, 0.842, 0.000), (-10.376, 0.712, 0.000), (-10.408, 0.576, 0.000), (-10.421, 0.520, 0.000), (-10.428, 0.463, 0.000), (-10.430, 0.446, 0.000), (-10.430, 0.429, 0.000), (-10.430, 0.303, 0.000), (-10.429, 0.178, 0.000), (-10.424, -1.117, 0.000), (-10.420, -2.411, 0.000), (-10.412, -6.295, 0.000), (-10.405, -10.179, 0.000), (-10.400, -14.176, 0.000), (-10.395, -18.174, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.395, -18.174, 0.000)), rs.coerce3dpoint((-10.401, -18.725, 0.000)), rs.coerce3dpoint((-10.404, -19.276, 0.000)), rs.coerce3dpoint((-10.413, -20.730, 0.000)), rs.coerce3dpoint((-10.422, -22.184, 0.000)), rs.coerce3dpoint((-10.424, -22.573, 0.000)), rs.coerce3dpoint((-10.426, -22.962, 0.000)), rs.coerce3dpoint((-10.426, -22.992, 0.000)), rs.coerce3dpoint((-10.421, -23.021, 0.000)), rs.coerce3dpoint((-10.410, -23.096, 0.000)), rs.coerce3dpoint((-10.389, -23.168, 0.000)), rs.coerce3dpoint((-10.326, -23.401, 0.000)), rs.coerce3dpoint((-10.208, -23.611, 0.000)), rs.coerce3dpoint((-10.188, -23.646, 0.000)), rs.coerce3dpoint((-10.167, -23.680, 0.000)), rs.coerce3dpoint((-10.099, -23.789, 0.000)), rs.coerce3dpoint((-10.036, -23.901, 0.000)), rs.coerce3dpoint((-10.019, -23.931, 0.000)), rs.coerce3dpoint((-10.002, -23.960, 0.000)), rs.coerce3dpoint((-9.939, -24.072, 0.000)), rs.coerce3dpoint((-9.873, -24.183, 0.000)), rs.coerce3dpoint((-9.828, -24.257, 0.000)), rs.coerce3dpoint((-9.781, -24.328, 0.000)), rs.coerce3dpoint((-9.708, -24.435, 0.000)), rs.coerce3dpoint((-9.616, -24.527, 0.000)), rs.coerce3dpoint((-9.553, -24.590, 0.000)), rs.coerce3dpoint((-9.483, -24.645, 0.000)), rs.coerce3dpoint((-9.408, -24.705, 0.000)), rs.coerce3dpoint((-9.320, -24.744, 0.000)), rs.coerce3dpoint((-9.220, -24.787, 0.000)), rs.coerce3dpoint((-9.112, -24.792, 0.000)), rs.coerce3dpoint((-8.994, -24.797, 0.000)), rs.coerce3dpoint((-8.884, -24.754, 0.000)), rs.coerce3dpoint((-8.793, -24.719, 0.000)), rs.coerce3dpoint((-8.716, -24.661, 0.000)), rs.coerce3dpoint((-8.682, -24.636, 0.000)), rs.coerce3dpoint((-8.650, -24.607, 0.000)), rs.coerce3dpoint((-8.584, -24.548, 0.000)), rs.coerce3dpoint((-8.535, -24.474, 0.000)), rs.coerce3dpoint((-8.454, -24.352, 0.000)), rs.coerce3dpoint((-8.440, -24.205, 0.000)), rs.coerce3dpoint((-8.438, -24.179, 0.000)), rs.coerce3dpoint((-8.437, -24.153, 0.000)), rs.coerce3dpoint((-8.436, -23.957, 0.000)), rs.coerce3dpoint((-8.436, -23.762, 0.000)), rs.coerce3dpoint((-8.429, -20.861, 0.000)), rs.coerce3dpoint((-8.422, -17.959, 0.000)), rs.coerce3dpoint((-8.420, -13.770, 0.000)), rs.coerce3dpoint((-8.417, -9.580, 0.000)), rs.coerce3dpoint((-8.417, -8.043, 0.000)), rs.coerce3dpoint((-8.416, -6.506, 0.000)), rs.coerce3dpoint((-8.424, -3.720, 0.000)), rs.coerce3dpoint((-8.432, -0.934, 0.000)), rs.coerce3dpoint((-8.433, -0.619, 0.000)), rs.coerce3dpoint((-8.434, -0.305, 0.000)), rs.coerce3dpoint((-8.438, 0.657, 0.000)), rs.coerce3dpoint((-8.441, 1.619, 0.000)), rs.coerce3dpoint((-8.442, 1.718, 0.000)), rs.coerce3dpoint((-8.474, 1.811, 0.000)), rs.coerce3dpoint((-8.509, 1.909, 0.000)), rs.coerce3dpoint((-8.575, 1.990, 0.000)), rs.coerce3dpoint((-8.611, 2.035, 0.000)), rs.coerce3dpoint((-8.654, 2.074, 0.000)), rs.coerce3dpoint((-8.726, 2.140, 0.000)), rs.coerce3dpoint((-8.813, 2.187, 0.000)), rs.coerce3dpoint((-8.902, 2.235, 0.000)), rs.coerce3dpoint((-9.002, 2.252, 0.000)), rs.coerce3dpoint((-9.139, 2.274, 0.000)), rs.coerce3dpoint((-9.270, 2.230, 0.000)), rs.coerce3dpoint((-9.361, 2.200, 0.000)), rs.coerce3dpoint((-9.440, 2.146, 0.000)), rs.coerce3dpoint((-9.464, 2.130, 0.000)), rs.coerce3dpoint((-9.487, 2.112, 0.000)), rs.coerce3dpoint((-9.614, 2.012, 0.000)), rs.coerce3dpoint((-9.716, 1.887, 0.000)), rs.coerce3dpoint((-9.753, 1.842, 0.000)), rs.coerce3dpoint((-9.784, 1.795, 0.000)), rs.coerce3dpoint((-9.856, 1.687, 0.000)), rs.coerce3dpoint((-9.920, 1.576, 0.000)), rs.coerce3dpoint((-9.964, 1.502, 0.000)), rs.coerce3dpoint((-10.006, 1.427, 0.000)), rs.coerce3dpoint((-10.069, 1.314, 0.000)), rs.coerce3dpoint((-10.135, 1.204, 0.000)), rs.coerce3dpoint((-10.153, 1.175, 0.000)), rs.coerce3dpoint((-10.171, 1.146, 0.000)), rs.coerce3dpoint((-10.261, 1.001, 0.000)), rs.coerce3dpoint((-10.324, 0.842, 0.000)), rs.coerce3dpoint((-10.376, 0.712, 0.000)), rs.coerce3dpoint((-10.408, 0.576, 0.000)), rs.coerce3dpoint((-10.421, 0.520, 0.000)), rs.coerce3dpoint((-10.428, 0.463, 0.000)), rs.coerce3dpoint((-10.430, 0.446, 0.000)), rs.coerce3dpoint((-10.430, 0.429, 0.000)), rs.coerce3dpoint((-10.430, 0.303, 0.000)), rs.coerce3dpoint((-10.429, 0.178, 0.000)), rs.coerce3dpoint((-10.424, -1.117, 0.000)), rs.coerce3dpoint((-10.420, -2.411, 0.000)), rs.coerce3dpoint((-10.412, -6.295, 0.000)), rs.coerce3dpoint((-10.405, -10.179, 0.000)), rs.coerce3dpoint((-10.400, -14.176, 0.000)), rs.coerce3dpoint((-10.395, -18.174, 0.000))], [0.0, 0.0, 1.10180314273, 1.10180314273, 4.01038669549, 4.01038669549, 4.78840017635, 4.78840017635, 4.84767710386, 4.84767710386, 4.99829136694, 4.99829136694, 5.47751717332, 5.47751717332, 5.55787715734, 5.55787715734, 5.81517408156, 5.81517408156, 5.88318240826, 5.88318240826, 6.14098459911, 6.14098459911, 6.31283566177, 6.31283566177, 6.57116671470, 6.57116671470, 6.74933334146, 6.74933334146, 6.94049103957, 6.94049103957, 7.15511840135, 7.15511840135, 7.38776774905, 7.38776774905, 7.58045088187, 7.58045088187, 7.6653561762, 7.6653561762, 7.84190652697, 7.84190652697, 8.13003587307, 8.13003587307, 8.18259531496, 8.18259531496, 8.57377754207, 8.57377754207, 14.3760832238, 14.3760832238, 22.7556848936, 22.7556848936, 25.8296849375, 25.8296849375, 31.4018166909, 31.4018166909, 32.0305206104, 32.0305206104, 33.9550022386, 33.9550022386, 34.1501687839, 34.1501687839, 34.3563633980, 34.3563633980, 34.4722212831, 34.4722212831, 34.6674773687, 34.6674773687, 34.8686170300, 34.8686170300, 35.1396424486, 35.1396424486, 35.3302768082, 35.3302768082, 35.3882564130, 35.3882564130, 35.7103836170, 35.7103836170, 35.8247534865, 35.8247534865, 36.0822042822, 36.0822042822, 36.2544017244, 36.2544017244, 36.5117734619, 36.5117734619, 36.5797122834, 36.5797122834, 36.9212365462, 36.9212365462, 37.1996041643, 37.1996041643, 37.3147247223, 37.3147247223, 37.3492019873, 37.3492019873, 37.5999862372, 37.5999862372, 40.1892407863, 40.1892407863, 47.9564859936, 47.9564859936, 55.9518725126, 55.9518725126], 2, [1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995958184676, 1.0, 0.997250963801, 1.0, 0.998272772946, 1.0, 0.998433228349, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.394, -11.193, 0.000), (-11.388, -9.950, 0.000), (-11.381, -8.706, 0.000), (-11.376, -7.604, 0.000), (-11.370, -6.501, 0.000), (-11.367, -5.955, 0.000), (-11.364, -5.409, 0.000), (-11.364, -5.379, 0.000), (-11.369, -5.350, 0.000), (-11.381, -5.275, 0.000), (-11.401, -5.203, 0.000), (-11.465, -4.971, 0.000), (-11.582, -4.761, 0.000), (-11.602, -4.726, 0.000), (-11.623, -4.692, 0.000), (-11.691, -4.582, 0.000), (-11.755, -4.470, 0.000), (-11.771, -4.441, 0.000), (-11.788, -4.411, 0.000), (-11.851, -4.299, 0.000), (-11.918, -4.188, 0.000), (-11.962, -4.114, 0.000), (-12.010, -4.043, 0.000), (-12.082, -3.936, 0.000), (-12.174, -3.844, 0.000), (-12.237, -3.781, 0.000), (-12.307, -3.726, 0.000), (-12.382, -3.666, 0.000), (-12.470, -3.628, 0.000), (-12.570, -3.584, 0.000), (-12.678, -3.579, 0.000), (-12.796, -3.575, 0.000), (-12.906, -3.617, 0.000), (-12.997, -3.652, 0.000), (-13.074, -3.710, 0.000), (-13.109, -3.735, 0.000), (-13.140, -3.764, 0.000), (-13.206, -3.823, 0.000), (-13.255, -3.897, 0.000), (-13.337, -4.019, 0.000), (-13.350, -4.166, 0.000), (-13.353, -4.192, 0.000), (-13.353, -4.218, 0.000), (-13.359, -5.924, 0.000), (-13.365, -7.630, 0.000), (-13.372, -9.412, 0.000), (-13.378, -11.193, 0.000), (-13.370, -13.503, 0.000), (-13.363, -15.813, 0.000), (-13.363, -15.847, 0.000), (-13.363, -15.882, 0.000), (-13.358, -17.224, 0.000), (-13.353, -18.566, 0.000), (-13.352, -18.665, 0.000), (-13.320, -18.758, 0.000), (-13.285, -18.856, 0.000), (-13.219, -18.937, 0.000), (-13.183, -18.982, 0.000), (-13.140, -19.021, 0.000), (-13.068, -19.087, 0.000), (-12.981, -19.134, 0.000), (-12.892, -19.182, 0.000), (-12.792, -19.199, 0.000), (-12.655, -19.221, 0.000), (-12.524, -19.177, 0.000), (-12.433, -19.147, 0.000), (-12.354, -19.093, 0.000), (-12.330, -19.076, 0.000), (-12.307, -19.058, 0.000), (-12.180, -18.958, 0.000), (-12.078, -18.833, 0.000), (-12.042, -18.789, 0.000), (-12.010, -18.742, 0.000), (-11.938, -18.634, 0.000), (-11.874, -18.523, 0.000), (-11.831, -18.449, 0.000), (-11.788, -18.374, 0.000), (-11.725, -18.261, 0.000), (-11.659, -18.151, 0.000), (-11.641, -18.122, 0.000), (-11.623, -18.093, 0.000), (-11.535, -17.951, 0.000), (-11.476, -17.796, 0.000), (-11.420, -17.652, 0.000), (-11.389, -17.501, 0.000), (-11.378, -17.448, 0.000), (-11.373, -17.393, 0.000), (-11.372, -17.385, 0.000), (-11.372, -17.377, 0.000), (-11.370, -17.289, 0.000), (-11.371, -17.202, 0.000), (-11.372, -16.604, 0.000), (-11.373, -16.007, 0.000), (-11.381, -14.297, 0.000), (-11.388, -12.588, 0.000), (-11.391, -11.891, 0.000), (-11.394, -11.193, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.394, -11.193, 0.000)), rs.coerce3dpoint((-11.388, -9.950, 0.000)), rs.coerce3dpoint((-11.381, -8.706, 0.000)), rs.coerce3dpoint((-11.376, -7.604, 0.000)), rs.coerce3dpoint((-11.370, -6.501, 0.000)), rs.coerce3dpoint((-11.367, -5.955, 0.000)), rs.coerce3dpoint((-11.364, -5.409, 0.000)), rs.coerce3dpoint((-11.364, -5.379, 0.000)), rs.coerce3dpoint((-11.369, -5.350, 0.000)), rs.coerce3dpoint((-11.381, -5.275, 0.000)), rs.coerce3dpoint((-11.401, -5.203, 0.000)), rs.coerce3dpoint((-11.465, -4.971, 0.000)), rs.coerce3dpoint((-11.582, -4.761, 0.000)), rs.coerce3dpoint((-11.602, -4.726, 0.000)), rs.coerce3dpoint((-11.623, -4.692, 0.000)), rs.coerce3dpoint((-11.691, -4.582, 0.000)), rs.coerce3dpoint((-11.755, -4.470, 0.000)), rs.coerce3dpoint((-11.771, -4.441, 0.000)), rs.coerce3dpoint((-11.788, -4.411, 0.000)), rs.coerce3dpoint((-11.851, -4.299, 0.000)), rs.coerce3dpoint((-11.918, -4.188, 0.000)), rs.coerce3dpoint((-11.962, -4.114, 0.000)), rs.coerce3dpoint((-12.010, -4.043, 0.000)), rs.coerce3dpoint((-12.082, -3.936, 0.000)), rs.coerce3dpoint((-12.174, -3.844, 0.000)), rs.coerce3dpoint((-12.237, -3.781, 0.000)), rs.coerce3dpoint((-12.307, -3.726, 0.000)), rs.coerce3dpoint((-12.382, -3.666, 0.000)), rs.coerce3dpoint((-12.470, -3.628, 0.000)), rs.coerce3dpoint((-12.570, -3.584, 0.000)), rs.coerce3dpoint((-12.678, -3.579, 0.000)), rs.coerce3dpoint((-12.796, -3.575, 0.000)), rs.coerce3dpoint((-12.906, -3.617, 0.000)), rs.coerce3dpoint((-12.997, -3.652, 0.000)), rs.coerce3dpoint((-13.074, -3.710, 0.000)), rs.coerce3dpoint((-13.109, -3.735, 0.000)), rs.coerce3dpoint((-13.140, -3.764, 0.000)), rs.coerce3dpoint((-13.206, -3.823, 0.000)), rs.coerce3dpoint((-13.255, -3.897, 0.000)), rs.coerce3dpoint((-13.337, -4.019, 0.000)), rs.coerce3dpoint((-13.350, -4.166, 0.000)), rs.coerce3dpoint((-13.353, -4.192, 0.000)), rs.coerce3dpoint((-13.353, -4.218, 0.000)), rs.coerce3dpoint((-13.359, -5.924, 0.000)), rs.coerce3dpoint((-13.365, -7.630, 0.000)), rs.coerce3dpoint((-13.372, -9.412, 0.000)), rs.coerce3dpoint((-13.378, -11.193, 0.000)), rs.coerce3dpoint((-13.370, -13.503, 0.000)), rs.coerce3dpoint((-13.363, -15.813, 0.000)), rs.coerce3dpoint((-13.363, -15.847, 0.000)), rs.coerce3dpoint((-13.363, -15.882, 0.000)), rs.coerce3dpoint((-13.358, -17.224, 0.000)), rs.coerce3dpoint((-13.353, -18.566, 0.000)), rs.coerce3dpoint((-13.352, -18.665, 0.000)), rs.coerce3dpoint((-13.320, -18.758, 0.000)), rs.coerce3dpoint((-13.285, -18.856, 0.000)), rs.coerce3dpoint((-13.219, -18.937, 0.000)), rs.coerce3dpoint((-13.183, -18.982, 0.000)), rs.coerce3dpoint((-13.140, -19.021, 0.000)), rs.coerce3dpoint((-13.068, -19.087, 0.000)), rs.coerce3dpoint((-12.981, -19.134, 0.000)), rs.coerce3dpoint((-12.892, -19.182, 0.000)), rs.coerce3dpoint((-12.792, -19.199, 0.000)), rs.coerce3dpoint((-12.655, -19.221, 0.000)), rs.coerce3dpoint((-12.524, -19.177, 0.000)), rs.coerce3dpoint((-12.433, -19.147, 0.000)), rs.coerce3dpoint((-12.354, -19.093, 0.000)), rs.coerce3dpoint((-12.330, -19.076, 0.000)), rs.coerce3dpoint((-12.307, -19.058, 0.000)), rs.coerce3dpoint((-12.180, -18.958, 0.000)), rs.coerce3dpoint((-12.078, -18.833, 0.000)), rs.coerce3dpoint((-12.042, -18.789, 0.000)), rs.coerce3dpoint((-12.010, -18.742, 0.000)), rs.coerce3dpoint((-11.938, -18.634, 0.000)), rs.coerce3dpoint((-11.874, -18.523, 0.000)), rs.coerce3dpoint((-11.831, -18.449, 0.000)), rs.coerce3dpoint((-11.788, -18.374, 0.000)), rs.coerce3dpoint((-11.725, -18.261, 0.000)), rs.coerce3dpoint((-11.659, -18.151, 0.000)), rs.coerce3dpoint((-11.641, -18.122, 0.000)), rs.coerce3dpoint((-11.623, -18.093, 0.000)), rs.coerce3dpoint((-11.535, -17.951, 0.000)), rs.coerce3dpoint((-11.476, -17.796, 0.000)), rs.coerce3dpoint((-11.420, -17.652, 0.000)), rs.coerce3dpoint((-11.389, -17.501, 0.000)), rs.coerce3dpoint((-11.378, -17.448, 0.000)), rs.coerce3dpoint((-11.373, -17.393, 0.000)), rs.coerce3dpoint((-11.372, -17.385, 0.000)), rs.coerce3dpoint((-11.372, -17.377, 0.000)), rs.coerce3dpoint((-11.370, -17.289, 0.000)), rs.coerce3dpoint((-11.371, -17.202, 0.000)), rs.coerce3dpoint((-11.372, -16.604, 0.000)), rs.coerce3dpoint((-11.373, -16.007, 0.000)), rs.coerce3dpoint((-11.381, -14.297, 0.000)), rs.coerce3dpoint((-11.388, -12.588, 0.000)), rs.coerce3dpoint((-11.391, -11.891, 0.000)), rs.coerce3dpoint((-11.394, -11.193, 0.000))], [0.0, 0.0, 2.48716242471, 2.48716242471, 4.69238101909, 4.69238101909, 5.78437800100, 5.78437800100, 5.84366489949, 5.84366489949, 5.99426938340, 5.99426938340, 6.47349518978, 6.47349518978, 6.55385517380, 6.55385517380, 6.81115209802, 6.81115209802, 6.87916537320, 6.87916537320, 7.13696254416, 7.13696254416, 7.30881360682, 7.30881360682, 7.56715236894, 7.56715236894, 7.74531982620, 7.74531982620, 7.93647412810, 7.93647412810, 8.15109920861, 8.15109920861, 8.38374855631, 8.38374855631, 8.57643168913, 8.57643168913, 8.66134470937, 8.66134470937, 8.83788091695, 8.83788091695, 9.12601026305, 9.12601026305, 9.17856970495, 9.17856970495, 12.5907315868, 12.5907315868, 16.1536327147, 16.1536327147, 20.7728762963, 20.7728762963, 20.8421067477, 20.8421067477, 23.5267434857, 23.5267434857, 23.7219199253, 23.7219199253, 23.9281057754, 23.9281057754, 24.0439640506, 24.0439640506, 24.2392283060, 24.2392283060, 24.4403552097, 24.4403552097, 24.7113806284, 24.7113806284, 24.9020195049, 24.9020195049, 24.9599910467, 24.9599910467, 25.2821182508, 25.2821182508, 25.3964961544, 25.3964961544, 25.6539522245, 25.6539522245, 25.8261446894, 25.8261446894, 26.0835127980, 26.0835127980, 26.1514549004, 26.1514549004, 26.4839575125, 26.4839575125, 26.7913284328, 26.7913284328, 26.9004479629, 26.9004479629, 26.9166141622, 26.9166141622, 27.0923505130, 27.0923505130, 28.2869633206, 28.2869633206, 31.7060335186, 31.7060335186, 33.1006572114, 33.1006572114], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995497658408, 1.0, 0.996444651507, 1.0, 0.99838818003, 1.0, 1.0, 1.0, 0.999955820976, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.027, -57.269, 0.000), (0.032, -57.386, 0.000), (0.061, -57.499, 0.000), (0.088, -57.609, 0.000), (0.143, -57.709, 0.000), (0.215, -57.840, 0.000), (0.332, -57.933, 0.000), (0.428, -58.009, 0.000), (0.542, -58.052, 0.000), (0.646, -58.091, 0.000), (0.757, -58.105, 0.000), (0.780, -58.108, 0.000), (0.804, -58.110, 0.000), (0.975, -58.126, 0.000), (1.147, -58.125, 0.000), (1.325, -58.123, 0.000), (1.502, -58.111, 0.000), (1.559, -58.107, 0.000), (1.616, -58.103, 0.000), (1.717, -58.095, 0.000), (1.812, -58.061, 0.000), (1.954, -58.009, 0.000), (2.058, -57.900, 0.000), (2.130, -57.824, 0.000), (2.181, -57.731, 0.000), (2.219, -57.661, 0.000), (2.245, -57.586, 0.000), (2.265, -57.519, 0.000), (2.278, -57.450, 0.000), (2.296, -57.354, 0.000), (2.297, -57.257, 0.000), (2.306, -56.630, 0.000), (2.312, -56.003, 0.000), (2.328, -54.247, 0.000), (2.344, -52.490, 0.000), (2.350, -51.779, 0.000), (2.356, -51.067, 0.000), (2.364, -48.960, 0.000), (2.373, -46.853, 0.000), (2.374, -46.021, 0.000), (2.375, -45.189, 0.000), (2.375, -44.875, 0.000), (2.372, -44.562, 0.000), (2.371, -44.475, 0.000), (2.370, -44.388, 0.000), (2.368, -44.347, 0.000), (2.362, -44.306, 0.000), (2.347, -44.200, 0.000), (2.320, -44.096, 0.000), (2.257, -43.846, 0.000), (2.145, -43.614, 0.000), (2.094, -43.510, 0.000), (2.033, -43.412, 0.000), (1.868, -43.116, 0.000), (1.696, -42.824, 0.000), (1.576, -42.622, 0.000), (1.449, -42.425, 0.000), (1.354, -42.277, 0.000), (1.250, -42.135, 0.000), (1.232, -42.111, 0.000), (1.214, -42.086, 0.000), (1.153, -42.004, 0.000), (1.088, -41.927, 0.000), (1.034, -41.863, 0.000), (0.972, -41.806, 0.000), (0.948, -41.784, 0.000), (0.923, -41.762, 0.000), (0.896, -41.739, 0.000), (0.863, -41.724, 0.000), (0.808, -41.699, 0.000), (0.747, -41.689, 0.000), (0.629, -41.671, 0.000), (0.514, -41.700, 0.000), (0.494, -41.705, 0.000), (0.475, -41.711, 0.000), (0.390, -41.739, 0.000), (0.316, -41.788, 0.000), (0.222, -41.852, 0.000), (0.148, -41.937, 0.000), (0.047, -42.053, 0.000), (-0.009, -42.196, 0.000), (-0.045, -42.286, 0.000), (-0.057, -42.383, 0.000), (-0.062, -42.428, 0.000), (-0.060, -42.472, 0.000), (-0.039, -47.121, 0.000), (-0.018, -51.770, 0.000), (-0.018, -51.869, 0.000), (-0.017, -51.968, 0.000), (-0.012, -53.371, 0.000), (-0.007, -54.775, 0.000), (-0.003, -55.480, 0.000), (0.004, -56.185, 0.000), (0.008, -56.575, 0.000), (0.017, -56.965, 0.000), (0.021, -57.117, 0.000), (0.027, -57.269, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.027, -57.269, 0.000)), rs.coerce3dpoint((0.032, -57.386, 0.000)), rs.coerce3dpoint((0.061, -57.499, 0.000)), rs.coerce3dpoint((0.088, -57.609, 0.000)), rs.coerce3dpoint((0.143, -57.709, 0.000)), rs.coerce3dpoint((0.215, -57.840, 0.000)), rs.coerce3dpoint((0.332, -57.933, 0.000)), rs.coerce3dpoint((0.428, -58.009, 0.000)), rs.coerce3dpoint((0.542, -58.052, 0.000)), rs.coerce3dpoint((0.646, -58.091, 0.000)), rs.coerce3dpoint((0.757, -58.105, 0.000)), rs.coerce3dpoint((0.780, -58.108, 0.000)), rs.coerce3dpoint((0.804, -58.110, 0.000)), rs.coerce3dpoint((0.975, -58.126, 0.000)), rs.coerce3dpoint((1.147, -58.125, 0.000)), rs.coerce3dpoint((1.325, -58.123, 0.000)), rs.coerce3dpoint((1.502, -58.111, 0.000)), rs.coerce3dpoint((1.559, -58.107, 0.000)), rs.coerce3dpoint((1.616, -58.103, 0.000)), rs.coerce3dpoint((1.717, -58.095, 0.000)), rs.coerce3dpoint((1.812, -58.061, 0.000)), rs.coerce3dpoint((1.954, -58.009, 0.000)), rs.coerce3dpoint((2.058, -57.900, 0.000)), rs.coerce3dpoint((2.130, -57.824, 0.000)), rs.coerce3dpoint((2.181, -57.731, 0.000)), rs.coerce3dpoint((2.219, -57.661, 0.000)), rs.coerce3dpoint((2.245, -57.586, 0.000)), rs.coerce3dpoint((2.265, -57.519, 0.000)), rs.coerce3dpoint((2.278, -57.450, 0.000)), rs.coerce3dpoint((2.296, -57.354, 0.000)), rs.coerce3dpoint((2.297, -57.257, 0.000)), rs.coerce3dpoint((2.306, -56.630, 0.000)), rs.coerce3dpoint((2.312, -56.003, 0.000)), rs.coerce3dpoint((2.328, -54.247, 0.000)), rs.coerce3dpoint((2.344, -52.490, 0.000)), rs.coerce3dpoint((2.350, -51.779, 0.000)), rs.coerce3dpoint((2.356, -51.067, 0.000)), rs.coerce3dpoint((2.364, -48.960, 0.000)), rs.coerce3dpoint((2.373, -46.853, 0.000)), rs.coerce3dpoint((2.374, -46.021, 0.000)), rs.coerce3dpoint((2.375, -45.189, 0.000)), rs.coerce3dpoint((2.375, -44.875, 0.000)), rs.coerce3dpoint((2.372, -44.562, 0.000)), rs.coerce3dpoint((2.371, -44.475, 0.000)), rs.coerce3dpoint((2.370, -44.388, 0.000)), rs.coerce3dpoint((2.368, -44.347, 0.000)), rs.coerce3dpoint((2.362, -44.306, 0.000)), rs.coerce3dpoint((2.347, -44.200, 0.000)), rs.coerce3dpoint((2.320, -44.096, 0.000)), rs.coerce3dpoint((2.257, -43.846, 0.000)), rs.coerce3dpoint((2.145, -43.614, 0.000)), rs.coerce3dpoint((2.094, -43.510, 0.000)), rs.coerce3dpoint((2.033, -43.412, 0.000)), rs.coerce3dpoint((1.868, -43.116, 0.000)), rs.coerce3dpoint((1.696, -42.824, 0.000)), rs.coerce3dpoint((1.576, -42.622, 0.000)), rs.coerce3dpoint((1.449, -42.425, 0.000)), rs.coerce3dpoint((1.354, -42.277, 0.000)), rs.coerce3dpoint((1.250, -42.135, 0.000)), rs.coerce3dpoint((1.232, -42.111, 0.000)), rs.coerce3dpoint((1.214, -42.086, 0.000)), rs.coerce3dpoint((1.153, -42.004, 0.000)), rs.coerce3dpoint((1.088, -41.927, 0.000)), rs.coerce3dpoint((1.034, -41.863, 0.000)), rs.coerce3dpoint((0.972, -41.806, 0.000)), rs.coerce3dpoint((0.948, -41.784, 0.000)), rs.coerce3dpoint((0.923, -41.762, 0.000)), rs.coerce3dpoint((0.896, -41.739, 0.000)), rs.coerce3dpoint((0.863, -41.724, 0.000)), rs.coerce3dpoint((0.808, -41.699, 0.000)), rs.coerce3dpoint((0.747, -41.689, 0.000)), rs.coerce3dpoint((0.629, -41.671, 0.000)), rs.coerce3dpoint((0.514, -41.700, 0.000)), rs.coerce3dpoint((0.494, -41.705, 0.000)), rs.coerce3dpoint((0.475, -41.711, 0.000)), rs.coerce3dpoint((0.390, -41.739, 0.000)), rs.coerce3dpoint((0.316, -41.788, 0.000)), rs.coerce3dpoint((0.222, -41.852, 0.000)), rs.coerce3dpoint((0.148, -41.937, 0.000)), rs.coerce3dpoint((0.047, -42.053, 0.000)), rs.coerce3dpoint((-0.009, -42.196, 0.000)), rs.coerce3dpoint((-0.045, -42.286, 0.000)), rs.coerce3dpoint((-0.057, -42.383, 0.000)), rs.coerce3dpoint((-0.062, -42.428, 0.000)), rs.coerce3dpoint((-0.060, -42.472, 0.000)), rs.coerce3dpoint((-0.039, -47.121, 0.000)), rs.coerce3dpoint((-0.018, -51.770, 0.000)), rs.coerce3dpoint((-0.018, -51.869, 0.000)), rs.coerce3dpoint((-0.017, -51.968, 0.000)), rs.coerce3dpoint((-0.012, -53.371, 0.000)), rs.coerce3dpoint((-0.007, -54.775, 0.000)), rs.coerce3dpoint((-0.003, -55.480, 0.000)), rs.coerce3dpoint((0.004, -56.185, 0.000)), rs.coerce3dpoint((0.008, -56.575, 0.000)), rs.coerce3dpoint((0.017, -56.965, 0.000)), rs.coerce3dpoint((0.021, -57.117, 0.000)), rs.coerce3dpoint((0.027, -57.269, 0.000))], [0.0, 0.0, 0.233260544241, 0.233260544241, 0.458661526165, 0.458661526165, 0.754472508618, 0.754472508618, 0.996391658387, 0.996391658387, 1.21840579436, 1.21840579436, 1.26553715239, 1.26553715239, 1.60959247810, 1.60959247810, 1.96457305779, 1.96457305779, 2.0788954407, 2.0788954407, 2.27961995257, 2.27961995257, 2.57663824085, 2.57663824085, 2.78549276903, 2.78549276903, 2.94490749698, 2.94490749698, 3.08518237266, 3.08518237266, 3.27921928084, 3.27921928084, 4.53269204225, 4.53269204225, 8.04596768714, 8.04596768714, 9.46899727742, 9.46899727742, 13.6834913224, 13.6834913224, 15.3469729402, 15.3469729402, 15.9744823784, 15.9744823784, 16.1484692664, 16.1484692664, 16.2303144032, 16.2303144032, 16.4444854406, 16.4444854406, 16.9588434642, 16.9588434642, 17.1901717427, 17.1901717427, 17.8673211490, 17.8673211490, 18.3368921346, 18.3368921346, 18.6881554270, 18.6881554270, 18.7496707145, 18.7496707145, 18.9525317099, 18.9525317099, 19.1196530482, 19.1196530482, 19.1855205431, 19.1855205431, 19.2563906309, 19.2563906309, 19.3781925250, 19.3781925250, 19.6135652085, 19.6135652085, 19.6536734333, 19.6536734333, 19.8315147943, 19.8315147943, 20.0565084422, 20.0565084422, 20.3604242251, 20.3604242251, 20.5545695477, 20.5545695477, 20.6437390158, 20.6437390158, 29.9412423507, 29.9412423507, 30.1390635195, 30.1390635195, 32.9459648001, 32.9459648001, 34.3565070464, 34.3565070464, 35.1364737388, 35.1364737388, 35.4406452396, 35.4406452396], 2, [1.0, 0.994872200956, 1.0, 0.991967887486, 1.0, 0.980276368162, 1.0, 0.988089830964, 1.0, 0.993523043631, 1.0, 0.999791941646, 1.0, 0.998790411994, 1.0, 0.999519615412, 1.0, 0.999982000162, 1.0, 0.990604961668, 1.0, 0.974074168098, 1.0, 0.991273363959, 1.0, 0.99678914309, 1.0, 0.998839054289, 1.0, 0.996528256979, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999996620006, 1.0, 0.998410783808, 1.0, 0.998510530087, 1.0, 0.994831769902, 1.0, 0.99860705083, 1.0, 0.999899185082, 1.0, 0.999811837704, 1.0, 0.999608076817, 1.0, 1.0, 1.0, 0.999481714345, 1.0, 0.99821357708, 1.0, 0.99991550357, 1.0, 0.990330793874, 1.0, 0.990713540313, 1.0, 0.979525980531, 1.0, 0.999468761145, 1.0, 0.990468363575, 1.0, 0.990902055423, 1.0, 0.985854046718, 1.0, 0.991273363959, 1.0, 0.997206387593, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.999978220237, 1.0, 0.9999755003, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-0.583, 36.844, 0.000), (-0.582, 37.278, 0.000), (-0.581, 37.711, 0.000), (-0.577, 39.627, 0.000), (-0.573, 41.544, 0.000), (-0.571, 42.259, 0.000), (-0.573, 42.975, 0.000), (-0.574, 43.278, 0.000), (-0.578, 43.580, 0.000), (-0.580, 43.716, 0.000), (-0.586, 43.851, 0.000), (-0.588, 43.918, 0.000), (-0.595, 43.984, 0.000), (-0.600, 44.031, 0.000), (-0.611, 44.078, 0.000), (-0.624, 44.136, 0.000), (-0.648, 44.190, 0.000), (-0.673, 44.249, 0.000), (-0.704, 44.304, 0.000), (-0.757, 44.400, 0.000), (-0.815, 44.492, 0.000), (-0.822, 44.504, 0.000), (-0.829, 44.515, 0.000), (-0.918, 44.659, 0.000), (-1.004, 44.805, 0.000), (-1.258, 45.234, 0.000), (-1.508, 45.665, 0.000), (-2.040, 46.581, 0.000), (-2.571, 47.497, 0.000), (-3.775, 49.573, 0.000), (-4.979, 51.650, 0.000), (-5.362, 52.308, 0.000), (-5.746, 52.967, 0.000), (-5.882, 53.200, 0.000), (-6.021, 53.432, 0.000), (-6.071, 53.516, 0.000), (-6.123, 53.598, 0.000), (-6.144, 53.631, 0.000), (-6.168, 53.662, 0.000), (-6.177, 53.674, 0.000), (-6.186, 53.684, 0.000), (-6.245, 53.753, 0.000), (-6.315, 53.811, 0.000), (-6.381, 53.866, 0.000), (-6.457, 53.903, 0.000), (-6.571, 53.959, 0.000), (-6.698, 53.960, 0.000), (-6.736, 53.960, 0.000), (-6.774, 53.955, 0.000), (-6.914, 53.939, 0.000), (-7.038, 53.874, 0.000), (-7.236, 53.768, 0.000), (-7.338, 53.568, 0.000), (-7.402, 53.440, 0.000), (-7.416, 53.297, 0.000), (-7.418, 53.278, 0.000), (-7.419, 53.260, 0.000), (-7.421, 53.208, 0.000), (-7.421, 53.156, 0.000), (-7.424, 52.752, 0.000), (-7.424, 52.347, 0.000), (-7.425, 50.724, 0.000), (-7.425, 49.101, 0.000), (-7.425, 48.738, 0.000), (-7.426, 48.375, 0.000), (-7.426, 48.327, 0.000), (-7.426, 48.280, 0.000), (-7.426, 47.825, 0.000), (-7.426, 47.371, 0.000), (-7.425, 44.839, 0.000), (-7.425, 42.307, 0.000), (-7.423, 41.392, 0.000), (-7.421, 40.476, 0.000), (-7.420, 40.099, 0.000), (-7.415, 39.722, 0.000), (-7.413, 39.562, 0.000), (-7.407, 39.403, 0.000), (-7.405, 39.329, 0.000), (-7.399, 39.255, 0.000), (-7.394, 39.208, 0.000), (-7.386, 39.161, 0.000), (-7.378, 39.116, 0.000), (-7.361, 39.075, 0.000), (-7.340, 39.026, 0.000), (-7.315, 38.979, 0.000), (-7.269, 38.892, 0.000), (-7.219, 38.807, 0.000), (-7.209, 38.790, 0.000), (-7.199, 38.773, 0.000), (-7.087, 38.580, 0.000), (-6.976, 38.388, 0.000), (-4.781, 34.597, 0.000), (-2.586, 30.806, 0.000), (-2.310, 30.331, 0.000), (-2.034, 29.856, 0.000), (-1.996, 29.789, 0.000), (-1.955, 29.722, 0.000), (-1.951, 29.715, 0.000), (-1.946, 29.708, 0.000), (-1.930, 29.681, 0.000), (-1.910, 29.657, 0.000), (-1.870, 29.610, 0.000), (-1.829, 29.565, 0.000), (-1.727, 29.455, 0.000), (-1.599, 29.377, 0.000), (-1.574, 29.362, 0.000), (-1.549, 29.349, 0.000), (-1.452, 29.298, 0.000), (-1.344, 29.276, 0.000), (-1.223, 29.252, 0.000), (-1.101, 29.274, 0.000), (-0.890, 29.314, 0.000), (-0.753, 29.480, 0.000), (-0.676, 29.574, 0.000), (-0.637, 29.688, 0.000), (-0.606, 29.780, 0.000), (-0.599, 29.877, 0.000), (-0.590, 29.978, 0.000), (-0.586, 30.079, 0.000), (-0.583, 30.201, 0.000), (-0.582, 30.324, 0.000), (-0.581, 30.532, 0.000), (-0.581, 30.740, 0.000), (-0.582, 32.487, 0.000), (-0.582, 34.235, 0.000), (-0.582, 34.366, 0.000), (-0.582, 34.497, 0.000), (-0.583, 35.671, 0.000), (-0.583, 36.844, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-0.583, 36.844, 0.000)), rs.coerce3dpoint((-0.582, 37.278, 0.000)), rs.coerce3dpoint((-0.581, 37.711, 0.000)), rs.coerce3dpoint((-0.577, 39.627, 0.000)), rs.coerce3dpoint((-0.573, 41.544, 0.000)), rs.coerce3dpoint((-0.571, 42.259, 0.000)), rs.coerce3dpoint((-0.573, 42.975, 0.000)), rs.coerce3dpoint((-0.574, 43.278, 0.000)), rs.coerce3dpoint((-0.578, 43.580, 0.000)), rs.coerce3dpoint((-0.580, 43.716, 0.000)), rs.coerce3dpoint((-0.586, 43.851, 0.000)), rs.coerce3dpoint((-0.588, 43.918, 0.000)), rs.coerce3dpoint((-0.595, 43.984, 0.000)), rs.coerce3dpoint((-0.600, 44.031, 0.000)), rs.coerce3dpoint((-0.611, 44.078, 0.000)), rs.coerce3dpoint((-0.624, 44.136, 0.000)), rs.coerce3dpoint((-0.648, 44.190, 0.000)), rs.coerce3dpoint((-0.673, 44.249, 0.000)), rs.coerce3dpoint((-0.704, 44.304, 0.000)), rs.coerce3dpoint((-0.757, 44.400, 0.000)), rs.coerce3dpoint((-0.815, 44.492, 0.000)), rs.coerce3dpoint((-0.822, 44.504, 0.000)), rs.coerce3dpoint((-0.829, 44.515, 0.000)), rs.coerce3dpoint((-0.918, 44.659, 0.000)), rs.coerce3dpoint((-1.004, 44.805, 0.000)), rs.coerce3dpoint((-1.258, 45.234, 0.000)), rs.coerce3dpoint((-1.508, 45.665, 0.000)), rs.coerce3dpoint((-2.040, 46.581, 0.000)), rs.coerce3dpoint((-2.571, 47.497, 0.000)), rs.coerce3dpoint((-3.775, 49.573, 0.000)), rs.coerce3dpoint((-4.979, 51.650, 0.000)), rs.coerce3dpoint((-5.362, 52.308, 0.000)), rs.coerce3dpoint((-5.746, 52.967, 0.000)), rs.coerce3dpoint((-5.882, 53.200, 0.000)), rs.coerce3dpoint((-6.021, 53.432, 0.000)), rs.coerce3dpoint((-6.071, 53.516, 0.000)), rs.coerce3dpoint((-6.123, 53.598, 0.000)), rs.coerce3dpoint((-6.144, 53.631, 0.000)), rs.coerce3dpoint((-6.168, 53.662, 0.000)), rs.coerce3dpoint((-6.177, 53.674, 0.000)), rs.coerce3dpoint((-6.186, 53.684, 0.000)), rs.coerce3dpoint((-6.245, 53.753, 0.000)), rs.coerce3dpoint((-6.315, 53.811, 0.000)), rs.coerce3dpoint((-6.381, 53.866, 0.000)), rs.coerce3dpoint((-6.457, 53.903, 0.000)), rs.coerce3dpoint((-6.571, 53.959, 0.000)), rs.coerce3dpoint((-6.698, 53.960, 0.000)), rs.coerce3dpoint((-6.736, 53.960, 0.000)), rs.coerce3dpoint((-6.774, 53.955, 0.000)), rs.coerce3dpoint((-6.914, 53.939, 0.000)), rs.coerce3dpoint((-7.038, 53.874, 0.000)), rs.coerce3dpoint((-7.236, 53.768, 0.000)), rs.coerce3dpoint((-7.338, 53.568, 0.000)), rs.coerce3dpoint((-7.402, 53.440, 0.000)), rs.coerce3dpoint((-7.416, 53.297, 0.000)), rs.coerce3dpoint((-7.418, 53.278, 0.000)), rs.coerce3dpoint((-7.419, 53.260, 0.000)), rs.coerce3dpoint((-7.421, 53.208, 0.000)), rs.coerce3dpoint((-7.421, 53.156, 0.000)), rs.coerce3dpoint((-7.424, 52.752, 0.000)), rs.coerce3dpoint((-7.424, 52.347, 0.000)), rs.coerce3dpoint((-7.425, 50.724, 0.000)), rs.coerce3dpoint((-7.425, 49.101, 0.000)), rs.coerce3dpoint((-7.425, 48.738, 0.000)), rs.coerce3dpoint((-7.426, 48.375, 0.000)), rs.coerce3dpoint((-7.426, 48.327, 0.000)), rs.coerce3dpoint((-7.426, 48.280, 0.000)), rs.coerce3dpoint((-7.426, 47.825, 0.000)), rs.coerce3dpoint((-7.426, 47.371, 0.000)), rs.coerce3dpoint((-7.425, 44.839, 0.000)), rs.coerce3dpoint((-7.425, 42.307, 0.000)), rs.coerce3dpoint((-7.423, 41.392, 0.000)), rs.coerce3dpoint((-7.421, 40.476, 0.000)), rs.coerce3dpoint((-7.420, 40.099, 0.000)), rs.coerce3dpoint((-7.415, 39.722, 0.000)), rs.coerce3dpoint((-7.413, 39.562, 0.000)), rs.coerce3dpoint((-7.407, 39.403, 0.000)), rs.coerce3dpoint((-7.405, 39.329, 0.000)), rs.coerce3dpoint((-7.399, 39.255, 0.000)), rs.coerce3dpoint((-7.394, 39.208, 0.000)), rs.coerce3dpoint((-7.386, 39.161, 0.000)), rs.coerce3dpoint((-7.378, 39.116, 0.000)), rs.coerce3dpoint((-7.361, 39.075, 0.000)), rs.coerce3dpoint((-7.340, 39.026, 0.000)), rs.coerce3dpoint((-7.315, 38.979, 0.000)), rs.coerce3dpoint((-7.269, 38.892, 0.000)), rs.coerce3dpoint((-7.219, 38.807, 0.000)), rs.coerce3dpoint((-7.209, 38.790, 0.000)), rs.coerce3dpoint((-7.199, 38.773, 0.000)), rs.coerce3dpoint((-7.087, 38.580, 0.000)), rs.coerce3dpoint((-6.976, 38.388, 0.000)), rs.coerce3dpoint((-4.781, 34.597, 0.000)), rs.coerce3dpoint((-2.586, 30.806, 0.000)), rs.coerce3dpoint((-2.310, 30.331, 0.000)), rs.coerce3dpoint((-2.034, 29.856, 0.000)), rs.coerce3dpoint((-1.996, 29.789, 0.000)), rs.coerce3dpoint((-1.955, 29.722, 0.000)), rs.coerce3dpoint((-1.951, 29.715, 0.000)), rs.coerce3dpoint((-1.946, 29.708, 0.000)), rs.coerce3dpoint((-1.930, 29.681, 0.000)), rs.coerce3dpoint((-1.910, 29.657, 0.000)), rs.coerce3dpoint((-1.870, 29.610, 0.000)), rs.coerce3dpoint((-1.829, 29.565, 0.000)), rs.coerce3dpoint((-1.727, 29.455, 0.000)), rs.coerce3dpoint((-1.599, 29.377, 0.000)), rs.coerce3dpoint((-1.574, 29.362, 0.000)), rs.coerce3dpoint((-1.549, 29.349, 0.000)), rs.coerce3dpoint((-1.452, 29.298, 0.000)), rs.coerce3dpoint((-1.344, 29.276, 0.000)), rs.coerce3dpoint((-1.223, 29.252, 0.000)), rs.coerce3dpoint((-1.101, 29.274, 0.000)), rs.coerce3dpoint((-0.890, 29.314, 0.000)), rs.coerce3dpoint((-0.753, 29.480, 0.000)), rs.coerce3dpoint((-0.676, 29.574, 0.000)), rs.coerce3dpoint((-0.637, 29.688, 0.000)), rs.coerce3dpoint((-0.606, 29.780, 0.000)), rs.coerce3dpoint((-0.599, 29.877, 0.000)), rs.coerce3dpoint((-0.590, 29.978, 0.000)), rs.coerce3dpoint((-0.586, 30.079, 0.000)), rs.coerce3dpoint((-0.583, 30.201, 0.000)), rs.coerce3dpoint((-0.582, 30.324, 0.000)), rs.coerce3dpoint((-0.581, 30.532, 0.000)), rs.coerce3dpoint((-0.581, 30.740, 0.000)), rs.coerce3dpoint((-0.582, 32.487, 0.000)), rs.coerce3dpoint((-0.582, 34.235, 0.000)), rs.coerce3dpoint((-0.582, 34.366, 0.000)), rs.coerce3dpoint((-0.582, 34.497, 0.000)), rs.coerce3dpoint((-0.583, 35.671, 0.000)), rs.coerce3dpoint((-0.583, 36.844, 0.000))], [0.0, 0.0, 0.866752617187, 0.866752617187, 4.69908180118, 4.69908180118, 6.13082327375, 6.13082327375, 6.73547773837, 6.73547773837, 7.00683077263, 7.00683077263, 7.13991009998, 7.13991009998, 7.23539092704, 7.23539092704, 7.35390446858, 7.35390446858, 7.48100120562, 7.48100120562, 7.69938519958, 7.69938519958, 7.72618110412, 7.72618110412, 8.06447086047, 8.06447086047, 9.06214488078, 9.06214488078, 11.1795095099, 11.1795095099, 15.9802147618, 15.9802147618, 17.5040421226, 17.5040421226, 18.0445358101, 18.0445358101, 18.2389798758, 18.2389798758, 18.3177400007, 18.3177400007, 18.3464691729, 18.3464691729, 18.5272131256, 18.5272131256, 18.6972971531, 18.6972971531, 18.9466901381, 18.9466901381, 19.0231607114, 19.0231607114, 19.3005751311, 19.3005751311, 19.7357686401, 19.7357686401, 20.0194071155, 20.0194071155, 20.0566237315, 20.0566237315, 20.1598910669, 20.1598910669, 20.9692370723, 20.9692370723, 24.2150875122, 24.2150875122, 24.9410775123, 24.9410775123, 25.0368675123, 25.0368675123, 25.9458775123, 25.9458775123, 31.0089276033, 31.0089276033, 32.8406414624, 32.8406414624, 33.5941683238, 33.5941683238, 33.9138202230, 33.9138202230, 34.0617745613, 34.0617745613, 34.1570687689, 34.1570687689, 34.2466149906, 34.2466149906, 34.3521763310, 34.3521763310, 34.5501511182, 34.5501511182, 34.5895968202, 34.5895968202, 35.0341207545, 35.0341207545, 43.7950310038, 43.7950310038, 44.8942037095, 44.8942037095, 45.0492492810, 45.0492492810, 45.0664149444, 45.0664149444, 45.1292527191, 45.1292527191, 45.2512230421, 45.2512230421, 45.5495523549, 45.5495523549, 45.6065807473, 45.6065807473, 45.8253708069, 45.8253708069, 46.0694487521, 46.0694487521, 46.4822284905, 46.4822284905, 46.7212463380, 46.7212463380, 46.9144432376, 46.9144432376, 47.1167439584, 47.1167439584, 47.3621012920, 47.3621012920, 47.7782929661, 47.7782929661, 51.2729230322, 51.2729230322, 51.5349130645, 51.5349130645, 53.8826132220, 53.8826132220], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999997120004, 1.0, 0.999980780185, 1.0, 0.999893425679, 1.0, 0.999475257713, 1.0, 0.998225495831, 1.0, 0.994544342805, 1.0, 0.998979001485, 1.0, 0.999662057112, 1.0, 1.0, 1.0, 0.999957680895, 1.0, 0.999993520021, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999984320123, 1.0, 0.99988142703, 1.0, 0.999093031483, 1.0, 0.999602459035, 1.0, 0.996343019004, 1.0, 0.992968091106, 1.0, 0.975353728814, 1.0, 0.99799223758, 1.0, 0.982813743766, 1.0, 0.953018175246, 1.0, 0.983286369773, 1.0, 0.999753610358, 1.0, 0.999893425679, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999935022111, 1.0, 0.999640944472, 1.0, 0.998760748348, 1.0, 0.993523043631, 1.0, 0.998905479316, 1.0, 0.99968754882, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999951981153, 1.0, 1.0, 1.0, 0.997206387593, 1.0, 0.999646282569, 1.0, 0.99019225297, 1.0, 0.999507141485, 1.0, 0.989656947428, 1.0, 0.981924354407, 1.0, 0.940240119267, 1.0, 0.983609809034, 1.0, 0.992267432338, 1.0, 0.999635566418, 1.0, 0.999912883795, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.836, 53.656, 0.000), (5.689, 53.650, 0.000), (5.555, 53.591, 0.000), (5.511, 53.572, 0.000), (5.470, 53.547, 0.000), (5.345, 53.470, 0.000), (5.246, 53.363, 0.000), (5.163, 53.274, 0.000), (5.097, 53.171, 0.000), (5.058, 53.112, 0.000), (5.024, 53.049, 0.000), (4.592, 52.289, 0.000), (4.154, 51.533, 0.000), (3.927, 51.143, 0.000), (3.699, 50.753, 0.000), (3.589, 50.567, 0.000), (3.480, 50.380, 0.000), (2.893, 49.376, 0.000), (2.306, 48.372, 0.000), (1.607, 47.167, 0.000), (0.908, 45.962, 0.000), (0.749, 45.687, 0.000), (0.591, 45.412, 0.000), (0.542, 45.326, 0.000), (0.499, 45.237, 0.000), (0.477, 45.193, 0.000), (0.456, 45.149, 0.000), (0.443, 45.121, 0.000), (0.429, 45.093, 0.000), (0.385, 45.002, 0.000), (0.362, 44.903, 0.000), (0.332, 44.776, 0.000), (0.349, 44.646, 0.000), (0.364, 44.538, 0.000), (0.410, 44.438, 0.000), (0.426, 44.403, 0.000), (0.445, 44.369, 0.000), (0.459, 44.344, 0.000), (0.472, 44.319, 0.000), (0.633, 44.030, 0.000), (0.796, 43.742, 0.000), (0.805, 43.726, 0.000), (0.815, 43.710, 0.000), (1.072, 43.260, 0.000), (1.329, 42.811, 0.000), (2.018, 41.609, 0.000), (2.706, 40.407, 0.000), (2.829, 40.194, 0.000), (2.951, 39.982, 0.000), (4.024, 38.121, 0.000), (5.107, 36.266, 0.000), (5.164, 36.169, 0.000), (5.230, 36.078, 0.000), (5.289, 35.995, 0.000), (5.360, 35.922, 0.000), (5.377, 35.905, 0.000), (5.395, 35.889, 0.000), (5.469, 35.820, 0.000), (5.555, 35.768, 0.000), (5.632, 35.721, 0.000), (5.719, 35.695, 0.000), (5.818, 35.666, 0.000), (5.921, 35.674, 0.000), (6.022, 35.682, 0.000), (6.114, 35.726, 0.000), (6.193, 35.763, 0.000), (6.261, 35.819, 0.000), (6.291, 35.843, 0.000), (6.319, 35.870, 0.000), (6.430, 35.978, 0.000), (6.525, 36.101, 0.000), (6.625, 36.229, 0.000), (6.710, 36.366, 0.000), (7.313, 37.424, 0.000), (7.922, 38.478, 0.000), (8.173, 38.911, 0.000), (8.424, 39.343, 0.000), (8.510, 39.491, 0.000), (8.596, 39.639, 0.000), (8.617, 39.675, 0.000), (8.638, 39.711, 0.000), (9.875, 41.843, 0.000), (11.112, 43.975, 0.000), (11.165, 44.067, 0.000), (11.211, 44.162, 0.000), (11.237, 44.216, 0.000), (11.263, 44.270, 0.000), (11.277, 44.300, 0.000), (11.292, 44.330, 0.000), (11.335, 44.420, 0.000), (11.357, 44.517, 0.000), (11.397, 44.696, 0.000), (11.344, 44.871, 0.000), (11.315, 44.967, 0.000), (11.265, 45.053, 0.000), (11.173, 45.213, 0.000), (11.082, 45.373, 0.000), (10.849, 45.783, 0.000), (10.613, 46.193, 0.000), (10.467, 46.449, 0.000), (10.320, 46.704, 0.000), (9.690, 47.799, 0.000), (9.060, 48.894, 0.000), (9.034, 48.940, 0.000), (9.007, 48.986, 0.000), (8.490, 49.875, 0.000), (7.973, 50.765, 0.000), (7.925, 50.846, 0.000), (7.877, 50.927, 0.000), (7.621, 51.366, 0.000), (7.365, 51.805, 0.000), (7.329, 51.869, 0.000), (7.292, 51.932, 0.000), (7.093, 52.274, 0.000), (6.894, 52.616, 0.000), (6.765, 52.837, 0.000), (6.635, 53.057, 0.000), (6.588, 53.136, 0.000), (6.538, 53.214, 0.000), (6.512, 53.255, 0.000), (6.484, 53.294, 0.000), (6.428, 53.371, 0.000), (6.364, 53.440, 0.000), (6.314, 53.494, 0.000), (6.257, 53.539, 0.000), (6.226, 53.563, 0.000), (6.192, 53.583, 0.000), (6.131, 53.617, 0.000), (6.063, 53.635, 0.000), (5.951, 53.664, 0.000), (5.836, 53.656, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.836, 53.656, 0.000)), rs.coerce3dpoint((5.689, 53.650, 0.000)), rs.coerce3dpoint((5.555, 53.591, 0.000)), rs.coerce3dpoint((5.511, 53.572, 0.000)), rs.coerce3dpoint((5.470, 53.547, 0.000)), rs.coerce3dpoint((5.345, 53.470, 0.000)), rs.coerce3dpoint((5.246, 53.363, 0.000)), rs.coerce3dpoint((5.163, 53.274, 0.000)), rs.coerce3dpoint((5.097, 53.171, 0.000)), rs.coerce3dpoint((5.058, 53.112, 0.000)), rs.coerce3dpoint((5.024, 53.049, 0.000)), rs.coerce3dpoint((4.592, 52.289, 0.000)), rs.coerce3dpoint((4.154, 51.533, 0.000)), rs.coerce3dpoint((3.927, 51.143, 0.000)), rs.coerce3dpoint((3.699, 50.753, 0.000)), rs.coerce3dpoint((3.589, 50.567, 0.000)), rs.coerce3dpoint((3.480, 50.380, 0.000)), rs.coerce3dpoint((2.893, 49.376, 0.000)), rs.coerce3dpoint((2.306, 48.372, 0.000)), rs.coerce3dpoint((1.607, 47.167, 0.000)), rs.coerce3dpoint((0.908, 45.962, 0.000)), rs.coerce3dpoint((0.749, 45.687, 0.000)), rs.coerce3dpoint((0.591, 45.412, 0.000)), rs.coerce3dpoint((0.542, 45.326, 0.000)), rs.coerce3dpoint((0.499, 45.237, 0.000)), rs.coerce3dpoint((0.477, 45.193, 0.000)), rs.coerce3dpoint((0.456, 45.149, 0.000)), rs.coerce3dpoint((0.443, 45.121, 0.000)), rs.coerce3dpoint((0.429, 45.093, 0.000)), rs.coerce3dpoint((0.385, 45.002, 0.000)), rs.coerce3dpoint((0.362, 44.903, 0.000)), rs.coerce3dpoint((0.332, 44.776, 0.000)), rs.coerce3dpoint((0.349, 44.646, 0.000)), rs.coerce3dpoint((0.364, 44.538, 0.000)), rs.coerce3dpoint((0.410, 44.438, 0.000)), rs.coerce3dpoint((0.426, 44.403, 0.000)), rs.coerce3dpoint((0.445, 44.369, 0.000)), rs.coerce3dpoint((0.459, 44.344, 0.000)), rs.coerce3dpoint((0.472, 44.319, 0.000)), rs.coerce3dpoint((0.633, 44.030, 0.000)), rs.coerce3dpoint((0.796, 43.742, 0.000)), rs.coerce3dpoint((0.805, 43.726, 0.000)), rs.coerce3dpoint((0.815, 43.710, 0.000)), rs.coerce3dpoint((1.072, 43.260, 0.000)), rs.coerce3dpoint((1.329, 42.811, 0.000)), rs.coerce3dpoint((2.018, 41.609, 0.000)), rs.coerce3dpoint((2.706, 40.407, 0.000)), rs.coerce3dpoint((2.829, 40.194, 0.000)), rs.coerce3dpoint((2.951, 39.982, 0.000)), rs.coerce3dpoint((4.024, 38.121, 0.000)), rs.coerce3dpoint((5.107, 36.266, 0.000)), rs.coerce3dpoint((5.164, 36.169, 0.000)), rs.coerce3dpoint((5.230, 36.078, 0.000)), rs.coerce3dpoint((5.289, 35.995, 0.000)), rs.coerce3dpoint((5.360, 35.922, 0.000)), rs.coerce3dpoint((5.377, 35.905, 0.000)), rs.coerce3dpoint((5.395, 35.889, 0.000)), rs.coerce3dpoint((5.469, 35.820, 0.000)), rs.coerce3dpoint((5.555, 35.768, 0.000)), rs.coerce3dpoint((5.632, 35.721, 0.000)), rs.coerce3dpoint((5.719, 35.695, 0.000)), rs.coerce3dpoint((5.818, 35.666, 0.000)), rs.coerce3dpoint((5.921, 35.674, 0.000)), rs.coerce3dpoint((6.022, 35.682, 0.000)), rs.coerce3dpoint((6.114, 35.726, 0.000)), rs.coerce3dpoint((6.193, 35.763, 0.000)), rs.coerce3dpoint((6.261, 35.819, 0.000)), rs.coerce3dpoint((6.291, 35.843, 0.000)), rs.coerce3dpoint((6.319, 35.870, 0.000)), rs.coerce3dpoint((6.430, 35.978, 0.000)), rs.coerce3dpoint((6.525, 36.101, 0.000)), rs.coerce3dpoint((6.625, 36.229, 0.000)), rs.coerce3dpoint((6.710, 36.366, 0.000)), rs.coerce3dpoint((7.313, 37.424, 0.000)), rs.coerce3dpoint((7.922, 38.478, 0.000)), rs.coerce3dpoint((8.173, 38.911, 0.000)), rs.coerce3dpoint((8.424, 39.343, 0.000)), rs.coerce3dpoint((8.510, 39.491, 0.000)), rs.coerce3dpoint((8.596, 39.639, 0.000)), rs.coerce3dpoint((8.617, 39.675, 0.000)), rs.coerce3dpoint((8.638, 39.711, 0.000)), rs.coerce3dpoint((9.875, 41.843, 0.000)), rs.coerce3dpoint((11.112, 43.975, 0.000)), rs.coerce3dpoint((11.165, 44.067, 0.000)), rs.coerce3dpoint((11.211, 44.162, 0.000)), rs.coerce3dpoint((11.237, 44.216, 0.000)), rs.coerce3dpoint((11.263, 44.270, 0.000)), rs.coerce3dpoint((11.277, 44.300, 0.000)), rs.coerce3dpoint((11.292, 44.330, 0.000)), rs.coerce3dpoint((11.335, 44.420, 0.000)), rs.coerce3dpoint((11.357, 44.517, 0.000)), rs.coerce3dpoint((11.397, 44.696, 0.000)), rs.coerce3dpoint((11.344, 44.871, 0.000)), rs.coerce3dpoint((11.315, 44.967, 0.000)), rs.coerce3dpoint((11.265, 45.053, 0.000)), rs.coerce3dpoint((11.173, 45.213, 0.000)), rs.coerce3dpoint((11.082, 45.373, 0.000)), rs.coerce3dpoint((10.849, 45.783, 0.000)), rs.coerce3dpoint((10.613, 46.193, 0.000)), rs.coerce3dpoint((10.467, 46.449, 0.000)), rs.coerce3dpoint((10.320, 46.704, 0.000)), rs.coerce3dpoint((9.690, 47.799, 0.000)), rs.coerce3dpoint((9.060, 48.894, 0.000)), rs.coerce3dpoint((9.034, 48.940, 0.000)), rs.coerce3dpoint((9.007, 48.986, 0.000)), rs.coerce3dpoint((8.490, 49.875, 0.000)), rs.coerce3dpoint((7.973, 50.765, 0.000)), rs.coerce3dpoint((7.925, 50.846, 0.000)), rs.coerce3dpoint((7.877, 50.927, 0.000)), rs.coerce3dpoint((7.621, 51.366, 0.000)), rs.coerce3dpoint((7.365, 51.805, 0.000)), rs.coerce3dpoint((7.329, 51.869, 0.000)), rs.coerce3dpoint((7.292, 51.932, 0.000)), rs.coerce3dpoint((7.093, 52.274, 0.000)), rs.coerce3dpoint((6.894, 52.616, 0.000)), rs.coerce3dpoint((6.765, 52.837, 0.000)), rs.coerce3dpoint((6.635, 53.057, 0.000)), rs.coerce3dpoint((6.588, 53.136, 0.000)), rs.coerce3dpoint((6.538, 53.214, 0.000)), rs.coerce3dpoint((6.512, 53.255, 0.000)), rs.coerce3dpoint((6.484, 53.294, 0.000)), rs.coerce3dpoint((6.428, 53.371, 0.000)), rs.coerce3dpoint((6.364, 53.440, 0.000)), rs.coerce3dpoint((6.314, 53.494, 0.000)), rs.coerce3dpoint((6.257, 53.539, 0.000)), rs.coerce3dpoint((6.226, 53.563, 0.000)), rs.coerce3dpoint((6.192, 53.583, 0.000)), rs.coerce3dpoint((6.131, 53.617, 0.000)), rs.coerce3dpoint((6.063, 53.635, 0.000)), rs.coerce3dpoint((5.951, 53.664, 0.000)), rs.coerce3dpoint((5.836, 53.656, 0.000))], [0.0, 0.0, 0.290266323414, 0.290266323414, 0.38630918801, 0.38630918801, 0.676859881116, 0.676859881116, 0.919562348883, 0.919562348883, 1.06219563878, 1.06219563878, 2.81049650521, 2.81049650521, 3.71305176974, 3.71305176974, 4.14537471408, 4.14537471408, 6.47145753427, 6.47145753427, 9.25787403311, 9.25787403311, 9.8926616587, 9.8926616587, 10.0903686083, 10.0903686083, 10.1879113710, 10.1879113710, 10.2504799582, 10.2504799582, 10.4521901220, 10.4521901220, 10.7110176493, 10.7110176493, 10.9283743660, 10.9283743660, 11.0063706886, 11.0063706886, 11.0631472410, 11.0631472410, 11.7247105551, 11.7247105551, 11.7615327468, 11.7615327468, 12.7980613328, 12.7980613328, 15.5683254698, 15.5683254698, 16.0586943340, 16.0586943340, 20.3546649216, 20.3546649216, 20.5796239278, 20.5796239278, 20.7828512533, 20.7828512533, 20.8308901841, 20.8308901841, 21.0320972656, 21.0320972656, 21.2113918459, 21.2113918459, 21.4156454097, 21.4156454097, 21.6164799654, 21.6164799654, 21.7909452280, 21.7909452280, 21.8683433626, 21.8683433626, 22.1786286968, 22.1786286968, 22.5022263564, 22.5022263564, 24.9367825820, 24.9367825820, 25.9376444436, 25.9376444436, 26.2798813377, 26.2798813377, 26.3630957938, 26.3630957938, 31.2925704107, 31.2925704107, 31.5040004742, 31.5040004742, 31.6237905415, 31.6237905415, 31.6902154924, 31.6902154924, 31.8893129091, 31.8893129091, 32.2476992256, 32.2476992256, 32.4462699745, 32.4462699745, 32.8145183012, 32.8145183012, 33.7590125721, 33.7590125721, 34.3490183467, 34.3490183467, 36.8753671508, 36.8753671508, 36.9811341107, 36.9811341107, 39.0387348336, 39.0387348336, 39.2273920670, 39.2273920670, 40.2437884673, 40.2437884673, 40.3900508223, 40.3900508223, 41.1817708047, 41.1817708047, 41.6925373957, 41.6925373957, 41.8774637243, 41.8774637243, 41.9741232490, 41.9741232490, 42.1635239820, 42.1635239820, 42.3092141680, 42.3092141680, 42.3878096839, 42.3878096839, 42.5267427782, 42.5267427782, 42.7559094574, 42.7559094574], 2, [1.0, 0.983430500932, 1.0, 0.997704218335, 1.0, 0.990928830516, 1.0, 0.99617046673, 1.0, 0.999262991691, 1.0, 0.999992000032, 1.0, 0.999998000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 0.993613340048, 1.0, 0.983645556499, 1.0, 0.989685470521, 1.0, 0.999058663266, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.998720638906, 1.0, 0.997176471791, 1.0, 0.999735534975, 1.0, 0.994689020801, 1.0, 0.992043300966, 1.0, 0.983286369773, 1.0, 0.983859241854, 1.0, 0.992585589023, 1.0, 0.999084499263, 1.0, 0.997539011962, 1.0, 0.998521413917, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 0.993178843702, 1.0, 0.967112843595, 1.0, 0.993248389326, 1.0, 0.999997120004, 1.0, 0.999997580003, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999855510439, 1.0, 0.999507141485, 1.0, 0.998272772946, 1.0, 0.996836930429, 1.0, 0.997622330022, 1.0, 0.991559749864, 1.0, 0.987186442969, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-22.078, 10.756, 0.000), (-22.072, 8.218, 0.000), (-22.065, 5.680, 0.000), (-22.061, 3.866, 0.000), (-22.057, 2.052, 0.000), (-22.056, 1.781, 0.000), (-22.057, 1.511, 0.000), (-22.057, 1.504, 0.000), (-22.057, 1.497, 0.000), (-22.058, 1.276, 0.000), (-22.057, 1.054, 0.000), (-22.056, 0.929, 0.000), (-22.055, 0.805, 0.000), (-22.054, 0.702, 0.000), (-22.046, 0.600, 0.000), (-22.042, 0.546, 0.000), (-22.038, 0.492, 0.000), (-22.036, 0.470, 0.000), (-22.034, 0.447, 0.000), (-22.024, 0.324, 0.000), (-21.958, 0.220, 0.000), (-21.917, 0.155, 0.000), (-21.861, 0.101, 0.000), (-21.832, 0.072, 0.000), (-21.800, 0.046, 0.000), (-21.731, -0.012, 0.000), (-21.650, -0.051, 0.000), (-21.570, -0.089, 0.000), (-21.483, -0.100, 0.000), (-21.337, -0.119, 0.000), (-21.205, -0.052, 0.000), (-21.128, -0.012, 0.000), (-21.066, 0.049, 0.000), (-21.003, 0.110, 0.000), (-20.957, 0.185, 0.000), (-18.952, 3.575, 0.000), (-16.947, 6.966, 0.000), (-16.300, 8.063, 0.000), (-15.653, 9.160, 0.000), (-15.442, 9.519, 0.000), (-15.232, 9.880, 0.000), (-15.140, 10.039, 0.000), (-15.051, 10.199, 0.000), (-14.995, 10.298, 0.000), (-14.956, 10.404, 0.000), (-14.900, 10.556, 0.000), (-14.890, 10.718, 0.000), (-14.883, 10.844, 0.000), (-14.903, 10.969, 0.000), (-14.922, 11.092, 0.000), (-14.959, 11.210, 0.000), (-14.992, 11.315, 0.000), (-15.035, 11.416, 0.000), (-15.824, 12.761, 0.000), (-16.614, 14.105, 0.000), (-18.097, 16.632, 0.000), (-19.581, 19.158, 0.000), (-20.013, 19.891, 0.000), (-20.445, 20.624, 0.000), (-20.585, 20.861, 0.000), (-20.727, 21.096, 0.000), (-20.773, 21.173, 0.000), (-20.821, 21.248, 0.000), (-20.839, 21.276, 0.000), (-20.859, 21.302, 0.000), (-20.864, 21.309, 0.000), (-20.871, 21.316, 0.000), (-20.882, 21.329, 0.000), (-20.896, 21.340, 0.000), (-20.932, 21.369, 0.000), (-20.970, 21.396, 0.000), (-20.992, 21.412, 0.000), (-21.014, 21.428, 0.000), (-21.112, 21.500, 0.000), (-21.227, 21.537, 0.000), (-21.363, 21.580, 0.000), (-21.505, 21.562, 0.000), (-21.727, 21.534, 0.000), (-21.879, 21.371, 0.000), (-21.962, 21.282, 0.000), (-22.009, 21.171, 0.000), (-22.025, 21.134, 0.000), (-22.037, 21.096, 0.000), (-22.055, 21.039, 0.000), (-22.069, 20.981, 0.000), (-22.077, 20.947, 0.000), (-22.080, 20.912, 0.000), (-22.081, 20.899, 0.000), (-22.081, 20.886, 0.000), (-22.083, 20.824, 0.000), (-22.083, 20.762, 0.000), (-22.083, 20.281, 0.000), (-22.083, 19.800, 0.000), (-22.082, 16.972, 0.000), (-22.080, 14.143, 0.000), (-22.079, 12.450, 0.000), (-22.078, 10.756, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-22.078, 10.756, 0.000)), rs.coerce3dpoint((-22.072, 8.218, 0.000)), rs.coerce3dpoint((-22.065, 5.680, 0.000)), rs.coerce3dpoint((-22.061, 3.866, 0.000)), rs.coerce3dpoint((-22.057, 2.052, 0.000)), rs.coerce3dpoint((-22.056, 1.781, 0.000)), rs.coerce3dpoint((-22.057, 1.511, 0.000)), rs.coerce3dpoint((-22.057, 1.504, 0.000)), rs.coerce3dpoint((-22.057, 1.497, 0.000)), rs.coerce3dpoint((-22.058, 1.276, 0.000)), rs.coerce3dpoint((-22.057, 1.054, 0.000)), rs.coerce3dpoint((-22.056, 0.929, 0.000)), rs.coerce3dpoint((-22.055, 0.805, 0.000)), rs.coerce3dpoint((-22.054, 0.702, 0.000)), rs.coerce3dpoint((-22.046, 0.600, 0.000)), rs.coerce3dpoint((-22.042, 0.546, 0.000)), rs.coerce3dpoint((-22.038, 0.492, 0.000)), rs.coerce3dpoint((-22.036, 0.470, 0.000)), rs.coerce3dpoint((-22.034, 0.447, 0.000)), rs.coerce3dpoint((-22.024, 0.324, 0.000)), rs.coerce3dpoint((-21.958, 0.220, 0.000)), rs.coerce3dpoint((-21.917, 0.155, 0.000)), rs.coerce3dpoint((-21.861, 0.101, 0.000)), rs.coerce3dpoint((-21.832, 0.072, 0.000)), rs.coerce3dpoint((-21.800, 0.046, 0.000)), rs.coerce3dpoint((-21.731, -0.012, 0.000)), rs.coerce3dpoint((-21.650, -0.051, 0.000)), rs.coerce3dpoint((-21.570, -0.089, 0.000)), rs.coerce3dpoint((-21.483, -0.100, 0.000)), rs.coerce3dpoint((-21.337, -0.119, 0.000)), rs.coerce3dpoint((-21.205, -0.052, 0.000)), rs.coerce3dpoint((-21.128, -0.012, 0.000)), rs.coerce3dpoint((-21.066, 0.049, 0.000)), rs.coerce3dpoint((-21.003, 0.110, 0.000)), rs.coerce3dpoint((-20.957, 0.185, 0.000)), rs.coerce3dpoint((-18.952, 3.575, 0.000)), rs.coerce3dpoint((-16.947, 6.966, 0.000)), rs.coerce3dpoint((-16.300, 8.063, 0.000)), rs.coerce3dpoint((-15.653, 9.160, 0.000)), rs.coerce3dpoint((-15.442, 9.519, 0.000)), rs.coerce3dpoint((-15.232, 9.880, 0.000)), rs.coerce3dpoint((-15.140, 10.039, 0.000)), rs.coerce3dpoint((-15.051, 10.199, 0.000)), rs.coerce3dpoint((-14.995, 10.298, 0.000)), rs.coerce3dpoint((-14.956, 10.404, 0.000)), rs.coerce3dpoint((-14.900, 10.556, 0.000)), rs.coerce3dpoint((-14.890, 10.718, 0.000)), rs.coerce3dpoint((-14.883, 10.844, 0.000)), rs.coerce3dpoint((-14.903, 10.969, 0.000)), rs.coerce3dpoint((-14.922, 11.092, 0.000)), rs.coerce3dpoint((-14.959, 11.210, 0.000)), rs.coerce3dpoint((-14.992, 11.315, 0.000)), rs.coerce3dpoint((-15.035, 11.416, 0.000)), rs.coerce3dpoint((-15.824, 12.761, 0.000)), rs.coerce3dpoint((-16.614, 14.105, 0.000)), rs.coerce3dpoint((-18.097, 16.632, 0.000)), rs.coerce3dpoint((-19.581, 19.158, 0.000)), rs.coerce3dpoint((-20.013, 19.891, 0.000)), rs.coerce3dpoint((-20.445, 20.624, 0.000)), rs.coerce3dpoint((-20.585, 20.861, 0.000)), rs.coerce3dpoint((-20.727, 21.096, 0.000)), rs.coerce3dpoint((-20.773, 21.173, 0.000)), rs.coerce3dpoint((-20.821, 21.248, 0.000)), rs.coerce3dpoint((-20.839, 21.276, 0.000)), rs.coerce3dpoint((-20.859, 21.302, 0.000)), rs.coerce3dpoint((-20.864, 21.309, 0.000)), rs.coerce3dpoint((-20.871, 21.316, 0.000)), rs.coerce3dpoint((-20.882, 21.329, 0.000)), rs.coerce3dpoint((-20.896, 21.340, 0.000)), rs.coerce3dpoint((-20.932, 21.369, 0.000)), rs.coerce3dpoint((-20.970, 21.396, 0.000)), rs.coerce3dpoint((-20.992, 21.412, 0.000)), rs.coerce3dpoint((-21.014, 21.428, 0.000)), rs.coerce3dpoint((-21.112, 21.500, 0.000)), rs.coerce3dpoint((-21.227, 21.537, 0.000)), rs.coerce3dpoint((-21.363, 21.580, 0.000)), rs.coerce3dpoint((-21.505, 21.562, 0.000)), rs.coerce3dpoint((-21.727, 21.534, 0.000)), rs.coerce3dpoint((-21.879, 21.371, 0.000)), rs.coerce3dpoint((-21.962, 21.282, 0.000)), rs.coerce3dpoint((-22.009, 21.171, 0.000)), rs.coerce3dpoint((-22.025, 21.134, 0.000)), rs.coerce3dpoint((-22.037, 21.096, 0.000)), rs.coerce3dpoint((-22.055, 21.039, 0.000)), rs.coerce3dpoint((-22.069, 20.981, 0.000)), rs.coerce3dpoint((-22.077, 20.947, 0.000)), rs.coerce3dpoint((-22.080, 20.912, 0.000)), rs.coerce3dpoint((-22.081, 20.899, 0.000)), rs.coerce3dpoint((-22.081, 20.886, 0.000)), rs.coerce3dpoint((-22.083, 20.824, 0.000)), rs.coerce3dpoint((-22.083, 20.762, 0.000)), rs.coerce3dpoint((-22.083, 20.281, 0.000)), rs.coerce3dpoint((-22.083, 19.800, 0.000)), rs.coerce3dpoint((-22.082, 16.972, 0.000)), rs.coerce3dpoint((-22.080, 14.143, 0.000)), rs.coerce3dpoint((-22.079, 12.450, 0.000)), rs.coerce3dpoint((-22.078, 10.756, 0.000))], [0.0, 0.0, 5.07630623876, 5.07630623876, 8.70467683760, 8.70467683760, 9.24549767250, 9.24549767250, 9.25883776620, 9.25883776620, 9.70247962407, 9.70247962407, 9.95157209726, 9.95157209726, 10.1561589883, 10.1561589883, 10.2643848014, 10.2643848014, 10.3094685379, 10.3094685379, 10.5519877197, 10.5519877197, 10.7054483646, 10.7054483646, 10.7876429264, 10.7876429264, 10.9668560470, 10.9668560470, 11.1412364495, 11.1412364495, 11.4276920786, 11.4276920786, 11.6004965445, 11.6004965445, 11.7749839056, 11.7749839056, 19.6534071178, 19.6534071178, 22.1999830699, 22.1999830699, 23.0343182143, 23.0343182143, 23.4010220635, 23.4010220635, 23.6271977959, 23.6271977959, 23.9490688950, 23.9490688950, 24.2011189022, 24.2011189022, 24.4492378311, 24.4492378311, 24.6686051223, 24.6686051223, 27.7869890494, 27.7869890494, 33.6462056106, 33.6462056106, 35.3484816109, 35.3484816109, 35.8977230045, 35.8977230045, 36.0769876469, 36.0769876469, 36.1422581942, 36.1422581942, 36.1610496093, 36.1610496093, 36.1962819067, 36.1962819067, 36.2888849809, 36.2888849809, 36.3430769157, 36.3430769157, 36.5836509400, 36.5836509400, 36.8645051662, 36.8645051662, 37.2936166882, 37.2936166882, 37.5335769819, 37.5335769819, 37.6133794455, 37.6133794455, 37.7326317524, 37.7326317524, 37.8027142956, 37.8027142956, 37.8291539795, 37.8291539795, 37.9532635562, 37.9532635562, 38.9145336569, 38.9145336569, 44.5718644260, 44.5718644260, 47.9586049702, 47.9586049702], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 0.999408494991, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.970668569019, 1.0, 0.993155583453, 1.0, 0.998988012319, 1.0, 0.992439568511, 1.0, 0.987595417002, 1.0, 0.954835481046, 1.0, 0.988484270011, 1.0, 0.993202064766, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999955820976, 1.0, 0.996868590551, 1.0, 0.989195307739, 1.0, 0.994523517108, 1.0, 0.997085772557, 1.0, 0.998839054289, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999987500078, 1.0, 0.999884486672, 1.0, 0.998951729723, 1.0, 0.999692527277, 1.0, 0.995666290909, 1.0, 0.999619192521, 1.0, 1.0, 1.0, 0.987059296204, 1.0, 0.976940960635, 1.0, 0.940438172672, 1.0, 0.984734828858, 1.0, 0.998669605564, 1.0, 0.999293369751, 1.0, 0.997024513356, 1.0, 0.999672373678, 1.0, 0.999923122955, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-18.003, 34.232, 0.000), (-18.004, 34.607, 0.000), (-18.006, 34.982, 0.000), (-18.012, 36.679, 0.000), (-18.019, 38.376, 0.000), (-18.021, 39.000, 0.000), (-18.027, 39.623, 0.000), (-18.029, 39.889, 0.000), (-18.035, 40.154, 0.000), (-18.038, 40.273, 0.000), (-18.044, 40.392, 0.000), (-18.047, 40.452, 0.000), (-18.055, 40.512, 0.000), (-18.059, 40.547, 0.000), (-18.067, 40.581, 0.000), (-18.079, 40.637, 0.000), (-18.101, 40.689, 0.000), (-18.126, 40.746, 0.000), (-18.156, 40.802, 0.000), (-18.198, 40.881, 0.000), (-18.244, 40.959, 0.000), (-18.425, 41.271, 0.000), (-18.609, 41.581, 0.000), (-18.760, 41.836, 0.000), (-18.909, 42.091, 0.000), (-19.174, 42.546, 0.000), (-19.439, 43.002, 0.000), (-19.866, 43.739, 0.000), (-20.297, 44.474, 0.000), (-20.364, 44.588, 0.000), (-20.431, 44.702, 0.000), (-20.517, 44.850, 0.000), (-20.607, 44.994, 0.000), (-20.696, 45.137, 0.000), (-20.794, 45.274, 0.000), (-20.840, 45.338, 0.000), (-20.889, 45.399, 0.000), (-20.951, 45.479, 0.000), (-21.033, 45.538, 0.000), (-21.134, 45.611, 0.000), (-21.257, 45.638, 0.000), (-21.363, 45.660, 0.000), (-21.470, 45.645, 0.000), (-21.519, 45.639, 0.000), (-21.566, 45.626, 0.000), (-21.661, 45.600, 0.000), (-21.746, 45.551, 0.000), (-21.895, 45.465, 0.000), (-21.981, 45.316, 0.000), (-22.030, 45.229, 0.000), (-22.056, 45.133, 0.000), (-22.065, 45.100, 0.000), (-22.071, 45.067, 0.000), (-22.080, 45.023, 0.000), (-22.083, 44.978, 0.000), (-22.087, 44.905, 0.000), (-22.089, 44.832, 0.000), (-22.093, 44.652, 0.000), (-22.093, 44.472, 0.000), (-22.096, 43.972, 0.000), (-22.096, 43.472, 0.000), (-22.096, 42.770, 0.000), (-22.097, 42.067, 0.000), (-22.097, 41.907, 0.000), (-22.097, 41.747, 0.000), (-22.100, 33.524, 0.000), (-22.104, 25.301, 0.000), (-22.104, 24.391, 0.000), (-22.105, 23.481, 0.000), (-22.105, 23.403, 0.000), (-22.104, 23.324, 0.000), (-22.104, 23.316, 0.000), (-22.103, 23.308, 0.000), (-22.091, 23.174, 0.000), (-22.026, 23.057, 0.000), (-21.945, 22.911, 0.000), (-21.808, 22.816, 0.000), (-21.710, 22.748, 0.000), (-21.594, 22.717, 0.000), (-21.515, 22.696, 0.000), (-21.433, 22.698, 0.000), (-21.377, 22.699, 0.000), (-21.322, 22.710, 0.000), (-21.241, 22.727, 0.000), (-21.170, 22.771, 0.000), (-21.114, 22.806, 0.000), (-21.065, 22.849, 0.000), (-21.006, 22.903, 0.000), (-20.953, 22.964, 0.000), (-20.881, 23.047, 0.000), (-20.816, 23.136, 0.000), (-20.726, 23.260, 0.000), (-20.642, 23.389, 0.000), (-20.522, 23.574, 0.000), (-20.409, 23.763, 0.000), (-20.242, 24.042, 0.000), (-20.082, 24.325, 0.000), (-20.048, 24.385, 0.000), (-20.014, 24.445, 0.000), (-19.912, 24.624, 0.000), (-19.811, 24.804, 0.000), (-19.269, 25.762, 0.000), (-18.727, 26.720, 0.000), (-18.538, 27.055, 0.000), (-18.351, 27.392, 0.000), (-18.274, 27.530, 0.000), (-18.201, 27.669, 0.000), (-18.167, 27.732, 0.000), (-18.137, 27.798, 0.000), (-18.118, 27.840, 0.000), (-18.104, 27.884, 0.000), (-18.077, 27.964, 0.000), (-18.065, 28.048, 0.000), (-18.057, 28.100, 0.000), (-18.052, 28.153, 0.000), (-18.045, 28.234, 0.000), (-18.042, 28.316, 0.000), (-18.036, 28.470, 0.000), (-18.034, 28.623, 0.000), (-18.028, 28.993, 0.000), (-18.025, 29.363, 0.000), (-18.020, 30.284, 0.000), (-18.014, 31.205, 0.000), (-18.009, 32.719, 0.000), (-18.003, 34.232, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-18.003, 34.232, 0.000)), rs.coerce3dpoint((-18.004, 34.607, 0.000)), rs.coerce3dpoint((-18.006, 34.982, 0.000)), rs.coerce3dpoint((-18.012, 36.679, 0.000)), rs.coerce3dpoint((-18.019, 38.376, 0.000)), rs.coerce3dpoint((-18.021, 39.000, 0.000)), rs.coerce3dpoint((-18.027, 39.623, 0.000)), rs.coerce3dpoint((-18.029, 39.889, 0.000)), rs.coerce3dpoint((-18.035, 40.154, 0.000)), rs.coerce3dpoint((-18.038, 40.273, 0.000)), rs.coerce3dpoint((-18.044, 40.392, 0.000)), rs.coerce3dpoint((-18.047, 40.452, 0.000)), rs.coerce3dpoint((-18.055, 40.512, 0.000)), rs.coerce3dpoint((-18.059, 40.547, 0.000)), rs.coerce3dpoint((-18.067, 40.581, 0.000)), rs.coerce3dpoint((-18.079, 40.637, 0.000)), rs.coerce3dpoint((-18.101, 40.689, 0.000)), rs.coerce3dpoint((-18.126, 40.746, 0.000)), rs.coerce3dpoint((-18.156, 40.802, 0.000)), rs.coerce3dpoint((-18.198, 40.881, 0.000)), rs.coerce3dpoint((-18.244, 40.959, 0.000)), rs.coerce3dpoint((-18.425, 41.271, 0.000)), rs.coerce3dpoint((-18.609, 41.581, 0.000)), rs.coerce3dpoint((-18.760, 41.836, 0.000)), rs.coerce3dpoint((-18.909, 42.091, 0.000)), rs.coerce3dpoint((-19.174, 42.546, 0.000)), rs.coerce3dpoint((-19.439, 43.002, 0.000)), rs.coerce3dpoint((-19.866, 43.739, 0.000)), rs.coerce3dpoint((-20.297, 44.474, 0.000)), rs.coerce3dpoint((-20.364, 44.588, 0.000)), rs.coerce3dpoint((-20.431, 44.702, 0.000)), rs.coerce3dpoint((-20.517, 44.850, 0.000)), rs.coerce3dpoint((-20.607, 44.994, 0.000)), rs.coerce3dpoint((-20.696, 45.137, 0.000)), rs.coerce3dpoint((-20.794, 45.274, 0.000)), rs.coerce3dpoint((-20.840, 45.338, 0.000)), rs.coerce3dpoint((-20.889, 45.399, 0.000)), rs.coerce3dpoint((-20.951, 45.479, 0.000)), rs.coerce3dpoint((-21.033, 45.538, 0.000)), rs.coerce3dpoint((-21.134, 45.611, 0.000)), rs.coerce3dpoint((-21.257, 45.638, 0.000)), rs.coerce3dpoint((-21.363, 45.660, 0.000)), rs.coerce3dpoint((-21.470, 45.645, 0.000)), rs.coerce3dpoint((-21.519, 45.639, 0.000)), rs.coerce3dpoint((-21.566, 45.626, 0.000)), rs.coerce3dpoint((-21.661, 45.600, 0.000)), rs.coerce3dpoint((-21.746, 45.551, 0.000)), rs.coerce3dpoint((-21.895, 45.465, 0.000)), rs.coerce3dpoint((-21.981, 45.316, 0.000)), rs.coerce3dpoint((-22.030, 45.229, 0.000)), rs.coerce3dpoint((-22.056, 45.133, 0.000)), rs.coerce3dpoint((-22.065, 45.100, 0.000)), rs.coerce3dpoint((-22.071, 45.067, 0.000)), rs.coerce3dpoint((-22.080, 45.023, 0.000)), rs.coerce3dpoint((-22.083, 44.978, 0.000)), rs.coerce3dpoint((-22.087, 44.905, 0.000)), rs.coerce3dpoint((-22.089, 44.832, 0.000)), rs.coerce3dpoint((-22.093, 44.652, 0.000)), rs.coerce3dpoint((-22.093, 44.472, 0.000)), rs.coerce3dpoint((-22.096, 43.972, 0.000)), rs.coerce3dpoint((-22.096, 43.472, 0.000)), rs.coerce3dpoint((-22.096, 42.770, 0.000)), rs.coerce3dpoint((-22.097, 42.067, 0.000)), rs.coerce3dpoint((-22.097, 41.907, 0.000)), rs.coerce3dpoint((-22.097, 41.747, 0.000)), rs.coerce3dpoint((-22.100, 33.524, 0.000)), rs.coerce3dpoint((-22.104, 25.301, 0.000)), rs.coerce3dpoint((-22.104, 24.391, 0.000)), rs.coerce3dpoint((-22.105, 23.481, 0.000)), rs.coerce3dpoint((-22.105, 23.403, 0.000)), rs.coerce3dpoint((-22.104, 23.324, 0.000)), rs.coerce3dpoint((-22.104, 23.316, 0.000)), rs.coerce3dpoint((-22.103, 23.308, 0.000)), rs.coerce3dpoint((-22.091, 23.174, 0.000)), rs.coerce3dpoint((-22.026, 23.057, 0.000)), rs.coerce3dpoint((-21.945, 22.911, 0.000)), rs.coerce3dpoint((-21.808, 22.816, 0.000)), rs.coerce3dpoint((-21.710, 22.748, 0.000)), rs.coerce3dpoint((-21.594, 22.717, 0.000)), rs.coerce3dpoint((-21.515, 22.696, 0.000)), rs.coerce3dpoint((-21.433, 22.698, 0.000)), rs.coerce3dpoint((-21.377, 22.699, 0.000)), rs.coerce3dpoint((-21.322, 22.710, 0.000)), rs.coerce3dpoint((-21.241, 22.727, 0.000)), rs.coerce3dpoint((-21.170, 22.771, 0.000)), rs.coerce3dpoint((-21.114, 22.806, 0.000)), rs.coerce3dpoint((-21.065, 22.849, 0.000)), rs.coerce3dpoint((-21.006, 22.903, 0.000)), rs.coerce3dpoint((-20.953, 22.964, 0.000)), rs.coerce3dpoint((-20.881, 23.047, 0.000)), rs.coerce3dpoint((-20.816, 23.136, 0.000)), rs.coerce3dpoint((-20.726, 23.260, 0.000)), rs.coerce3dpoint((-20.642, 23.389, 0.000)), rs.coerce3dpoint((-20.522, 23.574, 0.000)), rs.coerce3dpoint((-20.409, 23.763, 0.000)), rs.coerce3dpoint((-20.242, 24.042, 0.000)), rs.coerce3dpoint((-20.082, 24.325, 0.000)), rs.coerce3dpoint((-20.048, 24.385, 0.000)), rs.coerce3dpoint((-20.014, 24.445, 0.000)), rs.coerce3dpoint((-19.912, 24.624, 0.000)), rs.coerce3dpoint((-19.811, 24.804, 0.000)), rs.coerce3dpoint((-19.269, 25.762, 0.000)), rs.coerce3dpoint((-18.727, 26.720, 0.000)), rs.coerce3dpoint((-18.538, 27.055, 0.000)), rs.coerce3dpoint((-18.351, 27.392, 0.000)), rs.coerce3dpoint((-18.274, 27.530, 0.000)), rs.coerce3dpoint((-18.201, 27.669, 0.000)), rs.coerce3dpoint((-18.167, 27.732, 0.000)), rs.coerce3dpoint((-18.137, 27.798, 0.000)), rs.coerce3dpoint((-18.118, 27.840, 0.000)), rs.coerce3dpoint((-18.104, 27.884, 0.000)), rs.coerce3dpoint((-18.077, 27.964, 0.000)), rs.coerce3dpoint((-18.065, 28.048, 0.000)), rs.coerce3dpoint((-18.057, 28.100, 0.000)), rs.coerce3dpoint((-18.052, 28.153, 0.000)), rs.coerce3dpoint((-18.045, 28.234, 0.000)), rs.coerce3dpoint((-18.042, 28.316, 0.000)), rs.coerce3dpoint((-18.036, 28.470, 0.000)), rs.coerce3dpoint((-18.034, 28.623, 0.000)), rs.coerce3dpoint((-18.028, 28.993, 0.000)), rs.coerce3dpoint((-18.025, 29.363, 0.000)), rs.coerce3dpoint((-18.020, 30.284, 0.000)), rs.coerce3dpoint((-18.014, 31.205, 0.000)), rs.coerce3dpoint((-18.009, 32.719, 0.000)), rs.coerce3dpoint((-18.003, 34.232, 0.000))], [0.0, 0.0, 0.74933465054, 0.74933465054, 4.14363939231, 4.14363939231, 5.39086848167, 5.39086848167, 5.92217656662, 5.92217656662, 6.15999420229, 6.15999420229, 6.28042302656, 6.28042302656, 6.35048372178, 6.35048372178, 6.46387295435, 6.46387295435, 6.58925239294, 6.58925239294, 6.76937480185, 6.76937480185, 7.49107812621, 7.49107812621, 8.08203266012, 8.08203266012, 9.13603788306, 9.13603788306, 10.8398789472, 10.8398789472, 11.1052604251, 11.1052604251, 11.4461454733, 11.4461454733, 11.7826450461, 11.7826450461, 11.9392239475, 11.9392239475, 12.1401790153, 12.1401790153, 12.3869974531, 12.3869974531, 12.6011726850, 12.6011726850, 12.6994204588, 12.6994204588, 12.8951401525, 12.8951401525, 13.2309866730, 13.2309866730, 13.4292655553, 13.4292655553, 13.4970836258, 13.4970836258, 13.5868139770, 13.5868139770, 13.7331753518, 13.7331753518, 14.0931780879, 14.0931780879, 15.0926625698, 15.0926625698, 16.4976727248, 16.4976727248, 16.8175927404, 16.8175927404, 33.2636243828, 33.2636243828, 35.0833845293, 35.0833845293, 35.2403784827, 35.2403784827, 35.2567404287, 35.2567404287, 35.5211962634, 35.5211962634, 35.8493209203, 35.8493209203, 36.0859879853, 36.0859879853, 36.2483710435, 36.2483710435, 36.3605583096, 36.3605583096, 36.5254114129, 36.5254114129, 36.6560121316, 36.6560121316, 36.8168976231, 36.8168976231, 37.0361024224, 37.0361024224, 37.3436097015, 37.3436097015, 37.7844889516, 37.7844889516, 38.4343073911, 38.4343073911, 38.5721117139, 38.5721117139, 38.9850329928, 38.9850329928, 41.1857863610, 41.1857863610, 41.9564988285, 41.9564988285, 42.2711655451, 42.2711655451, 42.4150084343, 42.4150084343, 42.5074416137, 42.5074416137, 42.6758036735, 42.6758036735, 42.7815746411, 42.7815746411, 42.9455374932, 42.9455374932, 43.2525426081, 43.2525426081, 43.9929664514, 43.9929664514, 45.8347973581, 45.8347973581, 48.8619675260, 48.8619675260], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.9999755003, 1.0, 0.999865529042, 1.0, 0.999308319294, 1.0, 0.999049971492, 1.0, 0.994852005122, 1.0, 0.999109976247, 1.0, 0.99980399921, 1.0, 0.999992000032, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 0.999998000002, 1.0, 1.0, 1.0, 0.999907524276, 1.0, 0.999442375516, 1.0, 0.999744652605, 1.0, 0.990385938321, 1.0, 0.978762026322, 1.0, 0.985044200582, 1.0, 0.99771772736, 1.0, 0.991611313233, 1.0, 0.965544477048, 1.0, 0.991739539105, 1.0, 0.999337739367, 1.0, 0.99778467655, 1.0, 0.999726257473, 1.0, 0.999964720622, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999966380565, 1.0, 0.999387687521, 1.0, 0.978190450286, 1.0, 0.973805547625, 1.0, 0.984631017401, 1.0, 0.989940433223, 1.0, 0.996082707647, 1.0, 0.985009978794, 1.0, 0.995849909532, 1.0, 0.998092201585, 1.0, 0.999101523811, 1.0, 0.999602459035, 1.0, 0.999834393714, 1.0, 0.999935022111, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999937281967, 1.0, 0.999624690442, 1.0, 0.998330973987, 1.0, 0.996343019004, 1.0, 0.999624690442, 1.0, 0.999573770855, 1.0, 0.999935022111, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.139, 28.208, 0.000), (22.151, 29.346, 0.000), (22.149, 30.484, 0.000), (22.148, 31.578, 0.000), (22.141, 32.673, 0.000), (22.139, 33.010, 0.000), (22.137, 33.348, 0.000), (22.136, 33.520, 0.000), (22.135, 33.693, 0.000), (22.140, 33.789, 0.000), (22.136, 33.886, 0.000), (22.132, 33.965, 0.000), (22.117, 34.043, 0.000), (22.101, 34.120, 0.000), (22.068, 34.192, 0.000), (22.029, 34.275, 0.000), (21.966, 34.342, 0.000), (21.958, 34.350, 0.000), (21.950, 34.359, 0.000), (21.884, 34.427, 0.000), (21.801, 34.474, 0.000), (21.658, 34.555, 0.000), (21.494, 34.544, 0.000), (21.407, 34.538, 0.000), (21.325, 34.510, 0.000), (21.253, 34.487, 0.000), (21.186, 34.451, 0.000), (21.149, 34.431, 0.000), (21.116, 34.406, 0.000), (21.055, 34.360, 0.000), (20.998, 34.307, 0.000), (20.925, 34.240, 0.000), (20.860, 34.165, 0.000), (20.846, 34.148, 0.000), (20.832, 34.131, 0.000), (20.806, 34.096, 0.000), (20.782, 34.059, 0.000), (20.711, 33.949, 0.000), (20.642, 33.836, 0.000), (20.472, 33.557, 0.000), (20.306, 33.276, 0.000), (20.196, 33.089, 0.000), (20.086, 32.902, 0.000), (19.736, 32.301, 0.000), (19.390, 31.697, 0.000), (19.174, 31.320, 0.000), (18.959, 30.944, 0.000), (18.722, 30.529, 0.000), (18.485, 30.114, 0.000), (18.023, 29.307, 0.000), (17.561, 28.500, 0.000), (17.320, 28.079, 0.000), (17.075, 27.661, 0.000), (16.921, 27.398, 0.000), (16.764, 27.137, 0.000), (16.658, 26.963, 0.000), (16.590, 26.771, 0.000), (16.514, 26.553, 0.000), (16.491, 26.324, 0.000), (16.479, 26.201, 0.000), (16.480, 26.079, 0.000), (16.486, 25.122, 0.000), (16.488, 24.164, 0.000), (16.489, 24.020, 0.000), (16.489, 23.876, 0.000), (16.491, 23.266, 0.000), (16.493, 22.656, 0.000), (16.493, 22.651, 0.000), (16.493, 22.645, 0.000), (16.493, 22.578, 0.000), (16.496, 22.511, 0.000), (16.499, 22.446, 0.000), (16.512, 22.383, 0.000), (16.512, 22.381, 0.000), (16.512, 22.379, 0.000), (16.532, 22.283, 0.000), (16.574, 22.194, 0.000), (16.623, 22.088, 0.000), (16.704, 22.006, 0.000), (16.784, 21.926, 0.000), (16.886, 21.876, 0.000), (16.969, 21.835, 0.000), (17.058, 21.813, 0.000), (17.125, 21.796, 0.000), (17.194, 21.791, 0.000), (17.266, 21.786, 0.000), (17.338, 21.786, 0.000), (17.356, 21.785, 0.000), (17.374, 21.785, 0.000), (18.627, 21.780, 0.000), (19.881, 21.774, 0.000), (20.157, 21.773, 0.000), (20.432, 21.773, 0.000), (20.861, 21.773, 0.000), (21.291, 21.770, 0.000), (21.322, 21.770, 0.000), (21.354, 21.770, 0.000), (21.449, 21.768, 0.000), (21.543, 21.789, 0.000), (21.691, 21.823, 0.000), (21.811, 21.917, 0.000), (21.885, 21.976, 0.000), (21.945, 22.049, 0.000), (21.994, 22.109, 0.000), (22.035, 22.175, 0.000), (22.086, 22.256, 0.000), (22.107, 22.350, 0.000), (22.123, 22.418, 0.000), (22.126, 22.488, 0.000), (22.130, 22.558, 0.000), (22.129, 22.627, 0.000), (22.129, 22.642, 0.000), (22.129, 22.656, 0.000), (22.129, 22.685, 0.000), (22.129, 22.714, 0.000), (22.129, 22.883, 0.000), (22.129, 23.052, 0.000), (22.130, 24.678, 0.000), (22.132, 26.305, 0.000), (22.135, 27.256, 0.000), (22.139, 28.208, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.139, 28.208, 0.000)), rs.coerce3dpoint((22.151, 29.346, 0.000)), rs.coerce3dpoint((22.149, 30.484, 0.000)), rs.coerce3dpoint((22.148, 31.578, 0.000)), rs.coerce3dpoint((22.141, 32.673, 0.000)), rs.coerce3dpoint((22.139, 33.010, 0.000)), rs.coerce3dpoint((22.137, 33.348, 0.000)), rs.coerce3dpoint((22.136, 33.520, 0.000)), rs.coerce3dpoint((22.135, 33.693, 0.000)), rs.coerce3dpoint((22.140, 33.789, 0.000)), rs.coerce3dpoint((22.136, 33.886, 0.000)), rs.coerce3dpoint((22.132, 33.965, 0.000)), rs.coerce3dpoint((22.117, 34.043, 0.000)), rs.coerce3dpoint((22.101, 34.120, 0.000)), rs.coerce3dpoint((22.068, 34.192, 0.000)), rs.coerce3dpoint((22.029, 34.275, 0.000)), rs.coerce3dpoint((21.966, 34.342, 0.000)), rs.coerce3dpoint((21.958, 34.350, 0.000)), rs.coerce3dpoint((21.950, 34.359, 0.000)), rs.coerce3dpoint((21.884, 34.427, 0.000)), rs.coerce3dpoint((21.801, 34.474, 0.000)), rs.coerce3dpoint((21.658, 34.555, 0.000)), rs.coerce3dpoint((21.494, 34.544, 0.000)), rs.coerce3dpoint((21.407, 34.538, 0.000)), rs.coerce3dpoint((21.325, 34.510, 0.000)), rs.coerce3dpoint((21.253, 34.487, 0.000)), rs.coerce3dpoint((21.186, 34.451, 0.000)), rs.coerce3dpoint((21.149, 34.431, 0.000)), rs.coerce3dpoint((21.116, 34.406, 0.000)), rs.coerce3dpoint((21.055, 34.360, 0.000)), rs.coerce3dpoint((20.998, 34.307, 0.000)), rs.coerce3dpoint((20.925, 34.240, 0.000)), rs.coerce3dpoint((20.860, 34.165, 0.000)), rs.coerce3dpoint((20.846, 34.148, 0.000)), rs.coerce3dpoint((20.832, 34.131, 0.000)), rs.coerce3dpoint((20.806, 34.096, 0.000)), rs.coerce3dpoint((20.782, 34.059, 0.000)), rs.coerce3dpoint((20.711, 33.949, 0.000)), rs.coerce3dpoint((20.642, 33.836, 0.000)), rs.coerce3dpoint((20.472, 33.557, 0.000)), rs.coerce3dpoint((20.306, 33.276, 0.000)), rs.coerce3dpoint((20.196, 33.089, 0.000)), rs.coerce3dpoint((20.086, 32.902, 0.000)), rs.coerce3dpoint((19.736, 32.301, 0.000)), rs.coerce3dpoint((19.390, 31.697, 0.000)), rs.coerce3dpoint((19.174, 31.320, 0.000)), rs.coerce3dpoint((18.959, 30.944, 0.000)), rs.coerce3dpoint((18.722, 30.529, 0.000)), rs.coerce3dpoint((18.485, 30.114, 0.000)), rs.coerce3dpoint((18.023, 29.307, 0.000)), rs.coerce3dpoint((17.561, 28.500, 0.000)), rs.coerce3dpoint((17.320, 28.079, 0.000)), rs.coerce3dpoint((17.075, 27.661, 0.000)), rs.coerce3dpoint((16.921, 27.398, 0.000)), rs.coerce3dpoint((16.764, 27.137, 0.000)), rs.coerce3dpoint((16.658, 26.963, 0.000)), rs.coerce3dpoint((16.590, 26.771, 0.000)), rs.coerce3dpoint((16.514, 26.553, 0.000)), rs.coerce3dpoint((16.491, 26.324, 0.000)), rs.coerce3dpoint((16.479, 26.201, 0.000)), rs.coerce3dpoint((16.480, 26.079, 0.000)), rs.coerce3dpoint((16.486, 25.122, 0.000)), rs.coerce3dpoint((16.488, 24.164, 0.000)), rs.coerce3dpoint((16.489, 24.020, 0.000)), rs.coerce3dpoint((16.489, 23.876, 0.000)), rs.coerce3dpoint((16.491, 23.266, 0.000)), rs.coerce3dpoint((16.493, 22.656, 0.000)), rs.coerce3dpoint((16.493, 22.651, 0.000)), rs.coerce3dpoint((16.493, 22.645, 0.000)), rs.coerce3dpoint((16.493, 22.578, 0.000)), rs.coerce3dpoint((16.496, 22.511, 0.000)), rs.coerce3dpoint((16.499, 22.446, 0.000)), rs.coerce3dpoint((16.512, 22.383, 0.000)), rs.coerce3dpoint((16.512, 22.381, 0.000)), rs.coerce3dpoint((16.512, 22.379, 0.000)), rs.coerce3dpoint((16.532, 22.283, 0.000)), rs.coerce3dpoint((16.574, 22.194, 0.000)), rs.coerce3dpoint((16.623, 22.088, 0.000)), rs.coerce3dpoint((16.704, 22.006, 0.000)), rs.coerce3dpoint((16.784, 21.926, 0.000)), rs.coerce3dpoint((16.886, 21.876, 0.000)), rs.coerce3dpoint((16.969, 21.835, 0.000)), rs.coerce3dpoint((17.058, 21.813, 0.000)), rs.coerce3dpoint((17.125, 21.796, 0.000)), rs.coerce3dpoint((17.194, 21.791, 0.000)), rs.coerce3dpoint((17.266, 21.786, 0.000)), rs.coerce3dpoint((17.338, 21.786, 0.000)), rs.coerce3dpoint((17.356, 21.785, 0.000)), rs.coerce3dpoint((17.374, 21.785, 0.000)), rs.coerce3dpoint((18.627, 21.780, 0.000)), rs.coerce3dpoint((19.881, 21.774, 0.000)), rs.coerce3dpoint((20.157, 21.773, 0.000)), rs.coerce3dpoint((20.432, 21.773, 0.000)), rs.coerce3dpoint((20.861, 21.773, 0.000)), rs.coerce3dpoint((21.291, 21.770, 0.000)), rs.coerce3dpoint((21.322, 21.770, 0.000)), rs.coerce3dpoint((21.354, 21.770, 0.000)), rs.coerce3dpoint((21.449, 21.768, 0.000)), rs.coerce3dpoint((21.543, 21.789, 0.000)), rs.coerce3dpoint((21.691, 21.823, 0.000)), rs.coerce3dpoint((21.811, 21.917, 0.000)), rs.coerce3dpoint((21.885, 21.976, 0.000)), rs.coerce3dpoint((21.945, 22.049, 0.000)), rs.coerce3dpoint((21.994, 22.109, 0.000)), rs.coerce3dpoint((22.035, 22.175, 0.000)), rs.coerce3dpoint((22.086, 22.256, 0.000)), rs.coerce3dpoint((22.107, 22.350, 0.000)), rs.coerce3dpoint((22.123, 22.418, 0.000)), rs.coerce3dpoint((22.126, 22.488, 0.000)), rs.coerce3dpoint((22.130, 22.558, 0.000)), rs.coerce3dpoint((22.129, 22.627, 0.000)), rs.coerce3dpoint((22.129, 22.642, 0.000)), rs.coerce3dpoint((22.129, 22.656, 0.000)), rs.coerce3dpoint((22.129, 22.685, 0.000)), rs.coerce3dpoint((22.129, 22.714, 0.000)), rs.coerce3dpoint((22.129, 22.883, 0.000)), rs.coerce3dpoint((22.129, 23.052, 0.000)), rs.coerce3dpoint((22.130, 24.678, 0.000)), rs.coerce3dpoint((22.132, 26.305, 0.000)), rs.coerce3dpoint((22.135, 27.256, 0.000)), rs.coerce3dpoint((22.139, 28.208, 0.000))], [0.0, 0.0, 2.27605643035, 2.27605643035, 4.46532535914, 4.46532535914, 5.14018805784, 5.14018805784, 5.48532469238, 5.48532469238, 5.67813189106, 5.67813189106, 5.83681605226, 5.83681605226, 5.99383473208, 5.99383473208, 6.17629124468, 6.17629124468, 6.19912401499, 6.19912401499, 6.38815281733, 6.38815281733, 6.70808886184, 6.70808886184, 6.88043389328, 6.88043389328, 7.03186459509, 7.03186459509, 7.11461561421, 7.11461561421, 7.26888334648, 7.26888334648, 7.46785959482, 7.46785959482, 7.51131865447, 7.51131865447, 7.59858654360, 7.59858654360, 7.86188614755, 7.86188614755, 8.51552739267, 8.51552739267, 8.94901089399, 8.94901089399, 10.3413202572, 10.3413202572, 11.2088118993, 11.2088118993, 12.1648728745, 12.1648728745, 14.0242344075, 14.0242344075, 14.9937693346, 14.9937693346, 15.6036143969, 15.6036143969, 16.0091582922, 16.0091582922, 16.4683173786, 16.4683173786, 16.7135065396, 16.7135065396, 18.6280284186, 18.6280284186, 18.9162795287, 18.9162795287, 20.1363359878, 20.1363359878, 20.1469060635, 20.1469060635, 20.2817000804, 20.2817000804, 20.4104961545, 20.4104961545, 20.4143578251, 20.4143578251, 20.6101316174, 20.6101316174, 20.8403016949, 20.8403016949, 21.0643420241, 21.0643420241, 21.2484042137, 21.2484042137, 21.3858084701, 21.3858084701, 21.5303919857, 21.5303919857, 21.5657130955, 21.5657130955, 24.0732394663, 24.0732394663, 24.6240099769, 24.6240099769, 25.4827760233, 25.4827760233, 25.5457885117, 25.5457885117, 25.7362165075, 25.7362165075, 26.0355137129, 26.0355137129, 26.2236929873, 26.2236929873, 26.3788682608, 26.3788682608, 26.5691856246, 26.5691856246, 26.7087945694, 26.7087945694, 26.8483988321, 26.8483988321, 26.8771395280, 26.8771395280, 26.9349802550, 26.9349802550, 27.2730002645, 27.2730002645, 30.5256016945, 30.5256016945, 32.4285153536, 32.4285153536], 2, [1.0, 0.999983180141, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 0.998710511926, 1.0, 0.997039887627, 1.0, 0.992873404989, 1.0, 0.988303031976, 1.0, 1.0, 1.0, 0.989912259197, 1.0, 0.957865002643, 1.0, 0.991917416618, 1.0, 0.996594428849, 1.0, 0.997191449524, 1.0, 0.998553826466, 1.0, 0.998466596565, 1.0, 0.999712041466, 1.0, 0.999401599095, 1.0, 0.999890485997, 1.0, 0.999968000512, 1.0, 0.999996620006, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999983180141, 1.0, 0.994811495301, 1.0, 0.992897135249, 1.0, 0.998499606435, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999672373678, 1.0, 0.997191449524, 1.0, 1.0, 1.0, 0.993409290533, 1.0, 0.985418116498, 1.0, 0.986414336294, 1.0, 0.994249203514, 1.0, 0.99665996724, 1.0, 0.999330444228, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 0.993015199212, 1.0, 0.975830924828, 1.0, 0.993990093917, 1.0, 0.997902681681, 1.0, 0.985787401839, 1.0, 0.996528256979, 1.0, 0.9994289431, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(16.477, 35.483, 0.000), (16.474, 34.566, 0.000), (16.471, 33.649, 0.000), (16.468, 32.791, 0.000), (16.466, 31.933, 0.000), (16.465, 31.680, 0.000), (16.467, 31.426, 0.000), (16.467, 31.332, 0.000), (16.471, 31.238, 0.000), (16.473, 31.191, 0.000), (16.478, 31.144, 0.000), (16.487, 31.045, 0.000), (16.520, 30.953, 0.000), (16.579, 30.789, 0.000), (16.710, 30.675, 0.000), (16.786, 30.609, 0.000), (16.876, 30.564, 0.000), (16.938, 30.532, 0.000), (17.005, 30.509, 0.000), (17.106, 30.472, 0.000), (17.214, 30.482, 0.000), (17.303, 30.490, 0.000), (17.384, 30.527, 0.000), (17.462, 30.562, 0.000), (17.529, 30.615, 0.000), (17.605, 30.675, 0.000), (17.668, 30.749, 0.000), (17.682, 30.765, 0.000), (17.695, 30.782, 0.000), (17.747, 30.847, 0.000), (17.791, 30.918, 0.000), (17.799, 30.932, 0.000), (17.807, 30.946, 0.000), (18.033, 31.321, 0.000), (18.256, 31.697, 0.000), (18.377, 31.900, 0.000), (18.498, 32.104, 0.000), (18.728, 32.487, 0.000), (18.954, 32.872, 0.000), (19.021, 32.986, 0.000), (19.088, 33.100, 0.000), (19.436, 33.702, 0.000), (19.780, 34.306, 0.000), (19.839, 34.409, 0.000), (19.898, 34.513, 0.000), (20.066, 34.807, 0.000), (20.235, 35.102, 0.000), (20.466, 35.507, 0.000), (20.697, 35.911, 0.000), (21.076, 36.578, 0.000), (21.458, 37.242, 0.000), (21.667, 37.605, 0.000), (21.878, 37.967, 0.000), (21.979, 38.138, 0.000), (22.041, 38.327, 0.000), (22.104, 38.525, 0.000), (22.122, 38.732, 0.000), (22.131, 38.843, 0.000), (22.129, 38.954, 0.000), (22.116, 39.635, 0.000), (22.110, 40.316, 0.000), (22.108, 40.531, 0.000), (22.106, 40.747, 0.000), (22.099, 41.324, 0.000), (22.093, 41.901, 0.000), (22.087, 42.368, 0.000), (22.075, 42.834, 0.000), (22.069, 43.064, 0.000), (22.060, 43.294, 0.000), (22.056, 43.410, 0.000), (22.015, 43.519, 0.000), (21.965, 43.651, 0.000), (21.862, 43.748, 0.000), (21.760, 43.843, 0.000), (21.626, 43.885, 0.000), (21.545, 43.910, 0.000), (21.459, 43.915, 0.000), (21.273, 43.926, 0.000), (21.086, 43.928, 0.000), (20.920, 43.929, 0.000), (20.753, 43.929, 0.000), (20.630, 43.928, 0.000), (20.507, 43.929, 0.000), (20.323, 43.929, 0.000), (20.139, 43.927, 0.000), (20.024, 43.925, 0.000), (19.909, 43.925, 0.000), (19.823, 43.924, 0.000), (19.736, 43.924, 0.000), (19.536, 43.922, 0.000), (19.336, 43.923, 0.000), (19.286, 43.923, 0.000), (19.236, 43.924, 0.000), (19.131, 43.927, 0.000), (19.029, 43.902, 0.000), (18.896, 43.868, 0.000), (18.785, 43.788, 0.000), (18.704, 43.729, 0.000), (18.637, 43.654, 0.000), (18.598, 43.611, 0.000), (18.564, 43.563, 0.000), (18.511, 43.491, 0.000), (18.463, 43.415, 0.000), (18.387, 43.295, 0.000), (18.314, 43.172, 0.000), (18.145, 42.890, 0.000), (17.979, 42.606, 0.000), (17.761, 42.232, 0.000), (17.542, 41.858, 0.000), (17.395, 41.605, 0.000), (17.249, 41.352, 0.000), (17.080, 41.063, 0.000), (16.912, 40.773, 0.000), (16.790, 40.563, 0.000), (16.669, 40.353, 0.000), (16.632, 40.288, 0.000), (16.597, 40.222, 0.000), (16.588, 40.204, 0.000), (16.578, 40.185, 0.000), (16.548, 40.122, 0.000), (16.525, 40.056, 0.000), (16.500, 39.977, 0.000), (16.490, 39.895, 0.000), (16.489, 39.889, 0.000), (16.488, 39.883, 0.000), (16.484, 39.841, 0.000), (16.483, 39.800, 0.000), (16.480, 39.698, 0.000), (16.479, 39.596, 0.000), (16.477, 39.254, 0.000), (16.477, 38.913, 0.000), (16.477, 37.581, 0.000), (16.477, 36.250, 0.000), (16.477, 35.992, 0.000), (16.477, 35.733, 0.000), (16.477, 35.608, 0.000), (16.477, 35.483, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((16.477, 35.483, 0.000)), rs.coerce3dpoint((16.474, 34.566, 0.000)), rs.coerce3dpoint((16.471, 33.649, 0.000)), rs.coerce3dpoint((16.468, 32.791, 0.000)), rs.coerce3dpoint((16.466, 31.933, 0.000)), rs.coerce3dpoint((16.465, 31.680, 0.000)), rs.coerce3dpoint((16.467, 31.426, 0.000)), rs.coerce3dpoint((16.467, 31.332, 0.000)), rs.coerce3dpoint((16.471, 31.238, 0.000)), rs.coerce3dpoint((16.473, 31.191, 0.000)), rs.coerce3dpoint((16.478, 31.144, 0.000)), rs.coerce3dpoint((16.487, 31.045, 0.000)), rs.coerce3dpoint((16.520, 30.953, 0.000)), rs.coerce3dpoint((16.579, 30.789, 0.000)), rs.coerce3dpoint((16.710, 30.675, 0.000)), rs.coerce3dpoint((16.786, 30.609, 0.000)), rs.coerce3dpoint((16.876, 30.564, 0.000)), rs.coerce3dpoint((16.938, 30.532, 0.000)), rs.coerce3dpoint((17.005, 30.509, 0.000)), rs.coerce3dpoint((17.106, 30.472, 0.000)), rs.coerce3dpoint((17.214, 30.482, 0.000)), rs.coerce3dpoint((17.303, 30.490, 0.000)), rs.coerce3dpoint((17.384, 30.527, 0.000)), rs.coerce3dpoint((17.462, 30.562, 0.000)), rs.coerce3dpoint((17.529, 30.615, 0.000)), rs.coerce3dpoint((17.605, 30.675, 0.000)), rs.coerce3dpoint((17.668, 30.749, 0.000)), rs.coerce3dpoint((17.682, 30.765, 0.000)), rs.coerce3dpoint((17.695, 30.782, 0.000)), rs.coerce3dpoint((17.747, 30.847, 0.000)), rs.coerce3dpoint((17.791, 30.918, 0.000)), rs.coerce3dpoint((17.799, 30.932, 0.000)), rs.coerce3dpoint((17.807, 30.946, 0.000)), rs.coerce3dpoint((18.033, 31.321, 0.000)), rs.coerce3dpoint((18.256, 31.697, 0.000)), rs.coerce3dpoint((18.377, 31.900, 0.000)), rs.coerce3dpoint((18.498, 32.104, 0.000)), rs.coerce3dpoint((18.728, 32.487, 0.000)), rs.coerce3dpoint((18.954, 32.872, 0.000)), rs.coerce3dpoint((19.021, 32.986, 0.000)), rs.coerce3dpoint((19.088, 33.100, 0.000)), rs.coerce3dpoint((19.436, 33.702, 0.000)), rs.coerce3dpoint((19.780, 34.306, 0.000)), rs.coerce3dpoint((19.839, 34.409, 0.000)), rs.coerce3dpoint((19.898, 34.513, 0.000)), rs.coerce3dpoint((20.066, 34.807, 0.000)), rs.coerce3dpoint((20.235, 35.102, 0.000)), rs.coerce3dpoint((20.466, 35.507, 0.000)), rs.coerce3dpoint((20.697, 35.911, 0.000)), rs.coerce3dpoint((21.076, 36.578, 0.000)), rs.coerce3dpoint((21.458, 37.242, 0.000)), rs.coerce3dpoint((21.667, 37.605, 0.000)), rs.coerce3dpoint((21.878, 37.967, 0.000)), rs.coerce3dpoint((21.979, 38.138, 0.000)), rs.coerce3dpoint((22.041, 38.327, 0.000)), rs.coerce3dpoint((22.104, 38.525, 0.000)), rs.coerce3dpoint((22.122, 38.732, 0.000)), rs.coerce3dpoint((22.131, 38.843, 0.000)), rs.coerce3dpoint((22.129, 38.954, 0.000)), rs.coerce3dpoint((22.116, 39.635, 0.000)), rs.coerce3dpoint((22.110, 40.316, 0.000)), rs.coerce3dpoint((22.108, 40.531, 0.000)), rs.coerce3dpoint((22.106, 40.747, 0.000)), rs.coerce3dpoint((22.099, 41.324, 0.000)), rs.coerce3dpoint((22.093, 41.901, 0.000)), rs.coerce3dpoint((22.087, 42.368, 0.000)), rs.coerce3dpoint((22.075, 42.834, 0.000)), rs.coerce3dpoint((22.069, 43.064, 0.000)), rs.coerce3dpoint((22.060, 43.294, 0.000)), rs.coerce3dpoint((22.056, 43.410, 0.000)), rs.coerce3dpoint((22.015, 43.519, 0.000)), rs.coerce3dpoint((21.965, 43.651, 0.000)), rs.coerce3dpoint((21.862, 43.748, 0.000)), rs.coerce3dpoint((21.760, 43.843, 0.000)), rs.coerce3dpoint((21.626, 43.885, 0.000)), rs.coerce3dpoint((21.545, 43.910, 0.000)), rs.coerce3dpoint((21.459, 43.915, 0.000)), rs.coerce3dpoint((21.273, 43.926, 0.000)), rs.coerce3dpoint((21.086, 43.928, 0.000)), rs.coerce3dpoint((20.920, 43.929, 0.000)), rs.coerce3dpoint((20.753, 43.929, 0.000)), rs.coerce3dpoint((20.630, 43.928, 0.000)), rs.coerce3dpoint((20.507, 43.929, 0.000)), rs.coerce3dpoint((20.323, 43.929, 0.000)), rs.coerce3dpoint((20.139, 43.927, 0.000)), rs.coerce3dpoint((20.024, 43.925, 0.000)), rs.coerce3dpoint((19.909, 43.925, 0.000)), rs.coerce3dpoint((19.823, 43.924, 0.000)), rs.coerce3dpoint((19.736, 43.924, 0.000)), rs.coerce3dpoint((19.536, 43.922, 0.000)), rs.coerce3dpoint((19.336, 43.923, 0.000)), rs.coerce3dpoint((19.286, 43.923, 0.000)), rs.coerce3dpoint((19.236, 43.924, 0.000)), rs.coerce3dpoint((19.131, 43.927, 0.000)), rs.coerce3dpoint((19.029, 43.902, 0.000)), rs.coerce3dpoint((18.896, 43.868, 0.000)), rs.coerce3dpoint((18.785, 43.788, 0.000)), rs.coerce3dpoint((18.704, 43.729, 0.000)), rs.coerce3dpoint((18.637, 43.654, 0.000)), rs.coerce3dpoint((18.598, 43.611, 0.000)), rs.coerce3dpoint((18.564, 43.563, 0.000)), rs.coerce3dpoint((18.511, 43.491, 0.000)), rs.coerce3dpoint((18.463, 43.415, 0.000)), rs.coerce3dpoint((18.387, 43.295, 0.000)), rs.coerce3dpoint((18.314, 43.172, 0.000)), rs.coerce3dpoint((18.145, 42.890, 0.000)), rs.coerce3dpoint((17.979, 42.606, 0.000)), rs.coerce3dpoint((17.761, 42.232, 0.000)), rs.coerce3dpoint((17.542, 41.858, 0.000)), rs.coerce3dpoint((17.395, 41.605, 0.000)), rs.coerce3dpoint((17.249, 41.352, 0.000)), rs.coerce3dpoint((17.080, 41.063, 0.000)), rs.coerce3dpoint((16.912, 40.773, 0.000)), rs.coerce3dpoint((16.790, 40.563, 0.000)), rs.coerce3dpoint((16.669, 40.353, 0.000)), rs.coerce3dpoint((16.632, 40.288, 0.000)), rs.coerce3dpoint((16.597, 40.222, 0.000)), rs.coerce3dpoint((16.588, 40.204, 0.000)), rs.coerce3dpoint((16.578, 40.185, 0.000)), rs.coerce3dpoint((16.548, 40.122, 0.000)), rs.coerce3dpoint((16.525, 40.056, 0.000)), rs.coerce3dpoint((16.500, 39.977, 0.000)), rs.coerce3dpoint((16.490, 39.895, 0.000)), rs.coerce3dpoint((16.489, 39.889, 0.000)), rs.coerce3dpoint((16.488, 39.883, 0.000)), rs.coerce3dpoint((16.484, 39.841, 0.000)), rs.coerce3dpoint((16.483, 39.800, 0.000)), rs.coerce3dpoint((16.480, 39.698, 0.000)), rs.coerce3dpoint((16.479, 39.596, 0.000)), rs.coerce3dpoint((16.477, 39.254, 0.000)), rs.coerce3dpoint((16.477, 38.913, 0.000)), rs.coerce3dpoint((16.477, 37.581, 0.000)), rs.coerce3dpoint((16.477, 36.250, 0.000)), rs.coerce3dpoint((16.477, 35.992, 0.000)), rs.coerce3dpoint((16.477, 35.733, 0.000)), rs.coerce3dpoint((16.477, 35.608, 0.000)), rs.coerce3dpoint((16.477, 35.483, 0.000))], [0.0, 0.0, 1.83462061192, 1.83462061192, 3.54996846344, 3.54996846344, 4.05730216900, 4.05730216900, 4.24572852008, 4.24572852008, 4.33994839111, 4.33994839111, 4.53614796698, 4.53614796698, 4.87629608402, 4.87629608402, 5.07613906996, 5.07613906996, 5.21612514152, 5.21612514152, 5.42884594656, 5.42884594656, 5.60549111896, 5.60549111896, 5.77594669633, 5.77594669633, 5.96906737111, 5.96906737111, 6.01162129494, 6.01162129494, 6.17848718583, 6.17848718583, 6.21073697653, 6.21073697653, 7.08585479122, 7.08585479122, 7.55883774197, 7.55883774197, 8.45202959220, 8.45202959220, 8.71657441600, 8.71657441600, 10.1068978418, 10.1068978418, 10.3455072115, 10.3455072115, 11.0236795377, 11.0236795377, 11.9558974288, 11.9558974288, 13.4886258018, 13.4886258018, 14.3267267213, 14.3267267213, 14.7227348458, 14.7227348458, 15.1366805002, 15.1366805002, 15.3583048987, 15.3583048987, 16.7206467033, 16.7206467033, 17.1514185665, 17.1514185665, 18.3055896570, 18.3055896570, 19.2394884155, 19.2394884155, 19.6995829865, 19.6995829865, 19.9292385860, 19.9292385860, 20.2071782920, 20.2071782920, 20.4822555825, 20.4822555825, 20.6521738468, 20.6521738468, 21.0257759384, 21.0257759384, 21.3584395282, 21.3584395282, 21.6051701861, 21.6051701861, 21.9732189262, 21.9732189262, 22.2024473951, 22.2024473951, 22.3755310188, 22.3755310188, 22.7755766344, 22.7755766344, 22.8762970316, 22.8762970316, 23.0850861705, 23.0850861705, 23.3558579548, 23.3558579548, 23.5555172655, 23.5555172655, 23.6719692819, 23.6719692819, 23.8514192744, 23.8514192744, 24.1362506682, 24.1362506682, 24.7942119877, 24.7942119877, 25.6606923572, 25.6606923572, 26.2452761402, 26.2452761402, 26.9155808354, 26.9155808354, 27.4005056125, 27.4005056125, 27.5495021485, 27.5495021485, 27.5917609479, 27.5917609479, 27.7312004871, 27.7312004871, 27.8962090425, 27.8962090425, 27.9085977632, 27.9085977632, 27.9919082633, 27.9919082633, 28.1955745943, 28.1955745943, 28.8787600911, 28.8787600911, 31.5413500916, 31.5413500916, 32.0584101195, 32.0584101195, 32.3082201323, 32.3082201323], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999858889957, 1.0, 0.999550101227, 1.0, 0.992390582193, 1.0, 0.967511950791, 1.0, 0.992464003025, 1.0, 0.997771366175, 1.0, 0.97672944677, 1.0, 0.98615205136, 1.0, 0.992633949636, 1.0, 0.99522898849, 1.0, 0.999848631457, 1.0, 0.998177582118, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.999996620006, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999997580003, 1.0, 0.999994880013, 1.0, 0.994163462437, 1.0, 0.99345490943, 1.0, 0.998638507462, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999982000162, 1.0, 0.986770966315, 1.0, 0.974341458407, 1.0, 0.974828032222, 1.0, 0.992561350042, 1.0, 0.999682530401, 1.0, 0.999974080336, 1.0, 0.999992000032, 1.0, 0.999969580463, 1.0, 0.99999550001, 1.0, 1.0, 1.0, 0.999963020684, 1.0, 0.999988480066, 1.0, 0.991115166261, 1.0, 0.982223243552, 1.0, 0.993880461842, 1.0, 0.998780563966, 1.0, 0.999408494991, 1.0, 0.99991550357, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.999834393714, 1.0, 0.999887506328, 1.0, 0.997771366175, 1.0, 0.995189976054, 1.0, 1.0, 1.0, 0.999067315153, 1.0, 0.99992062315, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.379, 35.411, 0.000), (9.380, 34.293, 0.000), (9.382, 33.175, 0.000), (9.382, 32.864, 0.000), (9.385, 32.554, 0.000), (9.386, 32.445, 0.000), (9.390, 32.336, 0.000), (9.392, 32.276, 0.000), (9.398, 32.216, 0.000), (9.403, 32.154, 0.000), (9.413, 32.091, 0.000), (9.426, 32.014, 0.000), (9.454, 31.941, 0.000), (9.463, 31.918, 0.000), (9.474, 31.896, 0.000), (9.528, 31.785, 0.000), (9.625, 31.709, 0.000), (9.687, 31.661, 0.000), (9.758, 31.627, 0.000), (9.797, 31.608, 0.000), (9.838, 31.593, 0.000), (9.918, 31.566, 0.000), (10.002, 31.557, 0.000), (10.097, 31.547, 0.000), (10.191, 31.569, 0.000), (10.285, 31.592, 0.000), (10.367, 31.644, 0.000), (10.438, 31.691, 0.000), (10.498, 31.752, 0.000), (10.503, 31.757, 0.000), (10.509, 31.762, 0.000), (10.583, 31.841, 0.000), (10.646, 31.929, 0.000), (10.713, 32.022, 0.000), (10.772, 32.121, 0.000), (10.779, 32.134, 0.000), (10.787, 32.147, 0.000), (11.012, 32.530, 0.000), (11.233, 32.915, 0.000), (11.257, 32.956, 0.000), (11.280, 32.997, 0.000), (11.501, 33.382, 0.000), (11.726, 33.765, 0.000), (11.735, 33.782, 0.000), (11.745, 33.798, 0.000), (12.024, 34.273, 0.000), (12.307, 34.746, 0.000), (12.587, 35.215, 0.000), (12.864, 35.685, 0.000), (12.902, 35.751, 0.000), (12.941, 35.817, 0.000), (13.217, 36.291, 0.000), (13.489, 36.767, 0.000), (13.566, 36.902, 0.000), (13.643, 37.036, 0.000), (13.807, 37.323, 0.000), (13.971, 37.609, 0.000), (14.525, 38.574, 0.000), (15.080, 39.540, 0.000), (15.417, 40.126, 0.000), (15.753, 40.712, 0.000), (15.831, 40.846, 0.000), (15.908, 40.980, 0.000), (16.099, 41.311, 0.000), (16.287, 41.643, 0.000), (16.491, 42.029, 0.000), (16.690, 42.418, 0.000), (16.800, 42.631, 0.000), (16.905, 42.846, 0.000), (16.965, 42.971, 0.000), (17.021, 43.098, 0.000), (17.056, 43.177, 0.000), (17.084, 43.257, 0.000), (17.106, 43.317, 0.000), (17.119, 43.380, 0.000), (17.126, 43.415, 0.000), (17.130, 43.450, 0.000), (17.135, 43.489, 0.000), (17.133, 43.528, 0.000), (17.129, 43.598, 0.000), (17.090, 43.656, 0.000), (17.064, 43.695, 0.000), (17.029, 43.727, 0.000), (17.014, 43.741, 0.000), (16.999, 43.753, 0.000), (16.962, 43.782, 0.000), (16.919, 43.801, 0.000), (16.870, 43.822, 0.000), (16.818, 43.835, 0.000), (16.745, 43.853, 0.000), (16.671, 43.864, 0.000), (16.561, 43.880, 0.000), (16.450, 43.888, 0.000), (16.280, 43.901, 0.000), (16.109, 43.907, 0.000), (15.842, 43.917, 0.000), (15.574, 43.920, 0.000), (15.487, 43.921, 0.000), (15.399, 43.922, 0.000), (14.696, 43.927, 0.000), (13.993, 43.933, 0.000), (13.656, 43.935, 0.000), (13.319, 43.933, 0.000), (13.134, 43.932, 0.000), (12.948, 43.926, 0.000), (12.839, 43.922, 0.000), (12.730, 43.913, 0.000), (12.651, 43.906, 0.000), (12.574, 43.892, 0.000), (12.534, 43.884, 0.000), (12.494, 43.874, 0.000), (12.453, 43.864, 0.000), (12.415, 43.847, 0.000), (12.363, 43.824, 0.000), (12.319, 43.788, 0.000), (12.276, 43.751, 0.000), (12.239, 43.708, 0.000), (12.189, 43.649, 0.000), (12.145, 43.586, 0.000), (12.082, 43.493, 0.000), (12.025, 43.396, 0.000), (12.023, 43.392, 0.000), (12.020, 43.387, 0.000), (11.610, 42.686, 0.000), (11.204, 41.984, 0.000), (11.160, 41.909, 0.000), (11.117, 41.835, 0.000), (10.989, 41.614, 0.000), (10.861, 41.393, 0.000), (10.676, 41.072, 0.000), (10.491, 40.751, 0.000), (10.228, 40.293, 0.000), (9.962, 39.837, 0.000), (9.804, 39.566, 0.000), (9.643, 39.296, 0.000), (9.562, 39.161, 0.000), (9.502, 39.015, 0.000), (9.423, 38.823, 0.000), (9.393, 38.618, 0.000), (9.374, 38.488, 0.000), (9.375, 38.356, 0.000), (9.382, 37.656, 0.000), (9.381, 36.956, 0.000), (9.380, 36.599, 0.000), (9.380, 36.242, 0.000), (9.379, 35.827, 0.000), (9.379, 35.411, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.379, 35.411, 0.000)), rs.coerce3dpoint((9.380, 34.293, 0.000)), rs.coerce3dpoint((9.382, 33.175, 0.000)), rs.coerce3dpoint((9.382, 32.864, 0.000)), rs.coerce3dpoint((9.385, 32.554, 0.000)), rs.coerce3dpoint((9.386, 32.445, 0.000)), rs.coerce3dpoint((9.390, 32.336, 0.000)), rs.coerce3dpoint((9.392, 32.276, 0.000)), rs.coerce3dpoint((9.398, 32.216, 0.000)), rs.coerce3dpoint((9.403, 32.154, 0.000)), rs.coerce3dpoint((9.413, 32.091, 0.000)), rs.coerce3dpoint((9.426, 32.014, 0.000)), rs.coerce3dpoint((9.454, 31.941, 0.000)), rs.coerce3dpoint((9.463, 31.918, 0.000)), rs.coerce3dpoint((9.474, 31.896, 0.000)), rs.coerce3dpoint((9.528, 31.785, 0.000)), rs.coerce3dpoint((9.625, 31.709, 0.000)), rs.coerce3dpoint((9.687, 31.661, 0.000)), rs.coerce3dpoint((9.758, 31.627, 0.000)), rs.coerce3dpoint((9.797, 31.608, 0.000)), rs.coerce3dpoint((9.838, 31.593, 0.000)), rs.coerce3dpoint((9.918, 31.566, 0.000)), rs.coerce3dpoint((10.002, 31.557, 0.000)), rs.coerce3dpoint((10.097, 31.547, 0.000)), rs.coerce3dpoint((10.191, 31.569, 0.000)), rs.coerce3dpoint((10.285, 31.592, 0.000)), rs.coerce3dpoint((10.367, 31.644, 0.000)), rs.coerce3dpoint((10.438, 31.691, 0.000)), rs.coerce3dpoint((10.498, 31.752, 0.000)), rs.coerce3dpoint((10.503, 31.757, 0.000)), rs.coerce3dpoint((10.509, 31.762, 0.000)), rs.coerce3dpoint((10.583, 31.841, 0.000)), rs.coerce3dpoint((10.646, 31.929, 0.000)), rs.coerce3dpoint((10.713, 32.022, 0.000)), rs.coerce3dpoint((10.772, 32.121, 0.000)), rs.coerce3dpoint((10.779, 32.134, 0.000)), rs.coerce3dpoint((10.787, 32.147, 0.000)), rs.coerce3dpoint((11.012, 32.530, 0.000)), rs.coerce3dpoint((11.233, 32.915, 0.000)), rs.coerce3dpoint((11.257, 32.956, 0.000)), rs.coerce3dpoint((11.280, 32.997, 0.000)), rs.coerce3dpoint((11.501, 33.382, 0.000)), rs.coerce3dpoint((11.726, 33.765, 0.000)), rs.coerce3dpoint((11.735, 33.782, 0.000)), rs.coerce3dpoint((11.745, 33.798, 0.000)), rs.coerce3dpoint((12.024, 34.273, 0.000)), rs.coerce3dpoint((12.307, 34.746, 0.000)), rs.coerce3dpoint((12.587, 35.215, 0.000)), rs.coerce3dpoint((12.864, 35.685, 0.000)), rs.coerce3dpoint((12.902, 35.751, 0.000)), rs.coerce3dpoint((12.941, 35.817, 0.000)), rs.coerce3dpoint((13.217, 36.291, 0.000)), rs.coerce3dpoint((13.489, 36.767, 0.000)), rs.coerce3dpoint((13.566, 36.902, 0.000)), rs.coerce3dpoint((13.643, 37.036, 0.000)), rs.coerce3dpoint((13.807, 37.323, 0.000)), rs.coerce3dpoint((13.971, 37.609, 0.000)), rs.coerce3dpoint((14.525, 38.574, 0.000)), rs.coerce3dpoint((15.080, 39.540, 0.000)), rs.coerce3dpoint((15.417, 40.126, 0.000)), rs.coerce3dpoint((15.753, 40.712, 0.000)), rs.coerce3dpoint((15.831, 40.846, 0.000)), rs.coerce3dpoint((15.908, 40.980, 0.000)), rs.coerce3dpoint((16.099, 41.311, 0.000)), rs.coerce3dpoint((16.287, 41.643, 0.000)), rs.coerce3dpoint((16.491, 42.029, 0.000)), rs.coerce3dpoint((16.690, 42.418, 0.000)), rs.coerce3dpoint((16.800, 42.631, 0.000)), rs.coerce3dpoint((16.905, 42.846, 0.000)), rs.coerce3dpoint((16.965, 42.971, 0.000)), rs.coerce3dpoint((17.021, 43.098, 0.000)), rs.coerce3dpoint((17.056, 43.177, 0.000)), rs.coerce3dpoint((17.084, 43.257, 0.000)), rs.coerce3dpoint((17.106, 43.317, 0.000)), rs.coerce3dpoint((17.119, 43.380, 0.000)), rs.coerce3dpoint((17.126, 43.415, 0.000)), rs.coerce3dpoint((17.130, 43.450, 0.000)), rs.coerce3dpoint((17.135, 43.489, 0.000)), rs.coerce3dpoint((17.133, 43.528, 0.000)), rs.coerce3dpoint((17.129, 43.598, 0.000)), rs.coerce3dpoint((17.090, 43.656, 0.000)), rs.coerce3dpoint((17.064, 43.695, 0.000)), rs.coerce3dpoint((17.029, 43.727, 0.000)), rs.coerce3dpoint((17.014, 43.741, 0.000)), rs.coerce3dpoint((16.999, 43.753, 0.000)), rs.coerce3dpoint((16.962, 43.782, 0.000)), rs.coerce3dpoint((16.919, 43.801, 0.000)), rs.coerce3dpoint((16.870, 43.822, 0.000)), rs.coerce3dpoint((16.818, 43.835, 0.000)), rs.coerce3dpoint((16.745, 43.853, 0.000)), rs.coerce3dpoint((16.671, 43.864, 0.000)), rs.coerce3dpoint((16.561, 43.880, 0.000)), rs.coerce3dpoint((16.450, 43.888, 0.000)), rs.coerce3dpoint((16.280, 43.901, 0.000)), rs.coerce3dpoint((16.109, 43.907, 0.000)), rs.coerce3dpoint((15.842, 43.917, 0.000)), rs.coerce3dpoint((15.574, 43.920, 0.000)), rs.coerce3dpoint((15.487, 43.921, 0.000)), rs.coerce3dpoint((15.399, 43.922, 0.000)), rs.coerce3dpoint((14.696, 43.927, 0.000)), rs.coerce3dpoint((13.993, 43.933, 0.000)), rs.coerce3dpoint((13.656, 43.935, 0.000)), rs.coerce3dpoint((13.319, 43.933, 0.000)), rs.coerce3dpoint((13.134, 43.932, 0.000)), rs.coerce3dpoint((12.948, 43.926, 0.000)), rs.coerce3dpoint((12.839, 43.922, 0.000)), rs.coerce3dpoint((12.730, 43.913, 0.000)), rs.coerce3dpoint((12.651, 43.906, 0.000)), rs.coerce3dpoint((12.574, 43.892, 0.000)), rs.coerce3dpoint((12.534, 43.884, 0.000)), rs.coerce3dpoint((12.494, 43.874, 0.000)), rs.coerce3dpoint((12.453, 43.864, 0.000)), rs.coerce3dpoint((12.415, 43.847, 0.000)), rs.coerce3dpoint((12.363, 43.824, 0.000)), rs.coerce3dpoint((12.319, 43.788, 0.000)), rs.coerce3dpoint((12.276, 43.751, 0.000)), rs.coerce3dpoint((12.239, 43.708, 0.000)), rs.coerce3dpoint((12.189, 43.649, 0.000)), rs.coerce3dpoint((12.145, 43.586, 0.000)), rs.coerce3dpoint((12.082, 43.493, 0.000)), rs.coerce3dpoint((12.025, 43.396, 0.000)), rs.coerce3dpoint((12.023, 43.392, 0.000)), rs.coerce3dpoint((12.020, 43.387, 0.000)), rs.coerce3dpoint((11.610, 42.686, 0.000)), rs.coerce3dpoint((11.204, 41.984, 0.000)), rs.coerce3dpoint((11.160, 41.909, 0.000)), rs.coerce3dpoint((11.117, 41.835, 0.000)), rs.coerce3dpoint((10.989, 41.614, 0.000)), rs.coerce3dpoint((10.861, 41.393, 0.000)), rs.coerce3dpoint((10.676, 41.072, 0.000)), rs.coerce3dpoint((10.491, 40.751, 0.000)), rs.coerce3dpoint((10.228, 40.293, 0.000)), rs.coerce3dpoint((9.962, 39.837, 0.000)), rs.coerce3dpoint((9.804, 39.566, 0.000)), rs.coerce3dpoint((9.643, 39.296, 0.000)), rs.coerce3dpoint((9.562, 39.161, 0.000)), rs.coerce3dpoint((9.502, 39.015, 0.000)), rs.coerce3dpoint((9.423, 38.823, 0.000)), rs.coerce3dpoint((9.393, 38.618, 0.000)), rs.coerce3dpoint((9.374, 38.488, 0.000)), rs.coerce3dpoint((9.375, 38.356, 0.000)), rs.coerce3dpoint((9.382, 37.656, 0.000)), rs.coerce3dpoint((9.381, 36.956, 0.000)), rs.coerce3dpoint((9.380, 36.599, 0.000)), rs.coerce3dpoint((9.380, 36.242, 0.000)), rs.coerce3dpoint((9.379, 35.827, 0.000)), rs.coerce3dpoint((9.379, 35.411, 0.000))], [0.0, 0.0, 2.23634224673, 2.23634224673, 2.85673343841, 2.85673343841, 3.07478060605, 3.07478060605, 3.19498775245, 3.19498775245, 3.32082136435, 3.32082136435, 3.47721066090, 3.47721066090, 3.52601611568, 3.52601611568, 3.76892269548, 3.76892269548, 3.92501716537, 3.92501716537, 4.01196246409, 4.01196246409, 4.18002429647, 4.18002429647, 4.37081257810, 4.37081257810, 4.56290022764, 4.56290022764, 4.73275123891, 4.73275123891, 4.74786298600, 4.74786298600, 4.96365727919, 4.96365727919, 5.19377851547, 5.19377851547, 5.22355958496, 5.22355958496, 6.11199778439, 6.11199778439, 6.20602291136, 6.20602291136, 7.09456283974, 7.09456283974, 7.13256706713, 7.13256706713, 8.23486500521, 8.23486500521, 9.32612666923, 9.32612666923, 9.47924336231, 9.47924336231, 10.5757329184, 10.5757329184, 10.8862824044, 10.8862824044, 11.5464115126, 11.5464115126, 13.7725291779, 13.7725291779, 15.1249750945, 15.1249750945, 15.4339606738, 15.4339606738, 16.1974957109, 16.1974957109, 17.0710948449, 17.0710948449, 17.5498779710, 17.5498779710, 17.8276449235, 17.8276449235, 17.9991692503, 17.9991692503, 18.1263486100, 18.1263486100, 18.1978820884, 18.1978820884, 18.2752016935, 18.2752016935, 18.4125797821, 18.4125797821, 18.5063370028, 18.5063370028, 18.5457746874, 18.5457746874, 18.6391131653, 18.6391131653, 18.7463989655, 18.7463989655, 18.8955007213, 18.8955007213, 19.1181867895, 19.1181867895, 19.4598454149, 19.4598454149, 19.9950126746, 19.9950126746, 20.1700932026, 20.1700932026, 21.5762836087, 21.5762836087, 22.2500379252, 22.2500379252, 22.6209670842, 22.6209670842, 22.8398933630, 22.8398933630, 22.9970746821, 22.9970746821, 23.0794003364, 23.0794003364, 23.1630333699, 23.1630333699, 23.2756299882, 23.2756299882, 23.3889453819, 23.3889453819, 23.5432083229, 23.5432083229, 23.7672359345, 23.7672359345, 23.7784420935, 23.7784420935, 25.4016937223, 25.4016937223, 25.5734872193, 25.5734872193, 26.0847501207, 26.0847501207, 26.8259854381, 26.8259854381, 27.8816115526, 27.8816115526, 28.5096785186, 28.5096785186, 28.8240093127, 28.8240093127, 29.2372525696, 29.2372525696, 29.4999792955, 29.4999792955, 30.8996045654, 30.8996045654, 31.6138951708, 31.6138951708, 32.4450957252, 32.4450957252], 2, [1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999907524276, 1.0, 0.999619192521, 1.0, 0.99915164001, 1.0, 0.99464788102, 1.0, 0.999208293524, 1.0, 0.974341458407, 1.0, 0.99383633411, 1.0, 0.998951729723, 1.0, 0.993792049324, 1.0, 0.986086096495, 1.0, 0.985953726623, 1.0, 0.993858417609, 1.0, 1.0, 1.0, 0.997552997578, 1.0, 0.999058663266, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999993520021, 1.0, 0.999985420106, 1.0, 0.99993950183, 1.0, 0.999783703395, 1.0, 0.99931573419, 1.0, 0.997811178095, 1.0, 0.998867761345, 1.0, 0.996427811681, 1.0, 0.963574823059, 1.0, 0.992873404989, 1.0, 0.999449031825, 1.0, 0.99095556669, 1.0, 0.996594428849, 1.0, 0.998638507462, 1.0, 0.9994556482, 1.0, 0.999787842508, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999980780185, 1.0, 0.999904784533, 1.0, 0.999646282569, 1.0, 0.998770676083, 1.0, 0.999352209884, 1.0, 0.996931435279, 1.0, 0.989996664865, 1.0, 0.99661087284, 1.0, 0.998510530087, 1.0, 0.999337739367, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999987500078, 1.0, 0.997131300628, 1.0, 0.992488398437, 1.0, 0.997055222251, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(18.735, 20.711, 0.000), (18.478, 20.717, 0.000), (18.222, 20.723, 0.000), (17.853, 20.734, 0.000), (17.483, 20.741, 0.000), (17.154, 20.747, 0.000), (16.824, 20.744, 0.000), (16.757, 20.744, 0.000), (16.690, 20.742, 0.000), (16.577, 20.742, 0.000), (16.465, 20.724, 0.000), (16.354, 20.706, 0.000), (16.249, 20.666, 0.000), (16.097, 20.608, 0.000), (15.974, 20.501, 0.000), (15.897, 20.435, 0.000), (15.832, 20.356, 0.000), (15.719, 20.218, 0.000), (15.631, 20.062, 0.000), (15.345, 19.557, 0.000), (15.063, 19.050, 0.000), (14.890, 18.742, 0.000), (14.718, 18.434, 0.000), (14.550, 18.137, 0.000), (14.382, 17.840, 0.000), (14.228, 17.566, 0.000), (14.073, 17.292, 0.000), (14.039, 17.233, 0.000), (14.006, 17.173, 0.000), (13.902, 16.989, 0.000), (13.800, 16.804, 0.000), (13.754, 16.718, 0.000), (13.709, 16.632, 0.000), (13.658, 16.535, 0.000), (13.632, 16.429, 0.000), (13.588, 16.246, 0.000), (13.635, 16.064, 0.000), (13.662, 15.962, 0.000), (13.711, 15.869, 0.000), (13.826, 15.647, 0.000), (13.945, 15.427, 0.000), (14.006, 15.315, 0.000), (14.069, 15.204, 0.000), (14.339, 14.734, 0.000), (14.613, 14.264, 0.000), (14.621, 14.250, 0.000), (14.629, 14.236, 0.000), (14.787, 13.964, 0.000), (14.945, 13.691, 0.000), (15.089, 13.442, 0.000), (15.232, 13.192, 0.000), (15.452, 12.808, 0.000), (15.675, 12.425, 0.000), (15.787, 12.233, 0.000), (15.901, 12.042, 0.000), (16.035, 11.820, 0.000), (16.228, 11.647, 0.000), (16.281, 11.599, 0.000), (16.341, 11.561, 0.000), (16.398, 11.526, 0.000), (16.461, 11.507, 0.000), (16.549, 11.482, 0.000), (16.639, 11.495, 0.000), (16.704, 11.504, 0.000), (16.765, 11.528, 0.000), (16.828, 11.552, 0.000), (16.886, 11.584, 0.000), (16.940, 11.613, 0.000), (16.987, 11.652, 0.000), (17.030, 11.690, 0.000), (17.067, 11.734, 0.000), (17.119, 11.794, 0.000), (17.165, 11.858, 0.000), (17.237, 11.958, 0.000), (17.304, 12.062, 0.000), (17.414, 12.233, 0.000), (17.519, 12.407, 0.000), (17.695, 12.698, 0.000), (17.867, 12.992, 0.000), (18.077, 13.354, 0.000), (18.286, 13.716, 0.000), (19.223, 15.345, 0.000), (20.159, 16.974, 0.000), (20.699, 17.915, 0.000), (21.239, 18.855, 0.000), (21.386, 19.111, 0.000), (21.530, 19.367, 0.000), (21.573, 19.443, 0.000), (21.614, 19.521, 0.000), (21.629, 19.549, 0.000), (21.642, 19.577, 0.000), (21.665, 19.626, 0.000), (21.682, 19.678, 0.000), (21.707, 19.753, 0.000), (21.728, 19.830, 0.000), (21.732, 19.845, 0.000), (21.736, 19.859, 0.000), (21.767, 19.970, 0.000), (21.760, 20.086, 0.000), (21.751, 20.256, 0.000), (21.655, 20.398, 0.000), (21.578, 20.510, 0.000), (21.463, 20.581, 0.000), (21.375, 20.635, 0.000), (21.276, 20.663, 0.000), (21.190, 20.687, 0.000), (21.101, 20.697, 0.000), (21.004, 20.708, 0.000), (20.906, 20.708, 0.000), (20.895, 20.709, 0.000), (20.883, 20.709, 0.000), (20.192, 20.712, 0.000), (19.502, 20.711, 0.000), (19.394, 20.711, 0.000), (19.286, 20.711, 0.000), (19.010, 20.711, 0.000), (18.735, 20.711, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((18.735, 20.711, 0.000)), rs.coerce3dpoint((18.478, 20.717, 0.000)), rs.coerce3dpoint((18.222, 20.723, 0.000)), rs.coerce3dpoint((17.853, 20.734, 0.000)), rs.coerce3dpoint((17.483, 20.741, 0.000)), rs.coerce3dpoint((17.154, 20.747, 0.000)), rs.coerce3dpoint((16.824, 20.744, 0.000)), rs.coerce3dpoint((16.757, 20.744, 0.000)), rs.coerce3dpoint((16.690, 20.742, 0.000)), rs.coerce3dpoint((16.577, 20.742, 0.000)), rs.coerce3dpoint((16.465, 20.724, 0.000)), rs.coerce3dpoint((16.354, 20.706, 0.000)), rs.coerce3dpoint((16.249, 20.666, 0.000)), rs.coerce3dpoint((16.097, 20.608, 0.000)), rs.coerce3dpoint((15.974, 20.501, 0.000)), rs.coerce3dpoint((15.897, 20.435, 0.000)), rs.coerce3dpoint((15.832, 20.356, 0.000)), rs.coerce3dpoint((15.719, 20.218, 0.000)), rs.coerce3dpoint((15.631, 20.062, 0.000)), rs.coerce3dpoint((15.345, 19.557, 0.000)), rs.coerce3dpoint((15.063, 19.050, 0.000)), rs.coerce3dpoint((14.890, 18.742, 0.000)), rs.coerce3dpoint((14.718, 18.434, 0.000)), rs.coerce3dpoint((14.550, 18.137, 0.000)), rs.coerce3dpoint((14.382, 17.840, 0.000)), rs.coerce3dpoint((14.228, 17.566, 0.000)), rs.coerce3dpoint((14.073, 17.292, 0.000)), rs.coerce3dpoint((14.039, 17.233, 0.000)), rs.coerce3dpoint((14.006, 17.173, 0.000)), rs.coerce3dpoint((13.902, 16.989, 0.000)), rs.coerce3dpoint((13.800, 16.804, 0.000)), rs.coerce3dpoint((13.754, 16.718, 0.000)), rs.coerce3dpoint((13.709, 16.632, 0.000)), rs.coerce3dpoint((13.658, 16.535, 0.000)), rs.coerce3dpoint((13.632, 16.429, 0.000)), rs.coerce3dpoint((13.588, 16.246, 0.000)), rs.coerce3dpoint((13.635, 16.064, 0.000)), rs.coerce3dpoint((13.662, 15.962, 0.000)), rs.coerce3dpoint((13.711, 15.869, 0.000)), rs.coerce3dpoint((13.826, 15.647, 0.000)), rs.coerce3dpoint((13.945, 15.427, 0.000)), rs.coerce3dpoint((14.006, 15.315, 0.000)), rs.coerce3dpoint((14.069, 15.204, 0.000)), rs.coerce3dpoint((14.339, 14.734, 0.000)), rs.coerce3dpoint((14.613, 14.264, 0.000)), rs.coerce3dpoint((14.621, 14.250, 0.000)), rs.coerce3dpoint((14.629, 14.236, 0.000)), rs.coerce3dpoint((14.787, 13.964, 0.000)), rs.coerce3dpoint((14.945, 13.691, 0.000)), rs.coerce3dpoint((15.089, 13.442, 0.000)), rs.coerce3dpoint((15.232, 13.192, 0.000)), rs.coerce3dpoint((15.452, 12.808, 0.000)), rs.coerce3dpoint((15.675, 12.425, 0.000)), rs.coerce3dpoint((15.787, 12.233, 0.000)), rs.coerce3dpoint((15.901, 12.042, 0.000)), rs.coerce3dpoint((16.035, 11.820, 0.000)), rs.coerce3dpoint((16.228, 11.647, 0.000)), rs.coerce3dpoint((16.281, 11.599, 0.000)), rs.coerce3dpoint((16.341, 11.561, 0.000)), rs.coerce3dpoint((16.398, 11.526, 0.000)), rs.coerce3dpoint((16.461, 11.507, 0.000)), rs.coerce3dpoint((16.549, 11.482, 0.000)), rs.coerce3dpoint((16.639, 11.495, 0.000)), rs.coerce3dpoint((16.704, 11.504, 0.000)), rs.coerce3dpoint((16.765, 11.528, 0.000)), rs.coerce3dpoint((16.828, 11.552, 0.000)), rs.coerce3dpoint((16.886, 11.584, 0.000)), rs.coerce3dpoint((16.940, 11.613, 0.000)), rs.coerce3dpoint((16.987, 11.652, 0.000)), rs.coerce3dpoint((17.030, 11.690, 0.000)), rs.coerce3dpoint((17.067, 11.734, 0.000)), rs.coerce3dpoint((17.119, 11.794, 0.000)), rs.coerce3dpoint((17.165, 11.858, 0.000)), rs.coerce3dpoint((17.237, 11.958, 0.000)), rs.coerce3dpoint((17.304, 12.062, 0.000)), rs.coerce3dpoint((17.414, 12.233, 0.000)), rs.coerce3dpoint((17.519, 12.407, 0.000)), rs.coerce3dpoint((17.695, 12.698, 0.000)), rs.coerce3dpoint((17.867, 12.992, 0.000)), rs.coerce3dpoint((18.077, 13.354, 0.000)), rs.coerce3dpoint((18.286, 13.716, 0.000)), rs.coerce3dpoint((19.223, 15.345, 0.000)), rs.coerce3dpoint((20.159, 16.974, 0.000)), rs.coerce3dpoint((20.699, 17.915, 0.000)), rs.coerce3dpoint((21.239, 18.855, 0.000)), rs.coerce3dpoint((21.386, 19.111, 0.000)), rs.coerce3dpoint((21.530, 19.367, 0.000)), rs.coerce3dpoint((21.573, 19.443, 0.000)), rs.coerce3dpoint((21.614, 19.521, 0.000)), rs.coerce3dpoint((21.629, 19.549, 0.000)), rs.coerce3dpoint((21.642, 19.577, 0.000)), rs.coerce3dpoint((21.665, 19.626, 0.000)), rs.coerce3dpoint((21.682, 19.678, 0.000)), rs.coerce3dpoint((21.707, 19.753, 0.000)), rs.coerce3dpoint((21.728, 19.830, 0.000)), rs.coerce3dpoint((21.732, 19.845, 0.000)), rs.coerce3dpoint((21.736, 19.859, 0.000)), rs.coerce3dpoint((21.767, 19.970, 0.000)), rs.coerce3dpoint((21.760, 20.086, 0.000)), rs.coerce3dpoint((21.751, 20.256, 0.000)), rs.coerce3dpoint((21.655, 20.398, 0.000)), rs.coerce3dpoint((21.578, 20.510, 0.000)), rs.coerce3dpoint((21.463, 20.581, 0.000)), rs.coerce3dpoint((21.375, 20.635, 0.000)), rs.coerce3dpoint((21.276, 20.663, 0.000)), rs.coerce3dpoint((21.190, 20.687, 0.000)), rs.coerce3dpoint((21.101, 20.697, 0.000)), rs.coerce3dpoint((21.004, 20.708, 0.000)), rs.coerce3dpoint((20.906, 20.708, 0.000)), rs.coerce3dpoint((20.895, 20.709, 0.000)), rs.coerce3dpoint((20.883, 20.709, 0.000)), rs.coerce3dpoint((20.192, 20.712, 0.000)), rs.coerce3dpoint((19.502, 20.711, 0.000)), rs.coerce3dpoint((19.394, 20.711, 0.000)), rs.coerce3dpoint((19.286, 20.711, 0.000)), rs.coerce3dpoint((19.010, 20.711, 0.000)), rs.coerce3dpoint((18.735, 20.711, 0.000))], [0.0, 0.0, 0.512407750314, 0.512407750314, 1.25169885317, 1.25169885317, 1.91095832453, 1.91095832453, 2.04479051919, 2.04479051919, 2.27093528984, 2.27093528984, 2.49461143982, 2.49461143982, 2.81718049085, 2.81718049085, 3.02049952584, 3.02049952584, 3.37722904707, 3.37722904707, 4.53812721524, 4.53812721524, 5.24342514725, 5.24342514725, 5.92627122141, 5.92627122141, 6.55532593930, 6.55532593930, 6.69145519295, 6.69145519295, 7.11470277304, 7.11470277304, 7.30876969717, 7.30876969717, 7.52712043314, 7.52712043314, 7.89560194419, 7.89560194419, 8.10542336003, 8.10542336003, 8.60519065626, 8.60519065626, 8.86016762001, 8.86016762001, 9.94599300834, 9.94599300834, 9.97876627793, 9.97876627793, 10.6089357943, 10.6089357943, 11.1841443989, 11.1841443989, 12.0705632542, 12.0705632542, 12.5150335746, 12.5150335746, 13.0295860345, 13.0295860345, 13.1717395854, 13.1717395854, 13.3037021210, 13.3037021210, 13.4829590155, 13.4829590155, 13.6143486087, 13.6143486087, 13.7475395434, 13.7475395434, 13.8696621733, 13.8696621733, 13.9841884955, 13.9841884955, 14.1417731273, 14.1417731273, 14.3889570781, 14.3889570781, 14.7956998957, 14.7956998957, 15.4761371818, 15.4761371818, 16.3130447326, 16.3130447326, 20.0705621171, 20.0705621171, 22.2402302198, 22.2402302198, 22.8287621909, 22.8287621909, 23.0041871009, 23.0041871009, 23.0670759798, 23.0670759798, 23.1753793131, 23.1753793131, 23.3341663690, 23.3341663690, 23.3643346852, 23.3643346852, 23.5934851815, 23.5934851815, 23.9265986213, 23.9265986213, 24.1941281858, 24.1941281858, 24.3988191401, 24.3988191401, 24.5771153586, 24.5771153586, 24.7724213530, 24.7724213530, 24.7957123921, 24.7957123921, 26.1771669046, 26.1771669046, 26.3923369641, 26.3923369641, 26.9441370403, 26.9441370403], 2, [1.0, 0.999998000002, 1.0, 0.999990320047, 1.0, 0.999912883795, 1.0, 0.999992000032, 1.0, 0.997221285997, 1.0, 0.99464788102, 1.0, 0.985078384145, 1.0, 0.996360056672, 1.0, 0.99617046673, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999968000512, 1.0, 0.999957680895, 1.0, 0.992390582193, 1.0, 0.970288366677, 1.0, 0.99329455711, 1.0, 0.999955820976, 1.0, 0.99995000125, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.999988480066, 1.0, 0.988812927284, 1.0, 0.995922251004, 1.0, 0.991325784881, 1.0, 0.977319336509, 1.0, 0.993725327711, 1.0, 0.997594716178, 1.0, 0.993769848041, 1.0, 0.997382550011, 1.0, 0.999075927153, 1.0, 0.999667235375, 1.0, 0.999887506328, 1.0, 0.999966380565, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999896325374, 1.0, 0.999735534975, 1.0, 0.997889728974, 1.0, 0.999682530401, 1.0, 1.0, 1.0, 0.986609437879, 1.0, 0.963784591526, 1.0, 0.97831354883, 1.0, 0.990275494033, 1.0, 0.996708705239, 1.0, 0.998700345101, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.401, 30.080, 0.000), (-14.407, 31.368, 0.000), (-14.413, 32.656, 0.000), (-14.416, 33.150, 0.000), (-14.422, 33.644, 0.000), (-14.424, 33.855, 0.000), (-14.430, 34.067, 0.000), (-14.432, 34.163, 0.000), (-14.439, 34.258, 0.000), (-14.442, 34.309, 0.000), (-14.450, 34.360, 0.000), (-14.455, 34.385, 0.000), (-14.460, 34.409, 0.000), (-14.476, 34.477, 0.000), (-14.506, 34.541, 0.000), (-14.535, 34.604, 0.000), (-14.569, 34.664, 0.000), (-14.609, 34.735, 0.000), (-14.651, 34.804, 0.000), (-14.777, 35.011, 0.000), (-14.899, 35.220, 0.000), (-14.914, 35.245, 0.000), (-14.929, 35.270, 0.000), (-14.992, 35.378, 0.000), (-15.056, 35.486, 0.000), (-15.122, 35.598, 0.000), (-15.188, 35.709, 0.000), (-15.315, 35.927, 0.000), (-15.445, 36.143, 0.000), (-15.484, 36.207, 0.000), (-15.523, 36.271, 0.000), (-15.580, 36.365, 0.000), (-15.644, 36.455, 0.000), (-15.704, 36.541, 0.000), (-15.775, 36.620, 0.000), (-15.777, 36.622, 0.000), (-15.779, 36.624, 0.000), (-15.841, 36.692, 0.000), (-15.914, 36.748, 0.000), (-15.984, 36.801, 0.000), (-16.064, 36.835, 0.000), (-16.196, 36.890, 0.000), (-16.338, 36.876, 0.000), (-16.378, 36.872, 0.000), (-16.417, 36.864, 0.000), (-16.487, 36.848, 0.000), (-16.551, 36.816, 0.000), (-16.637, 36.773, 0.000), (-16.711, 36.711, 0.000), (-16.821, 36.621, 0.000), (-16.900, 36.503, 0.000), (-16.945, 36.437, 0.000), (-16.974, 36.362, 0.000), (-16.996, 36.305, 0.000), (-17.003, 36.243, 0.000), (-17.005, 36.219, 0.000), (-17.005, 36.194, 0.000), (-17.004, 35.936, 0.000), (-17.003, 35.679, 0.000), (-16.995, 33.138, 0.000), (-16.987, 30.596, 0.000), (-16.983, 29.777, 0.000), (-16.979, 28.959, 0.000), (-16.977, 28.660, 0.000), (-16.972, 28.361, 0.000), (-16.970, 28.245, 0.000), (-16.965, 28.128, 0.000), (-16.963, 28.074, 0.000), (-16.957, 28.020, 0.000), (-16.955, 28.005, 0.000), (-16.953, 27.991, 0.000), (-16.948, 27.956, 0.000), (-16.935, 27.923, 0.000), (-16.919, 27.881, 0.000), (-16.899, 27.840, 0.000), (-16.858, 27.757, 0.000), (-16.813, 27.676, 0.000), (-16.722, 27.511, 0.000), (-16.627, 27.349, 0.000), (-16.572, 27.254, 0.000), (-16.517, 27.160, 0.000), (-16.274, 26.749, 0.000), (-16.028, 26.339, 0.000), (-15.906, 26.137, 0.000), (-15.781, 25.937, 0.000), (-15.720, 25.840, 0.000), (-15.656, 25.746, 0.000), (-15.624, 25.698, 0.000), (-15.588, 25.653, 0.000), (-15.566, 25.625, 0.000), (-15.541, 25.600, 0.000), (-15.453, 25.509, 0.000), (-15.339, 25.453, 0.000), (-15.138, 25.355, 0.000), (-14.919, 25.401, 0.000), (-14.733, 25.440, 0.000), (-14.600, 25.575, 0.000), (-14.499, 25.678, 0.000), (-14.454, 25.816, 0.000), (-14.451, 25.826, 0.000), (-14.448, 25.837, 0.000), (-14.435, 25.883, 0.000), (-14.429, 25.930, 0.000), (-14.422, 25.993, 0.000), (-14.420, 26.056, 0.000), (-14.413, 26.191, 0.000), (-14.411, 26.326, 0.000), (-14.405, 26.624, 0.000), (-14.404, 26.921, 0.000), (-14.400, 27.581, 0.000), (-14.400, 28.240, 0.000), (-14.401, 29.160, 0.000), (-14.401, 30.080, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.401, 30.080, 0.000)), rs.coerce3dpoint((-14.407, 31.368, 0.000)), rs.coerce3dpoint((-14.413, 32.656, 0.000)), rs.coerce3dpoint((-14.416, 33.150, 0.000)), rs.coerce3dpoint((-14.422, 33.644, 0.000)), rs.coerce3dpoint((-14.424, 33.855, 0.000)), rs.coerce3dpoint((-14.430, 34.067, 0.000)), rs.coerce3dpoint((-14.432, 34.163, 0.000)), rs.coerce3dpoint((-14.439, 34.258, 0.000)), rs.coerce3dpoint((-14.442, 34.309, 0.000)), rs.coerce3dpoint((-14.450, 34.360, 0.000)), rs.coerce3dpoint((-14.455, 34.385, 0.000)), rs.coerce3dpoint((-14.460, 34.409, 0.000)), rs.coerce3dpoint((-14.476, 34.477, 0.000)), rs.coerce3dpoint((-14.506, 34.541, 0.000)), rs.coerce3dpoint((-14.535, 34.604, 0.000)), rs.coerce3dpoint((-14.569, 34.664, 0.000)), rs.coerce3dpoint((-14.609, 34.735, 0.000)), rs.coerce3dpoint((-14.651, 34.804, 0.000)), rs.coerce3dpoint((-14.777, 35.011, 0.000)), rs.coerce3dpoint((-14.899, 35.220, 0.000)), rs.coerce3dpoint((-14.914, 35.245, 0.000)), rs.coerce3dpoint((-14.929, 35.270, 0.000)), rs.coerce3dpoint((-14.992, 35.378, 0.000)), rs.coerce3dpoint((-15.056, 35.486, 0.000)), rs.coerce3dpoint((-15.122, 35.598, 0.000)), rs.coerce3dpoint((-15.188, 35.709, 0.000)), rs.coerce3dpoint((-15.315, 35.927, 0.000)), rs.coerce3dpoint((-15.445, 36.143, 0.000)), rs.coerce3dpoint((-15.484, 36.207, 0.000)), rs.coerce3dpoint((-15.523, 36.271, 0.000)), rs.coerce3dpoint((-15.580, 36.365, 0.000)), rs.coerce3dpoint((-15.644, 36.455, 0.000)), rs.coerce3dpoint((-15.704, 36.541, 0.000)), rs.coerce3dpoint((-15.775, 36.620, 0.000)), rs.coerce3dpoint((-15.777, 36.622, 0.000)), rs.coerce3dpoint((-15.779, 36.624, 0.000)), rs.coerce3dpoint((-15.841, 36.692, 0.000)), rs.coerce3dpoint((-15.914, 36.748, 0.000)), rs.coerce3dpoint((-15.984, 36.801, 0.000)), rs.coerce3dpoint((-16.064, 36.835, 0.000)), rs.coerce3dpoint((-16.196, 36.890, 0.000)), rs.coerce3dpoint((-16.338, 36.876, 0.000)), rs.coerce3dpoint((-16.378, 36.872, 0.000)), rs.coerce3dpoint((-16.417, 36.864, 0.000)), rs.coerce3dpoint((-16.487, 36.848, 0.000)), rs.coerce3dpoint((-16.551, 36.816, 0.000)), rs.coerce3dpoint((-16.637, 36.773, 0.000)), rs.coerce3dpoint((-16.711, 36.711, 0.000)), rs.coerce3dpoint((-16.821, 36.621, 0.000)), rs.coerce3dpoint((-16.900, 36.503, 0.000)), rs.coerce3dpoint((-16.945, 36.437, 0.000)), rs.coerce3dpoint((-16.974, 36.362, 0.000)), rs.coerce3dpoint((-16.996, 36.305, 0.000)), rs.coerce3dpoint((-17.003, 36.243, 0.000)), rs.coerce3dpoint((-17.005, 36.219, 0.000)), rs.coerce3dpoint((-17.005, 36.194, 0.000)), rs.coerce3dpoint((-17.004, 35.936, 0.000)), rs.coerce3dpoint((-17.003, 35.679, 0.000)), rs.coerce3dpoint((-16.995, 33.138, 0.000)), rs.coerce3dpoint((-16.987, 30.596, 0.000)), rs.coerce3dpoint((-16.983, 29.777, 0.000)), rs.coerce3dpoint((-16.979, 28.959, 0.000)), rs.coerce3dpoint((-16.977, 28.660, 0.000)), rs.coerce3dpoint((-16.972, 28.361, 0.000)), rs.coerce3dpoint((-16.970, 28.245, 0.000)), rs.coerce3dpoint((-16.965, 28.128, 0.000)), rs.coerce3dpoint((-16.963, 28.074, 0.000)), rs.coerce3dpoint((-16.957, 28.020, 0.000)), rs.coerce3dpoint((-16.955, 28.005, 0.000)), rs.coerce3dpoint((-16.953, 27.991, 0.000)), rs.coerce3dpoint((-16.948, 27.956, 0.000)), rs.coerce3dpoint((-16.935, 27.923, 0.000)), rs.coerce3dpoint((-16.919, 27.881, 0.000)), rs.coerce3dpoint((-16.899, 27.840, 0.000)), rs.coerce3dpoint((-16.858, 27.757, 0.000)), rs.coerce3dpoint((-16.813, 27.676, 0.000)), rs.coerce3dpoint((-16.722, 27.511, 0.000)), rs.coerce3dpoint((-16.627, 27.349, 0.000)), rs.coerce3dpoint((-16.572, 27.254, 0.000)), rs.coerce3dpoint((-16.517, 27.160, 0.000)), rs.coerce3dpoint((-16.274, 26.749, 0.000)), rs.coerce3dpoint((-16.028, 26.339, 0.000)), rs.coerce3dpoint((-15.906, 26.137, 0.000)), rs.coerce3dpoint((-15.781, 25.937, 0.000)), rs.coerce3dpoint((-15.720, 25.840, 0.000)), rs.coerce3dpoint((-15.656, 25.746, 0.000)), rs.coerce3dpoint((-15.624, 25.698, 0.000)), rs.coerce3dpoint((-15.588, 25.653, 0.000)), rs.coerce3dpoint((-15.566, 25.625, 0.000)), rs.coerce3dpoint((-15.541, 25.600, 0.000)), rs.coerce3dpoint((-15.453, 25.509, 0.000)), rs.coerce3dpoint((-15.339, 25.453, 0.000)), rs.coerce3dpoint((-15.138, 25.355, 0.000)), rs.coerce3dpoint((-14.919, 25.401, 0.000)), rs.coerce3dpoint((-14.733, 25.440, 0.000)), rs.coerce3dpoint((-14.600, 25.575, 0.000)), rs.coerce3dpoint((-14.499, 25.678, 0.000)), rs.coerce3dpoint((-14.454, 25.816, 0.000)), rs.coerce3dpoint((-14.451, 25.826, 0.000)), rs.coerce3dpoint((-14.448, 25.837, 0.000)), rs.coerce3dpoint((-14.435, 25.883, 0.000)), rs.coerce3dpoint((-14.429, 25.930, 0.000)), rs.coerce3dpoint((-14.422, 25.993, 0.000)), rs.coerce3dpoint((-14.420, 26.056, 0.000)), rs.coerce3dpoint((-14.413, 26.191, 0.000)), rs.coerce3dpoint((-14.411, 26.326, 0.000)), rs.coerce3dpoint((-14.405, 26.624, 0.000)), rs.coerce3dpoint((-14.404, 26.921, 0.000)), rs.coerce3dpoint((-14.400, 27.581, 0.000)), rs.coerce3dpoint((-14.400, 28.240, 0.000)), rs.coerce3dpoint((-14.401, 29.160, 0.000)), rs.coerce3dpoint((-14.401, 30.080, 0.000))], [0.0, 0.0, 2.57628822751, 2.57628822751, 3.56394500655, 3.56394500655, 3.98720264531, 3.98720264531, 4.17838145368, 4.17838145368, 4.28134206261, 4.28134206261, 4.33069021522, 4.33069021522, 4.47104632391, 4.47104632391, 4.60956765203, 4.60956765203, 4.77135739056, 4.77135739056, 5.25591446864, 5.25591446864, 5.3142420856, 5.3142420856, 5.56440380230, 5.56440380230, 5.82400827626, 5.82400827626, 6.32847256369, 6.32847256369, 6.47787802357, 6.47787802357, 6.69790086493, 6.69790086493, 6.90902757421, 6.90902757421, 6.91536218549, 6.91536218549, 7.09868664077, 7.09868664077, 7.27199318047, 7.27199318047, 7.55180557191, 7.55180557191, 7.63153047930, 7.63153047930, 7.77433211677, 7.77433211677, 7.96632552469, 7.96632552469, 8.24869157895, 8.24869157895, 8.40782575409, 8.40782575409, 8.53050536740, 8.53050536740, 8.58021407501, 8.58021407501, 9.09481640934, 9.09481640934, 14.1777122892, 14.1777122892, 15.8155530171, 15.8155530171, 16.4129141868, 16.4129141868, 16.6457798662, 16.6457798662, 16.7548073352, 16.7548073352, 16.7835860235, 16.7835860235, 16.8537886259, 16.8537886259, 16.9450495945, 16.9450495945, 17.1296194757, 17.1296194757, 17.5064737387, 17.5064737387, 17.7247060208, 17.7247060208, 18.6802018691, 18.6802018691, 19.1525664575, 19.1525664575, 19.3808950746, 19.3808950746, 19.4957328078, 19.4957328078, 19.5669368004, 19.5669368004, 19.8178562290, 19.8178562290, 20.2488565897, 20.2488565897, 20.6172747872, 20.6172747872, 20.9010832742, 20.9010832742, 20.9232075256, 20.9232075256, 21.0183215263, 21.0183215263, 21.1451556143, 21.1451556143, 21.4153458555, 21.4153458555, 22.0102822135, 22.0102822135, 23.3289293824, 23.3289293824, 25.1688697053, 25.1688697053], 2, [1.0, 1.0, 1.0, 0.999994220017, 1.0, 0.99996128075, 1.0, 0.999787842508, 1.0, 0.998914809139, 1.0, 0.99937361624, 1.0, 0.994892357404, 1.0, 0.999075927153, 1.0, 0.999819516289, 1.0, 0.99996128075, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999989420056, 1.0, 0.999507141485, 1.0, 0.998141229122, 1.0, 1.0, 1.0, 0.995813501766, 1.0, 0.992168209041, 1.0, 0.969761773367, 1.0, 0.998177582118, 1.0, 0.992658071263, 1.0, 0.99345490943, 1.0, 0.989107646528, 1.0, 0.993858417609, 1.0, 0.991662720602, 1.0, 0.997468488337, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999986480091, 1.0, 0.999899185082, 1.0, 0.99931573419, 1.0, 1.0, 1.0, 0.992754166503, 1.0, 0.998867761345, 1.0, 0.999716820101, 1.0, 0.999923122955, 1.0, 0.99999550001, 1.0, 0.999986480091, 1.0, 0.999953921062, 1.0, 0.999823295614, 1.0, 0.999262991691, 1.0, 0.998690138431, 1.0, 0.984700263223, 1.0, 0.946240099623, 1.0, 0.956903965016, 1.0, 0.974074168098, 1.0, 1.0, 1.0, 0.996117929889, 1.0, 0.999449031825, 1.0, 0.999887506328, 1.0, 0.999976880267, 1.0, 0.99999550001, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(6.391, 56.496, 0.000), (6.391, 56.324, 0.000), (6.396, 56.153, 0.000), (6.400, 56.034, 0.000), (6.411, 55.916, 0.000), (6.419, 55.824, 0.000), (6.437, 55.733, 0.000), (6.454, 55.645, 0.000), (6.486, 55.562, 0.000), (6.511, 55.499, 0.000), (6.545, 55.441, 0.000), (6.742, 55.102, 0.000), (6.934, 54.761, 0.000), (6.951, 54.731, 0.000), (6.968, 54.702, 0.000), (7.160, 54.363, 0.000), (7.354, 54.025, 0.000), (7.652, 53.513, 0.000), (7.952, 53.001, 0.000), (8.255, 52.483, 0.000), (8.556, 51.964, 0.000), (8.982, 51.225, 0.000), (9.408, 50.485, 0.000), (9.687, 50.001, 0.000), (9.965, 49.517, 0.000), (10.043, 49.382, 0.000), (10.121, 49.246, 0.000), (10.539, 48.523, 0.000), (10.958, 47.799, 0.000), (11.212, 47.361, 0.000), (11.470, 46.925, 0.000), (11.588, 46.726, 0.000), (11.707, 46.529, 0.000), (11.781, 46.408, 0.000), (11.859, 46.290, 0.000), (11.912, 46.209, 0.000), (11.972, 46.132, 0.000), (12.018, 46.072, 0.000), (12.072, 46.019, 0.000), (12.130, 45.961, 0.000), (12.201, 45.918, 0.000), (12.215, 45.909, 0.000), (12.230, 45.901, 0.000), (12.324, 45.850, 0.000), (12.429, 45.833, 0.000), (12.572, 45.809, 0.000), (12.708, 45.857, 0.000), (12.794, 45.887, 0.000), (12.868, 45.938, 0.000), (12.947, 45.992, 0.000), (13.012, 46.059, 0.000), (13.025, 46.072, 0.000), (13.037, 46.085, 0.000), (13.148, 46.204, 0.000), (13.238, 46.338, 0.000), (13.327, 46.469, 0.000), (13.388, 46.614, 0.000), (13.450, 46.762, 0.000), (13.476, 46.920, 0.000), (13.494, 47.031, 0.000), (13.472, 47.141, 0.000), (13.456, 47.220, 0.000), (13.426, 47.295, 0.000), (13.394, 47.373, 0.000), (13.354, 47.446, 0.000), (13.317, 47.515, 0.000), (13.277, 47.582, 0.000), (13.255, 47.621, 0.000), (13.233, 47.660, 0.000), (12.957, 48.143, 0.000), (12.680, 48.627, 0.000), (12.014, 49.790, 0.000), (11.348, 50.953, 0.000), (11.183, 51.240, 0.000), (11.017, 51.527, 0.000), (10.661, 52.143, 0.000), (10.301, 52.756, 0.000), (10.221, 52.892, 0.000), (10.141, 53.029, 0.000), (9.847, 53.532, 0.000), (9.552, 54.035, 0.000), (9.239, 54.576, 0.000), (8.925, 55.117, 0.000), (8.621, 55.643, 0.000), (8.316, 56.170, 0.000), (8.277, 56.237, 0.000), (8.237, 56.304, 0.000), (8.112, 56.521, 0.000), (7.985, 56.736, 0.000), (7.867, 56.933, 0.000), (7.743, 57.125, 0.000), (7.627, 57.303, 0.000), (7.470, 57.446, 0.000), (7.436, 57.477, 0.000), (7.400, 57.506, 0.000), (7.327, 57.564, 0.000), (7.242, 57.602, 0.000), (7.107, 57.661, 0.000), (6.959, 57.650, 0.000), (6.868, 57.643, 0.000), (6.782, 57.614, 0.000), (6.761, 57.607, 0.000), (6.740, 57.599, 0.000), (6.677, 57.569, 0.000), (6.622, 57.527, 0.000), (6.558, 57.479, 0.000), (6.514, 57.413, 0.000), (6.477, 57.357, 0.000), (6.456, 57.293, 0.000), (6.454, 57.286, 0.000), (6.451, 57.278, 0.000), (6.431, 57.216, 0.000), (6.423, 57.152, 0.000), (6.413, 57.081, 0.000), (6.408, 57.009, 0.000), (6.401, 56.888, 0.000), (6.398, 56.768, 0.000), (6.394, 56.632, 0.000), (6.391, 56.496, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((6.391, 56.496, 0.000)), rs.coerce3dpoint((6.391, 56.324, 0.000)), rs.coerce3dpoint((6.396, 56.153, 0.000)), rs.coerce3dpoint((6.400, 56.034, 0.000)), rs.coerce3dpoint((6.411, 55.916, 0.000)), rs.coerce3dpoint((6.419, 55.824, 0.000)), rs.coerce3dpoint((6.437, 55.733, 0.000)), rs.coerce3dpoint((6.454, 55.645, 0.000)), rs.coerce3dpoint((6.486, 55.562, 0.000)), rs.coerce3dpoint((6.511, 55.499, 0.000)), rs.coerce3dpoint((6.545, 55.441, 0.000)), rs.coerce3dpoint((6.742, 55.102, 0.000)), rs.coerce3dpoint((6.934, 54.761, 0.000)), rs.coerce3dpoint((6.951, 54.731, 0.000)), rs.coerce3dpoint((6.968, 54.702, 0.000)), rs.coerce3dpoint((7.160, 54.363, 0.000)), rs.coerce3dpoint((7.354, 54.025, 0.000)), rs.coerce3dpoint((7.652, 53.513, 0.000)), rs.coerce3dpoint((7.952, 53.001, 0.000)), rs.coerce3dpoint((8.255, 52.483, 0.000)), rs.coerce3dpoint((8.556, 51.964, 0.000)), rs.coerce3dpoint((8.982, 51.225, 0.000)), rs.coerce3dpoint((9.408, 50.485, 0.000)), rs.coerce3dpoint((9.687, 50.001, 0.000)), rs.coerce3dpoint((9.965, 49.517, 0.000)), rs.coerce3dpoint((10.043, 49.382, 0.000)), rs.coerce3dpoint((10.121, 49.246, 0.000)), rs.coerce3dpoint((10.539, 48.523, 0.000)), rs.coerce3dpoint((10.958, 47.799, 0.000)), rs.coerce3dpoint((11.212, 47.361, 0.000)), rs.coerce3dpoint((11.470, 46.925, 0.000)), rs.coerce3dpoint((11.588, 46.726, 0.000)), rs.coerce3dpoint((11.707, 46.529, 0.000)), rs.coerce3dpoint((11.781, 46.408, 0.000)), rs.coerce3dpoint((11.859, 46.290, 0.000)), rs.coerce3dpoint((11.912, 46.209, 0.000)), rs.coerce3dpoint((11.972, 46.132, 0.000)), rs.coerce3dpoint((12.018, 46.072, 0.000)), rs.coerce3dpoint((12.072, 46.019, 0.000)), rs.coerce3dpoint((12.130, 45.961, 0.000)), rs.coerce3dpoint((12.201, 45.918, 0.000)), rs.coerce3dpoint((12.215, 45.909, 0.000)), rs.coerce3dpoint((12.230, 45.901, 0.000)), rs.coerce3dpoint((12.324, 45.850, 0.000)), rs.coerce3dpoint((12.429, 45.833, 0.000)), rs.coerce3dpoint((12.572, 45.809, 0.000)), rs.coerce3dpoint((12.708, 45.857, 0.000)), rs.coerce3dpoint((12.794, 45.887, 0.000)), rs.coerce3dpoint((12.868, 45.938, 0.000)), rs.coerce3dpoint((12.947, 45.992, 0.000)), rs.coerce3dpoint((13.012, 46.059, 0.000)), rs.coerce3dpoint((13.025, 46.072, 0.000)), rs.coerce3dpoint((13.037, 46.085, 0.000)), rs.coerce3dpoint((13.148, 46.204, 0.000)), rs.coerce3dpoint((13.238, 46.338, 0.000)), rs.coerce3dpoint((13.327, 46.469, 0.000)), rs.coerce3dpoint((13.388, 46.614, 0.000)), rs.coerce3dpoint((13.450, 46.762, 0.000)), rs.coerce3dpoint((13.476, 46.920, 0.000)), rs.coerce3dpoint((13.494, 47.031, 0.000)), rs.coerce3dpoint((13.472, 47.141, 0.000)), rs.coerce3dpoint((13.456, 47.220, 0.000)), rs.coerce3dpoint((13.426, 47.295, 0.000)), rs.coerce3dpoint((13.394, 47.373, 0.000)), rs.coerce3dpoint((13.354, 47.446, 0.000)), rs.coerce3dpoint((13.317, 47.515, 0.000)), rs.coerce3dpoint((13.277, 47.582, 0.000)), rs.coerce3dpoint((13.255, 47.621, 0.000)), rs.coerce3dpoint((13.233, 47.660, 0.000)), rs.coerce3dpoint((12.957, 48.143, 0.000)), rs.coerce3dpoint((12.680, 48.627, 0.000)), rs.coerce3dpoint((12.014, 49.790, 0.000)), rs.coerce3dpoint((11.348, 50.953, 0.000)), rs.coerce3dpoint((11.183, 51.240, 0.000)), rs.coerce3dpoint((11.017, 51.527, 0.000)), rs.coerce3dpoint((10.661, 52.143, 0.000)), rs.coerce3dpoint((10.301, 52.756, 0.000)), rs.coerce3dpoint((10.221, 52.892, 0.000)), rs.coerce3dpoint((10.141, 53.029, 0.000)), rs.coerce3dpoint((9.847, 53.532, 0.000)), rs.coerce3dpoint((9.552, 54.035, 0.000)), rs.coerce3dpoint((9.239, 54.576, 0.000)), rs.coerce3dpoint((8.925, 55.117, 0.000)), rs.coerce3dpoint((8.621, 55.643, 0.000)), rs.coerce3dpoint((8.316, 56.170, 0.000)), rs.coerce3dpoint((8.277, 56.237, 0.000)), rs.coerce3dpoint((8.237, 56.304, 0.000)), rs.coerce3dpoint((8.112, 56.521, 0.000)), rs.coerce3dpoint((7.985, 56.736, 0.000)), rs.coerce3dpoint((7.867, 56.933, 0.000)), rs.coerce3dpoint((7.743, 57.125, 0.000)), rs.coerce3dpoint((7.627, 57.303, 0.000)), rs.coerce3dpoint((7.470, 57.446, 0.000)), rs.coerce3dpoint((7.436, 57.477, 0.000)), rs.coerce3dpoint((7.400, 57.506, 0.000)), rs.coerce3dpoint((7.327, 57.564, 0.000)), rs.coerce3dpoint((7.242, 57.602, 0.000)), rs.coerce3dpoint((7.107, 57.661, 0.000)), rs.coerce3dpoint((6.959, 57.650, 0.000)), rs.coerce3dpoint((6.868, 57.643, 0.000)), rs.coerce3dpoint((6.782, 57.614, 0.000)), rs.coerce3dpoint((6.761, 57.607, 0.000)), rs.coerce3dpoint((6.740, 57.599, 0.000)), rs.coerce3dpoint((6.677, 57.569, 0.000)), rs.coerce3dpoint((6.622, 57.527, 0.000)), rs.coerce3dpoint((6.558, 57.479, 0.000)), rs.coerce3dpoint((6.514, 57.413, 0.000)), rs.coerce3dpoint((6.477, 57.357, 0.000)), rs.coerce3dpoint((6.456, 57.293, 0.000)), rs.coerce3dpoint((6.454, 57.286, 0.000)), rs.coerce3dpoint((6.451, 57.278, 0.000)), rs.coerce3dpoint((6.431, 57.216, 0.000)), rs.coerce3dpoint((6.423, 57.152, 0.000)), rs.coerce3dpoint((6.413, 57.081, 0.000)), rs.coerce3dpoint((6.408, 57.009, 0.000)), rs.coerce3dpoint((6.401, 56.888, 0.000)), rs.coerce3dpoint((6.398, 56.768, 0.000)), rs.coerce3dpoint((6.394, 56.632, 0.000)), rs.coerce3dpoint((6.391, 56.496, 0.000))], [0.0, 0.0, 0.342757965361, 0.342757965361, 0.580025800856, 0.580025800856, 0.765151710983, 0.765151710983, 0.943558767049, 0.943558767049, 1.07802651238, 1.07802651238, 1.86180703615, 1.86180703615, 1.93003883226, 1.93003883226, 2.70879094612, 2.70879094612, 3.89474094798, 3.89474094798, 5.09466115840, 5.09466115840, 6.80169605450, 6.80169605450, 7.91858522255, 7.91858522255, 8.23098506714, 8.23098506714, 9.90278196045, 9.90278196045, 10.9162123123, 10.9162123123, 11.3774935220, 11.3774935220, 11.6604607358, 11.6604607358, 11.8544935430, 11.8544935430, 12.0058140903, 12.0058140903, 12.1695465812, 12.1695465812, 12.2034326872, 12.2034326872, 12.4152519982, 12.4152519982, 12.6982030695, 12.6982030695, 12.8784259024, 12.8784259024, 13.0668003001, 13.0668003001, 13.1025417253, 13.1025417253, 13.4262375467, 13.4262375467, 13.7402365943, 13.7402365943, 14.0599048833, 14.0599048833, 14.2817165675, 14.2817165675, 14.4434509832, 14.4434509832, 14.6098895452, 14.6098895452, 14.7666786789, 14.7666786789, 14.8564095702, 14.8564095702, 15.9697280643, 15.9697280643, 18.6501846765, 18.6501846765, 19.3126083008, 19.3126083008, 20.7356927642, 20.7356927642, 21.0515645718, 21.0515645718, 22.2175022041, 22.2175022041, 23.4678628805, 23.4678628805, 24.6844951451, 24.6844951451, 24.8401340018, 24.8401340018, 25.3402224522, 25.3402224522, 25.7988026750, 25.7988026750, 26.2209495106, 26.2209495106, 26.3136758280, 26.3136758280, 26.4983131370, 26.4983131370, 26.7880192691, 26.7880192691, 26.9696829087, 26.9696829087, 27.0143610416, 27.0143610416, 27.1529003112, 27.1529003112, 27.3097783522, 27.3097783522, 27.4433048680, 27.4433048680, 27.4594135116, 27.4594135116, 27.5888283764, 27.5888283764, 27.7328010876, 27.7328010876, 27.9739184711, 27.9739184711, 28.2460813017, 28.2460813017], 2, [1.0, 0.999907524276, 1.0, 0.999544083953, 1.0, 0.99860705083, 1.0, 0.996117929889, 1.0, 0.997116164259, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 0.999990320047, 1.0, 0.999997580003, 1.0, 0.999997580003, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.99997952021, 1.0, 0.999807938446, 1.0, 0.999278260548, 1.0, 0.997889728974, 1.0, 0.993085567618, 1.0, 0.99968754882, 1.0, 0.986217852803, 1.0, 0.968987947579, 1.0, 0.991482112368, 1.0, 0.995012468828, 1.0, 0.99988142703, 1.0, 0.99697815269, 1.0, 0.995267843209, 1.0, 0.993038694517, 1.0, 0.98417719877, 1.0, 0.995497658408, 1.0, 0.998499606435, 1.0, 0.999868788609, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999834393714, 1.0, 0.991790556371, 1.0, 0.999488131038, 1.0, 0.991351936895, 1.0, 0.970573737667, 1.0, 0.992415094899, 1.0, 0.999692527277, 1.0, 0.994811495301, 1.0, 0.986381684989, 1.0, 0.991790556371, 1.0, 1.0, 1.0, 0.996377054776, 1.0, 0.99923978907, 1.0, 0.999855510439, 1.0, 0.999992000032, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-8.418, 48.789, 0.000), (-8.419, 48.937, 0.000), (-8.420, 49.085, 0.000), (-8.430, 50.805, 0.000), (-8.440, 52.524, 0.000), (-8.443, 53.006, 0.000), (-8.448, 53.488, 0.000), (-8.450, 53.647, 0.000), (-8.454, 53.805, 0.000), (-8.456, 53.862, 0.000), (-8.460, 53.918, 0.000), (-8.462, 53.941, 0.000), (-8.466, 53.964, 0.000), (-8.483, 54.086, 0.000), (-8.541, 54.195, 0.000), (-8.782, 54.642, 0.000), (-9.271, 54.507, 0.000), (-9.394, 54.473, 0.000), (-9.497, 54.396, 0.000), (-9.509, 54.387, 0.000), (-9.521, 54.377, 0.000), (-9.583, 54.328, 0.000), (-9.637, 54.270, 0.000), (-9.692, 54.212, 0.000), (-9.745, 54.150, 0.000), (-9.749, 54.146, 0.000), (-9.753, 54.142, 0.000), (-9.761, 54.132, 0.000), (-9.770, 54.122, 0.000), (-9.956, 53.862, 0.000), (-10.126, 53.593, 0.000), (-10.202, 53.474, 0.000), (-10.271, 53.352, 0.000), (-10.303, 53.296, 0.000), (-10.330, 53.238, 0.000), (-10.338, 53.222, 0.000), (-10.344, 53.204, 0.000), (-10.367, 53.141, 0.000), (-10.379, 53.076, 0.000), (-10.399, 52.973, 0.000), (-10.404, 52.869, 0.000), (-10.408, 52.803, 0.000), (-10.408, 52.738, 0.000), (-10.407, 50.461, 0.000), (-10.406, 48.184, 0.000), (-10.406, 47.209, 0.000), (-10.405, 46.233, 0.000), (-10.405, 45.811, 0.000), (-10.404, 45.388, 0.000), (-10.404, 45.088, 0.000), (-10.402, 44.788, 0.000), (-10.402, 44.726, 0.000), (-10.400, 44.664, 0.000), (-10.400, 44.660, 0.000), (-10.399, 44.655, 0.000), (-10.398, 44.610, 0.000), (-10.388, 44.566, 0.000), (-10.375, 44.512, 0.000), (-10.357, 44.460, 0.000), (-10.351, 44.443, 0.000), (-10.346, 44.425, 0.000), (-10.275, 44.218, 0.000), (-10.180, 44.021, 0.000), (-10.054, 43.758, 0.000), (-9.893, 43.514, 0.000), (-9.846, 43.442, 0.000), (-9.795, 43.373, 0.000), (-9.738, 43.297, 0.000), (-9.677, 43.224, 0.000), (-9.641, 43.180, 0.000), (-9.600, 43.141, 0.000), (-9.566, 43.108, 0.000), (-9.527, 43.081, 0.000), (-9.432, 43.014, 0.000), (-9.323, 42.976, 0.000), (-9.207, 42.935, 0.000), (-9.085, 42.936, 0.000), (-8.899, 42.938, 0.000), (-8.745, 43.040, 0.000), (-8.632, 43.116, 0.000), (-8.558, 43.231, 0.000), (-8.496, 43.329, 0.000), (-8.465, 43.441, 0.000), (-8.453, 43.488, 0.000), (-8.445, 43.536, 0.000), (-8.438, 43.578, 0.000), (-8.436, 43.620, 0.000), (-8.432, 43.704, 0.000), (-8.431, 43.787, 0.000), (-8.426, 44.015, 0.000), (-8.425, 44.242, 0.000), (-8.422, 44.881, 0.000), (-8.421, 45.520, 0.000), (-8.420, 47.155, 0.000), (-8.418, 48.789, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-8.418, 48.789, 0.000)), rs.coerce3dpoint((-8.419, 48.937, 0.000)), rs.coerce3dpoint((-8.420, 49.085, 0.000)), rs.coerce3dpoint((-8.430, 50.805, 0.000)), rs.coerce3dpoint((-8.440, 52.524, 0.000)), rs.coerce3dpoint((-8.443, 53.006, 0.000)), rs.coerce3dpoint((-8.448, 53.488, 0.000)), rs.coerce3dpoint((-8.450, 53.647, 0.000)), rs.coerce3dpoint((-8.454, 53.805, 0.000)), rs.coerce3dpoint((-8.456, 53.862, 0.000)), rs.coerce3dpoint((-8.460, 53.918, 0.000)), rs.coerce3dpoint((-8.462, 53.941, 0.000)), rs.coerce3dpoint((-8.466, 53.964, 0.000)), rs.coerce3dpoint((-8.483, 54.086, 0.000)), rs.coerce3dpoint((-8.541, 54.195, 0.000)), rs.coerce3dpoint((-8.782, 54.642, 0.000)), rs.coerce3dpoint((-9.271, 54.507, 0.000)), rs.coerce3dpoint((-9.394, 54.473, 0.000)), rs.coerce3dpoint((-9.497, 54.396, 0.000)), rs.coerce3dpoint((-9.509, 54.387, 0.000)), rs.coerce3dpoint((-9.521, 54.377, 0.000)), rs.coerce3dpoint((-9.583, 54.328, 0.000)), rs.coerce3dpoint((-9.637, 54.270, 0.000)), rs.coerce3dpoint((-9.692, 54.212, 0.000)), rs.coerce3dpoint((-9.745, 54.150, 0.000)), rs.coerce3dpoint((-9.749, 54.146, 0.000)), rs.coerce3dpoint((-9.753, 54.142, 0.000)), rs.coerce3dpoint((-9.761, 54.132, 0.000)), rs.coerce3dpoint((-9.770, 54.122, 0.000)), rs.coerce3dpoint((-9.956, 53.862, 0.000)), rs.coerce3dpoint((-10.126, 53.593, 0.000)), rs.coerce3dpoint((-10.202, 53.474, 0.000)), rs.coerce3dpoint((-10.271, 53.352, 0.000)), rs.coerce3dpoint((-10.303, 53.296, 0.000)), rs.coerce3dpoint((-10.330, 53.238, 0.000)), rs.coerce3dpoint((-10.338, 53.222, 0.000)), rs.coerce3dpoint((-10.344, 53.204, 0.000)), rs.coerce3dpoint((-10.367, 53.141, 0.000)), rs.coerce3dpoint((-10.379, 53.076, 0.000)), rs.coerce3dpoint((-10.399, 52.973, 0.000)), rs.coerce3dpoint((-10.404, 52.869, 0.000)), rs.coerce3dpoint((-10.408, 52.803, 0.000)), rs.coerce3dpoint((-10.408, 52.738, 0.000)), rs.coerce3dpoint((-10.407, 50.461, 0.000)), rs.coerce3dpoint((-10.406, 48.184, 0.000)), rs.coerce3dpoint((-10.406, 47.209, 0.000)), rs.coerce3dpoint((-10.405, 46.233, 0.000)), rs.coerce3dpoint((-10.405, 45.811, 0.000)), rs.coerce3dpoint((-10.404, 45.388, 0.000)), rs.coerce3dpoint((-10.404, 45.088, 0.000)), rs.coerce3dpoint((-10.402, 44.788, 0.000)), rs.coerce3dpoint((-10.402, 44.726, 0.000)), rs.coerce3dpoint((-10.400, 44.664, 0.000)), rs.coerce3dpoint((-10.400, 44.660, 0.000)), rs.coerce3dpoint((-10.399, 44.655, 0.000)), rs.coerce3dpoint((-10.398, 44.610, 0.000)), rs.coerce3dpoint((-10.388, 44.566, 0.000)), rs.coerce3dpoint((-10.375, 44.512, 0.000)), rs.coerce3dpoint((-10.357, 44.460, 0.000)), rs.coerce3dpoint((-10.351, 44.443, 0.000)), rs.coerce3dpoint((-10.346, 44.425, 0.000)), rs.coerce3dpoint((-10.275, 44.218, 0.000)), rs.coerce3dpoint((-10.180, 44.021, 0.000)), rs.coerce3dpoint((-10.054, 43.758, 0.000)), rs.coerce3dpoint((-9.893, 43.514, 0.000)), rs.coerce3dpoint((-9.846, 43.442, 0.000)), rs.coerce3dpoint((-9.795, 43.373, 0.000)), rs.coerce3dpoint((-9.738, 43.297, 0.000)), rs.coerce3dpoint((-9.677, 43.224, 0.000)), rs.coerce3dpoint((-9.641, 43.180, 0.000)), rs.coerce3dpoint((-9.600, 43.141, 0.000)), rs.coerce3dpoint((-9.566, 43.108, 0.000)), rs.coerce3dpoint((-9.527, 43.081, 0.000)), rs.coerce3dpoint((-9.432, 43.014, 0.000)), rs.coerce3dpoint((-9.323, 42.976, 0.000)), rs.coerce3dpoint((-9.207, 42.935, 0.000)), rs.coerce3dpoint((-9.085, 42.936, 0.000)), rs.coerce3dpoint((-8.899, 42.938, 0.000)), rs.coerce3dpoint((-8.745, 43.040, 0.000)), rs.coerce3dpoint((-8.632, 43.116, 0.000)), rs.coerce3dpoint((-8.558, 43.231, 0.000)), rs.coerce3dpoint((-8.496, 43.329, 0.000)), rs.coerce3dpoint((-8.465, 43.441, 0.000)), rs.coerce3dpoint((-8.453, 43.488, 0.000)), rs.coerce3dpoint((-8.445, 43.536, 0.000)), rs.coerce3dpoint((-8.438, 43.578, 0.000)), rs.coerce3dpoint((-8.436, 43.620, 0.000)), rs.coerce3dpoint((-8.432, 43.704, 0.000)), rs.coerce3dpoint((-8.431, 43.787, 0.000)), rs.coerce3dpoint((-8.426, 44.015, 0.000)), rs.coerce3dpoint((-8.425, 44.242, 0.000)), rs.coerce3dpoint((-8.422, 44.881, 0.000)), rs.coerce3dpoint((-8.421, 45.520, 0.000)), rs.coerce3dpoint((-8.420, 47.155, 0.000)), rs.coerce3dpoint((-8.418, 48.789, 0.000))], [0.0, 0.0, 0.296124652807, 0.296124652807, 3.73441381485, 3.73441381485, 4.69927025895, 4.69927025895, 5.01539996251, 5.01539996251, 5.12950991525, 5.12950991525, 5.17568342534, 5.17568342534, 5.41990823161, 5.41990823161, 6.27649324619, 6.27649324619, 6.52911014995, 6.52911014995, 6.56019845635, 6.56019845635, 6.71778697261, 6.71778697261, 6.87959144542, 6.87959144542, 6.89070514867, 6.89070514867, 6.91756651871, 6.91756651871, 7.55467985373, 7.55467985373, 7.83652254695, 7.83652254695, 7.96418269662, 7.96418269662, 8.00120895679, 8.00120895679, 8.13454223619, 8.13454223619, 8.34276803094, 8.34276803094, 8.47442287846, 8.47442287846, 13.0282030528, 13.0282030528, 14.9787133463, 14.9787133463, 15.8237839145, 15.8237839145, 16.4239185240, 16.4239185240, 16.5477338640, 16.5477338640, 16.5571515335, 16.5571515335, 16.6468891161, 16.6468891161, 16.7576541217, 16.7576541217, 16.7937957943, 16.7937957943, 17.2310058691, 17.2310058691, 17.8140180301, 17.8140180301, 17.9856978274, 17.9856978274, 18.1758067768, 18.1758067768, 18.2890531353, 18.2890531353, 18.3843611028, 18.3843611028, 18.6138530033, 18.6138530033, 18.8572666959, 18.8572666959, 19.2172358145, 19.2172358145, 19.4863424630, 19.4863424630, 19.7171094731, 19.7171094731, 19.8138985312, 19.8138985312, 19.8987355141, 19.8987355141, 20.0658446618, 20.0658446618, 20.5209579030, 20.5209579030, 21.7990662686, 21.7990662686, 25.0680073509, 25.0680073509], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.99996128075, 1.0, 0.999646282569, 1.0, 0.999494507793, 1.0, 0.984561618872, 1.0, 0.782181492801, 1.0, 0.983105350419, 1.0, 0.999787842508, 1.0, 0.99786370432, 1.0, 0.999716820101, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999596801301, 1.0, 0.99968754882, 1.0, 0.999293369751, 1.0, 0.999192306316, 1.0, 0.997085772557, 1.0, 0.997744626227, 1.0, 0.999442375516, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.994355495303, 1.0, 0.999067315153, 1.0, 1.0, 1.0, 0.998284492746, 1.0, 0.997622330022, 1.0, 0.999591103615, 1.0, 0.999591103615, 1.0, 0.998679891918, 1.0, 0.996377054776, 1.0, 0.990468363575, 1.0, 0.984803845557, 1.0, 0.958927097196, 1.0, 0.978721443006, 1.0, 0.988363599127, 1.0, 0.998466596565, 1.0, 0.998543062108, 1.0, 0.999823295614, 1.0, 0.999978220237, 1.0, 0.999997580003, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(12.473, 28.453, 0.000), (12.474, 28.811, 0.000), (12.475, 29.168, 0.000), (12.475, 29.681, 0.000), (12.476, 30.193, 0.000), (12.477, 30.272, 0.000), (12.477, 30.351, 0.000), (12.477, 30.379, 0.000), (12.478, 30.408, 0.000), (12.478, 30.408, 0.000), (12.478, 30.409, 0.000), (12.479, 30.454, 0.000), (12.473, 30.499, 0.000), (12.469, 30.530, 0.000), (12.464, 30.561, 0.000), (12.443, 30.684, 0.000), (12.386, 30.794, 0.000), (12.315, 30.929, 0.000), (12.195, 31.021, 0.000), (11.979, 31.187, 0.000), (11.708, 31.149, 0.000), (11.584, 31.132, 0.000), (11.472, 31.072, 0.000), (11.440, 31.056, 0.000), (11.410, 31.036, 0.000), (11.320, 30.977, 0.000), (11.248, 30.898, 0.000), (11.187, 30.832, 0.000), (11.141, 30.754, 0.000), (10.536, 29.706, 0.000), (9.932, 28.658, 0.000), (9.761, 28.362, 0.000), (9.593, 28.065, 0.000), (9.539, 27.969, 0.000), (9.487, 27.872, 0.000), (9.467, 27.835, 0.000), (9.449, 27.797, 0.000), (9.444, 27.785, 0.000), (9.439, 27.772, 0.000), (9.407, 27.688, 0.000), (9.395, 27.598, 0.000), (9.385, 27.523, 0.000), (9.383, 27.448, 0.000), (9.381, 27.401, 0.000), (9.381, 27.354, 0.000), (9.377, 25.662, 0.000), (9.374, 23.971, 0.000), (9.373, 23.879, 0.000), (9.379, 23.787, 0.000), (9.388, 23.653, 0.000), (9.401, 23.519, 0.000), (9.403, 23.501, 0.000), (9.405, 23.482, 0.000), (9.414, 23.389, 0.000), (9.437, 23.298, 0.000), (9.460, 23.211, 0.000), (9.502, 23.131, 0.000), (9.559, 23.024, 0.000), (9.650, 22.943, 0.000), (9.705, 22.894, 0.000), (9.767, 22.855, 0.000), (9.818, 22.822, 0.000), (9.873, 22.798, 0.000), (9.935, 22.771, 0.000), (10.001, 22.763, 0.000), (10.080, 22.754, 0.000), (10.157, 22.776, 0.000), (10.222, 22.795, 0.000), (10.281, 22.828, 0.000), (10.348, 22.866, 0.000), (10.407, 22.915, 0.000), (10.481, 22.976, 0.000), (10.546, 23.047, 0.000), (10.594, 23.098, 0.000), (10.639, 23.152, 0.000), (10.695, 23.227, 0.000), (10.748, 23.305, 0.000), (10.851, 23.458, 0.000), (10.949, 23.614, 0.000), (11.120, 23.886, 0.000), (11.286, 24.162, 0.000), (11.538, 24.582, 0.000), (11.786, 25.005, 0.000), (11.853, 25.120, 0.000), (11.920, 25.235, 0.000), (12.073, 25.495, 0.000), (12.225, 25.757, 0.000), (12.276, 25.845, 0.000), (12.324, 25.935, 0.000), (12.351, 25.984, 0.000), (12.374, 26.036, 0.000), (12.415, 26.127, 0.000), (12.439, 26.224, 0.000), (12.455, 26.294, 0.000), (12.463, 26.365, 0.000), (12.469, 26.423, 0.000), (12.471, 26.481, 0.000), (12.474, 26.592, 0.000), (12.474, 26.704, 0.000), (12.475, 27.038, 0.000), (12.475, 27.371, 0.000), (12.474, 27.636, 0.000), (12.474, 27.900, 0.000), (12.474, 28.177, 0.000), (12.473, 28.453, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((12.473, 28.453, 0.000)), rs.coerce3dpoint((12.474, 28.811, 0.000)), rs.coerce3dpoint((12.475, 29.168, 0.000)), rs.coerce3dpoint((12.475, 29.681, 0.000)), rs.coerce3dpoint((12.476, 30.193, 0.000)), rs.coerce3dpoint((12.477, 30.272, 0.000)), rs.coerce3dpoint((12.477, 30.351, 0.000)), rs.coerce3dpoint((12.477, 30.379, 0.000)), rs.coerce3dpoint((12.478, 30.408, 0.000)), rs.coerce3dpoint((12.478, 30.408, 0.000)), rs.coerce3dpoint((12.478, 30.409, 0.000)), rs.coerce3dpoint((12.479, 30.454, 0.000)), rs.coerce3dpoint((12.473, 30.499, 0.000)), rs.coerce3dpoint((12.469, 30.530, 0.000)), rs.coerce3dpoint((12.464, 30.561, 0.000)), rs.coerce3dpoint((12.443, 30.684, 0.000)), rs.coerce3dpoint((12.386, 30.794, 0.000)), rs.coerce3dpoint((12.315, 30.929, 0.000)), rs.coerce3dpoint((12.195, 31.021, 0.000)), rs.coerce3dpoint((11.979, 31.187, 0.000)), rs.coerce3dpoint((11.708, 31.149, 0.000)), rs.coerce3dpoint((11.584, 31.132, 0.000)), rs.coerce3dpoint((11.472, 31.072, 0.000)), rs.coerce3dpoint((11.440, 31.056, 0.000)), rs.coerce3dpoint((11.410, 31.036, 0.000)), rs.coerce3dpoint((11.320, 30.977, 0.000)), rs.coerce3dpoint((11.248, 30.898, 0.000)), rs.coerce3dpoint((11.187, 30.832, 0.000)), rs.coerce3dpoint((11.141, 30.754, 0.000)), rs.coerce3dpoint((10.536, 29.706, 0.000)), rs.coerce3dpoint((9.932, 28.658, 0.000)), rs.coerce3dpoint((9.761, 28.362, 0.000)), rs.coerce3dpoint((9.593, 28.065, 0.000)), rs.coerce3dpoint((9.539, 27.969, 0.000)), rs.coerce3dpoint((9.487, 27.872, 0.000)), rs.coerce3dpoint((9.467, 27.835, 0.000)), rs.coerce3dpoint((9.449, 27.797, 0.000)), rs.coerce3dpoint((9.444, 27.785, 0.000)), rs.coerce3dpoint((9.439, 27.772, 0.000)), rs.coerce3dpoint((9.407, 27.688, 0.000)), rs.coerce3dpoint((9.395, 27.598, 0.000)), rs.coerce3dpoint((9.385, 27.523, 0.000)), rs.coerce3dpoint((9.383, 27.448, 0.000)), rs.coerce3dpoint((9.381, 27.401, 0.000)), rs.coerce3dpoint((9.381, 27.354, 0.000)), rs.coerce3dpoint((9.377, 25.662, 0.000)), rs.coerce3dpoint((9.374, 23.971, 0.000)), rs.coerce3dpoint((9.373, 23.879, 0.000)), rs.coerce3dpoint((9.379, 23.787, 0.000)), rs.coerce3dpoint((9.388, 23.653, 0.000)), rs.coerce3dpoint((9.401, 23.519, 0.000)), rs.coerce3dpoint((9.403, 23.501, 0.000)), rs.coerce3dpoint((9.405, 23.482, 0.000)), rs.coerce3dpoint((9.414, 23.389, 0.000)), rs.coerce3dpoint((9.437, 23.298, 0.000)), rs.coerce3dpoint((9.460, 23.211, 0.000)), rs.coerce3dpoint((9.502, 23.131, 0.000)), rs.coerce3dpoint((9.559, 23.024, 0.000)), rs.coerce3dpoint((9.650, 22.943, 0.000)), rs.coerce3dpoint((9.705, 22.894, 0.000)), rs.coerce3dpoint((9.767, 22.855, 0.000)), rs.coerce3dpoint((9.818, 22.822, 0.000)), rs.coerce3dpoint((9.873, 22.798, 0.000)), rs.coerce3dpoint((9.935, 22.771, 0.000)), rs.coerce3dpoint((10.001, 22.763, 0.000)), rs.coerce3dpoint((10.080, 22.754, 0.000)), rs.coerce3dpoint((10.157, 22.776, 0.000)), rs.coerce3dpoint((10.222, 22.795, 0.000)), rs.coerce3dpoint((10.281, 22.828, 0.000)), rs.coerce3dpoint((10.348, 22.866, 0.000)), rs.coerce3dpoint((10.407, 22.915, 0.000)), rs.coerce3dpoint((10.481, 22.976, 0.000)), rs.coerce3dpoint((10.546, 23.047, 0.000)), rs.coerce3dpoint((10.594, 23.098, 0.000)), rs.coerce3dpoint((10.639, 23.152, 0.000)), rs.coerce3dpoint((10.695, 23.227, 0.000)), rs.coerce3dpoint((10.748, 23.305, 0.000)), rs.coerce3dpoint((10.851, 23.458, 0.000)), rs.coerce3dpoint((10.949, 23.614, 0.000)), rs.coerce3dpoint((11.120, 23.886, 0.000)), rs.coerce3dpoint((11.286, 24.162, 0.000)), rs.coerce3dpoint((11.538, 24.582, 0.000)), rs.coerce3dpoint((11.786, 25.005, 0.000)), rs.coerce3dpoint((11.853, 25.120, 0.000)), rs.coerce3dpoint((11.920, 25.235, 0.000)), rs.coerce3dpoint((12.073, 25.495, 0.000)), rs.coerce3dpoint((12.225, 25.757, 0.000)), rs.coerce3dpoint((12.276, 25.845, 0.000)), rs.coerce3dpoint((12.324, 25.935, 0.000)), rs.coerce3dpoint((12.351, 25.984, 0.000)), rs.coerce3dpoint((12.374, 26.036, 0.000)), rs.coerce3dpoint((12.415, 26.127, 0.000)), rs.coerce3dpoint((12.439, 26.224, 0.000)), rs.coerce3dpoint((12.455, 26.294, 0.000)), rs.coerce3dpoint((12.463, 26.365, 0.000)), rs.coerce3dpoint((12.469, 26.423, 0.000)), rs.coerce3dpoint((12.471, 26.481, 0.000)), rs.coerce3dpoint((12.474, 26.592, 0.000)), rs.coerce3dpoint((12.474, 26.704, 0.000)), rs.coerce3dpoint((12.475, 27.038, 0.000)), rs.coerce3dpoint((12.475, 27.371, 0.000)), rs.coerce3dpoint((12.474, 27.636, 0.000)), rs.coerce3dpoint((12.474, 27.900, 0.000)), rs.coerce3dpoint((12.474, 28.177, 0.000)), rs.coerce3dpoint((12.473, 28.453, 0.000))], [0.0, 0.0, 0.715781039704, 0.715781039704, 1.74043274609, 1.74043274609, 1.89822373981, 1.89822373981, 1.95483813206, 1.95483813206, 1.95657839066, 1.95657839066, 2.04679541650, 2.04679541650, 2.10923042801, 2.10923042801, 2.35591561957, 2.35591561957, 2.65476752339, 2.65476752339, 3.17173511650, 3.17173511650, 3.42105513832, 3.42105513832, 3.49338753398, 3.49338753398, 3.70641122563, 3.70641122563, 3.88676097610, 3.88676097610, 6.30580979183, 6.30580979183, 6.98896747260, 6.98896747260, 7.20930522510, 7.20930522510, 7.29323251352, 7.29323251352, 7.32026337757, 7.32026337757, 7.50050541610, 7.50050541610, 7.65082786028, 7.65082786028, 7.74522422664, 7.74522422664, 11.1279126077, 11.1279126077, 11.3118826835, 11.3118826835, 11.5804441227, 11.5804441227, 11.6182786638, 11.6182786638, 11.8049612290, 11.8049612290, 11.9839816642, 11.9839816642, 12.2257315394, 12.2257315394, 12.3715600046, 12.3715600046, 12.4926576031, 12.4926576031, 12.6254728929, 12.6254728929, 12.7834985553, 12.7834985553, 12.9175063996, 12.9175063996, 13.0709305520, 13.0709305520, 13.2629064918, 13.2629064918, 13.4033882214, 13.4033882214, 13.5907632080, 13.5907632080, 13.9593063615, 13.9593063615, 14.6031656770, 14.6031656770, 15.5830598671, 15.5830598671, 15.8490674544, 15.8490674544, 16.4537461573, 16.4537461573, 16.6573828798, 16.6573828798, 16.7705119739, 16.7705119739, 16.9689673968, 16.9689673968, 17.1126600675, 17.1126600675, 17.2289945447, 17.2289945447, 17.4517272307, 17.4517272307, 18.1192486673, 18.1192486673, 18.6483091043, 18.6483091043, 19.2006195736, 19.2006195736], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999971120417, 1.0, 1.0, 1.0, 0.996478212433, 1.0, 0.999740113775, 1.0, 0.98756418851, 1.0, 0.976559565041, 1.0, 0.922261422152, 1.0, 0.984872709468, 1.0, 0.998979001485, 1.0, 0.992242685122, 1.0, 0.994334315586, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99992062315, 1.0, 0.999278260548, 1.0, 0.999707222866, 1.0, 0.993108945408, 1.0, 0.998617576209, 1.0, 0.999848631457, 1.0, 1.0, 1.0, 0.99923978907, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.996643642038, 1.0, 0.993477660053, 1.0, 0.984000937083, 1.0, 0.996740999211, 1.0, 0.99665996724, 1.0, 0.989078348712, 1.0, 0.981395469288, 1.0, 0.992920826357, 1.0, 0.996187899929, 1.0, 0.99778467655, 1.0, 0.999475257713, 1.0, 0.999608076817, 1.0, 0.999862229491, 1.0, 0.99995000125, 1.0, 0.999983180141, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999893425679, 1.0, 0.999176159496, 1.0, 0.995849909532, 1.0, 0.99799223758, 1.0, 0.999176159496, 1.0, 0.99991550357, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(16.417, 45.223, 0.000), (16.574, 45.223, 0.000), (16.730, 45.223, 0.000), (17.050, 45.223, 0.000), (17.370, 45.225, 0.000), (17.530, 45.226, 0.000), (17.689, 45.231, 0.000), (17.782, 45.234, 0.000), (17.875, 45.242, 0.000), (17.942, 45.248, 0.000), (18.009, 45.262, 0.000), (18.048, 45.271, 0.000), (18.087, 45.283, 0.000), (18.129, 45.296, 0.000), (18.167, 45.317, 0.000), (18.210, 45.341, 0.000), (18.247, 45.375, 0.000), (18.290, 45.415, 0.000), (18.328, 45.461, 0.000), (18.382, 45.526, 0.000), (18.429, 45.596, 0.000), (18.446, 45.621, 0.000), (18.462, 45.645, 0.000), (18.610, 45.869, 0.000), (18.744, 46.101, 0.000), (18.891, 46.356, 0.000), (19.028, 46.617, 0.000), (19.040, 46.641, 0.000), (19.053, 46.664, 0.000), (19.112, 46.776, 0.000), (19.167, 46.890, 0.000), (19.200, 46.956, 0.000), (19.227, 47.023, 0.000), (19.249, 47.079, 0.000), (19.262, 47.137, 0.000), (19.264, 47.144, 0.000), (19.265, 47.151, 0.000), (19.276, 47.199, 0.000), (19.276, 47.249, 0.000), (19.276, 47.305, 0.000), (19.262, 47.360, 0.000), (19.246, 47.420, 0.000), (19.222, 47.477, 0.000), (19.210, 47.507, 0.000), (19.196, 47.536, 0.000), (19.178, 47.575, 0.000), (19.161, 47.614, 0.000), (19.129, 47.685, 0.000), (19.095, 47.754, 0.000), (19.078, 47.789, 0.000), (19.058, 47.822, 0.000), (18.991, 47.940, 0.000), (18.923, 48.057, 0.000), (18.623, 48.580, 0.000), (18.319, 49.102, 0.000), (18.150, 49.391, 0.000), (17.979, 49.680, 0.000), (17.925, 49.772, 0.000), (17.865, 49.861, 0.000), (17.807, 49.948, 0.000), (17.738, 50.028, 0.000), (17.666, 50.111, 0.000), (17.579, 50.179, 0.000), (17.550, 50.202, 0.000), (17.520, 50.222, 0.000), (17.446, 50.271, 0.000), (17.362, 50.302, 0.000), (17.274, 50.334, 0.000), (17.181, 50.337, 0.000), (17.066, 50.339, 0.000), (16.960, 50.294, 0.000), (16.912, 50.273, 0.000), (16.868, 50.245, 0.000), (16.730, 50.158, 0.000), (16.619, 50.039, 0.000), (16.529, 49.943, 0.000), (16.460, 49.832, 0.000), (16.440, 49.800, 0.000), (16.421, 49.768, 0.000), (15.902, 48.863, 0.000), (15.383, 47.958, 0.000), (15.371, 47.938, 0.000), (15.360, 47.918, 0.000), (14.989, 47.273, 0.000), (14.618, 46.628, 0.000), (14.553, 46.515, 0.000), (14.492, 46.400, 0.000), (14.431, 46.287, 0.000), (14.381, 46.168, 0.000), (14.340, 46.070, 0.000), (14.326, 45.964, 0.000), (14.312, 45.853, 0.000), (14.337, 45.745, 0.000), (14.374, 45.586, 0.000), (14.487, 45.469, 0.000), (14.561, 45.392, 0.000), (14.655, 45.343, 0.000), (14.704, 45.317, 0.000), (14.755, 45.297, 0.000), (14.811, 45.277, 0.000), (14.869, 45.267, 0.000), (14.931, 45.257, 0.000), (14.994, 45.252, 0.000), (15.105, 45.244, 0.000), (15.216, 45.240, 0.000), (15.424, 45.233, 0.000), (15.632, 45.230, 0.000), (16.025, 45.224, 0.000), (16.417, 45.223, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((16.417, 45.223, 0.000)), rs.coerce3dpoint((16.574, 45.223, 0.000)), rs.coerce3dpoint((16.730, 45.223, 0.000)), rs.coerce3dpoint((17.050, 45.223, 0.000)), rs.coerce3dpoint((17.370, 45.225, 0.000)), rs.coerce3dpoint((17.530, 45.226, 0.000)), rs.coerce3dpoint((17.689, 45.231, 0.000)), rs.coerce3dpoint((17.782, 45.234, 0.000)), rs.coerce3dpoint((17.875, 45.242, 0.000)), rs.coerce3dpoint((17.942, 45.248, 0.000)), rs.coerce3dpoint((18.009, 45.262, 0.000)), rs.coerce3dpoint((18.048, 45.271, 0.000)), rs.coerce3dpoint((18.087, 45.283, 0.000)), rs.coerce3dpoint((18.129, 45.296, 0.000)), rs.coerce3dpoint((18.167, 45.317, 0.000)), rs.coerce3dpoint((18.210, 45.341, 0.000)), rs.coerce3dpoint((18.247, 45.375, 0.000)), rs.coerce3dpoint((18.290, 45.415, 0.000)), rs.coerce3dpoint((18.328, 45.461, 0.000)), rs.coerce3dpoint((18.382, 45.526, 0.000)), rs.coerce3dpoint((18.429, 45.596, 0.000)), rs.coerce3dpoint((18.446, 45.621, 0.000)), rs.coerce3dpoint((18.462, 45.645, 0.000)), rs.coerce3dpoint((18.610, 45.869, 0.000)), rs.coerce3dpoint((18.744, 46.101, 0.000)), rs.coerce3dpoint((18.891, 46.356, 0.000)), rs.coerce3dpoint((19.028, 46.617, 0.000)), rs.coerce3dpoint((19.040, 46.641, 0.000)), rs.coerce3dpoint((19.053, 46.664, 0.000)), rs.coerce3dpoint((19.112, 46.776, 0.000)), rs.coerce3dpoint((19.167, 46.890, 0.000)), rs.coerce3dpoint((19.200, 46.956, 0.000)), rs.coerce3dpoint((19.227, 47.023, 0.000)), rs.coerce3dpoint((19.249, 47.079, 0.000)), rs.coerce3dpoint((19.262, 47.137, 0.000)), rs.coerce3dpoint((19.264, 47.144, 0.000)), rs.coerce3dpoint((19.265, 47.151, 0.000)), rs.coerce3dpoint((19.276, 47.199, 0.000)), rs.coerce3dpoint((19.276, 47.249, 0.000)), rs.coerce3dpoint((19.276, 47.305, 0.000)), rs.coerce3dpoint((19.262, 47.360, 0.000)), rs.coerce3dpoint((19.246, 47.420, 0.000)), rs.coerce3dpoint((19.222, 47.477, 0.000)), rs.coerce3dpoint((19.210, 47.507, 0.000)), rs.coerce3dpoint((19.196, 47.536, 0.000)), rs.coerce3dpoint((19.178, 47.575, 0.000)), rs.coerce3dpoint((19.161, 47.614, 0.000)), rs.coerce3dpoint((19.129, 47.685, 0.000)), rs.coerce3dpoint((19.095, 47.754, 0.000)), rs.coerce3dpoint((19.078, 47.789, 0.000)), rs.coerce3dpoint((19.058, 47.822, 0.000)), rs.coerce3dpoint((18.991, 47.940, 0.000)), rs.coerce3dpoint((18.923, 48.057, 0.000)), rs.coerce3dpoint((18.623, 48.580, 0.000)), rs.coerce3dpoint((18.319, 49.102, 0.000)), rs.coerce3dpoint((18.150, 49.391, 0.000)), rs.coerce3dpoint((17.979, 49.680, 0.000)), rs.coerce3dpoint((17.925, 49.772, 0.000)), rs.coerce3dpoint((17.865, 49.861, 0.000)), rs.coerce3dpoint((17.807, 49.948, 0.000)), rs.coerce3dpoint((17.738, 50.028, 0.000)), rs.coerce3dpoint((17.666, 50.111, 0.000)), rs.coerce3dpoint((17.579, 50.179, 0.000)), rs.coerce3dpoint((17.550, 50.202, 0.000)), rs.coerce3dpoint((17.520, 50.222, 0.000)), rs.coerce3dpoint((17.446, 50.271, 0.000)), rs.coerce3dpoint((17.362, 50.302, 0.000)), rs.coerce3dpoint((17.274, 50.334, 0.000)), rs.coerce3dpoint((17.181, 50.337, 0.000)), rs.coerce3dpoint((17.066, 50.339, 0.000)), rs.coerce3dpoint((16.960, 50.294, 0.000)), rs.coerce3dpoint((16.912, 50.273, 0.000)), rs.coerce3dpoint((16.868, 50.245, 0.000)), rs.coerce3dpoint((16.730, 50.158, 0.000)), rs.coerce3dpoint((16.619, 50.039, 0.000)), rs.coerce3dpoint((16.529, 49.943, 0.000)), rs.coerce3dpoint((16.460, 49.832, 0.000)), rs.coerce3dpoint((16.440, 49.800, 0.000)), rs.coerce3dpoint((16.421, 49.768, 0.000)), rs.coerce3dpoint((15.902, 48.863, 0.000)), rs.coerce3dpoint((15.383, 47.958, 0.000)), rs.coerce3dpoint((15.371, 47.938, 0.000)), rs.coerce3dpoint((15.360, 47.918, 0.000)), rs.coerce3dpoint((14.989, 47.273, 0.000)), rs.coerce3dpoint((14.618, 46.628, 0.000)), rs.coerce3dpoint((14.553, 46.515, 0.000)), rs.coerce3dpoint((14.492, 46.400, 0.000)), rs.coerce3dpoint((14.431, 46.287, 0.000)), rs.coerce3dpoint((14.381, 46.168, 0.000)), rs.coerce3dpoint((14.340, 46.070, 0.000)), rs.coerce3dpoint((14.326, 45.964, 0.000)), rs.coerce3dpoint((14.312, 45.853, 0.000)), rs.coerce3dpoint((14.337, 45.745, 0.000)), rs.coerce3dpoint((14.374, 45.586, 0.000)), rs.coerce3dpoint((14.487, 45.469, 0.000)), rs.coerce3dpoint((14.561, 45.392, 0.000)), rs.coerce3dpoint((14.655, 45.343, 0.000)), rs.coerce3dpoint((14.704, 45.317, 0.000)), rs.coerce3dpoint((14.755, 45.297, 0.000)), rs.coerce3dpoint((14.811, 45.277, 0.000)), rs.coerce3dpoint((14.869, 45.267, 0.000)), rs.coerce3dpoint((14.931, 45.257, 0.000)), rs.coerce3dpoint((14.994, 45.252, 0.000)), rs.coerce3dpoint((15.105, 45.244, 0.000)), rs.coerce3dpoint((15.216, 45.240, 0.000)), rs.coerce3dpoint((15.424, 45.233, 0.000)), rs.coerce3dpoint((15.632, 45.230, 0.000)), rs.coerce3dpoint((16.025, 45.224, 0.000)), rs.coerce3dpoint((16.417, 45.223, 0.000))], [0.0, 0.0, 0.312390243446, 0.312390243446, 0.953084295115, 0.953084295115, 1.27184918501, 1.27184918501, 1.45781335745, 1.45781335745, 1.59340767277, 1.59340767277, 1.67424674195, 1.67424674195, 1.76125200299, 1.76125200299, 1.86034588099, 1.86034588099, 1.97853665148, 1.97853665148, 2.14798797697, 2.14798797697, 2.20698466343, 2.20698466343, 2.74295720815, 2.74295720815, 3.33183779357, 3.33183779357, 3.38468697994, 3.38468697994, 3.63856413977, 3.63856413977, 3.78434896987, 3.78434896987, 3.90335251154, 3.90335251154, 3.91738818039, 3.91738818039, 4.01624189807, 4.01624189807, 4.12826178826, 4.12826178826, 4.25244978188, 4.25244978188, 4.31646937035, 4.31646937035, 4.40267523408, 4.40267523408, 4.55746036300, 4.55746036300, 4.63484058947, 4.63484058947, 4.90552565297, 4.90552565297, 6.11225907259, 6.11225907259, 6.78345818456, 6.78345818456, 6.99671473416, 6.99671473416, 7.20665068899, 7.20665068899, 7.42714560560, 7.42714560560, 7.49983616763, 7.49983616763, 7.67714820516, 7.67714820516, 7.86260320130, 7.86260320130, 8.08931430861, 8.08931430861, 8.19344102058, 8.19344102058, 8.51774744693, 8.51774744693, 8.77923566274, 8.77923566274, 8.85405613245, 8.85405613245, 10.9407573421, 10.9407573421, 10.9865722589, 10.9865722589, 12.4754554514, 12.4754554514, 12.7354056874, 12.7354056874, 12.9927900298, 12.9927900298, 13.2046197685, 13.2046197685, 13.4254517174, 13.4254517174, 13.7436440999, 13.7436440999, 13.9542135476, 13.9542135476, 14.0644295624, 14.0644295624, 14.1818640889, 14.1818640889, 14.3079657689, 14.3079657689, 14.5303137834, 14.5303137834, 14.9468917497, 14.9468917497, 15.7318941278, 15.7318941278], 2, [1.0, 1.0, 1.0, 0.999994220017, 1.0, 0.99991022403, 1.0, 0.999562015936, 1.0, 0.998319413373, 1.0, 0.998710511926, 1.0, 0.994952590401, 1.0, 0.993409290533, 1.0, 0.997482672462, 1.0, 0.998951729723, 1.0, 0.999955820976, 1.0, 0.999585365979, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999858889957, 1.0, 0.999323109168, 1.0, 0.996931435279, 1.0, 1.0, 1.0, 0.994544342805, 1.0, 0.992658071263, 1.0, 0.997206387593, 1.0, 0.999730916208, 1.0, 0.999976880267, 1.0, 0.999758029278, 1.0, 0.999619192521, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999992000032, 1.0, 0.999573770855, 1.0, 0.9981290319, 1.0, 0.99522898849, 1.0, 0.999293369751, 1.0, 0.992968091106, 1.0, 0.986770966315, 1.0, 0.977319336509, 1.0, 0.996561422091, 1.0, 0.991917416618, 1.0, 0.995459750385, 1.0, 0.999762408228, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999830734327, 1.0, 0.999005914349, 1.0, 0.990659328765, 1.0, 0.984872709468, 1.0, 0.963259098057, 1.0, 0.98793638695, 1.0, 0.997636077371, 1.0, 0.994992548753, 1.0, 0.999084499263, 1.0, 0.999749151466, 1.0, 0.99993950183, 1.0, 0.999987500078, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(12.920, 18.127, 0.000), (13.005, 18.132, 0.000), (13.085, 18.160, 0.000), (13.184, 18.194, 0.000), (13.271, 18.254, 0.000), (13.316, 18.285, 0.000), (13.355, 18.323, 0.000), (13.411, 18.378, 0.000), (13.461, 18.440, 0.000), (13.533, 18.528, 0.000), (13.597, 18.622, 0.000), (13.682, 18.747, 0.000), (13.760, 18.876, 0.000), (13.793, 18.932, 0.000), (13.826, 18.987, 0.000), (13.921, 19.149, 0.000), (14.013, 19.311, 0.000), (14.152, 19.556, 0.000), (14.291, 19.800, 0.000), (14.344, 19.893, 0.000), (14.397, 19.987, 0.000), (14.593, 20.333, 0.000), (14.792, 20.677, 0.000), (14.798, 20.687, 0.000), (14.804, 20.698, 0.000), (14.861, 20.795, 0.000), (14.898, 20.901, 0.000), (14.958, 21.074, 0.000), (14.947, 21.255, 0.000), (14.940, 21.368, 0.000), (14.911, 21.477, 0.000), (14.880, 21.589, 0.000), (14.834, 21.695, 0.000), (14.781, 21.815, 0.000), (14.714, 21.928, 0.000), (14.601, 22.117, 0.000), (14.493, 22.309, 0.000), (14.428, 22.423, 0.000), (14.364, 22.538, 0.000), (14.240, 22.761, 0.000), (14.113, 22.981, 0.000), (13.977, 23.217, 0.000), (13.832, 23.446, 0.000), (13.799, 23.498, 0.000), (13.766, 23.549, 0.000), (13.687, 23.679, 0.000), (13.597, 23.801, 0.000), (13.526, 23.896, 0.000), (13.446, 23.982, 0.000), (13.375, 24.059, 0.000), (13.293, 24.124, 0.000), (13.243, 24.163, 0.000), (13.190, 24.198, 0.000), (13.151, 24.223, 0.000), (13.107, 24.238, 0.000), (13.008, 24.272, 0.000), (12.902, 24.263, 0.000), (12.811, 24.254, 0.000), (12.732, 24.207, 0.000), (12.676, 24.172, 0.000), (12.634, 24.122, 0.000), (12.604, 24.093, 0.000), (12.577, 24.061, 0.000), (12.506, 23.978, 0.000), (12.440, 23.893, 0.000), (12.298, 23.712, 0.000), (12.166, 23.524, 0.000), (12.057, 23.367, 0.000), (11.955, 23.205, 0.000), (11.915, 23.141, 0.000), (11.876, 23.078, 0.000), (11.803, 22.961, 0.000), (11.729, 22.846, 0.000), (11.696, 22.795, 0.000), (11.663, 22.744, 0.000), (11.565, 22.596, 0.000), (11.471, 22.445, 0.000), (11.298, 22.164, 0.000), (11.146, 21.872, 0.000), (11.136, 21.852, 0.000), (11.126, 21.833, 0.000), (11.064, 21.716, 0.000), (11.013, 21.593, 0.000), (10.971, 21.489, 0.000), (10.943, 21.381, 0.000), (10.916, 21.278, 0.000), (10.910, 21.171, 0.000), (10.898, 20.989, 0.000), (10.958, 20.816, 0.000), (10.993, 20.716, 0.000), (11.046, 20.624, 0.000), (11.050, 20.617, 0.000), (11.054, 20.609, 0.000), (11.279, 20.219, 0.000), (11.500, 19.826, 0.000), (11.541, 19.754, 0.000), (11.581, 19.683, 0.000), (11.745, 19.391, 0.000), (11.911, 19.101, 0.000), (11.971, 18.996, 0.000), (12.032, 18.892, 0.000), (12.107, 18.764, 0.000), (12.190, 18.641, 0.000), (12.253, 18.548, 0.000), (12.324, 18.461, 0.000), (12.402, 18.364, 0.000), (12.496, 18.281, 0.000), (12.522, 18.259, 0.000), (12.548, 18.237, 0.000), (12.602, 18.193, 0.000), (12.666, 18.169, 0.000), (12.738, 18.141, 0.000), (12.815, 18.132, 0.000), (12.868, 18.126, 0.000), (12.920, 18.127, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((12.920, 18.127, 0.000)), rs.coerce3dpoint((13.005, 18.132, 0.000)), rs.coerce3dpoint((13.085, 18.160, 0.000)), rs.coerce3dpoint((13.184, 18.194, 0.000)), rs.coerce3dpoint((13.271, 18.254, 0.000)), rs.coerce3dpoint((13.316, 18.285, 0.000)), rs.coerce3dpoint((13.355, 18.323, 0.000)), rs.coerce3dpoint((13.411, 18.378, 0.000)), rs.coerce3dpoint((13.461, 18.440, 0.000)), rs.coerce3dpoint((13.533, 18.528, 0.000)), rs.coerce3dpoint((13.597, 18.622, 0.000)), rs.coerce3dpoint((13.682, 18.747, 0.000)), rs.coerce3dpoint((13.760, 18.876, 0.000)), rs.coerce3dpoint((13.793, 18.932, 0.000)), rs.coerce3dpoint((13.826, 18.987, 0.000)), rs.coerce3dpoint((13.921, 19.149, 0.000)), rs.coerce3dpoint((14.013, 19.311, 0.000)), rs.coerce3dpoint((14.152, 19.556, 0.000)), rs.coerce3dpoint((14.291, 19.800, 0.000)), rs.coerce3dpoint((14.344, 19.893, 0.000)), rs.coerce3dpoint((14.397, 19.987, 0.000)), rs.coerce3dpoint((14.593, 20.333, 0.000)), rs.coerce3dpoint((14.792, 20.677, 0.000)), rs.coerce3dpoint((14.798, 20.687, 0.000)), rs.coerce3dpoint((14.804, 20.698, 0.000)), rs.coerce3dpoint((14.861, 20.795, 0.000)), rs.coerce3dpoint((14.898, 20.901, 0.000)), rs.coerce3dpoint((14.958, 21.074, 0.000)), rs.coerce3dpoint((14.947, 21.255, 0.000)), rs.coerce3dpoint((14.940, 21.368, 0.000)), rs.coerce3dpoint((14.911, 21.477, 0.000)), rs.coerce3dpoint((14.880, 21.589, 0.000)), rs.coerce3dpoint((14.834, 21.695, 0.000)), rs.coerce3dpoint((14.781, 21.815, 0.000)), rs.coerce3dpoint((14.714, 21.928, 0.000)), rs.coerce3dpoint((14.601, 22.117, 0.000)), rs.coerce3dpoint((14.493, 22.309, 0.000)), rs.coerce3dpoint((14.428, 22.423, 0.000)), rs.coerce3dpoint((14.364, 22.538, 0.000)), rs.coerce3dpoint((14.240, 22.761, 0.000)), rs.coerce3dpoint((14.113, 22.981, 0.000)), rs.coerce3dpoint((13.977, 23.217, 0.000)), rs.coerce3dpoint((13.832, 23.446, 0.000)), rs.coerce3dpoint((13.799, 23.498, 0.000)), rs.coerce3dpoint((13.766, 23.549, 0.000)), rs.coerce3dpoint((13.687, 23.679, 0.000)), rs.coerce3dpoint((13.597, 23.801, 0.000)), rs.coerce3dpoint((13.526, 23.896, 0.000)), rs.coerce3dpoint((13.446, 23.982, 0.000)), rs.coerce3dpoint((13.375, 24.059, 0.000)), rs.coerce3dpoint((13.293, 24.124, 0.000)), rs.coerce3dpoint((13.243, 24.163, 0.000)), rs.coerce3dpoint((13.190, 24.198, 0.000)), rs.coerce3dpoint((13.151, 24.223, 0.000)), rs.coerce3dpoint((13.107, 24.238, 0.000)), rs.coerce3dpoint((13.008, 24.272, 0.000)), rs.coerce3dpoint((12.902, 24.263, 0.000)), rs.coerce3dpoint((12.811, 24.254, 0.000)), rs.coerce3dpoint((12.732, 24.207, 0.000)), rs.coerce3dpoint((12.676, 24.172, 0.000)), rs.coerce3dpoint((12.634, 24.122, 0.000)), rs.coerce3dpoint((12.604, 24.093, 0.000)), rs.coerce3dpoint((12.577, 24.061, 0.000)), rs.coerce3dpoint((12.506, 23.978, 0.000)), rs.coerce3dpoint((12.440, 23.893, 0.000)), rs.coerce3dpoint((12.298, 23.712, 0.000)), rs.coerce3dpoint((12.166, 23.524, 0.000)), rs.coerce3dpoint((12.057, 23.367, 0.000)), rs.coerce3dpoint((11.955, 23.205, 0.000)), rs.coerce3dpoint((11.915, 23.141, 0.000)), rs.coerce3dpoint((11.876, 23.078, 0.000)), rs.coerce3dpoint((11.803, 22.961, 0.000)), rs.coerce3dpoint((11.729, 22.846, 0.000)), rs.coerce3dpoint((11.696, 22.795, 0.000)), rs.coerce3dpoint((11.663, 22.744, 0.000)), rs.coerce3dpoint((11.565, 22.596, 0.000)), rs.coerce3dpoint((11.471, 22.445, 0.000)), rs.coerce3dpoint((11.298, 22.164, 0.000)), rs.coerce3dpoint((11.146, 21.872, 0.000)), rs.coerce3dpoint((11.136, 21.852, 0.000)), rs.coerce3dpoint((11.126, 21.833, 0.000)), rs.coerce3dpoint((11.064, 21.716, 0.000)), rs.coerce3dpoint((11.013, 21.593, 0.000)), rs.coerce3dpoint((10.971, 21.489, 0.000)), rs.coerce3dpoint((10.943, 21.381, 0.000)), rs.coerce3dpoint((10.916, 21.278, 0.000)), rs.coerce3dpoint((10.910, 21.171, 0.000)), rs.coerce3dpoint((10.898, 20.989, 0.000)), rs.coerce3dpoint((10.958, 20.816, 0.000)), rs.coerce3dpoint((10.993, 20.716, 0.000)), rs.coerce3dpoint((11.046, 20.624, 0.000)), rs.coerce3dpoint((11.050, 20.617, 0.000)), rs.coerce3dpoint((11.054, 20.609, 0.000)), rs.coerce3dpoint((11.279, 20.219, 0.000)), rs.coerce3dpoint((11.500, 19.826, 0.000)), rs.coerce3dpoint((11.541, 19.754, 0.000)), rs.coerce3dpoint((11.581, 19.683, 0.000)), rs.coerce3dpoint((11.745, 19.391, 0.000)), rs.coerce3dpoint((11.911, 19.101, 0.000)), rs.coerce3dpoint((11.971, 18.996, 0.000)), rs.coerce3dpoint((12.032, 18.892, 0.000)), rs.coerce3dpoint((12.107, 18.764, 0.000)), rs.coerce3dpoint((12.190, 18.641, 0.000)), rs.coerce3dpoint((12.253, 18.548, 0.000)), rs.coerce3dpoint((12.324, 18.461, 0.000)), rs.coerce3dpoint((12.402, 18.364, 0.000)), rs.coerce3dpoint((12.496, 18.281, 0.000)), rs.coerce3dpoint((12.522, 18.259, 0.000)), rs.coerce3dpoint((12.548, 18.237, 0.000)), rs.coerce3dpoint((12.602, 18.193, 0.000)), rs.coerce3dpoint((12.666, 18.169, 0.000)), rs.coerce3dpoint((12.738, 18.141, 0.000)), rs.coerce3dpoint((12.815, 18.132, 0.000)), rs.coerce3dpoint((12.868, 18.126, 0.000)), rs.coerce3dpoint((12.920, 18.127, 0.000))], [0.0, 0.0, 0.168694951239, 0.168694951239, 0.3778330693, 0.3778330693, 0.486600863758, 0.486600863758, 0.644692940682, 0.644692940682, 0.872141569252, 0.872141569252, 1.17375195230, 1.17375195230, 1.30335418605, 1.30335418605, 1.67749778010, 1.67749778010, 2.23955303263, 2.23955303263, 2.45398915202, 2.45398915202, 3.2496978119, 3.2496978119, 3.27342097569, 3.27342097569, 3.49820114574, 3.49820114574, 3.85793526143, 3.85793526143, 4.08331170359, 4.08331170359, 4.31401168148, 4.31401168148, 4.57650843775, 4.57650843775, 5.01685283647, 5.01685283647, 5.28007976193, 5.28007976193, 5.78929456647, 5.78929456647, 6.33199521211, 6.33199521211, 6.45481599397, 6.45481599397, 6.75788779582, 6.75788779582, 6.99430523625, 6.99430523625, 7.20301191688, 7.20301191688, 7.32993539216, 7.32993539216, 7.42145149774, 7.42145149774, 7.62948003472, 7.62948003472, 7.81010190005, 7.81010190005, 7.93999272401, 7.93999272401, 8.02373679666, 8.02373679666, 8.24122387341, 8.24122387341, 8.70015991913, 8.70015991913, 9.08297353505, 9.08297353505, 9.23270725737, 9.23270725737, 9.50755139918, 9.50755139918, 9.62865032899, 9.62865032899, 9.98399142948, 9.98399142948, 10.6425679680, 10.6425679680, 10.6870037025, 10.6870037025, 10.9516013492, 10.9516013492, 11.1753605286, 11.1753605286, 11.3879165190, 11.3879165190, 11.7489904756, 11.7489904756, 11.9606348661, 11.9606348661, 11.9769962903, 11.9769962903, 12.8783434227, 12.8783434227, 13.0429552355, 13.0429552355, 13.7121224050, 13.7121224050, 13.9537604513, 13.9537604513, 14.2500536659, 14.2500536659, 14.4744357618, 14.4744357618, 14.7233883794, 14.7233883794, 14.7918758662, 14.7918758662, 14.9289114589, 14.9289114589, 15.0828036978, 15.0828036978, 15.1877581421, 15.1877581421], 2, [1.0, 0.990767596288, 1.0, 0.990982263942, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.987501615963, 1.0, 0.992043300966, 1.0, 0.997744626227, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.389, 18.141, 0.000), (0.392, 17.244, 0.000), (0.400, 16.347, 0.000), (0.404, 15.860, 0.000), (0.413, 15.373, 0.000), (0.418, 15.115, 0.000), (0.428, 14.858, 0.000), (0.433, 14.721, 0.000), (0.443, 14.584, 0.000), (0.449, 14.510, 0.000), (0.459, 14.436, 0.000), (0.466, 14.389, 0.000), (0.478, 14.344, 0.000), (0.485, 14.320, 0.000), (0.494, 14.296, 0.000), (0.601, 14.012, 0.000), (0.890, 13.917, 0.000), (1.162, 13.828, 0.000), (1.411, 13.970, 0.000), (1.414, 13.972, 0.000), (1.417, 13.974, 0.000), (1.484, 14.012, 0.000), (1.538, 14.067, 0.000), (1.584, 14.113, 0.000), (1.624, 14.165, 0.000), (1.682, 14.240, 0.000), (1.734, 14.319, 0.000), (1.816, 14.443, 0.000), (1.892, 14.570, 0.000), (1.917, 14.610, 0.000), (1.941, 14.651, 0.000), (2.059, 14.850, 0.000), (2.174, 15.051, 0.000), (2.219, 15.128, 0.000), (2.261, 15.207, 0.000), (2.283, 15.247, 0.000), (2.300, 15.289, 0.000), (2.304, 15.300, 0.000), (2.309, 15.312, 0.000), (2.323, 15.350, 0.000), (2.329, 15.390, 0.000), (2.338, 15.442, 0.000), (2.341, 15.494, 0.000), (2.349, 15.599, 0.000), (2.353, 15.704, 0.000), (2.360, 15.918, 0.000), (2.363, 16.132, 0.000), (2.365, 16.269, 0.000), (2.366, 16.407, 0.000), (2.375, 17.522, 0.000), (2.385, 18.638, 0.000), (2.389, 19.135, 0.000), (2.389, 19.632, 0.000), (2.389, 19.884, 0.000), (2.385, 20.136, 0.000), (2.383, 20.275, 0.000), (2.375, 20.414, 0.000), (2.371, 20.498, 0.000), (2.361, 20.582, 0.000), (2.351, 20.654, 0.000), (2.333, 20.725, 0.000), (2.320, 20.780, 0.000), (2.297, 20.831, 0.000), (2.270, 20.891, 0.000), (2.239, 20.948, 0.000), (2.185, 21.047, 0.000), (2.128, 21.144, 0.000), (2.014, 21.340, 0.000), (1.892, 21.530, 0.000), (1.810, 21.659, 0.000), (1.721, 21.783, 0.000), (1.660, 21.869, 0.000), (1.592, 21.949, 0.000), (1.545, 22.005, 0.000), (1.491, 22.055, 0.000), (1.466, 22.078, 0.000), (1.439, 22.099, 0.000), (1.301, 22.202, 0.000), (1.129, 22.208, 0.000), (1.021, 22.211, 0.000), (0.919, 22.179, 0.000), (0.733, 22.122, 0.000), (0.600, 21.981, 0.000), (0.538, 21.917, 0.000), (0.498, 21.838, 0.000), (0.468, 21.779, 0.000), (0.455, 21.715, 0.000), (0.447, 21.676, 0.000), (0.444, 21.637, 0.000), (0.439, 21.564, 0.000), (0.436, 21.490, 0.000), (0.430, 21.300, 0.000), (0.426, 21.110, 0.000), (0.417, 20.622, 0.000), (0.411, 20.134, 0.000), (0.400, 19.137, 0.000), (0.389, 18.141, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.389, 18.141, 0.000)), rs.coerce3dpoint((0.392, 17.244, 0.000)), rs.coerce3dpoint((0.400, 16.347, 0.000)), rs.coerce3dpoint((0.404, 15.860, 0.000)), rs.coerce3dpoint((0.413, 15.373, 0.000)), rs.coerce3dpoint((0.418, 15.115, 0.000)), rs.coerce3dpoint((0.428, 14.858, 0.000)), rs.coerce3dpoint((0.433, 14.721, 0.000)), rs.coerce3dpoint((0.443, 14.584, 0.000)), rs.coerce3dpoint((0.449, 14.510, 0.000)), rs.coerce3dpoint((0.459, 14.436, 0.000)), rs.coerce3dpoint((0.466, 14.389, 0.000)), rs.coerce3dpoint((0.478, 14.344, 0.000)), rs.coerce3dpoint((0.485, 14.320, 0.000)), rs.coerce3dpoint((0.494, 14.296, 0.000)), rs.coerce3dpoint((0.601, 14.012, 0.000)), rs.coerce3dpoint((0.890, 13.917, 0.000)), rs.coerce3dpoint((1.162, 13.828, 0.000)), rs.coerce3dpoint((1.411, 13.970, 0.000)), rs.coerce3dpoint((1.414, 13.972, 0.000)), rs.coerce3dpoint((1.417, 13.974, 0.000)), rs.coerce3dpoint((1.484, 14.012, 0.000)), rs.coerce3dpoint((1.538, 14.067, 0.000)), rs.coerce3dpoint((1.584, 14.113, 0.000)), rs.coerce3dpoint((1.624, 14.165, 0.000)), rs.coerce3dpoint((1.682, 14.240, 0.000)), rs.coerce3dpoint((1.734, 14.319, 0.000)), rs.coerce3dpoint((1.816, 14.443, 0.000)), rs.coerce3dpoint((1.892, 14.570, 0.000)), rs.coerce3dpoint((1.917, 14.610, 0.000)), rs.coerce3dpoint((1.941, 14.651, 0.000)), rs.coerce3dpoint((2.059, 14.850, 0.000)), rs.coerce3dpoint((2.174, 15.051, 0.000)), rs.coerce3dpoint((2.219, 15.128, 0.000)), rs.coerce3dpoint((2.261, 15.207, 0.000)), rs.coerce3dpoint((2.283, 15.247, 0.000)), rs.coerce3dpoint((2.300, 15.289, 0.000)), rs.coerce3dpoint((2.304, 15.300, 0.000)), rs.coerce3dpoint((2.309, 15.312, 0.000)), rs.coerce3dpoint((2.323, 15.350, 0.000)), rs.coerce3dpoint((2.329, 15.390, 0.000)), rs.coerce3dpoint((2.338, 15.442, 0.000)), rs.coerce3dpoint((2.341, 15.494, 0.000)), rs.coerce3dpoint((2.349, 15.599, 0.000)), rs.coerce3dpoint((2.353, 15.704, 0.000)), rs.coerce3dpoint((2.360, 15.918, 0.000)), rs.coerce3dpoint((2.363, 16.132, 0.000)), rs.coerce3dpoint((2.365, 16.269, 0.000)), rs.coerce3dpoint((2.366, 16.407, 0.000)), rs.coerce3dpoint((2.375, 17.522, 0.000)), rs.coerce3dpoint((2.385, 18.638, 0.000)), rs.coerce3dpoint((2.389, 19.135, 0.000)), rs.coerce3dpoint((2.389, 19.632, 0.000)), rs.coerce3dpoint((2.389, 19.884, 0.000)), rs.coerce3dpoint((2.385, 20.136, 0.000)), rs.coerce3dpoint((2.383, 20.275, 0.000)), rs.coerce3dpoint((2.375, 20.414, 0.000)), rs.coerce3dpoint((2.371, 20.498, 0.000)), rs.coerce3dpoint((2.361, 20.582, 0.000)), rs.coerce3dpoint((2.351, 20.654, 0.000)), rs.coerce3dpoint((2.333, 20.725, 0.000)), rs.coerce3dpoint((2.320, 20.780, 0.000)), rs.coerce3dpoint((2.297, 20.831, 0.000)), rs.coerce3dpoint((2.270, 20.891, 0.000)), rs.coerce3dpoint((2.239, 20.948, 0.000)), rs.coerce3dpoint((2.185, 21.047, 0.000)), rs.coerce3dpoint((2.128, 21.144, 0.000)), rs.coerce3dpoint((2.014, 21.340, 0.000)), rs.coerce3dpoint((1.892, 21.530, 0.000)), rs.coerce3dpoint((1.810, 21.659, 0.000)), rs.coerce3dpoint((1.721, 21.783, 0.000)), rs.coerce3dpoint((1.660, 21.869, 0.000)), rs.coerce3dpoint((1.592, 21.949, 0.000)), rs.coerce3dpoint((1.545, 22.005, 0.000)), rs.coerce3dpoint((1.491, 22.055, 0.000)), rs.coerce3dpoint((1.466, 22.078, 0.000)), rs.coerce3dpoint((1.439, 22.099, 0.000)), rs.coerce3dpoint((1.301, 22.202, 0.000)), rs.coerce3dpoint((1.129, 22.208, 0.000)), rs.coerce3dpoint((1.021, 22.211, 0.000)), rs.coerce3dpoint((0.919, 22.179, 0.000)), rs.coerce3dpoint((0.733, 22.122, 0.000)), rs.coerce3dpoint((0.600, 21.981, 0.000)), rs.coerce3dpoint((0.538, 21.917, 0.000)), rs.coerce3dpoint((0.498, 21.838, 0.000)), rs.coerce3dpoint((0.468, 21.779, 0.000)), rs.coerce3dpoint((0.455, 21.715, 0.000)), rs.coerce3dpoint((0.447, 21.676, 0.000)), rs.coerce3dpoint((0.444, 21.637, 0.000)), rs.coerce3dpoint((0.439, 21.564, 0.000)), rs.coerce3dpoint((0.436, 21.490, 0.000)), rs.coerce3dpoint((0.430, 21.300, 0.000)), rs.coerce3dpoint((0.426, 21.110, 0.000)), rs.coerce3dpoint((0.417, 20.622, 0.000)), rs.coerce3dpoint((0.411, 20.134, 0.000)), rs.coerce3dpoint((0.400, 19.137, 0.000)), rs.coerce3dpoint((0.389, 18.141, 0.000))], [0.0, 0.0, 1.79428606304, 1.79428606304, 2.76843559698, 2.76843559698, 3.28325403935, 3.28325403935, 3.55749443424, 3.55749443424, 3.70694157016, 3.70694157016, 3.80034127947, 3.80034127947, 3.85109344615, 3.85109344615, 4.41798846097, 4.41798846097, 4.95646781491, 4.95646781491, 4.96443339084, 4.96443339084, 5.11694283877, 5.11694283877, 5.24712656384, 5.24712656384, 5.43744059721, 5.43744059721, 5.73329867620, 5.73329867620, 5.82790324404, 5.82790324404, 6.29133564824, 6.29133564824, 6.46938897560, 6.46938897560, 6.56069814749, 6.56069814749, 6.58476201459, 6.58476201459, 6.66585488677, 6.66585488677, 6.77102176662, 6.77102176662, 6.98076620829, 6.98076620829, 7.40926884450, 7.40926884450, 7.68393802897, 7.68393802897, 9.91540158021, 9.91540158021, 10.9095221412, 10.9095221412, 11.4134958677, 11.4134958677, 11.6911592789, 11.6911592789, 11.8603350411, 11.8603350411, 12.0056454120, 12.0056454120, 12.1182946689, 12.1182946689, 12.2482427678, 12.2482427678, 12.4744879590, 12.4744879590, 12.9266821035, 12.9266821035, 13.2318761688, 13.2318761688, 13.4423274071, 13.4423274071, 13.5892802217, 13.5892802217, 13.6569718642, 13.6569718642, 13.9907541486, 13.9907541486, 14.2036623637, 14.2036623637, 14.5829400788, 14.5829400788, 14.7599428771, 14.7599428771, 14.8896469201, 14.8896469201, 14.9691590020, 14.9691590020, 15.1159979784, 15.1159979784, 15.4961784493, 15.4961784493, 16.4726888648, 16.4726888648, 18.4656737407, 18.4656737407], 2, [1.0, 0.999996080008, 1.0, 0.999985420106, 1.0, 0.999951981153, 1.0, 0.999830734327, 1.0, 0.999401599095, 1.0, 0.997824369262, 1.0, 0.999049971492, 1.0, 0.901416697095, 1.0, 0.913200027933, 1.0, 1.0, 1.0, 0.990902055423, 1.0, 0.998153386566, 1.0, 0.999285835107, 1.0, 0.999716820101, 1.0, 0.999990320047, 1.0, 0.999983180141, 1.0, 0.999834393714, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 0.994502652065, 1.0, 0.999084499263, 1.0, 0.999775305247, 1.0, 0.999943821578, 1.0, 0.999996620006, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99995950082, 1.0, 0.99982703496, 1.0, 0.999359385259, 1.0, 0.998165504232, 1.0, 0.995573000899, 1.0, 0.999262991691, 1.0, 0.999811837704, 1.0, 0.999819516289, 1.0, 0.999613654646, 1.0, 0.999159853072, 1.0, 0.998177582118, 1.0, 0.998760748348, 1.0, 0.953490344664, 1.0, 0.986184971261, 1.0, 0.967760216611, 1.0, 0.98959978494, 1.0, 0.990632164658, 1.0, 0.998042537706, 1.0, 0.999766747207, 1.0, 0.999963020684, 1.0, 0.999993520021, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.532, 43.269, 0.000), (-14.528, 44.362, 0.000), (-14.523, 45.455, 0.000), (-14.522, 45.559, 0.000), (-14.523, 45.663, 0.000), (-14.523, 45.673, 0.000), (-14.523, 45.683, 0.000), (-14.524, 45.727, 0.000), (-14.529, 45.770, 0.000), (-14.532, 45.792, 0.000), (-14.535, 45.815, 0.000), (-14.549, 45.928, 0.000), (-14.596, 46.032, 0.000), (-14.651, 46.155, 0.000), (-14.750, 46.245, 0.000), (-14.941, 46.419, 0.000), (-15.199, 46.402, 0.000), (-15.324, 46.394, 0.000), (-15.438, 46.341, 0.000), (-15.509, 46.308, 0.000), (-15.572, 46.261, 0.000), (-15.671, 46.187, 0.000), (-15.752, 46.094, 0.000), (-15.825, 46.009, 0.000), (-15.886, 45.914, 0.000), (-15.920, 45.861, 0.000), (-15.952, 45.806, 0.000), (-16.117, 45.520, 0.000), (-16.282, 45.235, 0.000), (-16.740, 44.441, 0.000), (-17.199, 43.647, 0.000), (-17.360, 43.368, 0.000), (-17.518, 43.088, 0.000), (-17.583, 42.973, 0.000), (-17.645, 42.857, 0.000), (-17.675, 42.800, 0.000), (-17.701, 42.742, 0.000), (-17.714, 42.712, 0.000), (-17.725, 42.682, 0.000), (-17.745, 42.630, 0.000), (-17.757, 42.575, 0.000), (-17.775, 42.486, 0.000), (-17.762, 42.396, 0.000), (-17.751, 42.327, 0.000), (-17.728, 42.261, 0.000), (-17.701, 42.182, 0.000), (-17.663, 42.107, 0.000), (-17.639, 42.057, 0.000), (-17.612, 42.009, 0.000), (-17.389, 41.607, 0.000), (-17.164, 41.207, 0.000), (-17.047, 40.998, 0.000), (-16.925, 40.792, 0.000), (-16.857, 40.675, 0.000), (-16.783, 40.560, 0.000), (-16.738, 40.490, 0.000), (-16.689, 40.424, 0.000), (-16.654, 40.378, 0.000), (-16.614, 40.337, 0.000), (-16.590, 40.313, 0.000), (-16.564, 40.293, 0.000), (-16.534, 40.269, 0.000), (-16.499, 40.253, 0.000), (-16.463, 40.239, 0.000), (-16.425, 40.231, 0.000), (-16.372, 40.221, 0.000), (-16.318, 40.216, 0.000), (-16.227, 40.209, 0.000), (-16.136, 40.206, 0.000), (-16.064, 40.204, 0.000), (-15.992, 40.203, 0.000), (-15.766, 40.200, 0.000), (-15.541, 40.202, 0.000), (-15.405, 40.203, 0.000), (-15.269, 40.211, 0.000), (-15.183, 40.216, 0.000), (-15.097, 40.228, 0.000), (-15.038, 40.236, 0.000), (-14.981, 40.251, 0.000), (-14.916, 40.269, 0.000), (-14.859, 40.303, 0.000), (-14.808, 40.332, 0.000), (-14.766, 40.372, 0.000), (-14.722, 40.413, 0.000), (-14.693, 40.465, 0.000), (-14.674, 40.497, 0.000), (-14.659, 40.532, 0.000), (-14.640, 40.578, 0.000), (-14.628, 40.627, 0.000), (-14.613, 40.693, 0.000), (-14.604, 40.760, 0.000), (-14.589, 40.869, 0.000), (-14.580, 40.977, 0.000), (-14.566, 41.156, 0.000), (-14.559, 41.335, 0.000), (-14.547, 41.625, 0.000), (-14.542, 41.915, 0.000), (-14.534, 42.383, 0.000), (-14.533, 42.850, 0.000), (-14.533, 43.060, 0.000), (-14.532, 43.269, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.532, 43.269, 0.000)), rs.coerce3dpoint((-14.528, 44.362, 0.000)), rs.coerce3dpoint((-14.523, 45.455, 0.000)), rs.coerce3dpoint((-14.522, 45.559, 0.000)), rs.coerce3dpoint((-14.523, 45.663, 0.000)), rs.coerce3dpoint((-14.523, 45.673, 0.000)), rs.coerce3dpoint((-14.523, 45.683, 0.000)), rs.coerce3dpoint((-14.524, 45.727, 0.000)), rs.coerce3dpoint((-14.529, 45.770, 0.000)), rs.coerce3dpoint((-14.532, 45.792, 0.000)), rs.coerce3dpoint((-14.535, 45.815, 0.000)), rs.coerce3dpoint((-14.549, 45.928, 0.000)), rs.coerce3dpoint((-14.596, 46.032, 0.000)), rs.coerce3dpoint((-14.651, 46.155, 0.000)), rs.coerce3dpoint((-14.750, 46.245, 0.000)), rs.coerce3dpoint((-14.941, 46.419, 0.000)), rs.coerce3dpoint((-15.199, 46.402, 0.000)), rs.coerce3dpoint((-15.324, 46.394, 0.000)), rs.coerce3dpoint((-15.438, 46.341, 0.000)), rs.coerce3dpoint((-15.509, 46.308, 0.000)), rs.coerce3dpoint((-15.572, 46.261, 0.000)), rs.coerce3dpoint((-15.671, 46.187, 0.000)), rs.coerce3dpoint((-15.752, 46.094, 0.000)), rs.coerce3dpoint((-15.825, 46.009, 0.000)), rs.coerce3dpoint((-15.886, 45.914, 0.000)), rs.coerce3dpoint((-15.920, 45.861, 0.000)), rs.coerce3dpoint((-15.952, 45.806, 0.000)), rs.coerce3dpoint((-16.117, 45.520, 0.000)), rs.coerce3dpoint((-16.282, 45.235, 0.000)), rs.coerce3dpoint((-16.740, 44.441, 0.000)), rs.coerce3dpoint((-17.199, 43.647, 0.000)), rs.coerce3dpoint((-17.360, 43.368, 0.000)), rs.coerce3dpoint((-17.518, 43.088, 0.000)), rs.coerce3dpoint((-17.583, 42.973, 0.000)), rs.coerce3dpoint((-17.645, 42.857, 0.000)), rs.coerce3dpoint((-17.675, 42.800, 0.000)), rs.coerce3dpoint((-17.701, 42.742, 0.000)), rs.coerce3dpoint((-17.714, 42.712, 0.000)), rs.coerce3dpoint((-17.725, 42.682, 0.000)), rs.coerce3dpoint((-17.745, 42.630, 0.000)), rs.coerce3dpoint((-17.757, 42.575, 0.000)), rs.coerce3dpoint((-17.775, 42.486, 0.000)), rs.coerce3dpoint((-17.762, 42.396, 0.000)), rs.coerce3dpoint((-17.751, 42.327, 0.000)), rs.coerce3dpoint((-17.728, 42.261, 0.000)), rs.coerce3dpoint((-17.701, 42.182, 0.000)), rs.coerce3dpoint((-17.663, 42.107, 0.000)), rs.coerce3dpoint((-17.639, 42.057, 0.000)), rs.coerce3dpoint((-17.612, 42.009, 0.000)), rs.coerce3dpoint((-17.389, 41.607, 0.000)), rs.coerce3dpoint((-17.164, 41.207, 0.000)), rs.coerce3dpoint((-17.047, 40.998, 0.000)), rs.coerce3dpoint((-16.925, 40.792, 0.000)), rs.coerce3dpoint((-16.857, 40.675, 0.000)), rs.coerce3dpoint((-16.783, 40.560, 0.000)), rs.coerce3dpoint((-16.738, 40.490, 0.000)), rs.coerce3dpoint((-16.689, 40.424, 0.000)), rs.coerce3dpoint((-16.654, 40.378, 0.000)), rs.coerce3dpoint((-16.614, 40.337, 0.000)), rs.coerce3dpoint((-16.590, 40.313, 0.000)), rs.coerce3dpoint((-16.564, 40.293, 0.000)), rs.coerce3dpoint((-16.534, 40.269, 0.000)), rs.coerce3dpoint((-16.499, 40.253, 0.000)), rs.coerce3dpoint((-16.463, 40.239, 0.000)), rs.coerce3dpoint((-16.425, 40.231, 0.000)), rs.coerce3dpoint((-16.372, 40.221, 0.000)), rs.coerce3dpoint((-16.318, 40.216, 0.000)), rs.coerce3dpoint((-16.227, 40.209, 0.000)), rs.coerce3dpoint((-16.136, 40.206, 0.000)), rs.coerce3dpoint((-16.064, 40.204, 0.000)), rs.coerce3dpoint((-15.992, 40.203, 0.000)), rs.coerce3dpoint((-15.766, 40.200, 0.000)), rs.coerce3dpoint((-15.541, 40.202, 0.000)), rs.coerce3dpoint((-15.405, 40.203, 0.000)), rs.coerce3dpoint((-15.269, 40.211, 0.000)), rs.coerce3dpoint((-15.183, 40.216, 0.000)), rs.coerce3dpoint((-15.097, 40.228, 0.000)), rs.coerce3dpoint((-15.038, 40.236, 0.000)), rs.coerce3dpoint((-14.981, 40.251, 0.000)), rs.coerce3dpoint((-14.916, 40.269, 0.000)), rs.coerce3dpoint((-14.859, 40.303, 0.000)), rs.coerce3dpoint((-14.808, 40.332, 0.000)), rs.coerce3dpoint((-14.766, 40.372, 0.000)), rs.coerce3dpoint((-14.722, 40.413, 0.000)), rs.coerce3dpoint((-14.693, 40.465, 0.000)), rs.coerce3dpoint((-14.674, 40.497, 0.000)), rs.coerce3dpoint((-14.659, 40.532, 0.000)), rs.coerce3dpoint((-14.640, 40.578, 0.000)), rs.coerce3dpoint((-14.628, 40.627, 0.000)), rs.coerce3dpoint((-14.613, 40.693, 0.000)), rs.coerce3dpoint((-14.604, 40.760, 0.000)), rs.coerce3dpoint((-14.589, 40.869, 0.000)), rs.coerce3dpoint((-14.580, 40.977, 0.000)), rs.coerce3dpoint((-14.566, 41.156, 0.000)), rs.coerce3dpoint((-14.559, 41.335, 0.000)), rs.coerce3dpoint((-14.547, 41.625, 0.000)), rs.coerce3dpoint((-14.542, 41.915, 0.000)), rs.coerce3dpoint((-14.534, 42.383, 0.000)), rs.coerce3dpoint((-14.533, 42.850, 0.000)), rs.coerce3dpoint((-14.533, 43.060, 0.000)), rs.coerce3dpoint((-14.532, 43.269, 0.000))], [0.0, 0.0, 2.18510157441, 2.18510157441, 2.39328290911, 2.39328290911, 2.41377701070, 2.41377701070, 2.50032470111, 2.50032470111, 2.54642124328, 2.54642124328, 2.77265873997, 2.77265873997, 3.03733284276, 3.03733284276, 3.52582712868, 3.52582712868, 3.7740546236, 3.7740546236, 3.93030458134, 3.93030458134, 4.17634910284, 4.17634910284, 4.40103032570, 4.40103032570, 4.52724525071, 4.52724525071, 5.18749047977, 5.18749047977, 7.02076009696, 7.02076009696, 7.66425240968, 7.66425240968, 7.92805125181, 7.92805125181, 8.05615486751, 8.05615486751, 8.12076361461, 8.12076361461, 8.23234075007, 8.23234075007, 8.41281922463, 8.41281922463, 8.55118070736, 8.55118070736, 8.71890538347, 8.71890538347, 8.82970091695, 8.82970091695, 9.74851015851, 9.74851015851, 10.2269625397, 10.2269625397, 10.4990269923, 10.4990269923, 10.6643516256, 10.6643516256, 10.7793957019, 10.7793957019, 10.8463992906, 10.8463992906, 10.9227557117, 10.9227557117, 10.9994698373, 10.9994698373, 11.1082698703, 11.1082698703, 11.2900399044, 11.2900399044, 11.4343866659, 11.4343866659, 11.8851220271, 11.8851220271, 12.1573607833, 12.1573607833, 12.3300452042, 12.3300452042, 12.4488955026, 12.4488955026, 12.5814560619, 12.5814560619, 12.6975732971, 12.6975732971, 12.8166990165, 12.8166990165, 12.8911236907, 12.8911236907, 12.9915218737, 12.9915218737, 13.1272539182, 13.1272539182, 13.3454469472, 13.3454469472, 13.7037146924, 13.7037146924, 14.2843363870, 14.2843363870, 15.2191822264, 15.2191822264, 15.6385725126, 15.6385725126], 2, [1.0, 1.0, 1.0, 0.999980780185, 1.0, 1.0, 1.0, 0.998809988485, 1.0, 1.0, 1.0, 0.988783242624, 1.0, 0.979286195966, 1.0, 0.920619103117, 1.0, 0.982703764746, 1.0, 0.994831769902, 1.0, 0.994033671791, 1.0, 0.997482672462, 1.0, 0.999646282569, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999907524276, 1.0, 0.999449031825, 1.0, 0.999415350957, 1.0, 0.997236144733, 1.0, 0.984387454667, 1.0, 0.995703330557, 1.0, 0.997915594639, 1.0, 0.999646282569, 1.0, 0.999993520021, 1.0, 0.999951981153, 1.0, 0.99979600081, 1.0, 0.999300864481, 1.0, 0.997811178095, 1.0, 0.99799223758, 1.0, 0.990848388494, 1.0, 0.994952590401, 1.0, 0.998499606435, 1.0, 0.999573770855, 1.0, 0.99995950082, 1.0, 0.999907524276, 1.0, 0.99972155877, 1.0, 0.999200319872, 1.0, 0.99778467655, 1.0, 0.991220787198, 1.0, 0.993155583453, 1.0, 0.988783242624, 1.0, 0.998342494801, 1.0, 0.996461451758, 1.0, 0.998829405547, 1.0, 0.999550101227, 1.0, 0.999823295614, 1.0, 0.999928002592, 1.0, 0.999969580463, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.428, 34.149, 0.000), (-11.427, 34.269, 0.000), (-11.425, 34.389, 0.000), (-11.422, 34.537, 0.000), (-11.422, 34.686, 0.000), (-11.422, 34.787, 0.000), (-11.428, 34.888, 0.000), (-11.433, 34.979, 0.000), (-11.449, 35.069, 0.000), (-11.463, 35.151, 0.000), (-11.495, 35.227, 0.000), (-11.523, 35.294, 0.000), (-11.557, 35.358, 0.000), (-11.610, 35.457, 0.000), (-11.668, 35.553, 0.000), (-11.674, 35.563, 0.000), (-11.679, 35.572, 0.000), (-11.879, 35.904, 0.000), (-12.071, 36.241, 0.000), (-12.224, 36.509, 0.000), (-12.375, 36.778, 0.000), (-12.565, 37.115, 0.000), (-12.758, 37.451, 0.000), (-12.783, 37.495, 0.000), (-12.808, 37.538, 0.000), (-13.050, 37.955, 0.000), (-13.304, 38.364, 0.000), (-13.386, 38.496, 0.000), (-13.468, 38.627, 0.000), (-13.528, 38.724, 0.000), (-13.610, 38.802, 0.000), (-13.706, 38.894, 0.000), (-13.828, 38.946, 0.000), (-13.964, 39.005, 0.000), (-14.112, 39.005, 0.000), (-14.119, 39.005, 0.000), (-14.126, 39.005, 0.000), (-14.400, 39.019, 0.000), (-14.675, 39.006, 0.000), (-14.783, 39.001, 0.000), (-14.890, 38.989, 0.000), (-14.928, 38.985, 0.000), (-14.966, 38.978, 0.000), (-15.066, 38.958, 0.000), (-15.157, 38.910, 0.000), (-15.256, 38.859, 0.000), (-15.329, 38.774, 0.000), (-15.425, 38.661, 0.000), (-15.451, 38.514, 0.000), (-15.470, 38.411, 0.000), (-15.454, 38.307, 0.000), (-15.447, 38.256, 0.000), (-15.432, 38.205, 0.000), (-15.417, 38.154, 0.000), (-15.395, 38.105, 0.000), (-15.365, 38.039, 0.000), (-15.332, 37.974, 0.000), (-15.263, 37.842, 0.000), (-15.191, 37.713, 0.000), (-15.039, 37.440, 0.000), (-14.884, 37.170, 0.000), (-14.809, 37.040, 0.000), (-14.734, 36.910, 0.000), (-14.321, 36.192, 0.000), (-13.903, 35.478, 0.000), (-13.635, 35.022, 0.000), (-13.361, 34.570, 0.000), (-13.188, 34.283, 0.000), (-13.008, 34.000, 0.000), (-12.894, 33.820, 0.000), (-12.774, 33.644, 0.000), (-12.698, 33.532, 0.000), (-12.616, 33.424, 0.000), (-12.561, 33.351, 0.000), (-12.500, 33.284, 0.000), (-12.454, 33.232, 0.000), (-12.401, 33.188, 0.000), (-12.366, 33.158, 0.000), (-12.327, 33.133, 0.000), (-12.275, 33.097, 0.000), (-12.216, 33.072, 0.000), (-12.153, 33.045, 0.000), (-12.085, 33.038, 0.000), (-12.034, 33.031, 0.000), (-11.984, 33.041, 0.000), (-11.938, 33.051, 0.000), (-11.895, 33.072, 0.000), (-11.843, 33.097, 0.000), (-11.795, 33.130, 0.000), (-11.762, 33.152, 0.000), (-11.731, 33.177, 0.000), (-11.674, 33.221, 0.000), (-11.623, 33.271, 0.000), (-11.582, 33.310, 0.000), (-11.550, 33.356, 0.000), (-11.514, 33.408, 0.000), (-11.493, 33.469, 0.000), (-11.488, 33.484, 0.000), (-11.483, 33.500, 0.000), (-11.462, 33.568, 0.000), (-11.453, 33.639, 0.000), (-11.443, 33.716, 0.000), (-11.439, 33.794, 0.000), (-11.431, 33.923, 0.000), (-11.430, 34.053, 0.000), (-11.429, 34.101, 0.000), (-11.428, 34.149, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.428, 34.149, 0.000)), rs.coerce3dpoint((-11.427, 34.269, 0.000)), rs.coerce3dpoint((-11.425, 34.389, 0.000)), rs.coerce3dpoint((-11.422, 34.537, 0.000)), rs.coerce3dpoint((-11.422, 34.686, 0.000)), rs.coerce3dpoint((-11.422, 34.787, 0.000)), rs.coerce3dpoint((-11.428, 34.888, 0.000)), rs.coerce3dpoint((-11.433, 34.979, 0.000)), rs.coerce3dpoint((-11.449, 35.069, 0.000)), rs.coerce3dpoint((-11.463, 35.151, 0.000)), rs.coerce3dpoint((-11.495, 35.227, 0.000)), rs.coerce3dpoint((-11.523, 35.294, 0.000)), rs.coerce3dpoint((-11.557, 35.358, 0.000)), rs.coerce3dpoint((-11.610, 35.457, 0.000)), rs.coerce3dpoint((-11.668, 35.553, 0.000)), rs.coerce3dpoint((-11.674, 35.563, 0.000)), rs.coerce3dpoint((-11.679, 35.572, 0.000)), rs.coerce3dpoint((-11.879, 35.904, 0.000)), rs.coerce3dpoint((-12.071, 36.241, 0.000)), rs.coerce3dpoint((-12.224, 36.509, 0.000)), rs.coerce3dpoint((-12.375, 36.778, 0.000)), rs.coerce3dpoint((-12.565, 37.115, 0.000)), rs.coerce3dpoint((-12.758, 37.451, 0.000)), rs.coerce3dpoint((-12.783, 37.495, 0.000)), rs.coerce3dpoint((-12.808, 37.538, 0.000)), rs.coerce3dpoint((-13.050, 37.955, 0.000)), rs.coerce3dpoint((-13.304, 38.364, 0.000)), rs.coerce3dpoint((-13.386, 38.496, 0.000)), rs.coerce3dpoint((-13.468, 38.627, 0.000)), rs.coerce3dpoint((-13.528, 38.724, 0.000)), rs.coerce3dpoint((-13.610, 38.802, 0.000)), rs.coerce3dpoint((-13.706, 38.894, 0.000)), rs.coerce3dpoint((-13.828, 38.946, 0.000)), rs.coerce3dpoint((-13.964, 39.005, 0.000)), rs.coerce3dpoint((-14.112, 39.005, 0.000)), rs.coerce3dpoint((-14.119, 39.005, 0.000)), rs.coerce3dpoint((-14.126, 39.005, 0.000)), rs.coerce3dpoint((-14.400, 39.019, 0.000)), rs.coerce3dpoint((-14.675, 39.006, 0.000)), rs.coerce3dpoint((-14.783, 39.001, 0.000)), rs.coerce3dpoint((-14.890, 38.989, 0.000)), rs.coerce3dpoint((-14.928, 38.985, 0.000)), rs.coerce3dpoint((-14.966, 38.978, 0.000)), rs.coerce3dpoint((-15.066, 38.958, 0.000)), rs.coerce3dpoint((-15.157, 38.910, 0.000)), rs.coerce3dpoint((-15.256, 38.859, 0.000)), rs.coerce3dpoint((-15.329, 38.774, 0.000)), rs.coerce3dpoint((-15.425, 38.661, 0.000)), rs.coerce3dpoint((-15.451, 38.514, 0.000)), rs.coerce3dpoint((-15.470, 38.411, 0.000)), rs.coerce3dpoint((-15.454, 38.307, 0.000)), rs.coerce3dpoint((-15.447, 38.256, 0.000)), rs.coerce3dpoint((-15.432, 38.205, 0.000)), rs.coerce3dpoint((-15.417, 38.154, 0.000)), rs.coerce3dpoint((-15.395, 38.105, 0.000)), rs.coerce3dpoint((-15.365, 38.039, 0.000)), rs.coerce3dpoint((-15.332, 37.974, 0.000)), rs.coerce3dpoint((-15.263, 37.842, 0.000)), rs.coerce3dpoint((-15.191, 37.713, 0.000)), rs.coerce3dpoint((-15.039, 37.440, 0.000)), rs.coerce3dpoint((-14.884, 37.170, 0.000)), rs.coerce3dpoint((-14.809, 37.040, 0.000)), rs.coerce3dpoint((-14.734, 36.910, 0.000)), rs.coerce3dpoint((-14.321, 36.192, 0.000)), rs.coerce3dpoint((-13.903, 35.478, 0.000)), rs.coerce3dpoint((-13.635, 35.022, 0.000)), rs.coerce3dpoint((-13.361, 34.570, 0.000)), rs.coerce3dpoint((-13.188, 34.283, 0.000)), rs.coerce3dpoint((-13.008, 34.000, 0.000)), rs.coerce3dpoint((-12.894, 33.820, 0.000)), rs.coerce3dpoint((-12.774, 33.644, 0.000)), rs.coerce3dpoint((-12.698, 33.532, 0.000)), rs.coerce3dpoint((-12.616, 33.424, 0.000)), rs.coerce3dpoint((-12.561, 33.351, 0.000)), rs.coerce3dpoint((-12.500, 33.284, 0.000)), rs.coerce3dpoint((-12.454, 33.232, 0.000)), rs.coerce3dpoint((-12.401, 33.188, 0.000)), rs.coerce3dpoint((-12.366, 33.158, 0.000)), rs.coerce3dpoint((-12.327, 33.133, 0.000)), rs.coerce3dpoint((-12.275, 33.097, 0.000)), rs.coerce3dpoint((-12.216, 33.072, 0.000)), rs.coerce3dpoint((-12.153, 33.045, 0.000)), rs.coerce3dpoint((-12.085, 33.038, 0.000)), rs.coerce3dpoint((-12.034, 33.031, 0.000)), rs.coerce3dpoint((-11.984, 33.041, 0.000)), rs.coerce3dpoint((-11.938, 33.051, 0.000)), rs.coerce3dpoint((-11.895, 33.072, 0.000)), rs.coerce3dpoint((-11.843, 33.097, 0.000)), rs.coerce3dpoint((-11.795, 33.130, 0.000)), rs.coerce3dpoint((-11.762, 33.152, 0.000)), rs.coerce3dpoint((-11.731, 33.177, 0.000)), rs.coerce3dpoint((-11.674, 33.221, 0.000)), rs.coerce3dpoint((-11.623, 33.271, 0.000)), rs.coerce3dpoint((-11.582, 33.310, 0.000)), rs.coerce3dpoint((-11.550, 33.356, 0.000)), rs.coerce3dpoint((-11.514, 33.408, 0.000)), rs.coerce3dpoint((-11.493, 33.469, 0.000)), rs.coerce3dpoint((-11.488, 33.484, 0.000)), rs.coerce3dpoint((-11.483, 33.500, 0.000)), rs.coerce3dpoint((-11.462, 33.568, 0.000)), rs.coerce3dpoint((-11.453, 33.639, 0.000)), rs.coerce3dpoint((-11.443, 33.716, 0.000)), rs.coerce3dpoint((-11.439, 33.794, 0.000)), rs.coerce3dpoint((-11.431, 33.923, 0.000)), rs.coerce3dpoint((-11.430, 34.053, 0.000)), rs.coerce3dpoint((-11.429, 34.101, 0.000)), rs.coerce3dpoint((-11.428, 34.149, 0.000))], [0.0, 0.0, 0.239661825634, 0.239661825634, 0.536629772699, 0.536629772699, 0.738605939267, 0.738605939267, 0.921500286922, 0.921500286922, 1.08652002459, 1.08652002459, 1.23124605096, 1.23124605096, 1.45605954462, 1.45605954462, 1.47756376049, 1.47756376049, 2.25266856529, 2.25266856529, 2.87019285069, 2.87019285069, 3.64409409376, 3.64409409376, 3.74488079130, 3.74488079130, 4.70758736440, 4.70758736440, 5.01853197044, 5.01853197044, 5.24444852573, 5.24444852573, 5.50682710909, 5.50682710909, 5.79903707993, 5.79903707993, 5.81303709421, 5.81303709421, 6.36178871464, 6.36178871464, 6.57776993416, 6.57776993416, 6.65478915830, 6.65478915830, 6.85780773652, 6.85780773652, 7.07838017361, 7.07838017361, 7.36954719743, 7.36954719743, 7.57681967519, 7.57681967519, 7.68137111845, 7.68137111845, 7.78788736534, 7.78788736534, 7.93382232475, 7.93382232475, 8.23098753202, 8.23098753202, 8.85435838648, 8.85435838648, 9.15449848461, 9.15449848461, 10.8099881995, 10.8099881995, 11.8675203757, 11.8675203757, 12.5381460371, 12.5381460371, 12.9642046786, 12.9642046786, 13.2349149604, 13.2349149604, 13.4170363323, 13.4170363323, 13.5548843186, 13.5548843186, 13.6470282740, 13.6470282740, 13.7738594417, 13.7738594417, 13.9100070411, 13.9100070411, 14.0114122366, 14.0114122366, 14.1057030009, 14.1057030009, 14.2212625607, 14.2212625607, 14.3009891437, 14.3009891437, 14.4443176431, 14.4443176431, 14.5564412992, 14.5564412992, 14.6833490352, 14.6833490352, 14.7157310048, 14.7157310048, 14.8584171868, 14.8584171868, 15.0139489716, 15.0139489716, 15.2732260304, 15.2732260304, 15.3696049337, 15.3696049337], 2, [1.0, 0.999997580003, 1.0, 0.999964720622, 1.0, 0.999556078555, 1.0, 0.998201618543, 1.0, 0.993769848041, 1.0, 0.998886700064, 1.0, 0.999624690442, 1.0, 1.0, 1.0, 0.999932722263, 1.0, 0.999996080008, 1.0, 0.999990320047, 1.0, 1.0, 1.0, 0.999890485997, 1.0, 0.999994880013, 1.0, 0.992043300966, 1.0, 0.984457234823, 1.0, 0.980040871212, 1.0, 1.0, 1.0, 0.99884866317, 1.0, 0.999408494991, 1.0, 0.999262991691, 1.0, 0.989656947428, 1.0, 0.982148748549, 1.0, 0.96523692405, 1.0, 0.986770966315, 1.0, 0.997566943487, 1.0, 0.997309843345, 1.0, 0.999550101227, 1.0, 0.999896325374, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.999976880267, 1.0, 0.999941681701, 1.0, 0.999855510439, 1.0, 0.999651580709, 1.0, 0.999126761439, 1.0, 0.99771772736, 1.0, 0.998225495831, 1.0, 0.995776936003, 1.0, 0.989571145552, 1.0, 0.987218133477, 1.0, 0.992706197142, 1.0, 0.996852780301, 1.0, 0.999494507793, 1.0, 0.998261013353, 1.0, 0.995740212261, 1.0, 0.990024722475, 1.0, 0.999807938446, 1.0, 0.996478212433, 1.0, 0.999262991691, 1.0, 0.999779524307, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.858, 37.060, 0.000), (-10.806, 37.062, 0.000), (-10.755, 37.075, 0.000), (-10.676, 37.095, 0.000), (-10.605, 37.134, 0.000), (-10.602, 37.136, 0.000), (-10.598, 37.138, 0.000), (-10.527, 37.178, 0.000), (-10.465, 37.233, 0.000), (-10.411, 37.282, 0.000), (-10.364, 37.339, 0.000), (-10.304, 37.410, 0.000), (-10.251, 37.486, 0.000), (-10.175, 37.595, 0.000), (-10.106, 37.708, 0.000), (-10.038, 37.818, 0.000), (-9.973, 37.929, 0.000), (-9.710, 38.379, 0.000), (-9.450, 38.829, 0.000), (-9.372, 38.964, 0.000), (-9.296, 39.099, 0.000), (-9.270, 39.145, 0.000), (-9.247, 39.192, 0.000), (-9.243, 39.200, 0.000), (-9.239, 39.208, 0.000), (-9.196, 39.297, 0.000), (-9.174, 39.392, 0.000), (-9.147, 39.504, 0.000), (-9.158, 39.618, 0.000), (-9.169, 39.729, 0.000), (-9.214, 39.831, 0.000), (-9.228, 39.863, 0.000), (-9.244, 39.893, 0.000), (-9.283, 39.966, 0.000), (-9.320, 40.039, 0.000), (-9.363, 40.127, 0.000), (-9.409, 40.212, 0.000), (-9.418, 40.229, 0.000), (-9.428, 40.245, 0.000), (-9.497, 40.368, 0.000), (-9.567, 40.492, 0.000), (-9.722, 40.765, 0.000), (-9.879, 41.038, 0.000), (-9.998, 41.244, 0.000), (-10.122, 41.448, 0.000), (-10.129, 41.458, 0.000), (-10.135, 41.469, 0.000), (-10.193, 41.564, 0.000), (-10.253, 41.657, 0.000), (-10.312, 41.747, 0.000), (-10.379, 41.831, 0.000), (-10.430, 41.896, 0.000), (-10.490, 41.954, 0.000), (-10.515, 41.979, 0.000), (-10.544, 42.001, 0.000), (-10.584, 42.033, 0.000), (-10.632, 42.053, 0.000), (-10.699, 42.081, 0.000), (-10.770, 42.094, 0.000), (-10.906, 42.118, 0.000), (-11.043, 42.093, 0.000), (-11.116, 42.081, 0.000), (-11.184, 42.050, 0.000), (-11.240, 42.025, 0.000), (-11.286, 41.984, 0.000), (-11.290, 41.980, 0.000), (-11.294, 41.977, 0.000), (-11.368, 41.905, 0.000), (-11.430, 41.823, 0.000), (-11.497, 41.736, 0.000), (-11.555, 41.644, 0.000), (-11.600, 41.571, 0.000), (-11.644, 41.498, 0.000), (-11.669, 41.455, 0.000), (-11.696, 41.412, 0.000), (-11.911, 41.062, 0.000), (-12.118, 40.707, 0.000), (-12.262, 40.462, 0.000), (-12.403, 40.217, 0.000), (-12.468, 40.104, 0.000), (-12.522, 39.985, 0.000), (-12.558, 39.905, 0.000), (-12.593, 39.824, 0.000), (-12.638, 39.719, 0.000), (-12.647, 39.605, 0.000), (-12.656, 39.484, 0.000), (-12.623, 39.367, 0.000), (-12.606, 39.304, 0.000), (-12.579, 39.245, 0.000), (-12.541, 39.164, 0.000), (-12.497, 39.086, 0.000), (-12.473, 39.043, 0.000), (-12.448, 39.001, 0.000), (-12.373, 38.874, 0.000), (-12.299, 38.747, 0.000), (-12.081, 38.373, 0.000), (-11.861, 38.001, 0.000), (-11.781, 37.868, 0.000), (-11.701, 37.736, 0.000), (-11.622, 37.603, 0.000), (-11.533, 37.476, 0.000), (-11.462, 37.376, 0.000), (-11.383, 37.282, 0.000), (-11.326, 37.214, 0.000), (-11.253, 37.164, 0.000), (-11.157, 37.098, 0.000), (-11.042, 37.074, 0.000), (-10.958, 37.057, 0.000), (-10.872, 37.059, 0.000), (-10.865, 37.059, 0.000), (-10.858, 37.060, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.858, 37.060, 0.000)), rs.coerce3dpoint((-10.806, 37.062, 0.000)), rs.coerce3dpoint((-10.755, 37.075, 0.000)), rs.coerce3dpoint((-10.676, 37.095, 0.000)), rs.coerce3dpoint((-10.605, 37.134, 0.000)), rs.coerce3dpoint((-10.602, 37.136, 0.000)), rs.coerce3dpoint((-10.598, 37.138, 0.000)), rs.coerce3dpoint((-10.527, 37.178, 0.000)), rs.coerce3dpoint((-10.465, 37.233, 0.000)), rs.coerce3dpoint((-10.411, 37.282, 0.000)), rs.coerce3dpoint((-10.364, 37.339, 0.000)), rs.coerce3dpoint((-10.304, 37.410, 0.000)), rs.coerce3dpoint((-10.251, 37.486, 0.000)), rs.coerce3dpoint((-10.175, 37.595, 0.000)), rs.coerce3dpoint((-10.106, 37.708, 0.000)), rs.coerce3dpoint((-10.038, 37.818, 0.000)), rs.coerce3dpoint((-9.973, 37.929, 0.000)), rs.coerce3dpoint((-9.710, 38.379, 0.000)), rs.coerce3dpoint((-9.450, 38.829, 0.000)), rs.coerce3dpoint((-9.372, 38.964, 0.000)), rs.coerce3dpoint((-9.296, 39.099, 0.000)), rs.coerce3dpoint((-9.270, 39.145, 0.000)), rs.coerce3dpoint((-9.247, 39.192, 0.000)), rs.coerce3dpoint((-9.243, 39.200, 0.000)), rs.coerce3dpoint((-9.239, 39.208, 0.000)), rs.coerce3dpoint((-9.196, 39.297, 0.000)), rs.coerce3dpoint((-9.174, 39.392, 0.000)), rs.coerce3dpoint((-9.147, 39.504, 0.000)), rs.coerce3dpoint((-9.158, 39.618, 0.000)), rs.coerce3dpoint((-9.169, 39.729, 0.000)), rs.coerce3dpoint((-9.214, 39.831, 0.000)), rs.coerce3dpoint((-9.228, 39.863, 0.000)), rs.coerce3dpoint((-9.244, 39.893, 0.000)), rs.coerce3dpoint((-9.283, 39.966, 0.000)), rs.coerce3dpoint((-9.320, 40.039, 0.000)), rs.coerce3dpoint((-9.363, 40.127, 0.000)), rs.coerce3dpoint((-9.409, 40.212, 0.000)), rs.coerce3dpoint((-9.418, 40.229, 0.000)), rs.coerce3dpoint((-9.428, 40.245, 0.000)), rs.coerce3dpoint((-9.497, 40.368, 0.000)), rs.coerce3dpoint((-9.567, 40.492, 0.000)), rs.coerce3dpoint((-9.722, 40.765, 0.000)), rs.coerce3dpoint((-9.879, 41.038, 0.000)), rs.coerce3dpoint((-9.998, 41.244, 0.000)), rs.coerce3dpoint((-10.122, 41.448, 0.000)), rs.coerce3dpoint((-10.129, 41.458, 0.000)), rs.coerce3dpoint((-10.135, 41.469, 0.000)), rs.coerce3dpoint((-10.193, 41.564, 0.000)), rs.coerce3dpoint((-10.253, 41.657, 0.000)), rs.coerce3dpoint((-10.312, 41.747, 0.000)), rs.coerce3dpoint((-10.379, 41.831, 0.000)), rs.coerce3dpoint((-10.430, 41.896, 0.000)), rs.coerce3dpoint((-10.490, 41.954, 0.000)), rs.coerce3dpoint((-10.515, 41.979, 0.000)), rs.coerce3dpoint((-10.544, 42.001, 0.000)), rs.coerce3dpoint((-10.584, 42.033, 0.000)), rs.coerce3dpoint((-10.632, 42.053, 0.000)), rs.coerce3dpoint((-10.699, 42.081, 0.000)), rs.coerce3dpoint((-10.770, 42.094, 0.000)), rs.coerce3dpoint((-10.906, 42.118, 0.000)), rs.coerce3dpoint((-11.043, 42.093, 0.000)), rs.coerce3dpoint((-11.116, 42.081, 0.000)), rs.coerce3dpoint((-11.184, 42.050, 0.000)), rs.coerce3dpoint((-11.240, 42.025, 0.000)), rs.coerce3dpoint((-11.286, 41.984, 0.000)), rs.coerce3dpoint((-11.290, 41.980, 0.000)), rs.coerce3dpoint((-11.294, 41.977, 0.000)), rs.coerce3dpoint((-11.368, 41.905, 0.000)), rs.coerce3dpoint((-11.430, 41.823, 0.000)), rs.coerce3dpoint((-11.497, 41.736, 0.000)), rs.coerce3dpoint((-11.555, 41.644, 0.000)), rs.coerce3dpoint((-11.600, 41.571, 0.000)), rs.coerce3dpoint((-11.644, 41.498, 0.000)), rs.coerce3dpoint((-11.669, 41.455, 0.000)), rs.coerce3dpoint((-11.696, 41.412, 0.000)), rs.coerce3dpoint((-11.911, 41.062, 0.000)), rs.coerce3dpoint((-12.118, 40.707, 0.000)), rs.coerce3dpoint((-12.262, 40.462, 0.000)), rs.coerce3dpoint((-12.403, 40.217, 0.000)), rs.coerce3dpoint((-12.468, 40.104, 0.000)), rs.coerce3dpoint((-12.522, 39.985, 0.000)), rs.coerce3dpoint((-12.558, 39.905, 0.000)), rs.coerce3dpoint((-12.593, 39.824, 0.000)), rs.coerce3dpoint((-12.638, 39.719, 0.000)), rs.coerce3dpoint((-12.647, 39.605, 0.000)), rs.coerce3dpoint((-12.656, 39.484, 0.000)), rs.coerce3dpoint((-12.623, 39.367, 0.000)), rs.coerce3dpoint((-12.606, 39.304, 0.000)), rs.coerce3dpoint((-12.579, 39.245, 0.000)), rs.coerce3dpoint((-12.541, 39.164, 0.000)), rs.coerce3dpoint((-12.497, 39.086, 0.000)), rs.coerce3dpoint((-12.473, 39.043, 0.000)), rs.coerce3dpoint((-12.448, 39.001, 0.000)), rs.coerce3dpoint((-12.373, 38.874, 0.000)), rs.coerce3dpoint((-12.299, 38.747, 0.000)), rs.coerce3dpoint((-12.081, 38.373, 0.000)), rs.coerce3dpoint((-11.861, 38.001, 0.000)), rs.coerce3dpoint((-11.781, 37.868, 0.000)), rs.coerce3dpoint((-11.701, 37.736, 0.000)), rs.coerce3dpoint((-11.622, 37.603, 0.000)), rs.coerce3dpoint((-11.533, 37.476, 0.000)), rs.coerce3dpoint((-11.462, 37.376, 0.000)), rs.coerce3dpoint((-11.383, 37.282, 0.000)), rs.coerce3dpoint((-11.326, 37.214, 0.000)), rs.coerce3dpoint((-11.253, 37.164, 0.000)), rs.coerce3dpoint((-11.157, 37.098, 0.000)), rs.coerce3dpoint((-11.042, 37.074, 0.000)), rs.coerce3dpoint((-10.958, 37.057, 0.000)), rs.coerce3dpoint((-10.872, 37.059, 0.000)), rs.coerce3dpoint((-10.865, 37.059, 0.000)), rs.coerce3dpoint((-10.858, 37.060, 0.000))], [0.0, 0.0, 0.104718923581, 0.104718923581, 0.265773629547, 0.265773629547, 0.273606445133, 0.273606445133, 0.438143995709, 0.438143995709, 0.584387652968, 0.584387652968, 0.77043261072, 0.77043261072, 1.03564117748, 1.03564117748, 1.29346934833, 1.29346934833, 2.33413978601, 2.33413978601, 2.64532056022, 2.64532056022, 2.75064930766, 2.75064930766, 2.76845078231, 2.76845078231, 2.96338945302, 2.96338945302, 3.19117475476, 3.19117475476, 3.41244674315, 3.41244674315, 3.48098906883, 3.48098906883, 3.64578965287, 3.64578965287, 3.84033674185, 3.84033674185, 3.87794597609, 3.87794597609, 4.16150999091, 4.16150999091, 4.78999852497, 4.78999852497, 5.26713473644, 5.26713473644, 5.29181923563, 5.29181923563, 5.51413082467, 5.51413082467, 5.72888022116, 5.72888022116, 5.89400780180, 5.89400780180, 5.96599534761, 5.96599534761, 6.06881943912, 6.06881943912, 6.21268375540, 6.21268375540, 6.48718197734, 6.48718197734, 6.63495005888, 6.63495005888, 6.75750535773, 6.75750535773, 6.76786444070, 6.76786444070, 6.97336677547, 6.97336677547, 7.19241233001, 7.19241233001, 7.36274554689, 7.36274554689, 7.46357585818, 7.46357585818, 8.28544469679, 8.28544469679, 8.85239599749, 8.85239599749, 9.11236583003, 9.11236583003, 9.28895860229, 9.28895860229, 9.51550021107, 9.51550021107, 9.75544920664, 9.75544920664, 9.88539187315, 9.88539187315, 10.0647467177, 10.0647467177, 10.1629222978, 10.1629222978, 10.4569881683, 10.4569881683, 11.3220398220, 11.3220398220, 11.6317840217, 11.6317840217, 11.9410901923, 11.9410901923, 12.1868585581, 12.1868585581, 12.3627323791, 12.3627323791, 12.5936265671, 12.5936265671, 12.7648838124, 12.7648838124, 12.7784996891, 12.7784996891], 2, [1.0, 0.995052190765, 1.0, 0.991533909689, 1.0, 1.0, 1.0, 0.994460803954, 1.0, 0.997510921616, 1.0, 0.998988012319, 1.0, 0.999596801301, 1.0, 0.999912883795, 1.0, 0.999997120004, 1.0, 0.999968000512, 1.0, 0.999646282569, 1.0, 1.0, 1.0, 0.994141928904, 1.0, 0.986770966315, 1.0, 0.987688871315, 1.0, 0.99914338705, 1.0, 0.99992062315, 1.0, 0.999848631457, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 0.999935022111, 1.0, 1.0, 1.0, 0.999819516289, 1.0, 0.999005914349, 1.0, 0.997915594639, 1.0, 0.998969950774, 1.0, 0.991325784881, 1.0, 0.993317582204, 1.0, 0.984734828858, 1.0, 0.992267432338, 1.0, 0.988604322814, 1.0, 1.0, 1.0, 0.997265743198, 1.0, 0.998914809139, 1.0, 0.999907524276, 1.0, 0.999972620375, 1.0, 0.999932722263, 1.0, 0.999994880013, 1.0, 0.998951729723, 1.0, 0.999865529042, 1.0, 0.986995492034, 1.0, 0.984941420558, 1.0, 0.996884361175, 1.0, 0.999023656856, 1.0, 0.999966380565, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999994220017, 1.0, 0.99937361624, 1.0, 0.998996983274, 1.0, 0.991008922268, 1.0, 0.980471579792, 1.0, 0.993409290533, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-22.133, 52.124, 0.000), (-22.138, 51.517, 0.000), (-22.134, 50.909, 0.000), (-22.131, 50.483, 0.000), (-22.128, 50.057, 0.000), (-22.127, 49.975, 0.000), (-22.124, 49.893, 0.000), (-22.122, 49.856, 0.000), (-22.118, 49.819, 0.000), (-22.110, 49.731, 0.000), (-22.077, 49.649, 0.000), (-22.034, 49.545, 0.000), (-21.956, 49.466, 0.000), (-21.896, 49.406, 0.000), (-21.823, 49.361, 0.000), (-21.759, 49.321, 0.000), (-21.690, 49.290, 0.000), (-21.618, 49.258, 0.000), (-21.540, 49.249, 0.000), (-21.447, 49.240, 0.000), (-21.358, 49.267, 0.000), (-21.286, 49.290, 0.000), (-21.221, 49.328, 0.000), (-21.158, 49.366, 0.000), (-21.102, 49.414, 0.000), (-21.064, 49.446, 0.000), (-21.031, 49.483, 0.000), (-20.974, 49.547, 0.000), (-20.923, 49.616, 0.000), (-20.843, 49.723, 0.000), (-20.771, 49.837, 0.000), (-20.712, 49.929, 0.000), (-20.657, 50.024, 0.000), (-20.473, 50.337, 0.000), (-20.292, 50.652, 0.000), (-20.167, 50.870, 0.000), (-20.042, 51.087, 0.000), (-19.844, 51.430, 0.000), (-19.646, 51.773, 0.000), (-19.597, 51.858, 0.000), (-19.567, 51.951, 0.000), (-19.531, 52.064, 0.000), (-19.534, 52.182, 0.000), (-19.538, 52.291, 0.000), (-19.574, 52.395, 0.000), (-19.605, 52.483, 0.000), (-19.653, 52.564, 0.000), (-19.846, 52.894, 0.000), (-20.036, 53.226, 0.000), (-20.061, 53.270, 0.000), (-20.086, 53.313, 0.000), (-20.197, 53.507, 0.000), (-20.308, 53.701, 0.000), (-20.370, 53.808, 0.000), (-20.431, 53.916, 0.000), (-20.527, 54.084, 0.000), (-20.625, 54.251, 0.000), (-20.690, 54.361, 0.000), (-20.759, 54.469, 0.000), (-20.823, 54.569, 0.000), (-20.895, 54.663, 0.000), (-20.946, 54.730, 0.000), (-21.004, 54.791, 0.000), (-21.036, 54.824, 0.000), (-21.072, 54.854, 0.000), (-21.148, 54.918, 0.000), (-21.239, 54.959, 0.000), (-21.346, 55.007, 0.000), (-21.463, 55.011, 0.000), (-21.593, 55.014, 0.000), (-21.712, 54.962, 0.000), (-21.810, 54.920, 0.000), (-21.890, 54.850, 0.000), (-21.941, 54.806, 0.000), (-21.984, 54.753, 0.000), (-22.062, 54.660, 0.000), (-22.097, 54.543, 0.000), (-22.119, 54.468, 0.000), (-22.127, 54.391, 0.000), (-22.134, 54.311, 0.000), (-22.134, 54.231, 0.000), (-22.133, 53.465, 0.000), (-22.133, 52.698, 0.000), (-22.133, 52.411, 0.000), (-22.133, 52.124, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-22.133, 52.124, 0.000)), rs.coerce3dpoint((-22.138, 51.517, 0.000)), rs.coerce3dpoint((-22.134, 50.909, 0.000)), rs.coerce3dpoint((-22.131, 50.483, 0.000)), rs.coerce3dpoint((-22.128, 50.057, 0.000)), rs.coerce3dpoint((-22.127, 49.975, 0.000)), rs.coerce3dpoint((-22.124, 49.893, 0.000)), rs.coerce3dpoint((-22.122, 49.856, 0.000)), rs.coerce3dpoint((-22.118, 49.819, 0.000)), rs.coerce3dpoint((-22.110, 49.731, 0.000)), rs.coerce3dpoint((-22.077, 49.649, 0.000)), rs.coerce3dpoint((-22.034, 49.545, 0.000)), rs.coerce3dpoint((-21.956, 49.466, 0.000)), rs.coerce3dpoint((-21.896, 49.406, 0.000)), rs.coerce3dpoint((-21.823, 49.361, 0.000)), rs.coerce3dpoint((-21.759, 49.321, 0.000)), rs.coerce3dpoint((-21.690, 49.290, 0.000)), rs.coerce3dpoint((-21.618, 49.258, 0.000)), rs.coerce3dpoint((-21.540, 49.249, 0.000)), rs.coerce3dpoint((-21.447, 49.240, 0.000)), rs.coerce3dpoint((-21.358, 49.267, 0.000)), rs.coerce3dpoint((-21.286, 49.290, 0.000)), rs.coerce3dpoint((-21.221, 49.328, 0.000)), rs.coerce3dpoint((-21.158, 49.366, 0.000)), rs.coerce3dpoint((-21.102, 49.414, 0.000)), rs.coerce3dpoint((-21.064, 49.446, 0.000)), rs.coerce3dpoint((-21.031, 49.483, 0.000)), rs.coerce3dpoint((-20.974, 49.547, 0.000)), rs.coerce3dpoint((-20.923, 49.616, 0.000)), rs.coerce3dpoint((-20.843, 49.723, 0.000)), rs.coerce3dpoint((-20.771, 49.837, 0.000)), rs.coerce3dpoint((-20.712, 49.929, 0.000)), rs.coerce3dpoint((-20.657, 50.024, 0.000)), rs.coerce3dpoint((-20.473, 50.337, 0.000)), rs.coerce3dpoint((-20.292, 50.652, 0.000)), rs.coerce3dpoint((-20.167, 50.870, 0.000)), rs.coerce3dpoint((-20.042, 51.087, 0.000)), rs.coerce3dpoint((-19.844, 51.430, 0.000)), rs.coerce3dpoint((-19.646, 51.773, 0.000)), rs.coerce3dpoint((-19.597, 51.858, 0.000)), rs.coerce3dpoint((-19.567, 51.951, 0.000)), rs.coerce3dpoint((-19.531, 52.064, 0.000)), rs.coerce3dpoint((-19.534, 52.182, 0.000)), rs.coerce3dpoint((-19.538, 52.291, 0.000)), rs.coerce3dpoint((-19.574, 52.395, 0.000)), rs.coerce3dpoint((-19.605, 52.483, 0.000)), rs.coerce3dpoint((-19.653, 52.564, 0.000)), rs.coerce3dpoint((-19.846, 52.894, 0.000)), rs.coerce3dpoint((-20.036, 53.226, 0.000)), rs.coerce3dpoint((-20.061, 53.270, 0.000)), rs.coerce3dpoint((-20.086, 53.313, 0.000)), rs.coerce3dpoint((-20.197, 53.507, 0.000)), rs.coerce3dpoint((-20.308, 53.701, 0.000)), rs.coerce3dpoint((-20.370, 53.808, 0.000)), rs.coerce3dpoint((-20.431, 53.916, 0.000)), rs.coerce3dpoint((-20.527, 54.084, 0.000)), rs.coerce3dpoint((-20.625, 54.251, 0.000)), rs.coerce3dpoint((-20.690, 54.361, 0.000)), rs.coerce3dpoint((-20.759, 54.469, 0.000)), rs.coerce3dpoint((-20.823, 54.569, 0.000)), rs.coerce3dpoint((-20.895, 54.663, 0.000)), rs.coerce3dpoint((-20.946, 54.730, 0.000)), rs.coerce3dpoint((-21.004, 54.791, 0.000)), rs.coerce3dpoint((-21.036, 54.824, 0.000)), rs.coerce3dpoint((-21.072, 54.854, 0.000)), rs.coerce3dpoint((-21.148, 54.918, 0.000)), rs.coerce3dpoint((-21.239, 54.959, 0.000)), rs.coerce3dpoint((-21.346, 55.007, 0.000)), rs.coerce3dpoint((-21.463, 55.011, 0.000)), rs.coerce3dpoint((-21.593, 55.014, 0.000)), rs.coerce3dpoint((-21.712, 54.962, 0.000)), rs.coerce3dpoint((-21.810, 54.920, 0.000)), rs.coerce3dpoint((-21.890, 54.850, 0.000)), rs.coerce3dpoint((-21.941, 54.806, 0.000)), rs.coerce3dpoint((-21.984, 54.753, 0.000)), rs.coerce3dpoint((-22.062, 54.660, 0.000)), rs.coerce3dpoint((-22.097, 54.543, 0.000)), rs.coerce3dpoint((-22.119, 54.468, 0.000)), rs.coerce3dpoint((-22.127, 54.391, 0.000)), rs.coerce3dpoint((-22.134, 54.311, 0.000)), rs.coerce3dpoint((-22.134, 54.231, 0.000)), rs.coerce3dpoint((-22.133, 53.465, 0.000)), rs.coerce3dpoint((-22.133, 52.698, 0.000)), rs.coerce3dpoint((-22.133, 52.411, 0.000)), rs.coerce3dpoint((-22.133, 52.124, 0.000))], [0.0, 0.0, 1.21518168294, 1.21518168294, 2.06711795062, 2.06711795062, 2.23080810242, 2.23080810242, 2.30575794508, 2.30575794508, 2.48133168387, 2.48133168387, 2.70200437824, 2.70200437824, 2.87142411786, 2.87142411786, 3.02225048174, 3.02225048174, 3.17807853848, 3.17807853848, 3.36280719031, 3.36280719031, 3.51283204968, 3.51283204968, 3.65970464321, 3.65970464321, 3.75949526473, 3.75949526473, 3.92991918055, 3.92991918055, 4.19811666112, 4.19811666112, 4.41776829568, 4.41776829568, 5.14402587117, 5.14402587117, 5.64560805666, 5.64560805666, 6.43799203732, 6.43799203732, 6.63327357452, 6.63327357452, 6.86753830839, 6.86753830839, 7.08442244840, 7.08442244840, 7.27199127783, 7.27199127783, 8.03706081134, 8.03706081134, 8.13670917359, 8.13670917359, 8.58381093024, 8.58381093024, 8.83142556719, 8.83142556719, 9.21858734020, 9.21858734020, 9.47506238789, 9.47506238789, 9.71174758521, 9.71174758521, 9.88026250237, 9.88026250237, 9.97231008975, 9.97231008975, 10.1708231676, 10.1708231676, 10.4018178621, 10.4018178621, 10.6578043683, 10.6578043683, 10.8687265869, 10.8687265869, 11.0042553473, 11.0042553473, 11.2445490150, 11.2445490150, 11.3993693891, 11.3993693891, 11.5596381387, 11.5596381387, 13.0925982447, 13.0925982447, 13.6666782534, 13.6666782534], 2, [1.0, 0.999972620375, 1.0, 1.0, 1.0, 0.999762408228, 1.0, 0.999707222866, 1.0, 0.989713954842, 1.0, 0.980781958246, 1.0, 0.993248389326, 1.0, 0.997382550011, 1.0, 0.987595417002, 1.0, 0.980119520806, 1.0, 0.992633949636, 1.0, 0.996805111821, 1.0, 0.99771772736, 1.0, 0.998858232189, 1.0, 0.999344994586, 1.0, 0.999834393714, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 1.0, 1.0, 0.993968246056, 1.0, 0.985920538315, 1.0, 0.988574367571, 1.0, 0.994932552128, 1.0, 0.999984320123, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 0.999968000512, 1.0, 0.999815696985, 1.0, 0.999126761439, 1.0, 0.998376818429, 1.0, 0.9985752357, 1.0, 0.990495760936, 1.0, 0.981204785687, 1.0, 0.976046346428, 1.0, 0.988303031976, 1.0, 0.996627277237, 1.0, 0.979366274415, 1.0, 0.995478724126, 1.0, 0.99860705083, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.372, 16.462, 0.000), (-14.372, 17.144, 0.000), (-14.372, 17.826, 0.000), (-14.372, 17.992, 0.000), (-14.375, 18.158, 0.000), (-14.375, 18.206, 0.000), (-14.378, 18.254, 0.000), (-14.379, 18.271, 0.000), (-14.382, 18.288, 0.000), (-14.400, 18.417, 0.000), (-14.465, 18.532, 0.000), (-14.597, 18.767, 0.000), (-14.857, 18.839, 0.000), (-15.063, 18.896, 0.000), (-15.263, 18.818, 0.000), (-15.340, 18.788, 0.000), (-15.408, 18.740, 0.000), (-15.476, 18.694, 0.000), (-15.535, 18.637, 0.000), (-15.593, 18.582, 0.000), (-15.644, 18.520, 0.000), (-15.711, 18.438, 0.000), (-15.771, 18.351, 0.000), (-15.862, 18.223, 0.000), (-15.947, 18.091, 0.000), (-16.019, 17.979, 0.000), (-16.088, 17.866, 0.000), (-16.233, 17.632, 0.000), (-16.373, 17.395, 0.000), (-16.463, 17.241, 0.000), (-16.548, 17.084, 0.000), (-16.607, 16.972, 0.000), (-16.659, 16.857, 0.000), (-16.689, 16.792, 0.000), (-16.714, 16.724, 0.000), (-16.738, 16.663, 0.000), (-16.754, 16.599, 0.000), (-16.773, 16.529, 0.000), (-16.774, 16.456, 0.000), (-16.775, 16.383, 0.000), (-16.760, 16.312, 0.000), (-16.744, 16.239, 0.000), (-16.718, 16.170, 0.000), (-16.699, 16.117, 0.000), (-16.676, 16.065, 0.000), (-16.665, 16.038, 0.000), (-16.654, 16.011, 0.000), (-16.636, 15.965, 0.000), (-16.615, 15.920, 0.000), (-16.606, 15.901, 0.000), (-16.596, 15.884, 0.000), (-16.491, 15.725, 0.000), (-16.386, 15.567, 0.000), (-16.257, 15.372, 0.000), (-16.127, 15.176, 0.000), (-15.962, 14.926, 0.000), (-15.794, 14.678, 0.000), (-15.696, 14.535, 0.000), (-15.595, 14.395, 0.000), (-15.527, 14.301, 0.000), (-15.453, 14.211, 0.000), (-15.390, 14.134, 0.000), (-15.319, 14.064, 0.000), (-15.272, 14.018, 0.000), (-15.221, 13.976, 0.000), (-15.167, 13.933, 0.000), (-15.101, 13.909, 0.000), (-15.019, 13.879, 0.000), (-14.931, 13.877, 0.000), (-14.847, 13.874, 0.000), (-14.767, 13.896, 0.000), (-14.749, 13.901, 0.000), (-14.732, 13.907, 0.000), (-14.630, 13.945, 0.000), (-14.564, 14.032, 0.000), (-14.526, 14.083, 0.000), (-14.502, 14.142, 0.000), (-14.485, 14.184, 0.000), (-14.473, 14.227, 0.000), (-14.449, 14.311, 0.000), (-14.433, 14.396, 0.000), (-14.416, 14.491, 0.000), (-14.407, 14.587, 0.000), (-14.396, 14.713, 0.000), (-14.391, 14.840, 0.000), (-14.382, 15.044, 0.000), (-14.379, 15.249, 0.000), (-14.374, 15.609, 0.000), (-14.373, 15.969, 0.000), (-14.373, 16.215, 0.000), (-14.372, 16.462, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.372, 16.462, 0.000)), rs.coerce3dpoint((-14.372, 17.144, 0.000)), rs.coerce3dpoint((-14.372, 17.826, 0.000)), rs.coerce3dpoint((-14.372, 17.992, 0.000)), rs.coerce3dpoint((-14.375, 18.158, 0.000)), rs.coerce3dpoint((-14.375, 18.206, 0.000)), rs.coerce3dpoint((-14.378, 18.254, 0.000)), rs.coerce3dpoint((-14.379, 18.271, 0.000)), rs.coerce3dpoint((-14.382, 18.288, 0.000)), rs.coerce3dpoint((-14.400, 18.417, 0.000)), rs.coerce3dpoint((-14.465, 18.532, 0.000)), rs.coerce3dpoint((-14.597, 18.767, 0.000)), rs.coerce3dpoint((-14.857, 18.839, 0.000)), rs.coerce3dpoint((-15.063, 18.896, 0.000)), rs.coerce3dpoint((-15.263, 18.818, 0.000)), rs.coerce3dpoint((-15.340, 18.788, 0.000)), rs.coerce3dpoint((-15.408, 18.740, 0.000)), rs.coerce3dpoint((-15.476, 18.694, 0.000)), rs.coerce3dpoint((-15.535, 18.637, 0.000)), rs.coerce3dpoint((-15.593, 18.582, 0.000)), rs.coerce3dpoint((-15.644, 18.520, 0.000)), rs.coerce3dpoint((-15.711, 18.438, 0.000)), rs.coerce3dpoint((-15.771, 18.351, 0.000)), rs.coerce3dpoint((-15.862, 18.223, 0.000)), rs.coerce3dpoint((-15.947, 18.091, 0.000)), rs.coerce3dpoint((-16.019, 17.979, 0.000)), rs.coerce3dpoint((-16.088, 17.866, 0.000)), rs.coerce3dpoint((-16.233, 17.632, 0.000)), rs.coerce3dpoint((-16.373, 17.395, 0.000)), rs.coerce3dpoint((-16.463, 17.241, 0.000)), rs.coerce3dpoint((-16.548, 17.084, 0.000)), rs.coerce3dpoint((-16.607, 16.972, 0.000)), rs.coerce3dpoint((-16.659, 16.857, 0.000)), rs.coerce3dpoint((-16.689, 16.792, 0.000)), rs.coerce3dpoint((-16.714, 16.724, 0.000)), rs.coerce3dpoint((-16.738, 16.663, 0.000)), rs.coerce3dpoint((-16.754, 16.599, 0.000)), rs.coerce3dpoint((-16.773, 16.529, 0.000)), rs.coerce3dpoint((-16.774, 16.456, 0.000)), rs.coerce3dpoint((-16.775, 16.383, 0.000)), rs.coerce3dpoint((-16.760, 16.312, 0.000)), rs.coerce3dpoint((-16.744, 16.239, 0.000)), rs.coerce3dpoint((-16.718, 16.170, 0.000)), rs.coerce3dpoint((-16.699, 16.117, 0.000)), rs.coerce3dpoint((-16.676, 16.065, 0.000)), rs.coerce3dpoint((-16.665, 16.038, 0.000)), rs.coerce3dpoint((-16.654, 16.011, 0.000)), rs.coerce3dpoint((-16.636, 15.965, 0.000)), rs.coerce3dpoint((-16.615, 15.920, 0.000)), rs.coerce3dpoint((-16.606, 15.901, 0.000)), rs.coerce3dpoint((-16.596, 15.884, 0.000)), rs.coerce3dpoint((-16.491, 15.725, 0.000)), rs.coerce3dpoint((-16.386, 15.567, 0.000)), rs.coerce3dpoint((-16.257, 15.372, 0.000)), rs.coerce3dpoint((-16.127, 15.176, 0.000)), rs.coerce3dpoint((-15.962, 14.926, 0.000)), rs.coerce3dpoint((-15.794, 14.678, 0.000)), rs.coerce3dpoint((-15.696, 14.535, 0.000)), rs.coerce3dpoint((-15.595, 14.395, 0.000)), rs.coerce3dpoint((-15.527, 14.301, 0.000)), rs.coerce3dpoint((-15.453, 14.211, 0.000)), rs.coerce3dpoint((-15.390, 14.134, 0.000)), rs.coerce3dpoint((-15.319, 14.064, 0.000)), rs.coerce3dpoint((-15.272, 14.018, 0.000)), rs.coerce3dpoint((-15.221, 13.976, 0.000)), rs.coerce3dpoint((-15.167, 13.933, 0.000)), rs.coerce3dpoint((-15.101, 13.909, 0.000)), rs.coerce3dpoint((-15.019, 13.879, 0.000)), rs.coerce3dpoint((-14.931, 13.877, 0.000)), rs.coerce3dpoint((-14.847, 13.874, 0.000)), rs.coerce3dpoint((-14.767, 13.896, 0.000)), rs.coerce3dpoint((-14.749, 13.901, 0.000)), rs.coerce3dpoint((-14.732, 13.907, 0.000)), rs.coerce3dpoint((-14.630, 13.945, 0.000)), rs.coerce3dpoint((-14.564, 14.032, 0.000)), rs.coerce3dpoint((-14.526, 14.083, 0.000)), rs.coerce3dpoint((-14.502, 14.142, 0.000)), rs.coerce3dpoint((-14.485, 14.184, 0.000)), rs.coerce3dpoint((-14.473, 14.227, 0.000)), rs.coerce3dpoint((-14.449, 14.311, 0.000)), rs.coerce3dpoint((-14.433, 14.396, 0.000)), rs.coerce3dpoint((-14.416, 14.491, 0.000)), rs.coerce3dpoint((-14.407, 14.587, 0.000)), rs.coerce3dpoint((-14.396, 14.713, 0.000)), rs.coerce3dpoint((-14.391, 14.840, 0.000)), rs.coerce3dpoint((-14.382, 15.044, 0.000)), rs.coerce3dpoint((-14.379, 15.249, 0.000)), rs.coerce3dpoint((-14.374, 15.609, 0.000)), rs.coerce3dpoint((-14.373, 15.969, 0.000)), rs.coerce3dpoint((-14.373, 16.215, 0.000)), rs.coerce3dpoint((-14.372, 16.462, 0.000))], [0.0, 0.0, 1.36393006778, 1.36393006778, 1.69591101483, 1.69591101483, 1.79248195729, 1.79248195729, 1.82605125863, 1.82605125863, 2.08524861982, 2.08524861982, 2.59666616348, 2.59666616348, 3.01027865077, 3.01027865077, 3.17516008687, 3.17516008687, 3.33908310947, 3.33908310947, 3.49927070471, 3.49927070471, 3.71060683581, 3.71060683581, 4.02478493319, 4.02478493319, 4.29059671469, 4.29059671469, 4.84016510206, 4.84016510206, 5.19785258041, 5.19785258041, 5.45051455866, 5.45051455866, 5.59409564089, 5.59409564089, 5.72560873036, 5.72560873036, 5.87079707245, 5.87079707245, 6.01584384429, 6.01584384429, 6.16395836332, 6.16395836332, 6.27701730207, 6.27701730207, 6.33465047988, 6.33465047988, 6.43402162242, 6.43402162242, 6.47532649958, 6.47532649958, 6.85550602585, 6.85550602585, 7.32346419492, 7.32346419492, 7.92331711839, 7.92331711839, 8.26897299547, 8.26897299547, 8.50140765012, 8.50140765012, 8.70069902478, 8.70069902478, 8.83226110075, 8.83226110075, 8.96997953573, 8.96997953573, 9.14433154716, 9.14433154716, 9.31036174775, 9.31036174775, 9.34722989935, 9.34722989935, 9.55858431058, 9.55858431058, 9.68561516787, 9.68561516787, 9.77469135575, 9.77469135575, 9.9493976722, 9.9493976722, 10.1420265214, 10.1420265214, 10.3952016633, 10.3952016633, 10.8043010244, 10.8043010244, 11.5245945532, 11.5245945532, 12.0172858036, 12.0172858036], 2, [1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999667235375, 1.0, 0.999184252857, 1.0, 0.98303267666, 1.0, 0.923741335241, 1.0, 0.948484486303, 1.0, 0.993085567618, 1.0, 0.996692498843, 1.0, 0.998261013353, 1.0, 0.999344994586, 1.0, 0.999744652605, 1.0, 0.999957680895, 1.0, 0.999923122955, 1.0, 0.999791941646, 1.0, 0.9994556482, 1.0, 0.999494507793, 1.0, 0.998444390902, 1.0, 0.993225246641, 1.0, 0.993545676582, 1.0, 0.997608542957, 1.0, 0.999556078555, 1.0, 0.999935022111, 1.0, 0.999415350957, 1.0, 0.999380671843, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999980780185, 1.0, 0.99988142703, 1.0, 0.999550101227, 1.0, 0.998499606435, 1.0, 0.999101523811, 1.0, 0.986053061539, 1.0, 0.987281399046, 1.0, 0.988634239413, 1.0, 0.999101523811, 1.0, 0.958927097196, 1.0, 0.991866789606, 1.0, 0.998153386566, 1.0, 0.998933349176, 1.0, 0.998969950774, 1.0, 0.999692527277, 1.0, 0.999912883795, 1.0, 0.99997952021, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.139, 46.497, 0.000), (22.136, 46.653, 0.000), (22.134, 46.809, 0.000), (22.133, 46.970, 0.000), (22.129, 47.132, 0.000), (22.118, 47.241, 0.000), (22.082, 47.345, 0.000), (22.042, 47.457, 0.000), (21.968, 47.552, 0.000), (21.882, 47.661, 0.000), (21.762, 47.729, 0.000), (21.721, 47.752, 0.000), (21.677, 47.770, 0.000), (21.588, 47.800, 0.000), (21.494, 47.805, 0.000), (21.337, 47.813, 0.000), (21.197, 47.742, 0.000), (21.113, 47.700, 0.000), (21.044, 47.638, 0.000), (20.978, 47.580, 0.000), (20.924, 47.511, 0.000), (20.791, 47.343, 0.000), (20.676, 47.163, 0.000), (20.530, 46.937, 0.000), (20.407, 46.698, 0.000), (20.342, 46.573, 0.000), (20.282, 46.445, 0.000), (20.233, 46.338, 0.000), (20.186, 46.231, 0.000), (20.166, 46.185, 0.000), (20.149, 46.137, 0.000), (20.142, 46.117, 0.000), (20.136, 46.097, 0.000), (20.111, 46.009, 0.000), (20.117, 45.917, 0.000), (20.124, 45.825, 0.000), (20.162, 45.740, 0.000), (20.193, 45.671, 0.000), (20.238, 45.610, 0.000), (20.299, 45.526, 0.000), (20.381, 45.461, 0.000), (20.525, 45.346, 0.000), (20.708, 45.326, 0.000), (20.723, 45.324, 0.000), (20.739, 45.323, 0.000), (20.934, 45.308, 0.000), (21.129, 45.303, 0.000), (21.311, 45.298, 0.000), (21.492, 45.307, 0.000), (21.597, 45.312, 0.000), (21.696, 45.346, 0.000), (21.820, 45.387, 0.000), (21.917, 45.475, 0.000), (22.010, 45.560, 0.000), (22.063, 45.675, 0.000), (22.109, 45.773, 0.000), (22.126, 45.881, 0.000), (22.133, 45.930, 0.000), (22.136, 45.980, 0.000), (22.141, 46.100, 0.000), (22.140, 46.220, 0.000), (22.139, 46.261, 0.000), (22.139, 46.302, 0.000), (22.138, 46.400, 0.000), (22.139, 46.497, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.139, 46.497, 0.000)), rs.coerce3dpoint((22.136, 46.653, 0.000)), rs.coerce3dpoint((22.134, 46.809, 0.000)), rs.coerce3dpoint((22.133, 46.970, 0.000)), rs.coerce3dpoint((22.129, 47.132, 0.000)), rs.coerce3dpoint((22.118, 47.241, 0.000)), rs.coerce3dpoint((22.082, 47.345, 0.000)), rs.coerce3dpoint((22.042, 47.457, 0.000)), rs.coerce3dpoint((21.968, 47.552, 0.000)), rs.coerce3dpoint((21.882, 47.661, 0.000)), rs.coerce3dpoint((21.762, 47.729, 0.000)), rs.coerce3dpoint((21.721, 47.752, 0.000)), rs.coerce3dpoint((21.677, 47.770, 0.000)), rs.coerce3dpoint((21.588, 47.800, 0.000)), rs.coerce3dpoint((21.494, 47.805, 0.000)), rs.coerce3dpoint((21.337, 47.813, 0.000)), rs.coerce3dpoint((21.197, 47.742, 0.000)), rs.coerce3dpoint((21.113, 47.700, 0.000)), rs.coerce3dpoint((21.044, 47.638, 0.000)), rs.coerce3dpoint((20.978, 47.580, 0.000)), rs.coerce3dpoint((20.924, 47.511, 0.000)), rs.coerce3dpoint((20.791, 47.343, 0.000)), rs.coerce3dpoint((20.676, 47.163, 0.000)), rs.coerce3dpoint((20.530, 46.937, 0.000)), rs.coerce3dpoint((20.407, 46.698, 0.000)), rs.coerce3dpoint((20.342, 46.573, 0.000)), rs.coerce3dpoint((20.282, 46.445, 0.000)), rs.coerce3dpoint((20.233, 46.338, 0.000)), rs.coerce3dpoint((20.186, 46.231, 0.000)), rs.coerce3dpoint((20.166, 46.185, 0.000)), rs.coerce3dpoint((20.149, 46.137, 0.000)), rs.coerce3dpoint((20.142, 46.117, 0.000)), rs.coerce3dpoint((20.136, 46.097, 0.000)), rs.coerce3dpoint((20.111, 46.009, 0.000)), rs.coerce3dpoint((20.117, 45.917, 0.000)), rs.coerce3dpoint((20.124, 45.825, 0.000)), rs.coerce3dpoint((20.162, 45.740, 0.000)), rs.coerce3dpoint((20.193, 45.671, 0.000)), rs.coerce3dpoint((20.238, 45.610, 0.000)), rs.coerce3dpoint((20.299, 45.526, 0.000)), rs.coerce3dpoint((20.381, 45.461, 0.000)), rs.coerce3dpoint((20.525, 45.346, 0.000)), rs.coerce3dpoint((20.708, 45.326, 0.000)), rs.coerce3dpoint((20.723, 45.324, 0.000)), rs.coerce3dpoint((20.739, 45.323, 0.000)), rs.coerce3dpoint((20.934, 45.308, 0.000)), rs.coerce3dpoint((21.129, 45.303, 0.000)), rs.coerce3dpoint((21.311, 45.298, 0.000)), rs.coerce3dpoint((21.492, 45.307, 0.000)), rs.coerce3dpoint((21.597, 45.312, 0.000)), rs.coerce3dpoint((21.696, 45.346, 0.000)), rs.coerce3dpoint((21.820, 45.387, 0.000)), rs.coerce3dpoint((21.917, 45.475, 0.000)), rs.coerce3dpoint((22.010, 45.560, 0.000)), rs.coerce3dpoint((22.063, 45.675, 0.000)), rs.coerce3dpoint((22.109, 45.773, 0.000)), rs.coerce3dpoint((22.126, 45.881, 0.000)), rs.coerce3dpoint((22.133, 45.930, 0.000)), rs.coerce3dpoint((22.136, 45.980, 0.000)), rs.coerce3dpoint((22.141, 46.100, 0.000)), rs.coerce3dpoint((22.140, 46.220, 0.000)), rs.coerce3dpoint((22.139, 46.261, 0.000)), rs.coerce3dpoint((22.139, 46.302, 0.000)), rs.coerce3dpoint((22.138, 46.400, 0.000)), rs.coerce3dpoint((22.139, 46.497, 0.000))], [0.0, 0.0, 0.312327178767, 0.312327178767, 0.634980589214, 0.634980589214, 0.853875301331, 0.853875301331, 1.09083050950, 1.09083050950, 1.36494384045, 1.36494384045, 1.45883800036, 1.45883800036, 1.64602917241, 1.64602917241, 1.95363315147, 1.95363315147, 2.13917224611, 2.13917224611, 2.31402376203, 2.31402376203, 2.74143611976, 2.74143611976, 3.27912792570, 3.27912792570, 3.56124382224, 3.56124382224, 3.79555187543, 3.79555187543, 3.89638976508, 3.89638976508, 3.93868694431, 3.93868694431, 4.12037297445, 4.12037297445, 4.30415728282, 4.30415728282, 4.45457521180, 4.45457521180, 4.66188508868, 4.66188508868, 5.02065840251, 5.02065840251, 5.05164784448, 5.05164784448, 5.44222664564, 5.44222664564, 5.80579070578, 5.80579070578, 6.01390263907, 6.01390263907, 6.27142212094, 6.27142212094, 6.52061534752, 6.52061534752, 6.73650203021, 6.73650203021, 6.83694778931, 6.83694778931, 7.07657237011, 7.07657237011, 7.15904349112, 7.15904349112, 7.35322635717, 7.35322635717], 2, [1.0, 0.999971120417, 1.0, 0.99995950082, 1.0, 0.992873404989, 1.0, 0.987091140598, 1.0, 0.981089922177, 1.0, 0.998272772946, 1.0, 0.991062122134, 1.0, 0.9665098457, 1.0, 0.991790556371, 1.0, 0.995940237597, 1.0, 0.998809988485, 1.0, 0.998914809139, 1.0, 0.999744652605, 1.0, 0.99991022403, 1.0, 0.999352209884, 1.0, 0.99946222464, 1.0, 0.985350476054, 1.0, 0.984975718785, 1.0, 0.994184956666, 1.0, 0.990659328765, 1.0, 0.961391787529, 1.0, 0.999758029278, 1.0, 0.999716820101, 1.0, 0.999255297394, 1.0, 0.990358385523, 1.0, 0.979004738727, 1.0, 0.980820585828, 1.0, 0.989912259197, 1.0, 0.998433228349, 1.0, 0.999712041466, 1.0, 1.0, 1.0, 0.999955820976, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(20.086, 48.965, 0.000), (20.209, 48.978, 0.000), (20.321, 49.029, 0.000), (20.382, 49.056, 0.000), (20.437, 49.094, 0.000), (20.482, 49.125, 0.000), (20.521, 49.163, 0.000), (20.577, 49.218, 0.000), (20.627, 49.280, 0.000), (20.699, 49.368, 0.000), (20.763, 49.462, 0.000), (20.848, 49.587, 0.000), (20.926, 49.716, 0.000), (20.959, 49.772, 0.000), (20.992, 49.827, 0.000), (21.087, 49.989, 0.000), (21.179, 50.152, 0.000), (21.318, 50.396, 0.000), (21.457, 50.640, 0.000), (21.510, 50.733, 0.000), (21.563, 50.827, 0.000), (21.759, 51.173, 0.000), (21.958, 51.517, 0.000), (21.964, 51.527, 0.000), (21.970, 51.538, 0.000), (22.027, 51.635, 0.000), (22.064, 51.742, 0.000), (22.123, 51.914, 0.000), (22.113, 52.096, 0.000), (22.106, 52.208, 0.000), (22.077, 52.318, 0.000), (22.046, 52.429, 0.000), (21.999, 52.535, 0.000), (21.946, 52.655, 0.000), (21.880, 52.768, 0.000), (21.767, 52.957, 0.000), (21.659, 53.149, 0.000), (21.594, 53.264, 0.000), (21.530, 53.378, 0.000), (21.406, 53.601, 0.000), (21.279, 53.821, 0.000), (21.143, 54.057, 0.000), (20.998, 54.286, 0.000), (20.965, 54.338, 0.000), (20.931, 54.389, 0.000), (20.853, 54.519, 0.000), (20.763, 54.641, 0.000), (20.692, 54.736, 0.000), (20.612, 54.823, 0.000), (20.541, 54.899, 0.000), (20.459, 54.964, 0.000), (20.408, 55.003, 0.000), (20.355, 55.038, 0.000), (20.317, 55.063, 0.000), (20.273, 55.078, 0.000), (20.173, 55.112, 0.000), (20.068, 55.103, 0.000), (19.977, 55.094, 0.000), (19.898, 55.047, 0.000), (19.842, 55.012, 0.000), (19.800, 54.962, 0.000), (19.770, 54.933, 0.000), (19.743, 54.901, 0.000), (19.672, 54.819, 0.000), (19.606, 54.733, 0.000), (19.464, 54.552, 0.000), (19.332, 54.364, 0.000), (19.223, 54.207, 0.000), (19.121, 54.045, 0.000), (19.081, 53.981, 0.000), (19.041, 53.918, 0.000), (18.969, 53.801, 0.000), (18.894, 53.686, 0.000), (18.861, 53.635, 0.000), (18.828, 53.584, 0.000), (18.731, 53.436, 0.000), (18.637, 53.285, 0.000), (18.464, 53.005, 0.000), (18.312, 52.712, 0.000), (18.302, 52.692, 0.000), (18.292, 52.673, 0.000), (18.229, 52.556, 0.000), (18.179, 52.433, 0.000), (18.137, 52.330, 0.000), (18.109, 52.221, 0.000), (18.082, 52.118, 0.000), (18.075, 52.012, 0.000), (18.064, 51.829, 0.000), (18.124, 51.656, 0.000), (18.159, 51.556, 0.000), (18.212, 51.464, 0.000), (18.216, 51.457, 0.000), (18.220, 51.450, 0.000), (18.445, 51.059, 0.000), (18.666, 50.666, 0.000), (18.706, 50.595, 0.000), (18.747, 50.523, 0.000), (18.911, 50.231, 0.000), (19.077, 49.941, 0.000), (19.137, 49.836, 0.000), (19.198, 49.732, 0.000), (19.273, 49.604, 0.000), (19.356, 49.481, 0.000), (19.419, 49.388, 0.000), (19.489, 49.301, 0.000), (19.568, 49.204, 0.000), (19.662, 49.122, 0.000), (19.687, 49.099, 0.000), (19.714, 49.077, 0.000), (19.763, 49.038, 0.000), (19.821, 49.014, 0.000), (19.884, 48.989, 0.000), (19.951, 48.978, 0.000), (20.018, 48.967, 0.000), (20.086, 48.965, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((20.086, 48.965, 0.000)), rs.coerce3dpoint((20.209, 48.978, 0.000)), rs.coerce3dpoint((20.321, 49.029, 0.000)), rs.coerce3dpoint((20.382, 49.056, 0.000)), rs.coerce3dpoint((20.437, 49.094, 0.000)), rs.coerce3dpoint((20.482, 49.125, 0.000)), rs.coerce3dpoint((20.521, 49.163, 0.000)), rs.coerce3dpoint((20.577, 49.218, 0.000)), rs.coerce3dpoint((20.627, 49.280, 0.000)), rs.coerce3dpoint((20.699, 49.368, 0.000)), rs.coerce3dpoint((20.763, 49.462, 0.000)), rs.coerce3dpoint((20.848, 49.587, 0.000)), rs.coerce3dpoint((20.926, 49.716, 0.000)), rs.coerce3dpoint((20.959, 49.772, 0.000)), rs.coerce3dpoint((20.992, 49.827, 0.000)), rs.coerce3dpoint((21.087, 49.989, 0.000)), rs.coerce3dpoint((21.179, 50.152, 0.000)), rs.coerce3dpoint((21.318, 50.396, 0.000)), rs.coerce3dpoint((21.457, 50.640, 0.000)), rs.coerce3dpoint((21.510, 50.733, 0.000)), rs.coerce3dpoint((21.563, 50.827, 0.000)), rs.coerce3dpoint((21.759, 51.173, 0.000)), rs.coerce3dpoint((21.958, 51.517, 0.000)), rs.coerce3dpoint((21.964, 51.527, 0.000)), rs.coerce3dpoint((21.970, 51.538, 0.000)), rs.coerce3dpoint((22.027, 51.635, 0.000)), rs.coerce3dpoint((22.064, 51.742, 0.000)), rs.coerce3dpoint((22.123, 51.914, 0.000)), rs.coerce3dpoint((22.113, 52.096, 0.000)), rs.coerce3dpoint((22.106, 52.208, 0.000)), rs.coerce3dpoint((22.077, 52.318, 0.000)), rs.coerce3dpoint((22.046, 52.429, 0.000)), rs.coerce3dpoint((21.999, 52.535, 0.000)), rs.coerce3dpoint((21.946, 52.655, 0.000)), rs.coerce3dpoint((21.880, 52.768, 0.000)), rs.coerce3dpoint((21.767, 52.957, 0.000)), rs.coerce3dpoint((21.659, 53.149, 0.000)), rs.coerce3dpoint((21.594, 53.264, 0.000)), rs.coerce3dpoint((21.530, 53.378, 0.000)), rs.coerce3dpoint((21.406, 53.601, 0.000)), rs.coerce3dpoint((21.279, 53.821, 0.000)), rs.coerce3dpoint((21.143, 54.057, 0.000)), rs.coerce3dpoint((20.998, 54.286, 0.000)), rs.coerce3dpoint((20.965, 54.338, 0.000)), rs.coerce3dpoint((20.931, 54.389, 0.000)), rs.coerce3dpoint((20.853, 54.519, 0.000)), rs.coerce3dpoint((20.763, 54.641, 0.000)), rs.coerce3dpoint((20.692, 54.736, 0.000)), rs.coerce3dpoint((20.612, 54.823, 0.000)), rs.coerce3dpoint((20.541, 54.899, 0.000)), rs.coerce3dpoint((20.459, 54.964, 0.000)), rs.coerce3dpoint((20.408, 55.003, 0.000)), rs.coerce3dpoint((20.355, 55.038, 0.000)), rs.coerce3dpoint((20.317, 55.063, 0.000)), rs.coerce3dpoint((20.273, 55.078, 0.000)), rs.coerce3dpoint((20.173, 55.112, 0.000)), rs.coerce3dpoint((20.068, 55.103, 0.000)), rs.coerce3dpoint((19.977, 55.094, 0.000)), rs.coerce3dpoint((19.898, 55.047, 0.000)), rs.coerce3dpoint((19.842, 55.012, 0.000)), rs.coerce3dpoint((19.800, 54.962, 0.000)), rs.coerce3dpoint((19.770, 54.933, 0.000)), rs.coerce3dpoint((19.743, 54.901, 0.000)), rs.coerce3dpoint((19.672, 54.819, 0.000)), rs.coerce3dpoint((19.606, 54.733, 0.000)), rs.coerce3dpoint((19.464, 54.552, 0.000)), rs.coerce3dpoint((19.332, 54.364, 0.000)), rs.coerce3dpoint((19.223, 54.207, 0.000)), rs.coerce3dpoint((19.121, 54.045, 0.000)), rs.coerce3dpoint((19.081, 53.981, 0.000)), rs.coerce3dpoint((19.041, 53.918, 0.000)), rs.coerce3dpoint((18.969, 53.801, 0.000)), rs.coerce3dpoint((18.894, 53.686, 0.000)), rs.coerce3dpoint((18.861, 53.635, 0.000)), rs.coerce3dpoint((18.828, 53.584, 0.000)), rs.coerce3dpoint((18.731, 53.436, 0.000)), rs.coerce3dpoint((18.637, 53.285, 0.000)), rs.coerce3dpoint((18.464, 53.005, 0.000)), rs.coerce3dpoint((18.312, 52.712, 0.000)), rs.coerce3dpoint((18.302, 52.692, 0.000)), rs.coerce3dpoint((18.292, 52.673, 0.000)), rs.coerce3dpoint((18.229, 52.556, 0.000)), rs.coerce3dpoint((18.179, 52.433, 0.000)), rs.coerce3dpoint((18.137, 52.330, 0.000)), rs.coerce3dpoint((18.109, 52.221, 0.000)), rs.coerce3dpoint((18.082, 52.118, 0.000)), rs.coerce3dpoint((18.075, 52.012, 0.000)), rs.coerce3dpoint((18.064, 51.829, 0.000)), rs.coerce3dpoint((18.124, 51.656, 0.000)), rs.coerce3dpoint((18.159, 51.556, 0.000)), rs.coerce3dpoint((18.212, 51.464, 0.000)), rs.coerce3dpoint((18.216, 51.457, 0.000)), rs.coerce3dpoint((18.220, 51.450, 0.000)), rs.coerce3dpoint((18.445, 51.059, 0.000)), rs.coerce3dpoint((18.666, 50.666, 0.000)), rs.coerce3dpoint((18.706, 50.595, 0.000)), rs.coerce3dpoint((18.747, 50.523, 0.000)), rs.coerce3dpoint((18.911, 50.231, 0.000)), rs.coerce3dpoint((19.077, 49.941, 0.000)), rs.coerce3dpoint((19.137, 49.836, 0.000)), rs.coerce3dpoint((19.198, 49.732, 0.000)), rs.coerce3dpoint((19.273, 49.604, 0.000)), rs.coerce3dpoint((19.356, 49.481, 0.000)), rs.coerce3dpoint((19.419, 49.388, 0.000)), rs.coerce3dpoint((19.489, 49.301, 0.000)), rs.coerce3dpoint((19.568, 49.204, 0.000)), rs.coerce3dpoint((19.662, 49.122, 0.000)), rs.coerce3dpoint((19.687, 49.099, 0.000)), rs.coerce3dpoint((19.714, 49.077, 0.000)), rs.coerce3dpoint((19.763, 49.038, 0.000)), rs.coerce3dpoint((19.821, 49.014, 0.000)), rs.coerce3dpoint((19.884, 48.989, 0.000)), rs.coerce3dpoint((19.951, 48.978, 0.000)), rs.coerce3dpoint((20.018, 48.967, 0.000)), rs.coerce3dpoint((20.086, 48.965, 0.000))], [0.0, 0.0, 0.244966399175, 0.244966399175, 0.377753526569, 0.377753526569, 0.48652262408, 0.48652262408, 0.644607969759, 0.644607969759, 0.872070594544, 0.872070594544, 1.17367557693, 1.17367557693, 1.30327435928, 1.30327435928, 1.67742661461, 1.67742661461, 2.23947692766, 2.23947692766, 2.45390928179, 2.45390928179, 3.24961794167, 3.24961794167, 3.27334476404, 3.27334476404, 3.49812912056, 3.49812912056, 3.85785326827, 3.85785326827, 4.08322971044, 4.08322971044, 4.31393912102, 4.31393912102, 4.57643151909, 4.57643151909, 5.01677952978, 5.01677952978, 5.27999773845, 5.27999773845, 5.78921254299, 5.78921254299, 6.33191835878, 6.33191835878, 6.45473372402, 6.45473372402, 6.75781110176, 6.75781110176, 6.99422215314, 6.99422215314, 7.20292883378, 7.20292883378, 7.32985230905, 7.32985230905, 7.42137743902, 7.42137743902, 7.62939597378, 7.62939597378, 7.81001783911, 7.81001783911, 7.93991626645, 7.93991626645, 8.02365351894, 8.02365351894, 8.24113285215, 8.24113285215, 8.70007693311, 8.70007693311, 9.08288220876, 9.08288220876, 9.23262439687, 9.23262439687, 9.50746853869, 9.50746853869, 9.62856746849, 9.62856746849, 9.98390014369, 9.98390014369, 10.6424903174, 10.6424903174, 10.6869171764, 10.6869171764, 10.9515196345, 10.9515196345, 11.1752788139, 11.1752788139, 11.3878348043, 11.3878348043, 11.7489087609, 11.7489087609, 11.9605531514, 11.9605531514, 11.9769009341, 11.9769009341, 12.8782617051, 12.8782617051, 13.0428735179, 13.0428735179, 13.7120357567, 13.7120357567, 13.9536788307, 13.9536788307, 14.2499720452, 14.2499720452, 14.4743461012, 14.4743461012, 14.7232990026, 14.7232990026, 14.7917876240, 14.7917876240, 14.9165204786, 14.9165204786, 15.0519275893, 15.0519275893, 15.1873007419, 15.1873007419], 2, [1.0, 0.986803156732, 1.0, 0.996222647695, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988544373687, 1.0, 0.994163462437, 1.0, 0.997552997578, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-18.579, 44.278, 0.000), (-18.456, 44.291, 0.000), (-18.343, 44.342, 0.000), (-18.283, 44.369, 0.000), (-18.227, 44.407, 0.000), (-18.183, 44.438, 0.000), (-18.144, 44.476, 0.000), (-18.087, 44.531, 0.000), (-18.038, 44.593, 0.000), (-17.966, 44.681, 0.000), (-17.902, 44.775, 0.000), (-17.817, 44.900, 0.000), (-17.739, 45.029, 0.000), (-17.706, 45.085, 0.000), (-17.673, 45.140, 0.000), (-17.578, 45.302, 0.000), (-17.486, 45.465, 0.000), (-17.347, 45.709, 0.000), (-17.208, 45.953, 0.000), (-17.155, 46.047, 0.000), (-17.102, 46.140, 0.000), (-16.906, 46.486, 0.000), (-16.706, 46.830, 0.000), (-16.700, 46.840, 0.000), (-16.695, 46.851, 0.000), (-16.638, 46.948, 0.000), (-16.601, 47.055, 0.000), (-16.541, 47.227, 0.000), (-16.552, 47.409, 0.000), (-16.558, 47.521, 0.000), (-16.588, 47.631, 0.000), (-16.618, 47.742, 0.000), (-16.665, 47.848, 0.000), (-16.718, 47.968, 0.000), (-16.785, 48.081, 0.000), (-16.898, 48.270, 0.000), (-17.006, 48.462, 0.000), (-17.071, 48.577, 0.000), (-17.135, 48.691, 0.000), (-17.259, 48.914, 0.000), (-17.386, 49.134, 0.000), (-17.522, 49.370, 0.000), (-17.667, 49.599, 0.000), (-17.700, 49.651, 0.000), (-17.733, 49.702, 0.000), (-17.812, 49.832, 0.000), (-17.902, 49.954, 0.000), (-17.972, 50.049, 0.000), (-18.053, 50.136, 0.000), (-18.124, 50.212, 0.000), (-18.206, 50.277, 0.000), (-18.256, 50.316, 0.000), (-18.309, 50.351, 0.000), (-18.348, 50.376, 0.000), (-18.391, 50.391, 0.000), (-18.491, 50.425, 0.000), (-18.596, 50.416, 0.000), (-18.688, 50.407, 0.000), (-18.767, 50.360, 0.000), (-18.822, 50.326, 0.000), (-18.864, 50.275, 0.000), (-18.894, 50.246, 0.000), (-18.922, 50.214, 0.000), (-18.992, 50.132, 0.000), (-19.059, 50.046, 0.000), (-19.201, 49.865, 0.000), (-19.332, 49.677, 0.000), (-19.442, 49.520, 0.000), (-19.544, 49.358, 0.000), (-19.583, 49.294, 0.000), (-19.623, 49.231, 0.000), (-19.696, 49.114, 0.000), (-19.770, 48.999, 0.000), (-19.803, 48.948, 0.000), (-19.836, 48.897, 0.000), (-19.934, 48.749, 0.000), (-20.028, 48.598, 0.000), (-20.201, 48.318, 0.000), (-20.353, 48.025, 0.000), (-20.363, 48.006, 0.000), (-20.373, 47.986, 0.000), (-20.435, 47.869, 0.000), (-20.485, 47.746, 0.000), (-20.528, 47.643, 0.000), (-20.556, 47.534, 0.000), (-20.582, 47.431, 0.000), (-20.589, 47.325, 0.000), (-20.601, 47.142, 0.000), (-20.540, 46.969, 0.000), (-20.505, 46.869, 0.000), (-20.453, 46.777, 0.000), (-20.449, 46.770, 0.000), (-20.445, 46.763, 0.000), (-20.220, 46.372, 0.000), (-19.999, 45.979, 0.000), (-19.958, 45.908, 0.000), (-19.918, 45.836, 0.000), (-19.754, 45.544, 0.000), (-19.588, 45.254, 0.000), (-19.528, 45.149, 0.000), (-19.466, 45.045, 0.000), (-19.391, 44.917, 0.000), (-19.309, 44.794, 0.000), (-19.246, 44.701, 0.000), (-19.175, 44.614, 0.000), (-19.097, 44.517, 0.000), (-19.003, 44.435, 0.000), (-18.977, 44.412, 0.000), (-18.951, 44.390, 0.000), (-18.902, 44.351, 0.000), (-18.844, 44.327, 0.000), (-18.780, 44.302, 0.000), (-18.713, 44.291, 0.000), (-18.646, 44.280, 0.000), (-18.579, 44.278, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-18.579, 44.278, 0.000)), rs.coerce3dpoint((-18.456, 44.291, 0.000)), rs.coerce3dpoint((-18.343, 44.342, 0.000)), rs.coerce3dpoint((-18.283, 44.369, 0.000)), rs.coerce3dpoint((-18.227, 44.407, 0.000)), rs.coerce3dpoint((-18.183, 44.438, 0.000)), rs.coerce3dpoint((-18.144, 44.476, 0.000)), rs.coerce3dpoint((-18.087, 44.531, 0.000)), rs.coerce3dpoint((-18.038, 44.593, 0.000)), rs.coerce3dpoint((-17.966, 44.681, 0.000)), rs.coerce3dpoint((-17.902, 44.775, 0.000)), rs.coerce3dpoint((-17.817, 44.900, 0.000)), rs.coerce3dpoint((-17.739, 45.029, 0.000)), rs.coerce3dpoint((-17.706, 45.085, 0.000)), rs.coerce3dpoint((-17.673, 45.140, 0.000)), rs.coerce3dpoint((-17.578, 45.302, 0.000)), rs.coerce3dpoint((-17.486, 45.465, 0.000)), rs.coerce3dpoint((-17.347, 45.709, 0.000)), rs.coerce3dpoint((-17.208, 45.953, 0.000)), rs.coerce3dpoint((-17.155, 46.047, 0.000)), rs.coerce3dpoint((-17.102, 46.140, 0.000)), rs.coerce3dpoint((-16.906, 46.486, 0.000)), rs.coerce3dpoint((-16.706, 46.830, 0.000)), rs.coerce3dpoint((-16.700, 46.840, 0.000)), rs.coerce3dpoint((-16.695, 46.851, 0.000)), rs.coerce3dpoint((-16.638, 46.948, 0.000)), rs.coerce3dpoint((-16.601, 47.055, 0.000)), rs.coerce3dpoint((-16.541, 47.227, 0.000)), rs.coerce3dpoint((-16.552, 47.409, 0.000)), rs.coerce3dpoint((-16.558, 47.521, 0.000)), rs.coerce3dpoint((-16.588, 47.631, 0.000)), rs.coerce3dpoint((-16.618, 47.742, 0.000)), rs.coerce3dpoint((-16.665, 47.848, 0.000)), rs.coerce3dpoint((-16.718, 47.968, 0.000)), rs.coerce3dpoint((-16.785, 48.081, 0.000)), rs.coerce3dpoint((-16.898, 48.270, 0.000)), rs.coerce3dpoint((-17.006, 48.462, 0.000)), rs.coerce3dpoint((-17.071, 48.577, 0.000)), rs.coerce3dpoint((-17.135, 48.691, 0.000)), rs.coerce3dpoint((-17.259, 48.914, 0.000)), rs.coerce3dpoint((-17.386, 49.134, 0.000)), rs.coerce3dpoint((-17.522, 49.370, 0.000)), rs.coerce3dpoint((-17.667, 49.599, 0.000)), rs.coerce3dpoint((-17.700, 49.651, 0.000)), rs.coerce3dpoint((-17.733, 49.702, 0.000)), rs.coerce3dpoint((-17.812, 49.832, 0.000)), rs.coerce3dpoint((-17.902, 49.954, 0.000)), rs.coerce3dpoint((-17.972, 50.049, 0.000)), rs.coerce3dpoint((-18.053, 50.136, 0.000)), rs.coerce3dpoint((-18.124, 50.212, 0.000)), rs.coerce3dpoint((-18.206, 50.277, 0.000)), rs.coerce3dpoint((-18.256, 50.316, 0.000)), rs.coerce3dpoint((-18.309, 50.351, 0.000)), rs.coerce3dpoint((-18.348, 50.376, 0.000)), rs.coerce3dpoint((-18.391, 50.391, 0.000)), rs.coerce3dpoint((-18.491, 50.425, 0.000)), rs.coerce3dpoint((-18.596, 50.416, 0.000)), rs.coerce3dpoint((-18.688, 50.407, 0.000)), rs.coerce3dpoint((-18.767, 50.360, 0.000)), rs.coerce3dpoint((-18.822, 50.326, 0.000)), rs.coerce3dpoint((-18.864, 50.275, 0.000)), rs.coerce3dpoint((-18.894, 50.246, 0.000)), rs.coerce3dpoint((-18.922, 50.214, 0.000)), rs.coerce3dpoint((-18.992, 50.132, 0.000)), rs.coerce3dpoint((-19.059, 50.046, 0.000)), rs.coerce3dpoint((-19.201, 49.865, 0.000)), rs.coerce3dpoint((-19.332, 49.677, 0.000)), rs.coerce3dpoint((-19.442, 49.520, 0.000)), rs.coerce3dpoint((-19.544, 49.358, 0.000)), rs.coerce3dpoint((-19.583, 49.294, 0.000)), rs.coerce3dpoint((-19.623, 49.231, 0.000)), rs.coerce3dpoint((-19.696, 49.114, 0.000)), rs.coerce3dpoint((-19.770, 48.999, 0.000)), rs.coerce3dpoint((-19.803, 48.948, 0.000)), rs.coerce3dpoint((-19.836, 48.897, 0.000)), rs.coerce3dpoint((-19.934, 48.749, 0.000)), rs.coerce3dpoint((-20.028, 48.598, 0.000)), rs.coerce3dpoint((-20.201, 48.318, 0.000)), rs.coerce3dpoint((-20.353, 48.025, 0.000)), rs.coerce3dpoint((-20.363, 48.006, 0.000)), rs.coerce3dpoint((-20.373, 47.986, 0.000)), rs.coerce3dpoint((-20.435, 47.869, 0.000)), rs.coerce3dpoint((-20.485, 47.746, 0.000)), rs.coerce3dpoint((-20.528, 47.643, 0.000)), rs.coerce3dpoint((-20.556, 47.534, 0.000)), rs.coerce3dpoint((-20.582, 47.431, 0.000)), rs.coerce3dpoint((-20.589, 47.325, 0.000)), rs.coerce3dpoint((-20.601, 47.142, 0.000)), rs.coerce3dpoint((-20.540, 46.969, 0.000)), rs.coerce3dpoint((-20.505, 46.869, 0.000)), rs.coerce3dpoint((-20.453, 46.777, 0.000)), rs.coerce3dpoint((-20.449, 46.770, 0.000)), rs.coerce3dpoint((-20.445, 46.763, 0.000)), rs.coerce3dpoint((-20.220, 46.372, 0.000)), rs.coerce3dpoint((-19.999, 45.979, 0.000)), rs.coerce3dpoint((-19.958, 45.908, 0.000)), rs.coerce3dpoint((-19.918, 45.836, 0.000)), rs.coerce3dpoint((-19.754, 45.544, 0.000)), rs.coerce3dpoint((-19.588, 45.254, 0.000)), rs.coerce3dpoint((-19.528, 45.149, 0.000)), rs.coerce3dpoint((-19.466, 45.045, 0.000)), rs.coerce3dpoint((-19.391, 44.917, 0.000)), rs.coerce3dpoint((-19.309, 44.794, 0.000)), rs.coerce3dpoint((-19.246, 44.701, 0.000)), rs.coerce3dpoint((-19.175, 44.614, 0.000)), rs.coerce3dpoint((-19.097, 44.517, 0.000)), rs.coerce3dpoint((-19.003, 44.435, 0.000)), rs.coerce3dpoint((-18.977, 44.412, 0.000)), rs.coerce3dpoint((-18.951, 44.390, 0.000)), rs.coerce3dpoint((-18.902, 44.351, 0.000)), rs.coerce3dpoint((-18.844, 44.327, 0.000)), rs.coerce3dpoint((-18.780, 44.302, 0.000)), rs.coerce3dpoint((-18.713, 44.291, 0.000)), rs.coerce3dpoint((-18.646, 44.280, 0.000)), rs.coerce3dpoint((-18.579, 44.278, 0.000))], [0.0, 0.0, 0.244956702057, 0.244956702057, 0.377752568499, 0.377752568499, 0.48652166601, 0.48652166601, 0.644614414808, 0.644614414808, 0.872063043377, 0.872063043377, 1.17367342643, 1.17367342643, 1.30326707702, 1.30326707702, 1.67741933235, 1.67741933235, 2.23947458488, 2.23947458488, 2.45390200570, 2.45390200570, 3.24961066558, 3.24961066558, 3.27334248810, 3.27334248810, 3.49812265816, 3.49812265816, 3.85785677384, 3.85785677384, 4.08322333085, 4.08322333085, 4.31393274143, 4.31393274143, 4.57642058768, 4.57642058768, 5.01677362915, 5.01677362915, 5.28000055460, 5.28000055460, 5.78920172893, 5.78920172893, 6.33191610531, 6.33191610531, 6.45472848143, 6.45472848143, 6.75780028328, 6.75780028328, 6.99421133466, 6.99421133466, 7.20292536678, 7.20292536678, 7.32984884205, 7.32984884205, 7.42136931633, 7.42136931633, 7.62939663287, 7.62939663287, 7.81001849820, 7.81001849820, 7.93990932216, 7.93990932216, 8.02365339481, 8.02365339481, 8.24113272801, 8.24113272801, 8.70007680898, 8.70007680898, 9.08288208463, 9.08288208463, 9.23261580695, 9.23261580695, 9.50746839811, 9.50746839811, 9.62856732792, 9.62856732792, 9.98390000311, 9.98390000311, 10.6424852414, 10.6424852414, 10.6869121004, 10.6869121004, 10.9515097471, 10.9515097471, 11.1752689266, 11.1752689266, 11.3878348067, 11.3878348067, 11.7489087634, 11.7489087634, 11.9605531538, 11.9605531538, 11.9769058937, 11.9769058937, 12.8782530261, 12.8782530261, 13.0428735504, 13.0428735504, 13.7120407198, 13.7120407198, 13.9536787662, 13.9536787662, 14.2499719807, 14.2499719807, 14.4743460367, 14.4743460367, 14.7232986542, 14.7232986542, 14.7917861410, 14.7917861410, 14.9165189956, 14.9165189956, 15.0519261063, 15.0519261063, 15.1873092218, 15.1873092218], 2, [1.0, 0.986803156732, 1.0, 0.996222647695, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988544373687, 1.0, 0.994163462437, 1.0, 0.997552997578, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.869, 2.811, 0.000), (-10.746, 2.823, 0.000), (-10.633, 2.874, 0.000), (-10.572, 2.902, 0.000), (-10.517, 2.939, 0.000), (-10.473, 2.970, 0.000), (-10.434, 3.008, 0.000), (-10.377, 3.064, 0.000), (-10.328, 3.125, 0.000), (-10.256, 3.214, 0.000), (-10.192, 3.308, 0.000), (-10.107, 3.432, 0.000), (-10.029, 3.562, 0.000), (-9.995, 3.617, 0.000), (-9.962, 3.673, 0.000), (-9.868, 3.834, 0.000), (-9.775, 3.997, 0.000), (-9.637, 4.241, 0.000), (-9.498, 4.486, 0.000), (-9.445, 4.579, 0.000), (-9.392, 4.672, 0.000), (-9.196, 5.018, 0.000), (-8.996, 5.362, 0.000), (-8.990, 5.373, 0.000), (-8.984, 5.383, 0.000), (-8.928, 5.480, 0.000), (-8.891, 5.587, 0.000), (-8.831, 5.759, 0.000), (-8.841, 5.941, 0.000), (-8.848, 6.054, 0.000), (-8.878, 6.163, 0.000), (-8.908, 6.274, 0.000), (-8.955, 6.380, 0.000), (-9.008, 6.500, 0.000), (-9.074, 6.614, 0.000), (-9.188, 6.802, 0.000), (-9.296, 6.994, 0.000), (-9.361, 7.109, 0.000), (-9.425, 7.224, 0.000), (-9.549, 7.446, 0.000), (-9.676, 7.667, 0.000), (-9.811, 7.902, 0.000), (-9.957, 8.131, 0.000), (-9.989, 8.183, 0.000), (-10.023, 8.235, 0.000), (-10.102, 8.364, 0.000), (-10.192, 8.486, 0.000), (-10.262, 8.581, 0.000), (-10.343, 8.668, 0.000), (-10.414, 8.745, 0.000), (-10.496, 8.809, 0.000), (-10.546, 8.848, 0.000), (-10.599, 8.883, 0.000), (-10.638, 8.908, 0.000), (-10.681, 8.923, 0.000), (-10.781, 8.958, 0.000), (-10.886, 8.948, 0.000), (-10.978, 8.940, 0.000), (-11.056, 8.892, 0.000), (-11.112, 8.858, 0.000), (-11.154, 8.808, 0.000), (-11.184, 8.778, 0.000), (-11.211, 8.746, 0.000), (-11.282, 8.664, 0.000), (-11.349, 8.578, 0.000), (-11.490, 8.397, 0.000), (-11.622, 8.209, 0.000), (-11.732, 8.052, 0.000), (-11.833, 7.890, 0.000), (-11.873, 7.827, 0.000), (-11.913, 7.763, 0.000), (-11.986, 7.647, 0.000), (-12.060, 7.531, 0.000), (-12.093, 7.480, 0.000), (-12.126, 7.430, 0.000), (-12.224, 7.281, 0.000), (-12.318, 7.130, 0.000), (-12.491, 6.850, 0.000), (-12.642, 6.558, 0.000), (-12.653, 6.538, 0.000), (-12.663, 6.518, 0.000), (-12.725, 6.401, 0.000), (-12.775, 6.279, 0.000), (-12.818, 6.175, 0.000), (-12.846, 6.066, 0.000), (-12.872, 5.963, 0.000), (-12.879, 5.857, 0.000), (-12.890, 5.674, 0.000), (-12.830, 5.501, 0.000), (-12.795, 5.401, 0.000), (-12.743, 5.309, 0.000), (-12.739, 5.302, 0.000), (-12.735, 5.295, 0.000), (-12.509, 4.904, 0.000), (-12.289, 4.512, 0.000), (-12.248, 4.440, 0.000), (-12.208, 4.368, 0.000), (-12.044, 4.077, 0.000), (-11.878, 3.786, 0.000), (-11.818, 3.681, 0.000), (-11.756, 3.577, 0.000), (-11.681, 3.449, 0.000), (-11.599, 3.326, 0.000), (-11.536, 3.233, 0.000), (-11.465, 3.146, 0.000), (-11.386, 3.049, 0.000), (-11.293, 2.967, 0.000), (-11.267, 2.944, 0.000), (-11.241, 2.922, 0.000), (-11.192, 2.883, 0.000), (-11.133, 2.860, 0.000), (-11.070, 2.835, 0.000), (-11.003, 2.824, 0.000), (-10.936, 2.812, 0.000), (-10.869, 2.811, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.869, 2.811, 0.000)), rs.coerce3dpoint((-10.746, 2.823, 0.000)), rs.coerce3dpoint((-10.633, 2.874, 0.000)), rs.coerce3dpoint((-10.572, 2.902, 0.000)), rs.coerce3dpoint((-10.517, 2.939, 0.000)), rs.coerce3dpoint((-10.473, 2.970, 0.000)), rs.coerce3dpoint((-10.434, 3.008, 0.000)), rs.coerce3dpoint((-10.377, 3.064, 0.000)), rs.coerce3dpoint((-10.328, 3.125, 0.000)), rs.coerce3dpoint((-10.256, 3.214, 0.000)), rs.coerce3dpoint((-10.192, 3.308, 0.000)), rs.coerce3dpoint((-10.107, 3.432, 0.000)), rs.coerce3dpoint((-10.029, 3.562, 0.000)), rs.coerce3dpoint((-9.995, 3.617, 0.000)), rs.coerce3dpoint((-9.962, 3.673, 0.000)), rs.coerce3dpoint((-9.868, 3.834, 0.000)), rs.coerce3dpoint((-9.775, 3.997, 0.000)), rs.coerce3dpoint((-9.637, 4.241, 0.000)), rs.coerce3dpoint((-9.498, 4.486, 0.000)), rs.coerce3dpoint((-9.445, 4.579, 0.000)), rs.coerce3dpoint((-9.392, 4.672, 0.000)), rs.coerce3dpoint((-9.196, 5.018, 0.000)), rs.coerce3dpoint((-8.996, 5.362, 0.000)), rs.coerce3dpoint((-8.990, 5.373, 0.000)), rs.coerce3dpoint((-8.984, 5.383, 0.000)), rs.coerce3dpoint((-8.928, 5.480, 0.000)), rs.coerce3dpoint((-8.891, 5.587, 0.000)), rs.coerce3dpoint((-8.831, 5.759, 0.000)), rs.coerce3dpoint((-8.841, 5.941, 0.000)), rs.coerce3dpoint((-8.848, 6.054, 0.000)), rs.coerce3dpoint((-8.878, 6.163, 0.000)), rs.coerce3dpoint((-8.908, 6.274, 0.000)), rs.coerce3dpoint((-8.955, 6.380, 0.000)), rs.coerce3dpoint((-9.008, 6.500, 0.000)), rs.coerce3dpoint((-9.074, 6.614, 0.000)), rs.coerce3dpoint((-9.188, 6.802, 0.000)), rs.coerce3dpoint((-9.296, 6.994, 0.000)), rs.coerce3dpoint((-9.361, 7.109, 0.000)), rs.coerce3dpoint((-9.425, 7.224, 0.000)), rs.coerce3dpoint((-9.549, 7.446, 0.000)), rs.coerce3dpoint((-9.676, 7.667, 0.000)), rs.coerce3dpoint((-9.811, 7.902, 0.000)), rs.coerce3dpoint((-9.957, 8.131, 0.000)), rs.coerce3dpoint((-9.989, 8.183, 0.000)), rs.coerce3dpoint((-10.023, 8.235, 0.000)), rs.coerce3dpoint((-10.102, 8.364, 0.000)), rs.coerce3dpoint((-10.192, 8.486, 0.000)), rs.coerce3dpoint((-10.262, 8.581, 0.000)), rs.coerce3dpoint((-10.343, 8.668, 0.000)), rs.coerce3dpoint((-10.414, 8.745, 0.000)), rs.coerce3dpoint((-10.496, 8.809, 0.000)), rs.coerce3dpoint((-10.546, 8.848, 0.000)), rs.coerce3dpoint((-10.599, 8.883, 0.000)), rs.coerce3dpoint((-10.638, 8.908, 0.000)), rs.coerce3dpoint((-10.681, 8.923, 0.000)), rs.coerce3dpoint((-10.781, 8.958, 0.000)), rs.coerce3dpoint((-10.886, 8.948, 0.000)), rs.coerce3dpoint((-10.978, 8.940, 0.000)), rs.coerce3dpoint((-11.056, 8.892, 0.000)), rs.coerce3dpoint((-11.112, 8.858, 0.000)), rs.coerce3dpoint((-11.154, 8.808, 0.000)), rs.coerce3dpoint((-11.184, 8.778, 0.000)), rs.coerce3dpoint((-11.211, 8.746, 0.000)), rs.coerce3dpoint((-11.282, 8.664, 0.000)), rs.coerce3dpoint((-11.349, 8.578, 0.000)), rs.coerce3dpoint((-11.490, 8.397, 0.000)), rs.coerce3dpoint((-11.622, 8.209, 0.000)), rs.coerce3dpoint((-11.732, 8.052, 0.000)), rs.coerce3dpoint((-11.833, 7.890, 0.000)), rs.coerce3dpoint((-11.873, 7.827, 0.000)), rs.coerce3dpoint((-11.913, 7.763, 0.000)), rs.coerce3dpoint((-11.986, 7.647, 0.000)), rs.coerce3dpoint((-12.060, 7.531, 0.000)), rs.coerce3dpoint((-12.093, 7.480, 0.000)), rs.coerce3dpoint((-12.126, 7.430, 0.000)), rs.coerce3dpoint((-12.224, 7.281, 0.000)), rs.coerce3dpoint((-12.318, 7.130, 0.000)), rs.coerce3dpoint((-12.491, 6.850, 0.000)), rs.coerce3dpoint((-12.642, 6.558, 0.000)), rs.coerce3dpoint((-12.653, 6.538, 0.000)), rs.coerce3dpoint((-12.663, 6.518, 0.000)), rs.coerce3dpoint((-12.725, 6.401, 0.000)), rs.coerce3dpoint((-12.775, 6.279, 0.000)), rs.coerce3dpoint((-12.818, 6.175, 0.000)), rs.coerce3dpoint((-12.846, 6.066, 0.000)), rs.coerce3dpoint((-12.872, 5.963, 0.000)), rs.coerce3dpoint((-12.879, 5.857, 0.000)), rs.coerce3dpoint((-12.890, 5.674, 0.000)), rs.coerce3dpoint((-12.830, 5.501, 0.000)), rs.coerce3dpoint((-12.795, 5.401, 0.000)), rs.coerce3dpoint((-12.743, 5.309, 0.000)), rs.coerce3dpoint((-12.739, 5.302, 0.000)), rs.coerce3dpoint((-12.735, 5.295, 0.000)), rs.coerce3dpoint((-12.509, 4.904, 0.000)), rs.coerce3dpoint((-12.289, 4.512, 0.000)), rs.coerce3dpoint((-12.248, 4.440, 0.000)), rs.coerce3dpoint((-12.208, 4.368, 0.000)), rs.coerce3dpoint((-12.044, 4.077, 0.000)), rs.coerce3dpoint((-11.878, 3.786, 0.000)), rs.coerce3dpoint((-11.818, 3.681, 0.000)), rs.coerce3dpoint((-11.756, 3.577, 0.000)), rs.coerce3dpoint((-11.681, 3.449, 0.000)), rs.coerce3dpoint((-11.599, 3.326, 0.000)), rs.coerce3dpoint((-11.536, 3.233, 0.000)), rs.coerce3dpoint((-11.465, 3.146, 0.000)), rs.coerce3dpoint((-11.386, 3.049, 0.000)), rs.coerce3dpoint((-11.293, 2.967, 0.000)), rs.coerce3dpoint((-11.267, 2.944, 0.000)), rs.coerce3dpoint((-11.241, 2.922, 0.000)), rs.coerce3dpoint((-11.192, 2.883, 0.000)), rs.coerce3dpoint((-11.133, 2.860, 0.000)), rs.coerce3dpoint((-11.070, 2.835, 0.000)), rs.coerce3dpoint((-11.003, 2.824, 0.000)), rs.coerce3dpoint((-10.936, 2.812, 0.000)), rs.coerce3dpoint((-10.869, 2.811, 0.000))], [0.0, 0.0, 0.244966399175, 0.244966399175, 0.377753526569, 0.377753526569, 0.48652262408, 0.48652262408, 0.644607969759, 0.644607969759, 0.872062569381, 0.872062569381, 1.17367295243, 1.17367295243, 1.30327518618, 1.30327518618, 1.67741878023, 1.67741878023, 2.23948272765, 2.23948272765, 2.45391014848, 2.45391014848, 3.24961880835, 3.24961880835, 3.27334563073, 3.27334563073, 3.49812998725, 3.49812998725, 3.85785413496, 3.85785413496, 4.08323057713, 4.08323057713, 4.31393998771, 4.31393998771, 4.57642783396, 4.57642783396, 5.01677223269, 5.01677223269, 5.27999915814, 5.27999915814, 5.78921396268, 5.78921396268, 6.33191460832, 6.33191460832, 6.45473539018, 6.45473539018, 6.75781276793, 6.75781276793, 6.99422381931, 6.99422381931, 7.20293049994, 7.20293049994, 7.32985397521, 7.32985397521, 7.42137910519, 7.42137910519, 7.62939763995, 7.62939763995, 7.81001950528, 7.81001950528, 7.93991793262, 7.93991793262, 8.02365518511, 8.02365518511, 8.24113451831, 8.24113451831, 8.70007859928, 8.70007859928, 9.08288387493, 9.08288387493, 9.23262606304, 9.23262606304, 9.50747020486, 9.50747020486, 9.62856913466, 9.62856913466, 9.98391023515, 9.98391023515, 10.6424917091, 10.6424917091, 10.6869139615, 10.6869139615, 10.9515206662, 10.9515206662, 11.1752798457, 11.1752798457, 11.3878358361, 11.3878358361, 11.7489097927, 11.7489097927, 11.9605541831, 11.9605541831, 11.9769106528, 11.9769106528, 12.8782627342, 12.8782627342, 13.0428745470, 13.0428745470, 13.7120367858, 13.7120367858, 13.9536798598, 13.9536798598, 14.2499730743, 14.2499730743, 14.4743551703, 14.4743551703, 14.7233077878, 14.7233077878, 14.7917887930, 14.7917887930, 14.9165216476, 14.9165216476, 15.0519314358, 15.0519314358, 15.1873036372, 15.1873036372], 2, [1.0, 0.986803156732, 1.0, 0.996222647695, 1.0, 0.99649493353, 1.0, 0.998330973987, 1.0, 0.99914338705, 1.0, 0.999602459035, 1.0, 0.999986480091, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 1.0, 1.0, 0.99522898849, 1.0, 0.981089922177, 1.0, 0.994689020801, 1.0, 0.997161454396, 1.0, 0.998422025984, 1.0, 0.999893425679, 1.0, 0.999997580003, 1.0, 0.9999755003, 1.0, 0.999783703395, 1.0, 0.99997952021, 1.0, 0.998969950774, 1.0, 0.998399501823, 1.0, 0.997085772557, 1.0, 0.999184252857, 1.0, 0.992242685122, 1.0, 0.977277443978, 1.0, 0.97456318343, 1.0, 0.987091140598, 1.0, 0.999014805543, 1.0, 0.99969746577, 1.0, 0.99965683889, 1.0, 0.999726257473, 1.0, 1.0, 1.0, 0.9999755003, 1.0, 1.0, 1.0, 0.99991550357, 1.0, 0.999323109168, 1.0, 1.0, 1.0, 0.99873072604, 1.0, 0.997677081113, 1.0, 0.995554224477, 1.0, 0.98035456585, 1.0, 0.995849909532, 1.0, 1.0, 1.0, 0.999985420106, 1.0, 1.0, 1.0, 0.999992000032, 1.0, 0.999982000162, 1.0, 0.999513398419, 1.0, 0.998960860186, 1.0, 0.996577945265, 1.0, 0.999858889957, 1.0, 0.988544373687, 1.0, 0.994163462437, 1.0, 0.997552997578, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-17.462, 18.049, 0.000), (-17.332, 18.048, 0.000), (-17.214, 18.104, 0.000), (-17.134, 18.144, 0.000), (-17.066, 18.201, 0.000), (-17.032, 18.230, 0.000), (-17.001, 18.262, 0.000), (-16.932, 18.332, 0.000), (-16.869, 18.405, 0.000), (-16.811, 18.472, 0.000), (-16.762, 18.545, 0.000), (-16.739, 18.579, 0.000), (-16.718, 18.615, 0.000), (-16.651, 18.730, 0.000), (-16.585, 18.847, 0.000), (-16.296, 19.359, 0.000), (-16.007, 19.871, 0.000), (-15.508, 20.758, 0.000), (-15.008, 21.645, 0.000), (-14.956, 21.734, 0.000), (-14.921, 21.831, 0.000), (-14.885, 21.931, 0.000), (-14.874, 22.037, 0.000), (-14.860, 22.179, 0.000), (-14.898, 22.316, 0.000), (-14.921, 22.398, 0.000), (-14.958, 22.475, 0.000), (-15.021, 22.610, 0.000), (-15.089, 22.743, 0.000), (-15.117, 22.799, 0.000), (-15.147, 22.854, 0.000), (-15.184, 22.922, 0.000), (-15.223, 22.990, 0.000), (-15.435, 23.360, 0.000), (-15.646, 23.731, 0.000), (-16.110, 24.540, 0.000), (-16.573, 25.348, 0.000), (-16.659, 25.499, 0.000), (-16.752, 25.646, 0.000), (-16.839, 25.785, 0.000), (-16.936, 25.917, 0.000), (-16.990, 25.991, 0.000), (-17.057, 26.052, 0.000), (-17.121, 26.112, 0.000), (-17.199, 26.153, 0.000), (-17.324, 26.219, 0.000), (-17.465, 26.218, 0.000), (-17.584, 26.217, 0.000), (-17.693, 26.170, 0.000), (-17.777, 26.133, 0.000), (-17.846, 26.074, 0.000), (-17.915, 26.017, 0.000), (-17.970, 25.947, 0.000), (-17.982, 25.932, 0.000), (-17.993, 25.917, 0.000), (-18.094, 25.779, 0.000), (-18.184, 25.634, 0.000), (-18.273, 25.493, 0.000), (-18.356, 25.348, 0.000), (-18.968, 24.278, 0.000), (-19.581, 23.209, 0.000), (-19.667, 23.059, 0.000), (-19.752, 22.907, 0.000), (-19.767, 22.881, 0.000), (-19.782, 22.854, 0.000), (-19.847, 22.731, 0.000), (-19.908, 22.606, 0.000), (-19.940, 22.540, 0.000), (-19.971, 22.475, 0.000), (-20.016, 22.382, 0.000), (-20.039, 22.282, 0.000), (-20.077, 22.115, 0.000), (-20.041, 21.948, 0.000), (-20.019, 21.848, 0.000), (-19.977, 21.755, 0.000), (-19.951, 21.698, 0.000), (-19.920, 21.644, 0.000), (-19.438, 20.787, 0.000), (-18.955, 19.929, 0.000), (-18.653, 19.395, 0.000), (-18.352, 18.861, 0.000), (-18.283, 18.739, 0.000), (-18.213, 18.619, 0.000), (-18.192, 18.582, 0.000), (-18.168, 18.548, 0.000), (-18.168, 18.546, 0.000), (-18.167, 18.545, 0.000), (-18.112, 18.463, 0.000), (-18.047, 18.389, 0.000), (-17.989, 18.324, 0.000), (-17.928, 18.262, 0.000), (-17.854, 18.185, 0.000), (-17.763, 18.131, 0.000), (-17.680, 18.082, 0.000), (-17.586, 18.061, 0.000), (-17.525, 18.048, 0.000), (-17.462, 18.049, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-17.462, 18.049, 0.000)), rs.coerce3dpoint((-17.332, 18.048, 0.000)), rs.coerce3dpoint((-17.214, 18.104, 0.000)), rs.coerce3dpoint((-17.134, 18.144, 0.000)), rs.coerce3dpoint((-17.066, 18.201, 0.000)), rs.coerce3dpoint((-17.032, 18.230, 0.000)), rs.coerce3dpoint((-17.001, 18.262, 0.000)), rs.coerce3dpoint((-16.932, 18.332, 0.000)), rs.coerce3dpoint((-16.869, 18.405, 0.000)), rs.coerce3dpoint((-16.811, 18.472, 0.000)), rs.coerce3dpoint((-16.762, 18.545, 0.000)), rs.coerce3dpoint((-16.739, 18.579, 0.000)), rs.coerce3dpoint((-16.718, 18.615, 0.000)), rs.coerce3dpoint((-16.651, 18.730, 0.000)), rs.coerce3dpoint((-16.585, 18.847, 0.000)), rs.coerce3dpoint((-16.296, 19.359, 0.000)), rs.coerce3dpoint((-16.007, 19.871, 0.000)), rs.coerce3dpoint((-15.508, 20.758, 0.000)), rs.coerce3dpoint((-15.008, 21.645, 0.000)), rs.coerce3dpoint((-14.956, 21.734, 0.000)), rs.coerce3dpoint((-14.921, 21.831, 0.000)), rs.coerce3dpoint((-14.885, 21.931, 0.000)), rs.coerce3dpoint((-14.874, 22.037, 0.000)), rs.coerce3dpoint((-14.860, 22.179, 0.000)), rs.coerce3dpoint((-14.898, 22.316, 0.000)), rs.coerce3dpoint((-14.921, 22.398, 0.000)), rs.coerce3dpoint((-14.958, 22.475, 0.000)), rs.coerce3dpoint((-15.021, 22.610, 0.000)), rs.coerce3dpoint((-15.089, 22.743, 0.000)), rs.coerce3dpoint((-15.117, 22.799, 0.000)), rs.coerce3dpoint((-15.147, 22.854, 0.000)), rs.coerce3dpoint((-15.184, 22.922, 0.000)), rs.coerce3dpoint((-15.223, 22.990, 0.000)), rs.coerce3dpoint((-15.435, 23.360, 0.000)), rs.coerce3dpoint((-15.646, 23.731, 0.000)), rs.coerce3dpoint((-16.110, 24.540, 0.000)), rs.coerce3dpoint((-16.573, 25.348, 0.000)), rs.coerce3dpoint((-16.659, 25.499, 0.000)), rs.coerce3dpoint((-16.752, 25.646, 0.000)), rs.coerce3dpoint((-16.839, 25.785, 0.000)), rs.coerce3dpoint((-16.936, 25.917, 0.000)), rs.coerce3dpoint((-16.990, 25.991, 0.000)), rs.coerce3dpoint((-17.057, 26.052, 0.000)), rs.coerce3dpoint((-17.121, 26.112, 0.000)), rs.coerce3dpoint((-17.199, 26.153, 0.000)), rs.coerce3dpoint((-17.324, 26.219, 0.000)), rs.coerce3dpoint((-17.465, 26.218, 0.000)), rs.coerce3dpoint((-17.584, 26.217, 0.000)), rs.coerce3dpoint((-17.693, 26.170, 0.000)), rs.coerce3dpoint((-17.777, 26.133, 0.000)), rs.coerce3dpoint((-17.846, 26.074, 0.000)), rs.coerce3dpoint((-17.915, 26.017, 0.000)), rs.coerce3dpoint((-17.970, 25.947, 0.000)), rs.coerce3dpoint((-17.982, 25.932, 0.000)), rs.coerce3dpoint((-17.993, 25.917, 0.000)), rs.coerce3dpoint((-18.094, 25.779, 0.000)), rs.coerce3dpoint((-18.184, 25.634, 0.000)), rs.coerce3dpoint((-18.273, 25.493, 0.000)), rs.coerce3dpoint((-18.356, 25.348, 0.000)), rs.coerce3dpoint((-18.968, 24.278, 0.000)), rs.coerce3dpoint((-19.581, 23.209, 0.000)), rs.coerce3dpoint((-19.667, 23.059, 0.000)), rs.coerce3dpoint((-19.752, 22.907, 0.000)), rs.coerce3dpoint((-19.767, 22.881, 0.000)), rs.coerce3dpoint((-19.782, 22.854, 0.000)), rs.coerce3dpoint((-19.847, 22.731, 0.000)), rs.coerce3dpoint((-19.908, 22.606, 0.000)), rs.coerce3dpoint((-19.940, 22.540, 0.000)), rs.coerce3dpoint((-19.971, 22.475, 0.000)), rs.coerce3dpoint((-20.016, 22.382, 0.000)), rs.coerce3dpoint((-20.039, 22.282, 0.000)), rs.coerce3dpoint((-20.077, 22.115, 0.000)), rs.coerce3dpoint((-20.041, 21.948, 0.000)), rs.coerce3dpoint((-20.019, 21.848, 0.000)), rs.coerce3dpoint((-19.977, 21.755, 0.000)), rs.coerce3dpoint((-19.951, 21.698, 0.000)), rs.coerce3dpoint((-19.920, 21.644, 0.000)), rs.coerce3dpoint((-19.438, 20.787, 0.000)), rs.coerce3dpoint((-18.955, 19.929, 0.000)), rs.coerce3dpoint((-18.653, 19.395, 0.000)), rs.coerce3dpoint((-18.352, 18.861, 0.000)), rs.coerce3dpoint((-18.283, 18.739, 0.000)), rs.coerce3dpoint((-18.213, 18.619, 0.000)), rs.coerce3dpoint((-18.192, 18.582, 0.000)), rs.coerce3dpoint((-18.168, 18.548, 0.000)), rs.coerce3dpoint((-18.168, 18.546, 0.000)), rs.coerce3dpoint((-18.167, 18.545, 0.000)), rs.coerce3dpoint((-18.112, 18.463, 0.000)), rs.coerce3dpoint((-18.047, 18.389, 0.000)), rs.coerce3dpoint((-17.989, 18.324, 0.000)), rs.coerce3dpoint((-17.928, 18.262, 0.000)), rs.coerce3dpoint((-17.854, 18.185, 0.000)), rs.coerce3dpoint((-17.763, 18.131, 0.000)), rs.coerce3dpoint((-17.680, 18.082, 0.000)), rs.coerce3dpoint((-17.586, 18.061, 0.000)), rs.coerce3dpoint((-17.525, 18.048, 0.000)), rs.coerce3dpoint((-17.462, 18.049, 0.000))], [0.0, 0.0, 0.25650882943, 0.25650882943, 0.434249332058, 0.434249332058, 0.523223059754, 0.523223059754, 0.717906155304, 0.717906155304, 0.893806250162, 0.893806250162, 0.976426932155, 0.976426932155, 1.24343266445, 1.24343266445, 2.42009384542, 2.42009384542, 4.45527682984, 4.45527682984, 4.66156042684, 4.66156042684, 4.87309829725, 4.87309829725, 5.15512508164, 5.15512508164, 5.32458074701, 5.32458074701, 5.62288625374, 5.62288625374, 5.74844065625, 5.74844065625, 5.90391153474, 5.90391153474, 6.7578261844, 6.7578261844, 8.62155735047, 8.62155735047, 8.96869912029, 8.96869912029, 9.29689511672, 9.29689511672, 9.47843154598, 9.47843154598, 9.65360594965, 9.65360594965, 9.93018645371, 9.93018645371, 10.1644074231, 10.1644074231, 10.3458106681, 10.3458106681, 10.5239016474, 10.5239016474, 10.5613275878, 10.5613275878, 10.9027184122, 10.9027184122, 11.2366571420, 11.2366571420, 13.7015251402, 13.7015251402, 14.0486810142, 14.0486810142, 14.1097737185, 14.1097737185, 14.3881484162, 14.3881484162, 14.5336339264, 14.5336339264, 14.7380860489, 14.7380860489, 15.0753283168, 15.0753283168, 15.2790476745, 15.2790476745, 15.4029545552, 15.4029545552, 17.3711438748, 17.3711438748, 18.5979014680, 18.5979014680, 18.8774193717, 18.8774193717, 18.9611470128, 18.9611470128, 18.9644253203, 18.9644253203, 19.1609519341, 19.1609519341, 19.3350102888, 19.3350102888, 19.5466497232, 19.5466497232, 19.7368227910, 19.7368227910, 19.8620763120, 19.8620763120], 2, [1.0, 0.97362572888, 1.0, 0.991967887486, 1.0, 0.998770676083, 1.0, 0.999481714345, 1.0, 0.99821357708, 1.0, 0.9994556482, 1.0, 0.999969580463, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996117929889, 1.0, 0.992366030394, 1.0, 0.983250241924, 1.0, 0.995940237597, 1.0, 0.999912883795, 1.0, 0.99993950183, 1.0, 0.999925582769, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999811837704, 1.0, 0.99931573419, 1.0, 0.995287211418, 1.0, 0.991559749864, 1.0, 0.970621171619, 1.0, 0.979605608124, 1.0, 0.989884046372, 1.0, 0.994750435227, 1.0, 0.999852090939, 1.0, 0.999278260548, 1.0, 0.999830734327, 1.0, 1.0, 1.0, 0.999989420056, 1.0, 0.999968000512, 1.0, 0.999775305247, 1.0, 0.999991180039, 1.0, 0.993814211347, 1.0, 0.975960289284, 1.0, 0.994334315586, 1.0, 0.998790411994, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999507141485, 1.0, 1.0, 1.0, 0.997850632376, 1.0, 0.999630148408, 1.0, 0.990848388494, 1.0, 0.987997880277, 1.0, 0.992968091106, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-13.420, 48.908, 0.000), (-13.419, 47.185, 0.000), (-13.417, 45.463, 0.000), (-13.417, 44.880, 0.000), (-13.413, 44.297, 0.000), (-13.412, 44.091, 0.000), (-13.408, 43.884, 0.000), (-13.406, 43.808, 0.000), (-13.402, 43.732, 0.000), (-13.400, 43.693, 0.000), (-13.394, 43.655, 0.000), (-13.376, 43.541, 0.000), (-13.328, 43.436, 0.000), (-13.276, 43.323, 0.000), (-13.187, 43.235, 0.000), (-13.014, 43.064, 0.000), (-12.770, 43.055, 0.000), (-12.646, 43.051, 0.000), (-12.528, 43.090, 0.000), (-12.417, 43.127, 0.000), (-12.322, 43.193, 0.000), (-12.317, 43.196, 0.000), (-12.312, 43.199, 0.000), (-12.262, 43.233, 0.000), (-12.221, 43.277, 0.000), (-12.176, 43.323, 0.000), (-12.136, 43.373, 0.000), (-12.089, 43.432, 0.000), (-12.044, 43.492, 0.000), (-11.956, 43.610, 0.000), (-11.879, 43.736, 0.000), (-11.714, 44.004, 0.000), (-11.589, 44.293, 0.000), (-11.536, 44.417, 0.000), (-11.493, 44.544, 0.000), (-11.472, 44.604, 0.000), (-11.456, 44.666, 0.000), (-11.446, 44.702, 0.000), (-11.442, 44.739, 0.000), (-11.440, 44.757, 0.000), (-11.439, 44.774, 0.000), (-11.437, 44.830, 0.000), (-11.437, 44.887, 0.000), (-11.435, 45.145, 0.000), (-11.435, 45.403, 0.000), (-11.434, 46.756, 0.000), (-11.433, 48.108, 0.000), (-11.432, 50.482, 0.000), (-11.431, 52.856, 0.000), (-11.430, 52.988, 0.000), (-11.447, 53.119, 0.000), (-11.458, 53.199, 0.000), (-11.479, 53.276, 0.000), (-11.486, 53.300, 0.000), (-11.494, 53.323, 0.000), (-11.508, 53.358, 0.000), (-11.525, 53.391, 0.000), (-11.566, 53.471, 0.000), (-11.612, 53.548, 0.000), (-11.709, 53.710, 0.000), (-11.813, 53.867, 0.000), (-11.937, 54.056, 0.000), (-12.069, 54.240, 0.000), (-12.077, 54.251, 0.000), (-12.086, 54.261, 0.000), (-12.139, 54.322, 0.000), (-12.195, 54.382, 0.000), (-12.249, 54.439, 0.000), (-12.309, 54.490, 0.000), (-12.313, 54.493, 0.000), (-12.317, 54.496, 0.000), (-12.413, 54.574, 0.000), (-12.530, 54.614, 0.000), (-12.784, 54.701, 0.000), (-13.024, 54.580, 0.000), (-13.220, 54.481, 0.000), (-13.313, 54.283, 0.000), (-13.358, 54.187, 0.000), (-13.373, 54.083, 0.000), (-13.379, 54.041, 0.000), (-13.381, 53.999, 0.000), (-13.385, 53.911, 0.000), (-13.387, 53.822, 0.000), (-13.391, 53.564, 0.000), (-13.393, 53.306, 0.000), (-13.399, 52.482, 0.000), (-13.405, 51.658, 0.000), (-13.412, 50.431, 0.000), (-13.419, 49.204, 0.000), (-13.419, 49.056, 0.000), (-13.420, 48.908, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-13.420, 48.908, 0.000)), rs.coerce3dpoint((-13.419, 47.185, 0.000)), rs.coerce3dpoint((-13.417, 45.463, 0.000)), rs.coerce3dpoint((-13.417, 44.880, 0.000)), rs.coerce3dpoint((-13.413, 44.297, 0.000)), rs.coerce3dpoint((-13.412, 44.091, 0.000)), rs.coerce3dpoint((-13.408, 43.884, 0.000)), rs.coerce3dpoint((-13.406, 43.808, 0.000)), rs.coerce3dpoint((-13.402, 43.732, 0.000)), rs.coerce3dpoint((-13.400, 43.693, 0.000)), rs.coerce3dpoint((-13.394, 43.655, 0.000)), rs.coerce3dpoint((-13.376, 43.541, 0.000)), rs.coerce3dpoint((-13.328, 43.436, 0.000)), rs.coerce3dpoint((-13.276, 43.323, 0.000)), rs.coerce3dpoint((-13.187, 43.235, 0.000)), rs.coerce3dpoint((-13.014, 43.064, 0.000)), rs.coerce3dpoint((-12.770, 43.055, 0.000)), rs.coerce3dpoint((-12.646, 43.051, 0.000)), rs.coerce3dpoint((-12.528, 43.090, 0.000)), rs.coerce3dpoint((-12.417, 43.127, 0.000)), rs.coerce3dpoint((-12.322, 43.193, 0.000)), rs.coerce3dpoint((-12.317, 43.196, 0.000)), rs.coerce3dpoint((-12.312, 43.199, 0.000)), rs.coerce3dpoint((-12.262, 43.233, 0.000)), rs.coerce3dpoint((-12.221, 43.277, 0.000)), rs.coerce3dpoint((-12.176, 43.323, 0.000)), rs.coerce3dpoint((-12.136, 43.373, 0.000)), rs.coerce3dpoint((-12.089, 43.432, 0.000)), rs.coerce3dpoint((-12.044, 43.492, 0.000)), rs.coerce3dpoint((-11.956, 43.610, 0.000)), rs.coerce3dpoint((-11.879, 43.736, 0.000)), rs.coerce3dpoint((-11.714, 44.004, 0.000)), rs.coerce3dpoint((-11.589, 44.293, 0.000)), rs.coerce3dpoint((-11.536, 44.417, 0.000)), rs.coerce3dpoint((-11.493, 44.544, 0.000)), rs.coerce3dpoint((-11.472, 44.604, 0.000)), rs.coerce3dpoint((-11.456, 44.666, 0.000)), rs.coerce3dpoint((-11.446, 44.702, 0.000)), rs.coerce3dpoint((-11.442, 44.739, 0.000)), rs.coerce3dpoint((-11.440, 44.757, 0.000)), rs.coerce3dpoint((-11.439, 44.774, 0.000)), rs.coerce3dpoint((-11.437, 44.830, 0.000)), rs.coerce3dpoint((-11.437, 44.887, 0.000)), rs.coerce3dpoint((-11.435, 45.145, 0.000)), rs.coerce3dpoint((-11.435, 45.403, 0.000)), rs.coerce3dpoint((-11.434, 46.756, 0.000)), rs.coerce3dpoint((-11.433, 48.108, 0.000)), rs.coerce3dpoint((-11.432, 50.482, 0.000)), rs.coerce3dpoint((-11.431, 52.856, 0.000)), rs.coerce3dpoint((-11.430, 52.988, 0.000)), rs.coerce3dpoint((-11.447, 53.119, 0.000)), rs.coerce3dpoint((-11.458, 53.199, 0.000)), rs.coerce3dpoint((-11.479, 53.276, 0.000)), rs.coerce3dpoint((-11.486, 53.300, 0.000)), rs.coerce3dpoint((-11.494, 53.323, 0.000)), rs.coerce3dpoint((-11.508, 53.358, 0.000)), rs.coerce3dpoint((-11.525, 53.391, 0.000)), rs.coerce3dpoint((-11.566, 53.471, 0.000)), rs.coerce3dpoint((-11.612, 53.548, 0.000)), rs.coerce3dpoint((-11.709, 53.710, 0.000)), rs.coerce3dpoint((-11.813, 53.867, 0.000)), rs.coerce3dpoint((-11.937, 54.056, 0.000)), rs.coerce3dpoint((-12.069, 54.240, 0.000)), rs.coerce3dpoint((-12.077, 54.251, 0.000)), rs.coerce3dpoint((-12.086, 54.261, 0.000)), rs.coerce3dpoint((-12.139, 54.322, 0.000)), rs.coerce3dpoint((-12.195, 54.382, 0.000)), rs.coerce3dpoint((-12.249, 54.439, 0.000)), rs.coerce3dpoint((-12.309, 54.490, 0.000)), rs.coerce3dpoint((-12.313, 54.493, 0.000)), rs.coerce3dpoint((-12.317, 54.496, 0.000)), rs.coerce3dpoint((-12.413, 54.574, 0.000)), rs.coerce3dpoint((-12.530, 54.614, 0.000)), rs.coerce3dpoint((-12.784, 54.701, 0.000)), rs.coerce3dpoint((-13.024, 54.580, 0.000)), rs.coerce3dpoint((-13.220, 54.481, 0.000)), rs.coerce3dpoint((-13.313, 54.283, 0.000)), rs.coerce3dpoint((-13.358, 54.187, 0.000)), rs.coerce3dpoint((-13.373, 54.083, 0.000)), rs.coerce3dpoint((-13.379, 54.041, 0.000)), rs.coerce3dpoint((-13.381, 53.999, 0.000)), rs.coerce3dpoint((-13.385, 53.911, 0.000)), rs.coerce3dpoint((-13.387, 53.822, 0.000)), rs.coerce3dpoint((-13.391, 53.564, 0.000)), rs.coerce3dpoint((-13.393, 53.306, 0.000)), rs.coerce3dpoint((-13.399, 52.482, 0.000)), rs.coerce3dpoint((-13.405, 51.658, 0.000)), rs.coerce3dpoint((-13.412, 50.431, 0.000)), rs.coerce3dpoint((-13.419, 49.204, 0.000)), rs.coerce3dpoint((-13.419, 49.056, 0.000)), rs.coerce3dpoint((-13.420, 48.908, 0.000))], [0.0, 0.0, 3.4453713061, 3.4453713061, 4.61070107746, 4.61070107746, 5.02397812320, 5.02397812320, 5.17654614408, 5.17654614408, 5.25410774126, 5.25410774126, 5.48294388069, 5.48294388069, 5.73003035886, 5.73003035886, 6.19473255072, 6.19473255072, 6.44109291270, 6.44109291270, 6.67211895862, 6.67211895862, 6.68366949540, 6.68366949540, 6.80357897699, 6.80357897699, 6.93173283834, 6.93173283834, 7.08234057461, 7.08234057461, 7.37637468197, 7.37637468197, 8.00535119467, 8.00535119467, 8.27423388766, 8.27423388766, 8.40186060382, 8.40186060382, 8.47653816281, 8.47653816281, 8.51087199356, 8.51087199356, 8.62374446587, 8.62374446587, 9.14033977028, 9.14033977028, 11.8453706327, 11.8453706327, 16.5936108218, 16.5936108218, 16.8569969935, 16.8569969935, 17.0175229309, 17.0175229309, 17.0668221840, 17.0668221840, 17.1416463074, 17.1416463074, 17.3205032518, 17.3205032518, 17.6978545848, 17.6978545848, 18.1504598904, 18.1504598904, 18.1773146870, 18.1773146870, 18.3398913055, 18.3398913055, 18.4977097096, 18.4977097096, 18.5078205553, 18.5078205553, 18.7526832689, 18.7526832689, 19.2605233466, 19.2605233466, 19.6831909953, 19.6831909953, 19.8923346403, 19.8923346403, 19.9772541016, 19.9772541016, 20.1535925480, 20.1535925480, 20.6697964320, 20.6697964320, 22.3177249012, 22.3177249012, 24.7718948336, 24.7718948336, 25.0680195426, 25.0680195426], 2, [1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.999974080336, 1.0, 0.99979600081, 1.0, 0.998690138431, 1.0, 0.990275494033, 1.0, 0.983859241854, 1.0, 0.931654938318, 1.0, 0.98417719877, 1.0, 0.990136564763, 1.0, 1.0, 1.0, 0.994502652065, 1.0, 0.999023656856, 1.0, 0.99980399921, 1.0, 0.999032468285, 1.0, 0.997250963801, 1.0, 0.999285835107, 1.0, 0.999308319294, 1.0, 0.997295182971, 1.0, 0.999415350957, 1.0, 0.999838013121, 1.0, 0.999994220017, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997440000997, 1.0, 0.997510921616, 1.0, 0.999394663272, 1.0, 0.998433228349, 1.0, 0.999519615412, 1.0, 0.99972155877, 1.0, 0.999815696985, 1.0, 1.0, 1.0, 0.999779524307, 1.0, 0.998042537706, 1.0, 1.0, 1.0, 0.984700263223, 1.0, 0.921963939632, 1.0, 0.945608869735, 1.0, 0.988901749238, 1.0, 0.99873072604, 1.0, 0.999865529042, 1.0, 0.999986480091, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(15.476, 30.527, 0.000), (15.476, 30.675, 0.000), (15.475, 30.823, 0.000), (15.465, 32.542, 0.000), (15.455, 34.261, 0.000), (15.452, 34.743, 0.000), (15.446, 35.226, 0.000), (15.445, 35.384, 0.000), (15.440, 35.542, 0.000), (15.439, 35.599, 0.000), (15.435, 35.656, 0.000), (15.433, 35.679, 0.000), (15.429, 35.702, 0.000), (15.412, 35.824, 0.000), (15.353, 35.932, 0.000), (15.113, 36.379, 0.000), (14.624, 36.244, 0.000), (14.501, 36.210, 0.000), (14.398, 36.134, 0.000), (14.385, 36.125, 0.000), (14.373, 36.115, 0.000), (14.312, 36.065, 0.000), (14.258, 36.008, 0.000), (14.202, 35.949, 0.000), (14.150, 35.888, 0.000), (14.146, 35.883, 0.000), (14.142, 35.879, 0.000), (14.133, 35.869, 0.000), (14.125, 35.859, 0.000), (13.939, 35.600, 0.000), (13.769, 35.331, 0.000), (13.693, 35.212, 0.000), (13.624, 35.089, 0.000), (13.592, 35.033, 0.000), (13.565, 34.976, 0.000), (13.557, 34.959, 0.000), (13.550, 34.942, 0.000), (13.528, 34.879, 0.000), (13.516, 34.813, 0.000), (13.496, 34.711, 0.000), (13.491, 34.606, 0.000), (13.487, 34.541, 0.000), (13.487, 34.475, 0.000), (13.488, 32.198, 0.000), (13.489, 29.921, 0.000), (13.489, 28.946, 0.000), (13.490, 27.971, 0.000), (13.490, 27.548, 0.000), (13.491, 27.126, 0.000), (13.491, 26.825, 0.000), (13.493, 26.525, 0.000), (13.493, 26.463, 0.000), (13.495, 26.402, 0.000), (13.495, 26.397, 0.000), (13.495, 26.392, 0.000), (13.497, 26.347, 0.000), (13.507, 26.303, 0.000), (13.520, 26.250, 0.000), (13.538, 26.197, 0.000), (13.543, 26.180, 0.000), (13.549, 26.163, 0.000), (13.620, 25.956, 0.000), (13.715, 25.758, 0.000), (13.841, 25.495, 0.000), (14.001, 25.251, 0.000), (14.049, 25.179, 0.000), (14.100, 25.111, 0.000), (14.157, 25.034, 0.000), (14.218, 24.961, 0.000), (14.254, 24.918, 0.000), (14.294, 24.878, 0.000), (14.329, 24.845, 0.000), (14.368, 24.818, 0.000), (14.462, 24.751, 0.000), (14.571, 24.713, 0.000), (14.687, 24.672, 0.000), (14.810, 24.673, 0.000), (14.995, 24.675, 0.000), (15.150, 24.777, 0.000), (15.263, 24.853, 0.000), (15.337, 24.968, 0.000), (15.399, 25.066, 0.000), (15.429, 25.179, 0.000), (15.442, 25.225, 0.000), (15.450, 25.273, 0.000), (15.456, 25.315, 0.000), (15.458, 25.357, 0.000), (15.463, 25.441, 0.000), (15.464, 25.524, 0.000), (15.468, 25.752, 0.000), (15.469, 25.980, 0.000), (15.473, 26.619, 0.000), (15.474, 27.258, 0.000), (15.475, 28.892, 0.000), (15.476, 30.527, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((15.476, 30.527, 0.000)), rs.coerce3dpoint((15.476, 30.675, 0.000)), rs.coerce3dpoint((15.475, 30.823, 0.000)), rs.coerce3dpoint((15.465, 32.542, 0.000)), rs.coerce3dpoint((15.455, 34.261, 0.000)), rs.coerce3dpoint((15.452, 34.743, 0.000)), rs.coerce3dpoint((15.446, 35.226, 0.000)), rs.coerce3dpoint((15.445, 35.384, 0.000)), rs.coerce3dpoint((15.440, 35.542, 0.000)), rs.coerce3dpoint((15.439, 35.599, 0.000)), rs.coerce3dpoint((15.435, 35.656, 0.000)), rs.coerce3dpoint((15.433, 35.679, 0.000)), rs.coerce3dpoint((15.429, 35.702, 0.000)), rs.coerce3dpoint((15.412, 35.824, 0.000)), rs.coerce3dpoint((15.353, 35.932, 0.000)), rs.coerce3dpoint((15.113, 36.379, 0.000)), rs.coerce3dpoint((14.624, 36.244, 0.000)), rs.coerce3dpoint((14.501, 36.210, 0.000)), rs.coerce3dpoint((14.398, 36.134, 0.000)), rs.coerce3dpoint((14.385, 36.125, 0.000)), rs.coerce3dpoint((14.373, 36.115, 0.000)), rs.coerce3dpoint((14.312, 36.065, 0.000)), rs.coerce3dpoint((14.258, 36.008, 0.000)), rs.coerce3dpoint((14.202, 35.949, 0.000)), rs.coerce3dpoint((14.150, 35.888, 0.000)), rs.coerce3dpoint((14.146, 35.883, 0.000)), rs.coerce3dpoint((14.142, 35.879, 0.000)), rs.coerce3dpoint((14.133, 35.869, 0.000)), rs.coerce3dpoint((14.125, 35.859, 0.000)), rs.coerce3dpoint((13.939, 35.600, 0.000)), rs.coerce3dpoint((13.769, 35.331, 0.000)), rs.coerce3dpoint((13.693, 35.212, 0.000)), rs.coerce3dpoint((13.624, 35.089, 0.000)), rs.coerce3dpoint((13.592, 35.033, 0.000)), rs.coerce3dpoint((13.565, 34.976, 0.000)), rs.coerce3dpoint((13.557, 34.959, 0.000)), rs.coerce3dpoint((13.550, 34.942, 0.000)), rs.coerce3dpoint((13.528, 34.879, 0.000)), rs.coerce3dpoint((13.516, 34.813, 0.000)), rs.coerce3dpoint((13.496, 34.711, 0.000)), rs.coerce3dpoint((13.491, 34.606, 0.000)), rs.coerce3dpoint((13.487, 34.541, 0.000)), rs.coerce3dpoint((13.487, 34.475, 0.000)), rs.coerce3dpoint((13.488, 32.198, 0.000)), rs.coerce3dpoint((13.489, 29.921, 0.000)), rs.coerce3dpoint((13.489, 28.946, 0.000)), rs.coerce3dpoint((13.490, 27.971, 0.000)), rs.coerce3dpoint((13.490, 27.548, 0.000)), rs.coerce3dpoint((13.491, 27.126, 0.000)), rs.coerce3dpoint((13.491, 26.825, 0.000)), rs.coerce3dpoint((13.493, 26.525, 0.000)), rs.coerce3dpoint((13.493, 26.463, 0.000)), rs.coerce3dpoint((13.495, 26.402, 0.000)), rs.coerce3dpoint((13.495, 26.397, 0.000)), rs.coerce3dpoint((13.495, 26.392, 0.000)), rs.coerce3dpoint((13.497, 26.347, 0.000)), rs.coerce3dpoint((13.507, 26.303, 0.000)), rs.coerce3dpoint((13.520, 26.250, 0.000)), rs.coerce3dpoint((13.538, 26.197, 0.000)), rs.coerce3dpoint((13.543, 26.180, 0.000)), rs.coerce3dpoint((13.549, 26.163, 0.000)), rs.coerce3dpoint((13.620, 25.956, 0.000)), rs.coerce3dpoint((13.715, 25.758, 0.000)), rs.coerce3dpoint((13.841, 25.495, 0.000)), rs.coerce3dpoint((14.001, 25.251, 0.000)), rs.coerce3dpoint((14.049, 25.179, 0.000)), rs.coerce3dpoint((14.100, 25.111, 0.000)), rs.coerce3dpoint((14.157, 25.034, 0.000)), rs.coerce3dpoint((14.218, 24.961, 0.000)), rs.coerce3dpoint((14.254, 24.918, 0.000)), rs.coerce3dpoint((14.294, 24.878, 0.000)), rs.coerce3dpoint((14.329, 24.845, 0.000)), rs.coerce3dpoint((14.368, 24.818, 0.000)), rs.coerce3dpoint((14.462, 24.751, 0.000)), rs.coerce3dpoint((14.571, 24.713, 0.000)), rs.coerce3dpoint((14.687, 24.672, 0.000)), rs.coerce3dpoint((14.810, 24.673, 0.000)), rs.coerce3dpoint((14.995, 24.675, 0.000)), rs.coerce3dpoint((15.150, 24.777, 0.000)), rs.coerce3dpoint((15.263, 24.853, 0.000)), rs.coerce3dpoint((15.337, 24.968, 0.000)), rs.coerce3dpoint((15.399, 25.066, 0.000)), rs.coerce3dpoint((15.429, 25.179, 0.000)), rs.coerce3dpoint((15.442, 25.225, 0.000)), rs.coerce3dpoint((15.450, 25.273, 0.000)), rs.coerce3dpoint((15.456, 25.315, 0.000)), rs.coerce3dpoint((15.458, 25.357, 0.000)), rs.coerce3dpoint((15.463, 25.441, 0.000)), rs.coerce3dpoint((15.464, 25.524, 0.000)), rs.coerce3dpoint((15.468, 25.752, 0.000)), rs.coerce3dpoint((15.469, 25.980, 0.000)), rs.coerce3dpoint((15.473, 26.619, 0.000)), rs.coerce3dpoint((15.474, 27.258, 0.000)), rs.coerce3dpoint((15.475, 28.892, 0.000)), rs.coerce3dpoint((15.476, 30.527, 0.000))], [0.0, 0.0, 0.296124652807, 0.296124652807, 3.73441381485, 3.73441381485, 4.69927025895, 4.69927025895, 5.01539977508, 5.01539977508, 5.12950972782, 5.12950972782, 5.17568440671, 5.17568440671, 5.41990607849, 5.41990607849, 6.27650102210, 6.27650102210, 6.52910888982, 6.52910888982, 6.56020512696, 6.56020512696, 6.71779364321, 6.71779364321, 6.87958399138, 6.87958399138, 6.89071180339, 6.89071180339, 6.91757317342, 6.91757317342, 7.55468650845, 7.55468650845, 7.83652920166, 7.83652920166, 7.96418935133, 7.96418935133, 8.0012156115, 8.0012156115, 8.13454889090, 8.13454889090, 8.34277468565, 8.34277468565, 8.47441953438, 8.47441953438, 13.0282097087, 13.0282097087, 14.9787100022, 14.9787100022, 15.8237805704, 15.8237805704, 16.4239251798, 16.4239251798, 16.5477405199, 16.5477405199, 16.5571585982, 16.5571585982, 16.6468948547, 16.6468948547, 16.7576598603, 16.7576598603, 16.7938015329, 16.7938015329, 17.2310116077, 17.2310116077, 17.8140286907, 17.8140286907, 17.9857084880, 17.9857084880, 18.1758112495, 18.1758112495, 18.2890576079, 18.2890576079, 18.3843733408, 18.3843733408, 18.6138563309, 18.6138563309, 18.8572700235, 18.8572700235, 19.2172488354, 19.2172488354, 19.4863554838, 19.4863554838, 19.7171184426, 19.7171184426, 19.8139075007, 19.8139075007, 19.8987455202, 19.8987455202, 20.0658543234, 20.0658543234, 20.5209775640, 20.5209775640, 21.7990759297, 21.7990759297, 25.0680170120, 25.0680170120], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999996620006, 1.0, 0.99996128075, 1.0, 0.999646282569, 1.0, 0.999494507793, 1.0, 0.984561618872, 1.0, 0.782181492801, 1.0, 0.983105350419, 1.0, 0.999787842508, 1.0, 0.99786370432, 1.0, 0.999716820101, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999596801301, 1.0, 0.99968754882, 1.0, 0.999293369751, 1.0, 0.999192306316, 1.0, 0.997085772557, 1.0, 0.997744626227, 1.0, 0.999442375516, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.994355495303, 1.0, 0.999067315153, 1.0, 1.0, 1.0, 0.998284492746, 1.0, 0.997622330022, 1.0, 0.999591103615, 1.0, 0.999591103615, 1.0, 0.998679891918, 1.0, 0.996377054776, 1.0, 0.990468363575, 1.0, 0.984803845557, 1.0, 0.958927097196, 1.0, 0.978721443006, 1.0, 0.988363599127, 1.0, 0.998466596565, 1.0, 0.998543062108, 1.0, 0.999823295614, 1.0, 0.999978220237, 1.0, 0.999997580003, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.399, 31.510, 0.000), (0.393, 30.267, 0.000), (0.387, 29.023, 0.000), (0.381, 27.921, 0.000), (0.375, 26.818, 0.000), (0.372, 26.272, 0.000), (0.369, 25.726, 0.000), (0.370, 25.696, 0.000), (0.375, 25.667, 0.000), (0.386, 25.593, 0.000), (0.406, 25.520, 0.000), (0.470, 25.288, 0.000), (0.588, 25.078, 0.000), (0.608, 25.043, 0.000), (0.629, 25.009, 0.000), (0.697, 24.899, 0.000), (0.760, 24.787, 0.000), (0.777, 24.758, 0.000), (0.794, 24.728, 0.000), (0.857, 24.616, 0.000), (0.923, 24.505, 0.000), (0.967, 24.432, 0.000), (1.015, 24.360, 0.000), (1.088, 24.253, 0.000), (1.180, 24.162, 0.000), (1.243, 24.099, 0.000), (1.313, 24.043, 0.000), (1.388, 23.983, 0.000), (1.476, 23.945, 0.000), (1.575, 23.901, 0.000), (1.684, 23.896, 0.000), (1.802, 23.892, 0.000), (1.912, 23.934, 0.000), (2.002, 23.969, 0.000), (2.080, 24.027, 0.000), (2.114, 24.052, 0.000), (2.145, 24.081, 0.000), (2.211, 24.140, 0.000), (2.261, 24.214, 0.000), (2.342, 24.336, 0.000), (2.356, 24.483, 0.000), (2.358, 24.509, 0.000), (2.359, 24.535, 0.000), (2.365, 26.241, 0.000), (2.371, 27.948, 0.000), (2.377, 29.729, 0.000), (2.383, 31.510, 0.000), (2.383, 32.086, 0.000), (2.383, 32.661, 0.000), (2.390, 33.904, 0.000), (2.396, 35.148, 0.000), (2.401, 36.250, 0.000), (2.407, 37.353, 0.000), (2.410, 37.899, 0.000), (2.413, 38.445, 0.000), (2.413, 38.475, 0.000), (2.408, 38.504, 0.000), (2.396, 38.578, 0.000), (2.376, 38.651, 0.000), (2.312, 38.883, 0.000), (2.195, 39.093, 0.000), (2.175, 39.128, 0.000), (2.154, 39.162, 0.000), (2.086, 39.272, 0.000), (2.023, 39.384, 0.000), (2.006, 39.413, 0.000), (1.989, 39.443, 0.000), (1.926, 39.555, 0.000), (1.859, 39.666, 0.000), (1.815, 39.739, 0.000), (1.767, 39.811, 0.000), (1.695, 39.918, 0.000), (1.603, 40.009, 0.000), (1.540, 40.072, 0.000), (1.470, 40.128, 0.000), (1.395, 40.188, 0.000), (1.307, 40.226, 0.000), (1.207, 40.270, 0.000), (1.099, 40.275, 0.000), (0.981, 40.279, 0.000), (0.871, 40.237, 0.000), (0.780, 40.202, 0.000), (0.703, 40.144, 0.000), (0.669, 40.119, 0.000), (0.637, 40.090, 0.000), (0.571, 40.031, 0.000), (0.522, 39.957, 0.000), (0.440, 39.835, 0.000), (0.427, 39.688, 0.000), (0.424, 39.662, 0.000), (0.424, 39.636, 0.000), (0.418, 37.930, 0.000), (0.412, 36.224, 0.000), (0.406, 34.442, 0.000), (0.399, 32.661, 0.000), (0.399, 32.086, 0.000), (0.399, 31.510, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.399, 31.510, 0.000)), rs.coerce3dpoint((0.393, 30.267, 0.000)), rs.coerce3dpoint((0.387, 29.023, 0.000)), rs.coerce3dpoint((0.381, 27.921, 0.000)), rs.coerce3dpoint((0.375, 26.818, 0.000)), rs.coerce3dpoint((0.372, 26.272, 0.000)), rs.coerce3dpoint((0.369, 25.726, 0.000)), rs.coerce3dpoint((0.370, 25.696, 0.000)), rs.coerce3dpoint((0.375, 25.667, 0.000)), rs.coerce3dpoint((0.386, 25.593, 0.000)), rs.coerce3dpoint((0.406, 25.520, 0.000)), rs.coerce3dpoint((0.470, 25.288, 0.000)), rs.coerce3dpoint((0.588, 25.078, 0.000)), rs.coerce3dpoint((0.608, 25.043, 0.000)), rs.coerce3dpoint((0.629, 25.009, 0.000)), rs.coerce3dpoint((0.697, 24.899, 0.000)), rs.coerce3dpoint((0.760, 24.787, 0.000)), rs.coerce3dpoint((0.777, 24.758, 0.000)), rs.coerce3dpoint((0.794, 24.728, 0.000)), rs.coerce3dpoint((0.857, 24.616, 0.000)), rs.coerce3dpoint((0.923, 24.505, 0.000)), rs.coerce3dpoint((0.967, 24.432, 0.000)), rs.coerce3dpoint((1.015, 24.360, 0.000)), rs.coerce3dpoint((1.088, 24.253, 0.000)), rs.coerce3dpoint((1.180, 24.162, 0.000)), rs.coerce3dpoint((1.243, 24.099, 0.000)), rs.coerce3dpoint((1.313, 24.043, 0.000)), rs.coerce3dpoint((1.388, 23.983, 0.000)), rs.coerce3dpoint((1.476, 23.945, 0.000)), rs.coerce3dpoint((1.575, 23.901, 0.000)), rs.coerce3dpoint((1.684, 23.896, 0.000)), rs.coerce3dpoint((1.802, 23.892, 0.000)), rs.coerce3dpoint((1.912, 23.934, 0.000)), rs.coerce3dpoint((2.002, 23.969, 0.000)), rs.coerce3dpoint((2.080, 24.027, 0.000)), rs.coerce3dpoint((2.114, 24.052, 0.000)), rs.coerce3dpoint((2.145, 24.081, 0.000)), rs.coerce3dpoint((2.211, 24.140, 0.000)), rs.coerce3dpoint((2.261, 24.214, 0.000)), rs.coerce3dpoint((2.342, 24.336, 0.000)), rs.coerce3dpoint((2.356, 24.483, 0.000)), rs.coerce3dpoint((2.358, 24.509, 0.000)), rs.coerce3dpoint((2.359, 24.535, 0.000)), rs.coerce3dpoint((2.365, 26.241, 0.000)), rs.coerce3dpoint((2.371, 27.948, 0.000)), rs.coerce3dpoint((2.377, 29.729, 0.000)), rs.coerce3dpoint((2.383, 31.510, 0.000)), rs.coerce3dpoint((2.383, 32.086, 0.000)), rs.coerce3dpoint((2.383, 32.661, 0.000)), rs.coerce3dpoint((2.390, 33.904, 0.000)), rs.coerce3dpoint((2.396, 35.148, 0.000)), rs.coerce3dpoint((2.401, 36.250, 0.000)), rs.coerce3dpoint((2.407, 37.353, 0.000)), rs.coerce3dpoint((2.410, 37.899, 0.000)), rs.coerce3dpoint((2.413, 38.445, 0.000)), rs.coerce3dpoint((2.413, 38.475, 0.000)), rs.coerce3dpoint((2.408, 38.504, 0.000)), rs.coerce3dpoint((2.396, 38.578, 0.000)), rs.coerce3dpoint((2.376, 38.651, 0.000)), rs.coerce3dpoint((2.312, 38.883, 0.000)), rs.coerce3dpoint((2.195, 39.093, 0.000)), rs.coerce3dpoint((2.175, 39.128, 0.000)), rs.coerce3dpoint((2.154, 39.162, 0.000)), rs.coerce3dpoint((2.086, 39.272, 0.000)), rs.coerce3dpoint((2.023, 39.384, 0.000)), rs.coerce3dpoint((2.006, 39.413, 0.000)), rs.coerce3dpoint((1.989, 39.443, 0.000)), rs.coerce3dpoint((1.926, 39.555, 0.000)), rs.coerce3dpoint((1.859, 39.666, 0.000)), rs.coerce3dpoint((1.815, 39.739, 0.000)), rs.coerce3dpoint((1.767, 39.811, 0.000)), rs.coerce3dpoint((1.695, 39.918, 0.000)), rs.coerce3dpoint((1.603, 40.009, 0.000)), rs.coerce3dpoint((1.540, 40.072, 0.000)), rs.coerce3dpoint((1.470, 40.128, 0.000)), rs.coerce3dpoint((1.395, 40.188, 0.000)), rs.coerce3dpoint((1.307, 40.226, 0.000)), rs.coerce3dpoint((1.207, 40.270, 0.000)), rs.coerce3dpoint((1.099, 40.275, 0.000)), rs.coerce3dpoint((0.981, 40.279, 0.000)), rs.coerce3dpoint((0.871, 40.237, 0.000)), rs.coerce3dpoint((0.780, 40.202, 0.000)), rs.coerce3dpoint((0.703, 40.144, 0.000)), rs.coerce3dpoint((0.669, 40.119, 0.000)), rs.coerce3dpoint((0.637, 40.090, 0.000)), rs.coerce3dpoint((0.571, 40.031, 0.000)), rs.coerce3dpoint((0.522, 39.957, 0.000)), rs.coerce3dpoint((0.440, 39.835, 0.000)), rs.coerce3dpoint((0.427, 39.688, 0.000)), rs.coerce3dpoint((0.424, 39.662, 0.000)), rs.coerce3dpoint((0.424, 39.636, 0.000)), rs.coerce3dpoint((0.418, 37.930, 0.000)), rs.coerce3dpoint((0.412, 36.224, 0.000)), rs.coerce3dpoint((0.406, 34.442, 0.000)), rs.coerce3dpoint((0.399, 32.661, 0.000)), rs.coerce3dpoint((0.399, 32.086, 0.000)), rs.coerce3dpoint((0.399, 31.510, 0.000))], [0.0, 0.0, 2.48716242471, 2.48716242471, 4.69238107004, 4.69238107004, 5.78437799623, 5.78437799623, 5.84366489471, 5.84366489471, 5.99426937863, 5.99426937863, 6.47349518501, 6.47349518501, 6.55386376578, 6.55386376578, 6.81115208559, 6.81115208559, 6.87916041228, 6.87916041228, 7.13695758325, 7.13695758325, 7.30882244828, 7.30882244828, 7.56715350121, 7.56715350121, 7.74531348022, 7.74531348022, 7.93647636512, 7.93647636512, 8.15110372690, 8.15110372690, 8.38375472032, 8.38375472032, 8.57643299820, 8.57643299820, 8.66134464882, 8.66134464882, 8.83788742422, 8.83788742422, 9.12601340880, 9.12601340880, 9.17857342272, 9.17857342272, 12.5907353046, 12.5907353046, 16.1536364325, 16.1536364325, 17.3038964325, 17.3038964325, 19.7910588062, 19.7910588062, 21.9962774515, 21.9962774515, 23.0882743777, 23.0882743777, 23.1475612762, 23.1475612762, 23.2981657601, 23.2981657601, 23.7773915665, 23.7773915665, 23.8577464405, 23.8577464405, 24.1150433647, 24.1150433647, 24.1830566399, 24.1830566399, 24.4408538109, 24.4408538109, 24.6127102312, 24.6127102312, 24.8710425997, 24.8710425997, 25.0492100569, 25.0492100569, 25.2403729418, 25.2403729418, 25.4549882281, 25.4549882281, 25.6876475094, 25.6876475094, 25.8803306423, 25.8803306423, 25.9652359366, 25.9652359366, 26.1417787120, 26.1417787120, 26.4299046966, 26.4299046966, 26.4824647105, 26.4824647105, 29.8946265923, 29.8946265923, 33.4575276858, 33.4575276858, 34.6077876858, 34.6077876858], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(3.379, 26.330, 0.000), (3.373, 25.086, 0.000), (3.366, 23.843, 0.000), (3.361, 22.740, 0.000), (3.355, 21.638, 0.000), (3.352, 21.092, 0.000), (3.349, 20.546, 0.000), (3.349, 20.515, 0.000), (3.354, 20.485, 0.000), (3.365, 20.407, 0.000), (3.384, 20.330, 0.000), (3.413, 20.209, 0.000), (3.455, 20.092, 0.000), (3.480, 20.023, 0.000), (3.513, 19.958, 0.000), (3.516, 19.952, 0.000), (3.519, 19.946, 0.000), (3.675, 19.697, 0.000), (3.835, 19.452, 0.000), (3.925, 19.314, 0.000), (4.019, 19.179, 0.000), (4.075, 19.099, 0.000), (4.135, 19.023, 0.000), (4.174, 18.974, 0.000), (4.218, 18.929, 0.000), (4.253, 18.893, 0.000), (4.292, 18.863, 0.000), (4.368, 18.803, 0.000), (4.456, 18.764, 0.000), (4.555, 18.721, 0.000), (4.663, 18.716, 0.000), (4.781, 18.711, 0.000), (4.891, 18.754, 0.000), (4.982, 18.788, 0.000), (5.059, 18.847, 0.000), (5.094, 18.872, 0.000), (5.125, 18.901, 0.000), (5.191, 18.960, 0.000), (5.240, 19.034, 0.000), (5.322, 19.156, 0.000), (5.335, 19.303, 0.000), (5.338, 19.329, 0.000), (5.338, 19.355, 0.000), (5.344, 21.061, 0.000), (5.351, 22.767, 0.000), (5.357, 24.549, 0.000), (5.363, 26.330, 0.000), (5.363, 26.905, 0.000), (5.363, 27.480, 0.000), (5.369, 28.724, 0.000), (5.375, 29.967, 0.000), (5.381, 31.070, 0.000), (5.387, 32.173, 0.000), (5.390, 32.719, 0.000), (5.393, 33.265, 0.000), (5.392, 33.294, 0.000), (5.388, 33.324, 0.000), (5.376, 33.398, 0.000), (5.356, 33.471, 0.000), (5.292, 33.703, 0.000), (5.174, 33.913, 0.000), (5.155, 33.948, 0.000), (5.133, 33.982, 0.000), (5.065, 34.091, 0.000), (5.002, 34.203, 0.000), (4.985, 34.233, 0.000), (4.968, 34.262, 0.000), (4.905, 34.375, 0.000), (4.839, 34.485, 0.000), (4.795, 34.559, 0.000), (4.747, 34.631, 0.000), (4.674, 34.738, 0.000), (4.582, 34.829, 0.000), (4.519, 34.892, 0.000), (4.449, 34.947, 0.000), (4.374, 35.007, 0.000), (4.286, 35.046, 0.000), (4.187, 35.089, 0.000), (4.078, 35.094, 0.000), (3.960, 35.099, 0.000), (3.850, 35.057, 0.000), (3.760, 35.022, 0.000), (3.682, 34.964, 0.000), (3.648, 34.938, 0.000), (3.617, 34.910, 0.000), (3.551, 34.850, 0.000), (3.501, 34.777, 0.000), (3.420, 34.654, 0.000), (3.406, 34.508, 0.000), (3.404, 34.482, 0.000), (3.403, 34.455, 0.000), (3.397, 32.749, 0.000), (3.391, 31.043, 0.000), (3.385, 29.262, 0.000), (3.379, 27.480, 0.000), (3.379, 26.905, 0.000), (3.379, 26.330, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((3.379, 26.330, 0.000)), rs.coerce3dpoint((3.373, 25.086, 0.000)), rs.coerce3dpoint((3.366, 23.843, 0.000)), rs.coerce3dpoint((3.361, 22.740, 0.000)), rs.coerce3dpoint((3.355, 21.638, 0.000)), rs.coerce3dpoint((3.352, 21.092, 0.000)), rs.coerce3dpoint((3.349, 20.546, 0.000)), rs.coerce3dpoint((3.349, 20.515, 0.000)), rs.coerce3dpoint((3.354, 20.485, 0.000)), rs.coerce3dpoint((3.365, 20.407, 0.000)), rs.coerce3dpoint((3.384, 20.330, 0.000)), rs.coerce3dpoint((3.413, 20.209, 0.000)), rs.coerce3dpoint((3.455, 20.092, 0.000)), rs.coerce3dpoint((3.480, 20.023, 0.000)), rs.coerce3dpoint((3.513, 19.958, 0.000)), rs.coerce3dpoint((3.516, 19.952, 0.000)), rs.coerce3dpoint((3.519, 19.946, 0.000)), rs.coerce3dpoint((3.675, 19.697, 0.000)), rs.coerce3dpoint((3.835, 19.452, 0.000)), rs.coerce3dpoint((3.925, 19.314, 0.000)), rs.coerce3dpoint((4.019, 19.179, 0.000)), rs.coerce3dpoint((4.075, 19.099, 0.000)), rs.coerce3dpoint((4.135, 19.023, 0.000)), rs.coerce3dpoint((4.174, 18.974, 0.000)), rs.coerce3dpoint((4.218, 18.929, 0.000)), rs.coerce3dpoint((4.253, 18.893, 0.000)), rs.coerce3dpoint((4.292, 18.863, 0.000)), rs.coerce3dpoint((4.368, 18.803, 0.000)), rs.coerce3dpoint((4.456, 18.764, 0.000)), rs.coerce3dpoint((4.555, 18.721, 0.000)), rs.coerce3dpoint((4.663, 18.716, 0.000)), rs.coerce3dpoint((4.781, 18.711, 0.000)), rs.coerce3dpoint((4.891, 18.754, 0.000)), rs.coerce3dpoint((4.982, 18.788, 0.000)), rs.coerce3dpoint((5.059, 18.847, 0.000)), rs.coerce3dpoint((5.094, 18.872, 0.000)), rs.coerce3dpoint((5.125, 18.901, 0.000)), rs.coerce3dpoint((5.191, 18.960, 0.000)), rs.coerce3dpoint((5.240, 19.034, 0.000)), rs.coerce3dpoint((5.322, 19.156, 0.000)), rs.coerce3dpoint((5.335, 19.303, 0.000)), rs.coerce3dpoint((5.338, 19.329, 0.000)), rs.coerce3dpoint((5.338, 19.355, 0.000)), rs.coerce3dpoint((5.344, 21.061, 0.000)), rs.coerce3dpoint((5.351, 22.767, 0.000)), rs.coerce3dpoint((5.357, 24.549, 0.000)), rs.coerce3dpoint((5.363, 26.330, 0.000)), rs.coerce3dpoint((5.363, 26.905, 0.000)), rs.coerce3dpoint((5.363, 27.480, 0.000)), rs.coerce3dpoint((5.369, 28.724, 0.000)), rs.coerce3dpoint((5.375, 29.967, 0.000)), rs.coerce3dpoint((5.381, 31.070, 0.000)), rs.coerce3dpoint((5.387, 32.173, 0.000)), rs.coerce3dpoint((5.390, 32.719, 0.000)), rs.coerce3dpoint((5.393, 33.265, 0.000)), rs.coerce3dpoint((5.392, 33.294, 0.000)), rs.coerce3dpoint((5.388, 33.324, 0.000)), rs.coerce3dpoint((5.376, 33.398, 0.000)), rs.coerce3dpoint((5.356, 33.471, 0.000)), rs.coerce3dpoint((5.292, 33.703, 0.000)), rs.coerce3dpoint((5.174, 33.913, 0.000)), rs.coerce3dpoint((5.155, 33.948, 0.000)), rs.coerce3dpoint((5.133, 33.982, 0.000)), rs.coerce3dpoint((5.065, 34.091, 0.000)), rs.coerce3dpoint((5.002, 34.203, 0.000)), rs.coerce3dpoint((4.985, 34.233, 0.000)), rs.coerce3dpoint((4.968, 34.262, 0.000)), rs.coerce3dpoint((4.905, 34.375, 0.000)), rs.coerce3dpoint((4.839, 34.485, 0.000)), rs.coerce3dpoint((4.795, 34.559, 0.000)), rs.coerce3dpoint((4.747, 34.631, 0.000)), rs.coerce3dpoint((4.674, 34.738, 0.000)), rs.coerce3dpoint((4.582, 34.829, 0.000)), rs.coerce3dpoint((4.519, 34.892, 0.000)), rs.coerce3dpoint((4.449, 34.947, 0.000)), rs.coerce3dpoint((4.374, 35.007, 0.000)), rs.coerce3dpoint((4.286, 35.046, 0.000)), rs.coerce3dpoint((4.187, 35.089, 0.000)), rs.coerce3dpoint((4.078, 35.094, 0.000)), rs.coerce3dpoint((3.960, 35.099, 0.000)), rs.coerce3dpoint((3.850, 35.057, 0.000)), rs.coerce3dpoint((3.760, 35.022, 0.000)), rs.coerce3dpoint((3.682, 34.964, 0.000)), rs.coerce3dpoint((3.648, 34.938, 0.000)), rs.coerce3dpoint((3.617, 34.910, 0.000)), rs.coerce3dpoint((3.551, 34.850, 0.000)), rs.coerce3dpoint((3.501, 34.777, 0.000)), rs.coerce3dpoint((3.420, 34.654, 0.000)), rs.coerce3dpoint((3.406, 34.508, 0.000)), rs.coerce3dpoint((3.404, 34.482, 0.000)), rs.coerce3dpoint((3.403, 34.455, 0.000)), rs.coerce3dpoint((3.397, 32.749, 0.000)), rs.coerce3dpoint((3.391, 31.043, 0.000)), rs.coerce3dpoint((3.385, 29.262, 0.000)), rs.coerce3dpoint((3.379, 27.480, 0.000)), rs.coerce3dpoint((3.379, 26.905, 0.000)), rs.coerce3dpoint((3.379, 26.330, 0.000))], [0.0, 0.0, 2.48716237367, 2.48716237367, 4.69238101900, 4.69238101900, 5.78437794518, 5.78437794518, 5.84499411842, 5.84499411842, 6.00299260671, 6.00299260671, 6.25183025328, 6.25183025328, 6.39736953434, 6.39736953434, 6.41147427467, 6.41147427467, 6.99791881810, 6.99791881810, 7.32706946942, 7.32706946942, 7.52103396262, 7.52103396262, 7.64726367141, 7.64726367141, 7.74645918967, 7.74645918967, 7.93762207458, 7.93762207458, 8.15223964226, 8.15223964226, 8.38489063568, 8.38489063568, 8.57757769237, 8.57757769237, 8.66248934299, 8.66248934299, 8.83902555057, 8.83902555057, 9.12715489667, 9.12715489667, 9.17971433857, 9.17971433857, 12.5918762563, 12.5918762563, 16.1547773497, 16.1547773497, 17.3050373497, 17.3050373497, 19.7921997234, 19.7921997234, 21.9974183687, 21.9974183687, 23.0894153507, 23.0894153507, 23.1487022491, 23.1487022491, 23.2993067331, 23.2993067331, 23.7785363449, 23.7785363449, 23.8588912189, 23.8588912189, 24.1161881432, 24.1161881432, 24.1842014183, 24.1842014183, 24.4419985893, 24.4419985893, 24.6138496520, 24.6138496520, 24.8721884141, 24.8721884141, 25.0503558713, 25.0503558713, 25.2415101732, 25.2415101732, 25.4561352537, 25.4561352537, 25.6887846014, 25.6887846014, 25.8814765129, 25.8814765129, 25.9663818072, 25.9663818072, 26.1429180148, 26.1429180148, 26.4310473609, 26.4310473609, 26.4836068028, 26.4836068028, 29.8957687205, 29.8957687205, 33.4586698139, 33.4586698139, 34.6089298139, 34.6089298139], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99771772736, 1.0, 0.998905479316, 1.0, 0.998319413373, 1.0, 0.998079845269, 1.0, 1.0, 1.0, 0.999951981153, 1.0, 0.999855510439, 1.0, 0.999550101227, 1.0, 0.9985752357, 1.0, 0.99799223758, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(6.388, 14.676, 0.000), (6.374, 11.309, 0.000), (6.359, 7.941, 0.000), (6.359, 7.842, 0.000), (6.358, 7.742, 0.000), (6.359, 7.712, 0.000), (6.363, 7.683, 0.000), (6.375, 7.608, 0.000), (6.395, 7.536, 0.000), (6.459, 7.303, 0.000), (6.577, 7.093, 0.000), (6.596, 7.058, 0.000), (6.618, 7.024, 0.000), (6.685, 6.915, 0.000), (6.749, 6.803, 0.000), (6.766, 6.773, 0.000), (6.782, 6.744, 0.000), (6.846, 6.632, 0.000), (6.912, 6.521, 0.000), (6.956, 6.447, 0.000), (7.004, 6.376, 0.000), (7.077, 6.269, 0.000), (7.169, 6.177, 0.000), (7.232, 6.114, 0.000), (7.302, 6.059, 0.000), (7.377, 5.999, 0.000), (7.465, 5.960, 0.000), (7.564, 5.917, 0.000), (7.673, 5.912, 0.000), (7.791, 5.907, 0.000), (7.901, 5.950, 0.000), (7.991, 5.985, 0.000), (8.069, 6.043, 0.000), (8.103, 6.068, 0.000), (8.134, 6.097, 0.000), (8.200, 6.156, 0.000), (8.250, 6.230, 0.000), (8.331, 6.352, 0.000), (8.344, 6.499, 0.000), (8.347, 6.525, 0.000), (8.347, 6.551, 0.000), (8.348, 6.714, 0.000), (8.349, 6.876, 0.000), (8.355, 9.596, 0.000), (8.361, 12.316, 0.000), (8.363, 16.367, 0.000), (8.366, 20.418, 0.000), (8.366, 23.381, 0.000), (8.366, 26.344, 0.000), (8.358, 29.130, 0.000), (8.351, 31.917, 0.000), (8.350, 32.231, 0.000), (8.348, 32.545, 0.000), (8.345, 33.507, 0.000), (8.342, 34.470, 0.000), (8.341, 34.568, 0.000), (8.308, 34.661, 0.000), (8.274, 34.759, 0.000), (8.208, 34.840, 0.000), (8.172, 34.885, 0.000), (8.129, 34.924, 0.000), (8.056, 34.991, 0.000), (7.970, 35.037, 0.000), (7.880, 35.085, 0.000), (7.780, 35.102, 0.000), (7.644, 35.124, 0.000), (7.513, 35.081, 0.000), (7.422, 35.050, 0.000), (7.343, 34.996, 0.000), (7.319, 34.980, 0.000), (7.296, 34.962, 0.000), (7.169, 34.862, 0.000), (7.066, 34.737, 0.000), (7.030, 34.692, 0.000), (6.998, 34.645, 0.000), (6.927, 34.538, 0.000), (6.862, 34.426, 0.000), (6.819, 34.352, 0.000), (6.777, 34.277, 0.000), (6.714, 34.165, 0.000), (6.648, 34.054, 0.000), (6.630, 34.025, 0.000), (6.612, 33.996, 0.000), (6.522, 33.851, 0.000), (6.459, 33.692, 0.000), (6.407, 33.562, 0.000), (6.375, 33.427, 0.000), (6.361, 33.371, 0.000), (6.354, 33.313, 0.000), (6.353, 33.296, 0.000), (6.352, 33.279, 0.000), (6.353, 33.154, 0.000), (6.354, 33.028, 0.000), (6.358, 31.734, 0.000), (6.363, 30.439, 0.000), (6.370, 26.555, 0.000), (6.378, 22.672, 0.000), (6.383, 18.674, 0.000), (6.388, 14.676, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((6.388, 14.676, 0.000)), rs.coerce3dpoint((6.374, 11.309, 0.000)), rs.coerce3dpoint((6.359, 7.941, 0.000)), rs.coerce3dpoint((6.359, 7.842, 0.000)), rs.coerce3dpoint((6.358, 7.742, 0.000)), rs.coerce3dpoint((6.359, 7.712, 0.000)), rs.coerce3dpoint((6.363, 7.683, 0.000)), rs.coerce3dpoint((6.375, 7.608, 0.000)), rs.coerce3dpoint((6.395, 7.536, 0.000)), rs.coerce3dpoint((6.459, 7.303, 0.000)), rs.coerce3dpoint((6.577, 7.093, 0.000)), rs.coerce3dpoint((6.596, 7.058, 0.000)), rs.coerce3dpoint((6.618, 7.024, 0.000)), rs.coerce3dpoint((6.685, 6.915, 0.000)), rs.coerce3dpoint((6.749, 6.803, 0.000)), rs.coerce3dpoint((6.766, 6.773, 0.000)), rs.coerce3dpoint((6.782, 6.744, 0.000)), rs.coerce3dpoint((6.846, 6.632, 0.000)), rs.coerce3dpoint((6.912, 6.521, 0.000)), rs.coerce3dpoint((6.956, 6.447, 0.000)), rs.coerce3dpoint((7.004, 6.376, 0.000)), rs.coerce3dpoint((7.077, 6.269, 0.000)), rs.coerce3dpoint((7.169, 6.177, 0.000)), rs.coerce3dpoint((7.232, 6.114, 0.000)), rs.coerce3dpoint((7.302, 6.059, 0.000)), rs.coerce3dpoint((7.377, 5.999, 0.000)), rs.coerce3dpoint((7.465, 5.960, 0.000)), rs.coerce3dpoint((7.564, 5.917, 0.000)), rs.coerce3dpoint((7.673, 5.912, 0.000)), rs.coerce3dpoint((7.791, 5.907, 0.000)), rs.coerce3dpoint((7.901, 5.950, 0.000)), rs.coerce3dpoint((7.991, 5.985, 0.000)), rs.coerce3dpoint((8.069, 6.043, 0.000)), rs.coerce3dpoint((8.103, 6.068, 0.000)), rs.coerce3dpoint((8.134, 6.097, 0.000)), rs.coerce3dpoint((8.200, 6.156, 0.000)), rs.coerce3dpoint((8.250, 6.230, 0.000)), rs.coerce3dpoint((8.331, 6.352, 0.000)), rs.coerce3dpoint((8.344, 6.499, 0.000)), rs.coerce3dpoint((8.347, 6.525, 0.000)), rs.coerce3dpoint((8.347, 6.551, 0.000)), rs.coerce3dpoint((8.348, 6.714, 0.000)), rs.coerce3dpoint((8.349, 6.876, 0.000)), rs.coerce3dpoint((8.355, 9.596, 0.000)), rs.coerce3dpoint((8.361, 12.316, 0.000)), rs.coerce3dpoint((8.363, 16.367, 0.000)), rs.coerce3dpoint((8.366, 20.418, 0.000)), rs.coerce3dpoint((8.366, 23.381, 0.000)), rs.coerce3dpoint((8.366, 26.344, 0.000)), rs.coerce3dpoint((8.358, 29.130, 0.000)), rs.coerce3dpoint((8.351, 31.917, 0.000)), rs.coerce3dpoint((8.350, 32.231, 0.000)), rs.coerce3dpoint((8.348, 32.545, 0.000)), rs.coerce3dpoint((8.345, 33.507, 0.000)), rs.coerce3dpoint((8.342, 34.470, 0.000)), rs.coerce3dpoint((8.341, 34.568, 0.000)), rs.coerce3dpoint((8.308, 34.661, 0.000)), rs.coerce3dpoint((8.274, 34.759, 0.000)), rs.coerce3dpoint((8.208, 34.840, 0.000)), rs.coerce3dpoint((8.172, 34.885, 0.000)), rs.coerce3dpoint((8.129, 34.924, 0.000)), rs.coerce3dpoint((8.056, 34.991, 0.000)), rs.coerce3dpoint((7.970, 35.037, 0.000)), rs.coerce3dpoint((7.880, 35.085, 0.000)), rs.coerce3dpoint((7.780, 35.102, 0.000)), rs.coerce3dpoint((7.644, 35.124, 0.000)), rs.coerce3dpoint((7.513, 35.081, 0.000)), rs.coerce3dpoint((7.422, 35.050, 0.000)), rs.coerce3dpoint((7.343, 34.996, 0.000)), rs.coerce3dpoint((7.319, 34.980, 0.000)), rs.coerce3dpoint((7.296, 34.962, 0.000)), rs.coerce3dpoint((7.169, 34.862, 0.000)), rs.coerce3dpoint((7.066, 34.737, 0.000)), rs.coerce3dpoint((7.030, 34.692, 0.000)), rs.coerce3dpoint((6.998, 34.645, 0.000)), rs.coerce3dpoint((6.927, 34.538, 0.000)), rs.coerce3dpoint((6.862, 34.426, 0.000)), rs.coerce3dpoint((6.819, 34.352, 0.000)), rs.coerce3dpoint((6.777, 34.277, 0.000)), rs.coerce3dpoint((6.714, 34.165, 0.000)), rs.coerce3dpoint((6.648, 34.054, 0.000)), rs.coerce3dpoint((6.630, 34.025, 0.000)), rs.coerce3dpoint((6.612, 33.996, 0.000)), rs.coerce3dpoint((6.522, 33.851, 0.000)), rs.coerce3dpoint((6.459, 33.692, 0.000)), rs.coerce3dpoint((6.407, 33.562, 0.000)), rs.coerce3dpoint((6.375, 33.427, 0.000)), rs.coerce3dpoint((6.361, 33.371, 0.000)), rs.coerce3dpoint((6.354, 33.313, 0.000)), rs.coerce3dpoint((6.353, 33.296, 0.000)), rs.coerce3dpoint((6.352, 33.279, 0.000)), rs.coerce3dpoint((6.353, 33.154, 0.000)), rs.coerce3dpoint((6.354, 33.028, 0.000)), rs.coerce3dpoint((6.358, 31.734, 0.000)), rs.coerce3dpoint((6.363, 30.439, 0.000)), rs.coerce3dpoint((6.370, 26.555, 0.000)), rs.coerce3dpoint((6.378, 22.672, 0.000)), rs.coerce3dpoint((6.383, 18.674, 0.000)), rs.coerce3dpoint((6.388, 14.676, 0.000))], [0.0, 0.0, 6.73504127777, 6.73504127777, 6.93462544673, 6.93462544673, 6.99391234522, 6.99391234522, 7.14451682913, 7.14451682913, 7.62374263551, 7.62374263551, 7.70411121629, 7.70411121629, 7.96139953610, 7.96139953610, 8.02942150093, 8.02942150093, 8.28721002279, 8.28721002279, 8.45906953048, 8.45906953048, 8.71740058340, 8.71740058340, 8.89556804067, 8.89556804067, 9.08672234256, 9.08672234256, 9.30134970434, 9.30134970434, 9.53400069776, 9.53400069776, 9.72668775446, 9.72668775446, 9.81159940507, 9.81159940507, 9.98813561266, 9.98813561266, 10.2762649588, 10.2762649588, 10.3288244006, 10.3288244006, 10.6537862624, 10.6537862624, 16.0937305779, 16.0937305779, 24.1960519820, 24.1960519820, 30.1221919976, 30.1221919976, 35.6943237509, 35.6943237509, 36.3230276704, 36.3230276704, 38.2475093334, 38.2475093334, 38.4426758787, 38.4426758787, 38.6488704928, 38.6488704928, 38.7647214972, 38.7647214972, 38.9599857526, 38.9599857526, 39.1611159113, 39.1611159113, 39.4321413299, 39.4321413299, 39.6227802065, 39.6227802065, 39.6807517483, 39.6807517483, 40.0028859650, 40.0028859650, 40.1172558344, 40.1172558344, 40.3747119046, 40.3747119046, 40.5469043695, 40.5469043695, 40.8042724781, 40.8042724781, 40.8722145804, 40.8722145804, 41.2137343985, 41.2137343985, 41.4921020166, 41.4921020166, 41.6072225747, 41.6072225747, 41.6417098277, 41.6417098277, 41.8924940776, 41.8924940776, 44.4817486267, 44.4817486267, 52.2489938339, 52.2489938339, 60.2443803657, 60.2443803657], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995958184676, 1.0, 0.997250963801, 1.0, 0.998272772946, 1.0, 0.998433228349, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-10.398, 16.075, 0.000), (-10.404, 15.524, 0.000), (-10.407, 14.973, 0.000), (-10.416, 13.519, 0.000), (-10.425, 12.064, 0.000), (-10.427, 11.675, 0.000), (-10.430, 11.286, 0.000), (-10.429, 11.257, 0.000), (-10.425, 11.227, 0.000), (-10.413, 11.153, 0.000), (-10.393, 11.080, 0.000), (-10.329, 10.848, 0.000), (-10.211, 10.638, 0.000), (-10.191, 10.603, 0.000), (-10.170, 10.569, 0.000), (-10.102, 10.459, 0.000), (-10.039, 10.347, 0.000), (-10.022, 10.318, 0.000), (-10.005, 10.288, 0.000), (-9.942, 10.176, 0.000), (-9.876, 10.065, 0.000), (-9.832, 9.992, 0.000), (-9.784, 9.920, 0.000), (-9.711, 9.813, 0.000), (-9.619, 9.722, 0.000), (-9.556, 9.659, 0.000), (-9.486, 9.603, 0.000), (-9.411, 9.543, 0.000), (-9.323, 9.505, 0.000), (-9.224, 9.461, 0.000), (-9.115, 9.456, 0.000), (-8.997, 9.452, 0.000), (-8.887, 9.494, 0.000), (-8.797, 9.529, 0.000), (-8.719, 9.587, 0.000), (-8.685, 9.612, 0.000), (-8.654, 9.641, 0.000), (-8.588, 9.700, 0.000), (-8.538, 9.774, 0.000), (-8.457, 9.897, 0.000), (-8.443, 10.043, 0.000), (-8.441, 10.069, 0.000), (-8.440, 10.096, 0.000), (-8.440, 10.291, 0.000), (-8.439, 10.487, 0.000), (-8.432, 13.388, 0.000), (-8.426, 16.289, 0.000), (-8.423, 20.479, 0.000), (-8.420, 24.669, 0.000), (-8.420, 26.206, 0.000), (-8.420, 27.743, 0.000), (-8.428, 30.529, 0.000), (-8.435, 33.315, 0.000), (-8.436, 33.629, 0.000), (-8.438, 33.943, 0.000), (-8.441, 34.906, 0.000), (-8.444, 35.868, 0.000), (-8.445, 35.966, 0.000), (-8.478, 36.059, 0.000), (-8.512, 36.158, 0.000), (-8.578, 36.238, 0.000), (-8.614, 36.283, 0.000), (-8.657, 36.322, 0.000), (-8.730, 36.389, 0.000), (-8.816, 36.435, 0.000), (-8.906, 36.483, 0.000), (-9.006, 36.500, 0.000), (-9.142, 36.522, 0.000), (-9.273, 36.479, 0.000), (-9.364, 36.449, 0.000), (-9.443, 36.394, 0.000), (-9.467, 36.378, 0.000), (-9.490, 36.360, 0.000), (-9.617, 36.260, 0.000), (-9.720, 36.135, 0.000), (-9.756, 36.091, 0.000), (-9.788, 36.043, 0.000), (-9.859, 35.936, 0.000), (-9.924, 35.824, 0.000), (-9.967, 35.750, 0.000), (-10.009, 35.675, 0.000), (-10.072, 35.563, 0.000), (-10.138, 35.453, 0.000), (-10.156, 35.423, 0.000), (-10.174, 35.395, 0.000), (-10.264, 35.249, 0.000), (-10.327, 35.090, 0.000), (-10.379, 34.961, 0.000), (-10.411, 34.825, 0.000), (-10.425, 34.769, 0.000), (-10.432, 34.712, 0.000), (-10.434, 34.694, 0.000), (-10.434, 34.677, 0.000), (-10.433, 34.552, 0.000), (-10.432, 34.426, 0.000), (-10.428, 33.132, 0.000), (-10.423, 31.837, 0.000), (-10.416, 27.954, 0.000), (-10.408, 24.070, 0.000), (-10.403, 20.072, 0.000), (-10.398, 16.075, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-10.398, 16.075, 0.000)), rs.coerce3dpoint((-10.404, 15.524, 0.000)), rs.coerce3dpoint((-10.407, 14.973, 0.000)), rs.coerce3dpoint((-10.416, 13.519, 0.000)), rs.coerce3dpoint((-10.425, 12.064, 0.000)), rs.coerce3dpoint((-10.427, 11.675, 0.000)), rs.coerce3dpoint((-10.430, 11.286, 0.000)), rs.coerce3dpoint((-10.429, 11.257, 0.000)), rs.coerce3dpoint((-10.425, 11.227, 0.000)), rs.coerce3dpoint((-10.413, 11.153, 0.000)), rs.coerce3dpoint((-10.393, 11.080, 0.000)), rs.coerce3dpoint((-10.329, 10.848, 0.000)), rs.coerce3dpoint((-10.211, 10.638, 0.000)), rs.coerce3dpoint((-10.191, 10.603, 0.000)), rs.coerce3dpoint((-10.170, 10.569, 0.000)), rs.coerce3dpoint((-10.102, 10.459, 0.000)), rs.coerce3dpoint((-10.039, 10.347, 0.000)), rs.coerce3dpoint((-10.022, 10.318, 0.000)), rs.coerce3dpoint((-10.005, 10.288, 0.000)), rs.coerce3dpoint((-9.942, 10.176, 0.000)), rs.coerce3dpoint((-9.876, 10.065, 0.000)), rs.coerce3dpoint((-9.832, 9.992, 0.000)), rs.coerce3dpoint((-9.784, 9.920, 0.000)), rs.coerce3dpoint((-9.711, 9.813, 0.000)), rs.coerce3dpoint((-9.619, 9.722, 0.000)), rs.coerce3dpoint((-9.556, 9.659, 0.000)), rs.coerce3dpoint((-9.486, 9.603, 0.000)), rs.coerce3dpoint((-9.411, 9.543, 0.000)), rs.coerce3dpoint((-9.323, 9.505, 0.000)), rs.coerce3dpoint((-9.224, 9.461, 0.000)), rs.coerce3dpoint((-9.115, 9.456, 0.000)), rs.coerce3dpoint((-8.997, 9.452, 0.000)), rs.coerce3dpoint((-8.887, 9.494, 0.000)), rs.coerce3dpoint((-8.797, 9.529, 0.000)), rs.coerce3dpoint((-8.719, 9.587, 0.000)), rs.coerce3dpoint((-8.685, 9.612, 0.000)), rs.coerce3dpoint((-8.654, 9.641, 0.000)), rs.coerce3dpoint((-8.588, 9.700, 0.000)), rs.coerce3dpoint((-8.538, 9.774, 0.000)), rs.coerce3dpoint((-8.457, 9.897, 0.000)), rs.coerce3dpoint((-8.443, 10.043, 0.000)), rs.coerce3dpoint((-8.441, 10.069, 0.000)), rs.coerce3dpoint((-8.440, 10.096, 0.000)), rs.coerce3dpoint((-8.440, 10.291, 0.000)), rs.coerce3dpoint((-8.439, 10.487, 0.000)), rs.coerce3dpoint((-8.432, 13.388, 0.000)), rs.coerce3dpoint((-8.426, 16.289, 0.000)), rs.coerce3dpoint((-8.423, 20.479, 0.000)), rs.coerce3dpoint((-8.420, 24.669, 0.000)), rs.coerce3dpoint((-8.420, 26.206, 0.000)), rs.coerce3dpoint((-8.420, 27.743, 0.000)), rs.coerce3dpoint((-8.428, 30.529, 0.000)), rs.coerce3dpoint((-8.435, 33.315, 0.000)), rs.coerce3dpoint((-8.436, 33.629, 0.000)), rs.coerce3dpoint((-8.438, 33.943, 0.000)), rs.coerce3dpoint((-8.441, 34.906, 0.000)), rs.coerce3dpoint((-8.444, 35.868, 0.000)), rs.coerce3dpoint((-8.445, 35.966, 0.000)), rs.coerce3dpoint((-8.478, 36.059, 0.000)), rs.coerce3dpoint((-8.512, 36.158, 0.000)), rs.coerce3dpoint((-8.578, 36.238, 0.000)), rs.coerce3dpoint((-8.614, 36.283, 0.000)), rs.coerce3dpoint((-8.657, 36.322, 0.000)), rs.coerce3dpoint((-8.730, 36.389, 0.000)), rs.coerce3dpoint((-8.816, 36.435, 0.000)), rs.coerce3dpoint((-8.906, 36.483, 0.000)), rs.coerce3dpoint((-9.006, 36.500, 0.000)), rs.coerce3dpoint((-9.142, 36.522, 0.000)), rs.coerce3dpoint((-9.273, 36.479, 0.000)), rs.coerce3dpoint((-9.364, 36.449, 0.000)), rs.coerce3dpoint((-9.443, 36.394, 0.000)), rs.coerce3dpoint((-9.467, 36.378, 0.000)), rs.coerce3dpoint((-9.490, 36.360, 0.000)), rs.coerce3dpoint((-9.617, 36.260, 0.000)), rs.coerce3dpoint((-9.720, 36.135, 0.000)), rs.coerce3dpoint((-9.756, 36.091, 0.000)), rs.coerce3dpoint((-9.788, 36.043, 0.000)), rs.coerce3dpoint((-9.859, 35.936, 0.000)), rs.coerce3dpoint((-9.924, 35.824, 0.000)), rs.coerce3dpoint((-9.967, 35.750, 0.000)), rs.coerce3dpoint((-10.009, 35.675, 0.000)), rs.coerce3dpoint((-10.072, 35.563, 0.000)), rs.coerce3dpoint((-10.138, 35.453, 0.000)), rs.coerce3dpoint((-10.156, 35.423, 0.000)), rs.coerce3dpoint((-10.174, 35.395, 0.000)), rs.coerce3dpoint((-10.264, 35.249, 0.000)), rs.coerce3dpoint((-10.327, 35.090, 0.000)), rs.coerce3dpoint((-10.379, 34.961, 0.000)), rs.coerce3dpoint((-10.411, 34.825, 0.000)), rs.coerce3dpoint((-10.425, 34.769, 0.000)), rs.coerce3dpoint((-10.432, 34.712, 0.000)), rs.coerce3dpoint((-10.434, 34.694, 0.000)), rs.coerce3dpoint((-10.434, 34.677, 0.000)), rs.coerce3dpoint((-10.433, 34.552, 0.000)), rs.coerce3dpoint((-10.432, 34.426, 0.000)), rs.coerce3dpoint((-10.428, 33.132, 0.000)), rs.coerce3dpoint((-10.423, 31.837, 0.000)), rs.coerce3dpoint((-10.416, 27.954, 0.000)), rs.coerce3dpoint((-10.408, 24.070, 0.000)), rs.coerce3dpoint((-10.403, 20.072, 0.000)), rs.coerce3dpoint((-10.398, 16.075, 0.000))], [0.0, 0.0, 1.10180314273, 1.10180314273, 4.01038669549, 4.01038669549, 4.78840017635, 4.78840017635, 4.84767710386, 4.84767710386, 4.99829136694, 4.99829136694, 5.47751717332, 5.47751717332, 5.55787715734, 5.55787715734, 5.81517408156, 5.81517408156, 5.88318240826, 5.88318240826, 6.14098459911, 6.14098459911, 6.31283566177, 6.31283566177, 6.57116671470, 6.57116671470, 6.74933334146, 6.74933334146, 6.94049103957, 6.94049103957, 7.15511840135, 7.15511840135, 7.38776774905, 7.38776774905, 7.58045088187, 7.58045088187, 7.6653561762, 7.6653561762, 7.84190652697, 7.84190652697, 8.13003587307, 8.13003587307, 8.18259531496, 8.18259531496, 8.57377754207, 8.57377754207, 14.3760832238, 14.3760832238, 22.7556848936, 22.7556848936, 25.8296849375, 25.8296849375, 31.4018166909, 31.4018166909, 32.0305206104, 32.0305206104, 33.9550022386, 33.9550022386, 34.1501687839, 34.1501687839, 34.3563633980, 34.3563633980, 34.4722212831, 34.4722212831, 34.6674773687, 34.6674773687, 34.8686170300, 34.8686170300, 35.1396424486, 35.1396424486, 35.3302768082, 35.3302768082, 35.3882564130, 35.3882564130, 35.7103836170, 35.7103836170, 35.8247534865, 35.8247534865, 36.0822042822, 36.0822042822, 36.2544017244, 36.2544017244, 36.5117734619, 36.5117734619, 36.5797122834, 36.5797122834, 36.9212365462, 36.9212365462, 37.1996041643, 37.1996041643, 37.3147247223, 37.3147247223, 37.3492019873, 37.3492019873, 37.5999862372, 37.5999862372, 40.1892407863, 40.1892407863, 47.9564859936, 47.9564859936, 55.9518725126, 55.9518725126], 2, [1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995958184676, 1.0, 0.997250963801, 1.0, 0.998272772946, 1.0, 0.998433228349, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.397, 20.813, 0.000), (-11.391, 22.057, 0.000), (-11.384, 23.300, 0.000), (-11.379, 24.403, 0.000), (-11.373, 25.506, 0.000), (-11.370, 26.052, 0.000), (-11.367, 26.598, 0.000), (-11.368, 26.627, 0.000), (-11.372, 26.657, 0.000), (-11.384, 26.731, 0.000), (-11.404, 26.804, 0.000), (-11.468, 27.036, 0.000), (-11.586, 27.246, 0.000), (-11.605, 27.281, 0.000), (-11.627, 27.315, 0.000), (-11.694, 27.424, 0.000), (-11.758, 27.536, 0.000), (-11.775, 27.566, 0.000), (-11.791, 27.596, 0.000), (-11.855, 27.708, 0.000), (-11.921, 27.818, 0.000), (-11.965, 27.892, 0.000), (-12.013, 27.964, 0.000), (-12.086, 28.071, 0.000), (-12.178, 28.162, 0.000), (-12.241, 28.225, 0.000), (-12.311, 28.280, 0.000), (-12.386, 28.340, 0.000), (-12.474, 28.379, 0.000), (-12.573, 28.422, 0.000), (-12.682, 28.427, 0.000), (-12.800, 28.432, 0.000), (-12.910, 28.390, 0.000), (-13.000, 28.355, 0.000), (-13.078, 28.297, 0.000), (-13.112, 28.271, 0.000), (-13.143, 28.243, 0.000), (-13.209, 28.184, 0.000), (-13.259, 28.110, 0.000), (-13.340, 27.987, 0.000), (-13.353, 27.841, 0.000), (-13.356, 27.815, 0.000), (-13.356, 27.788, 0.000), (-13.363, 26.082, 0.000), (-13.369, 24.376, 0.000), (-13.375, 22.595, 0.000), (-13.381, 20.813, 0.000), (-13.374, 18.504, 0.000), (-13.366, 16.194, 0.000), (-13.366, 16.159, 0.000), (-13.366, 16.125, 0.000), (-13.361, 14.783, 0.000), (-13.356, 13.440, 0.000), (-13.355, 13.342, 0.000), (-13.323, 13.249, 0.000), (-13.289, 13.151, 0.000), (-13.223, 13.070, 0.000), (-13.186, 13.025, 0.000), (-13.143, 12.986, 0.000), (-13.071, 12.919, 0.000), (-12.985, 12.873, 0.000), (-12.895, 12.825, 0.000), (-12.795, 12.808, 0.000), (-12.659, 12.786, 0.000), (-12.528, 12.829, 0.000), (-12.436, 12.859, 0.000), (-12.357, 12.914, 0.000), (-12.333, 12.930, 0.000), (-12.311, 12.948, 0.000), (-12.184, 13.048, 0.000), (-12.081, 13.173, 0.000), (-12.045, 13.217, 0.000), (-12.013, 13.265, 0.000), (-11.942, 13.372, 0.000), (-11.877, 13.484, 0.000), (-11.834, 13.558, 0.000), (-11.791, 13.633, 0.000), (-11.728, 13.745, 0.000), (-11.662, 13.856, 0.000), (-11.645, 13.885, 0.000), (-11.627, 13.913, 0.000), (-11.539, 14.055, 0.000), (-11.479, 14.211, 0.000), (-11.423, 14.354, 0.000), (-11.392, 14.505, 0.000), (-11.381, 14.559, 0.000), (-11.376, 14.613, 0.000), (-11.376, 14.621, 0.000), (-11.375, 14.629, 0.000), (-11.374, 14.717, 0.000), (-11.374, 14.805, 0.000), (-11.375, 15.402, 0.000), (-11.377, 16.000, 0.000), (-11.384, 17.709, 0.000), (-11.391, 19.419, 0.000), (-11.394, 20.116, 0.000), (-11.397, 20.813, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.397, 20.813, 0.000)), rs.coerce3dpoint((-11.391, 22.057, 0.000)), rs.coerce3dpoint((-11.384, 23.300, 0.000)), rs.coerce3dpoint((-11.379, 24.403, 0.000)), rs.coerce3dpoint((-11.373, 25.506, 0.000)), rs.coerce3dpoint((-11.370, 26.052, 0.000)), rs.coerce3dpoint((-11.367, 26.598, 0.000)), rs.coerce3dpoint((-11.368, 26.627, 0.000)), rs.coerce3dpoint((-11.372, 26.657, 0.000)), rs.coerce3dpoint((-11.384, 26.731, 0.000)), rs.coerce3dpoint((-11.404, 26.804, 0.000)), rs.coerce3dpoint((-11.468, 27.036, 0.000)), rs.coerce3dpoint((-11.586, 27.246, 0.000)), rs.coerce3dpoint((-11.605, 27.281, 0.000)), rs.coerce3dpoint((-11.627, 27.315, 0.000)), rs.coerce3dpoint((-11.694, 27.424, 0.000)), rs.coerce3dpoint((-11.758, 27.536, 0.000)), rs.coerce3dpoint((-11.775, 27.566, 0.000)), rs.coerce3dpoint((-11.791, 27.596, 0.000)), rs.coerce3dpoint((-11.855, 27.708, 0.000)), rs.coerce3dpoint((-11.921, 27.818, 0.000)), rs.coerce3dpoint((-11.965, 27.892, 0.000)), rs.coerce3dpoint((-12.013, 27.964, 0.000)), rs.coerce3dpoint((-12.086, 28.071, 0.000)), rs.coerce3dpoint((-12.178, 28.162, 0.000)), rs.coerce3dpoint((-12.241, 28.225, 0.000)), rs.coerce3dpoint((-12.311, 28.280, 0.000)), rs.coerce3dpoint((-12.386, 28.340, 0.000)), rs.coerce3dpoint((-12.474, 28.379, 0.000)), rs.coerce3dpoint((-12.573, 28.422, 0.000)), rs.coerce3dpoint((-12.682, 28.427, 0.000)), rs.coerce3dpoint((-12.800, 28.432, 0.000)), rs.coerce3dpoint((-12.910, 28.390, 0.000)), rs.coerce3dpoint((-13.000, 28.355, 0.000)), rs.coerce3dpoint((-13.078, 28.297, 0.000)), rs.coerce3dpoint((-13.112, 28.271, 0.000)), rs.coerce3dpoint((-13.143, 28.243, 0.000)), rs.coerce3dpoint((-13.209, 28.184, 0.000)), rs.coerce3dpoint((-13.259, 28.110, 0.000)), rs.coerce3dpoint((-13.340, 27.987, 0.000)), rs.coerce3dpoint((-13.353, 27.841, 0.000)), rs.coerce3dpoint((-13.356, 27.815, 0.000)), rs.coerce3dpoint((-13.356, 27.788, 0.000)), rs.coerce3dpoint((-13.363, 26.082, 0.000)), rs.coerce3dpoint((-13.369, 24.376, 0.000)), rs.coerce3dpoint((-13.375, 22.595, 0.000)), rs.coerce3dpoint((-13.381, 20.813, 0.000)), rs.coerce3dpoint((-13.374, 18.504, 0.000)), rs.coerce3dpoint((-13.366, 16.194, 0.000)), rs.coerce3dpoint((-13.366, 16.159, 0.000)), rs.coerce3dpoint((-13.366, 16.125, 0.000)), rs.coerce3dpoint((-13.361, 14.783, 0.000)), rs.coerce3dpoint((-13.356, 13.440, 0.000)), rs.coerce3dpoint((-13.355, 13.342, 0.000)), rs.coerce3dpoint((-13.323, 13.249, 0.000)), rs.coerce3dpoint((-13.289, 13.151, 0.000)), rs.coerce3dpoint((-13.223, 13.070, 0.000)), rs.coerce3dpoint((-13.186, 13.025, 0.000)), rs.coerce3dpoint((-13.143, 12.986, 0.000)), rs.coerce3dpoint((-13.071, 12.919, 0.000)), rs.coerce3dpoint((-12.985, 12.873, 0.000)), rs.coerce3dpoint((-12.895, 12.825, 0.000)), rs.coerce3dpoint((-12.795, 12.808, 0.000)), rs.coerce3dpoint((-12.659, 12.786, 0.000)), rs.coerce3dpoint((-12.528, 12.829, 0.000)), rs.coerce3dpoint((-12.436, 12.859, 0.000)), rs.coerce3dpoint((-12.357, 12.914, 0.000)), rs.coerce3dpoint((-12.333, 12.930, 0.000)), rs.coerce3dpoint((-12.311, 12.948, 0.000)), rs.coerce3dpoint((-12.184, 13.048, 0.000)), rs.coerce3dpoint((-12.081, 13.173, 0.000)), rs.coerce3dpoint((-12.045, 13.217, 0.000)), rs.coerce3dpoint((-12.013, 13.265, 0.000)), rs.coerce3dpoint((-11.942, 13.372, 0.000)), rs.coerce3dpoint((-11.877, 13.484, 0.000)), rs.coerce3dpoint((-11.834, 13.558, 0.000)), rs.coerce3dpoint((-11.791, 13.633, 0.000)), rs.coerce3dpoint((-11.728, 13.745, 0.000)), rs.coerce3dpoint((-11.662, 13.856, 0.000)), rs.coerce3dpoint((-11.645, 13.885, 0.000)), rs.coerce3dpoint((-11.627, 13.913, 0.000)), rs.coerce3dpoint((-11.539, 14.055, 0.000)), rs.coerce3dpoint((-11.479, 14.211, 0.000)), rs.coerce3dpoint((-11.423, 14.354, 0.000)), rs.coerce3dpoint((-11.392, 14.505, 0.000)), rs.coerce3dpoint((-11.381, 14.559, 0.000)), rs.coerce3dpoint((-11.376, 14.613, 0.000)), rs.coerce3dpoint((-11.376, 14.621, 0.000)), rs.coerce3dpoint((-11.375, 14.629, 0.000)), rs.coerce3dpoint((-11.374, 14.717, 0.000)), rs.coerce3dpoint((-11.374, 14.805, 0.000)), rs.coerce3dpoint((-11.375, 15.402, 0.000)), rs.coerce3dpoint((-11.377, 16.000, 0.000)), rs.coerce3dpoint((-11.384, 17.709, 0.000)), rs.coerce3dpoint((-11.391, 19.419, 0.000)), rs.coerce3dpoint((-11.394, 20.116, 0.000)), rs.coerce3dpoint((-11.397, 20.813, 0.000))], [0.0, 0.0, 2.48716242471, 2.48716242471, 4.69238101909, 4.69238101909, 5.78437800100, 5.78437800100, 5.84366489949, 5.84366489949, 5.99426938340, 5.99426938340, 6.47349518978, 6.47349518978, 6.55385517380, 6.55385517380, 6.81115209802, 6.81115209802, 6.87916537320, 6.87916537320, 7.13696254416, 7.13696254416, 7.30881360682, 7.30881360682, 7.56715236894, 7.56715236894, 7.74531982620, 7.74531982620, 7.93647412810, 7.93647412810, 8.15109920861, 8.15109920861, 8.38374855631, 8.38374855631, 8.57643168913, 8.57643168913, 8.66134470937, 8.66134470937, 8.83788091695, 8.83788091695, 9.12601026305, 9.12601026305, 9.17856970495, 9.17856970495, 12.5907315868, 12.5907315868, 16.1536327147, 16.1536327147, 20.7728762963, 20.7728762963, 20.8421067477, 20.8421067477, 23.5267434857, 23.5267434857, 23.7219199253, 23.7219199253, 23.9281057754, 23.9281057754, 24.0439640506, 24.0439640506, 24.2392283060, 24.2392283060, 24.4403552097, 24.4403552097, 24.7113806284, 24.7113806284, 24.9020195049, 24.9020195049, 24.9599910467, 24.9599910467, 25.2821182508, 25.2821182508, 25.3964961544, 25.3964961544, 25.6539522245, 25.6539522245, 25.8261446894, 25.8261446894, 26.0835127980, 26.0835127980, 26.1514549004, 26.1514549004, 26.4839575125, 26.4839575125, 26.7913284328, 26.7913284328, 26.9004479629, 26.9004479629, 26.9166141622, 26.9166141622, 27.0923505130, 27.0923505130, 28.2869633206, 28.2869633206, 31.7060335186, 31.7060335186, 33.1006572114, 33.1006572114], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997339045057, 1.0, 0.998284492746, 1.0, 0.992658071263, 1.0, 0.999735534975, 1.0, 0.99979600081, 1.0, 1.0, 1.0, 0.999912883795, 1.0, 0.999716820101, 1.0, 0.995325829525, 1.0, 0.998307812961, 1.0, 0.99143015911, 1.0, 0.98321407606, 1.0, 0.979486110362, 1.0, 0.990523119428, 1.0, 0.998740773325, 1.0, 0.992193073471, 1.0, 0.969713682419, 1.0, 0.99921622727, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.987218133477, 1.0, 0.985282682565, 1.0, 0.996962619855, 1.0, 0.992193073471, 1.0, 0.986674164507, 1.0, 0.971234484808, 1.0, 0.990080721256, 1.0, 0.999352209884, 1.0, 0.994120356071, 1.0, 0.998942559386, 1.0, 0.999513398419, 1.0, 0.999983180141, 1.0, 0.999912883795, 1.0, 0.999968000512, 1.0, 0.995497658408, 1.0, 0.996444651507, 1.0, 0.99838818003, 1.0, 1.0, 1.0, 0.999955820976, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.133, 11.442, 0.000), (22.132, 11.931, 0.000), (22.130, 12.420, 0.000), (22.131, 13.424, 0.000), (22.131, 14.427, 0.000), (22.130, 14.866, 0.000), (22.126, 15.305, 0.000), (22.124, 15.509, 0.000), (22.118, 15.712, 0.000), (22.116, 15.807, 0.000), (22.109, 15.902, 0.000), (22.106, 15.952, 0.000), (22.098, 16.001, 0.000), (22.092, 16.033, 0.000), (22.082, 16.063, 0.000), (22.065, 16.120, 0.000), (22.033, 16.170, 0.000), (22.003, 16.216, 0.000), (21.969, 16.258, 0.000), (21.934, 16.301, 0.000), (21.897, 16.344, 0.000), (21.813, 16.430, 0.000), (21.703, 16.478, 0.000), (21.554, 16.542, 0.000), (21.394, 16.515, 0.000), (21.234, 16.488, 0.000), (21.116, 16.378, 0.000), (21.053, 16.320, 0.000), (21.009, 16.247, 0.000), (20.102, 14.629, 0.000), (19.194, 13.010, 0.000), (18.963, 12.597, 0.000), (18.731, 12.184, 0.000), (18.549, 11.864, 0.000), (18.367, 11.544, 0.000), (18.332, 11.482, 0.000), (18.298, 11.421, 0.000), (18.263, 11.359, 0.000), (18.245, 11.290, 0.000), (18.227, 11.221, 0.000), (18.232, 11.151, 0.000), (18.241, 11.026, 0.000), (18.324, 10.933, 0.000), (18.371, 10.880, 0.000), (18.432, 10.844, 0.000), (18.495, 10.808, 0.000), (18.564, 10.789, 0.000), (18.568, 10.788, 0.000), (18.571, 10.787, 0.000), (18.655, 10.776, 0.000), (18.738, 10.769, 0.000), (18.767, 10.767, 0.000), (18.795, 10.765, 0.000), (18.800, 10.765, 0.000), (18.804, 10.764, 0.000), (18.851, 10.761, 0.000), (18.898, 10.761, 0.000), (19.024, 10.758, 0.000), (19.151, 10.758, 0.000), (19.432, 10.756, 0.000), (19.713, 10.756, 0.000), (20.207, 10.756, 0.000), (20.702, 10.759, 0.000), (20.958, 10.760, 0.000), (21.214, 10.765, 0.000), (21.351, 10.767, 0.000), (21.488, 10.774, 0.000), (21.563, 10.777, 0.000), (21.638, 10.784, 0.000), (21.685, 10.789, 0.000), (21.731, 10.798, 0.000), (21.739, 10.800, 0.000), (21.746, 10.802, 0.000), (21.781, 10.809, 0.000), (21.813, 10.824, 0.000), (21.842, 10.837, 0.000), (21.869, 10.855, 0.000), (21.909, 10.880, 0.000), (21.947, 10.906, 0.000), (21.973, 10.925, 0.000), (21.995, 10.949, 0.000), (22.027, 10.985, 0.000), (22.053, 11.026, 0.000), (22.089, 11.083, 0.000), (22.114, 11.146, 0.000), (22.123, 11.169, 0.000), (22.129, 11.193, 0.000), (22.130, 11.200, 0.000), (22.130, 11.207, 0.000), (22.133, 11.325, 0.000), (22.133, 11.442, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.133, 11.442, 0.000)), rs.coerce3dpoint((22.132, 11.931, 0.000)), rs.coerce3dpoint((22.130, 12.420, 0.000)), rs.coerce3dpoint((22.131, 13.424, 0.000)), rs.coerce3dpoint((22.131, 14.427, 0.000)), rs.coerce3dpoint((22.130, 14.866, 0.000)), rs.coerce3dpoint((22.126, 15.305, 0.000)), rs.coerce3dpoint((22.124, 15.509, 0.000)), rs.coerce3dpoint((22.118, 15.712, 0.000)), rs.coerce3dpoint((22.116, 15.807, 0.000)), rs.coerce3dpoint((22.109, 15.902, 0.000)), rs.coerce3dpoint((22.106, 15.952, 0.000)), rs.coerce3dpoint((22.098, 16.001, 0.000)), rs.coerce3dpoint((22.092, 16.033, 0.000)), rs.coerce3dpoint((22.082, 16.063, 0.000)), rs.coerce3dpoint((22.065, 16.120, 0.000)), rs.coerce3dpoint((22.033, 16.170, 0.000)), rs.coerce3dpoint((22.003, 16.216, 0.000)), rs.coerce3dpoint((21.969, 16.258, 0.000)), rs.coerce3dpoint((21.934, 16.301, 0.000)), rs.coerce3dpoint((21.897, 16.344, 0.000)), rs.coerce3dpoint((21.813, 16.430, 0.000)), rs.coerce3dpoint((21.703, 16.478, 0.000)), rs.coerce3dpoint((21.554, 16.542, 0.000)), rs.coerce3dpoint((21.394, 16.515, 0.000)), rs.coerce3dpoint((21.234, 16.488, 0.000)), rs.coerce3dpoint((21.116, 16.378, 0.000)), rs.coerce3dpoint((21.053, 16.320, 0.000)), rs.coerce3dpoint((21.009, 16.247, 0.000)), rs.coerce3dpoint((20.102, 14.629, 0.000)), rs.coerce3dpoint((19.194, 13.010, 0.000)), rs.coerce3dpoint((18.963, 12.597, 0.000)), rs.coerce3dpoint((18.731, 12.184, 0.000)), rs.coerce3dpoint((18.549, 11.864, 0.000)), rs.coerce3dpoint((18.367, 11.544, 0.000)), rs.coerce3dpoint((18.332, 11.482, 0.000)), rs.coerce3dpoint((18.298, 11.421, 0.000)), rs.coerce3dpoint((18.263, 11.359, 0.000)), rs.coerce3dpoint((18.245, 11.290, 0.000)), rs.coerce3dpoint((18.227, 11.221, 0.000)), rs.coerce3dpoint((18.232, 11.151, 0.000)), rs.coerce3dpoint((18.241, 11.026, 0.000)), rs.coerce3dpoint((18.324, 10.933, 0.000)), rs.coerce3dpoint((18.371, 10.880, 0.000)), rs.coerce3dpoint((18.432, 10.844, 0.000)), rs.coerce3dpoint((18.495, 10.808, 0.000)), rs.coerce3dpoint((18.564, 10.789, 0.000)), rs.coerce3dpoint((18.568, 10.788, 0.000)), rs.coerce3dpoint((18.571, 10.787, 0.000)), rs.coerce3dpoint((18.655, 10.776, 0.000)), rs.coerce3dpoint((18.738, 10.769, 0.000)), rs.coerce3dpoint((18.767, 10.767, 0.000)), rs.coerce3dpoint((18.795, 10.765, 0.000)), rs.coerce3dpoint((18.800, 10.765, 0.000)), rs.coerce3dpoint((18.804, 10.764, 0.000)), rs.coerce3dpoint((18.851, 10.761, 0.000)), rs.coerce3dpoint((18.898, 10.761, 0.000)), rs.coerce3dpoint((19.024, 10.758, 0.000)), rs.coerce3dpoint((19.151, 10.758, 0.000)), rs.coerce3dpoint((19.432, 10.756, 0.000)), rs.coerce3dpoint((19.713, 10.756, 0.000)), rs.coerce3dpoint((20.207, 10.756, 0.000)), rs.coerce3dpoint((20.702, 10.759, 0.000)), rs.coerce3dpoint((20.958, 10.760, 0.000)), rs.coerce3dpoint((21.214, 10.765, 0.000)), rs.coerce3dpoint((21.351, 10.767, 0.000)), rs.coerce3dpoint((21.488, 10.774, 0.000)), rs.coerce3dpoint((21.563, 10.777, 0.000)), rs.coerce3dpoint((21.638, 10.784, 0.000)), rs.coerce3dpoint((21.685, 10.789, 0.000)), rs.coerce3dpoint((21.731, 10.798, 0.000)), rs.coerce3dpoint((21.739, 10.800, 0.000)), rs.coerce3dpoint((21.746, 10.802, 0.000)), rs.coerce3dpoint((21.781, 10.809, 0.000)), rs.coerce3dpoint((21.813, 10.824, 0.000)), rs.coerce3dpoint((21.842, 10.837, 0.000)), rs.coerce3dpoint((21.869, 10.855, 0.000)), rs.coerce3dpoint((21.909, 10.880, 0.000)), rs.coerce3dpoint((21.947, 10.906, 0.000)), rs.coerce3dpoint((21.973, 10.925, 0.000)), rs.coerce3dpoint((21.995, 10.949, 0.000)), rs.coerce3dpoint((22.027, 10.985, 0.000)), rs.coerce3dpoint((22.053, 11.026, 0.000)), rs.coerce3dpoint((22.089, 11.083, 0.000)), rs.coerce3dpoint((22.114, 11.146, 0.000)), rs.coerce3dpoint((22.123, 11.169, 0.000)), rs.coerce3dpoint((22.129, 11.193, 0.000)), rs.coerce3dpoint((22.130, 11.200, 0.000)), rs.coerce3dpoint((22.130, 11.207, 0.000)), rs.coerce3dpoint((22.133, 11.325, 0.000)), rs.coerce3dpoint((22.133, 11.442, 0.000))], [0.0, 0.0, 0.97817381365, 0.97817381365, 2.98545382172, 2.98545382172, 3.86351861024, 3.86351861024, 4.27001643834, 4.27001643834, 4.46081157515, 4.46081157515, 4.56016259509, 4.56016259509, 4.62440164558, 4.62440164558, 4.74255006942, 4.74255006942, 4.85099518617, 4.85099518617, 4.96302118676, 4.96302118676, 5.20077508904, 5.20077508904, 5.51618072093, 5.51618072093, 5.83094518343, 5.83094518343, 6.00009502696, 6.00009502696, 9.71134797527, 9.71134797527, 10.6581456170, 10.6581456170, 11.3947933315, 11.3947933315, 11.5357885356, 11.5357885356, 11.6773469536, 11.6773469536, 11.8179101589, 11.8179101589, 12.0587524183, 12.0587524183, 12.1991165282, 12.1991165282, 12.3429838860, 12.3429838860, 12.3502105958, 12.3502105958, 12.5180470725, 12.5180470725, 12.5752192971, 12.5752192971, 12.5839200955, 12.5839200955, 12.6777899960, 12.6777899960, 12.9311899196, 12.9311899196, 13.4933459882, 13.4933459882, 14.4817327492, 14.4817327492, 14.9939667229, 14.9939667229, 15.2680168071, 15.2680168071, 15.4186359257, 15.4186359257, 15.5126837079, 15.5126837079, 15.5283278084, 15.5283278084, 15.5987818016, 15.5987818016, 15.6634600651, 15.6634600651, 15.7565242230, 15.7565242230, 15.8210206435, 15.8210206435, 15.9171487517, 15.9171487517, 16.0522603148, 16.0522603148, 16.1018130396, 16.1018130396, 16.1158099589, 16.1158099589, 16.3503589473, 16.3503589473], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 0.99995000125, 1.0, 0.999758029278, 1.0, 0.998886700064, 1.0, 0.997510921616, 1.0, 0.990413452265, 1.0, 0.998510530087, 1.0, 0.999771046213, 1.0, 0.980974718801, 1.0, 0.959370493448, 1.0, 0.95814573155, 1.0, 0.990247785849, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.991765067247, 1.0, 0.986577016949, 1.0, 0.947554670318, 1.0, 0.987027413348, 1.0, 0.991739539105, 1.0, 1.0, 1.0, 0.99965683889, 1.0, 0.999974080336, 1.0, 1.0, 1.0, 0.999677472021, 1.0, 0.999968000512, 1.0, 0.999996620006, 1.0, 0.999994220017, 1.0, 0.9999755003, 1.0, 0.999902004802, 1.0, 0.999640944472, 1.0, 0.998710511926, 1.0, 1.0, 1.0, 0.995032349499, 1.0, 0.997622330022, 1.0, 0.999868788609, 1.0, 0.993523043631, 1.0, 0.996117929889, 1.0, 0.995554224477, 1.0, 0.996544859328, 1.0, 0.996528256979, 1.0, 0.999953921062, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-7.422, 30.681, 0.000), (-7.420, 28.292, 0.000), (-7.417, 25.902, 0.000), (-7.416, 25.525, 0.000), (-7.411, 25.148, 0.000), (-7.410, 24.989, 0.000), (-7.404, 24.829, 0.000), (-7.402, 24.755, 0.000), (-7.395, 24.681, 0.000), (-7.391, 24.634, 0.000), (-7.382, 24.587, 0.000), (-7.375, 24.542, 0.000), (-7.357, 24.501, 0.000), (-7.337, 24.452, 0.000), (-7.312, 24.406, 0.000), (-7.266, 24.318, 0.000), (-7.215, 24.233, 0.000), (-7.205, 24.216, 0.000), (-7.195, 24.199, 0.000), (-7.084, 24.007, 0.000), (-6.973, 23.814, 0.000), (-4.778, 20.023, 0.000), (-2.583, 16.232, 0.000), (-2.307, 15.757, 0.000), (-2.031, 15.282, 0.000), (-1.992, 15.215, 0.000), (-1.952, 15.148, 0.000), (-1.948, 15.141, 0.000), (-1.943, 15.134, 0.000), (-1.927, 15.107, 0.000), (-1.906, 15.083, 0.000), (-1.867, 15.036, 0.000), (-1.825, 14.992, 0.000), (-1.724, 14.881, 0.000), (-1.596, 14.803, 0.000), (-1.571, 14.788, 0.000), (-1.546, 14.775, 0.000), (-1.448, 14.724, 0.000), (-1.340, 14.702, 0.000), (-1.219, 14.678, 0.000), (-1.098, 14.700, 0.000), (-0.886, 14.740, 0.000), (-0.750, 14.906, 0.000), (-0.673, 15.000, 0.000), (-0.634, 15.114, 0.000), (-0.603, 15.206, 0.000), (-0.595, 15.303, 0.000), (-0.586, 15.404, 0.000), (-0.583, 15.505, 0.000), (-0.579, 15.627, 0.000), (-0.579, 15.750, 0.000), (-0.578, 15.958, 0.000), (-0.578, 16.166, 0.000), (-0.566, 17.599, 0.000), (-0.554, 19.032, 0.000), (-0.559, 20.537, 0.000), (-0.565, 22.043, 0.000), (-0.568, 22.813, 0.000), (-0.576, 23.584, 0.000), (-0.581, 23.992, 0.000), (-0.590, 24.400, 0.000), (-0.595, 24.617, 0.000), (-0.604, 24.833, 0.000), (-0.610, 24.954, 0.000), (-0.620, 25.074, 0.000), (-0.627, 25.149, 0.000), (-0.639, 25.223, 0.000), (-0.647, 25.269, 0.000), (-0.659, 25.314, 0.000), (-0.665, 25.340, 0.000), (-0.676, 25.364, 0.000), (-0.698, 25.419, 0.000), (-0.724, 25.473, 0.000), (-0.797, 25.630, 0.000), (-0.873, 25.786, 0.000), (-0.897, 25.835, 0.000), (-0.920, 25.883, 0.000), (-2.841, 29.163, 0.000), (-4.761, 32.444, 0.000), (-5.301, 33.367, 0.000), (-5.841, 34.290, 0.000), (-5.945, 34.468, 0.000), (-6.049, 34.646, 0.000), (-6.064, 34.672, 0.000), (-6.082, 34.695, 0.000), (-6.119, 34.741, 0.000), (-6.157, 34.785, 0.000), (-6.169, 34.798, 0.000), (-6.180, 34.812, 0.000), (-6.247, 34.889, 0.000), (-6.332, 34.948, 0.000), (-6.438, 35.022, 0.000), (-6.564, 35.049, 0.000), (-6.674, 35.073, 0.000), (-6.785, 35.060, 0.000), (-6.843, 35.054, 0.000), (-6.900, 35.039, 0.000), (-6.994, 35.016, 0.000), (-7.077, 34.968, 0.000), (-7.206, 34.893, 0.000), (-7.285, 34.766, 0.000), (-7.336, 34.684, 0.000), (-7.364, 34.592, 0.000), (-7.376, 34.552, 0.000), (-7.384, 34.511, 0.000), (-7.398, 34.449, 0.000), (-7.408, 34.386, 0.000), (-7.413, 34.358, 0.000), (-7.415, 34.329, 0.000), (-7.417, 34.289, 0.000), (-7.417, 34.249, 0.000), (-7.419, 34.046, 0.000), (-7.419, 33.843, 0.000), (-7.420, 32.746, 0.000), (-7.421, 31.649, 0.000), (-7.422, 31.165, 0.000), (-7.422, 30.681, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-7.422, 30.681, 0.000)), rs.coerce3dpoint((-7.420, 28.292, 0.000)), rs.coerce3dpoint((-7.417, 25.902, 0.000)), rs.coerce3dpoint((-7.416, 25.525, 0.000)), rs.coerce3dpoint((-7.411, 25.148, 0.000)), rs.coerce3dpoint((-7.410, 24.989, 0.000)), rs.coerce3dpoint((-7.404, 24.829, 0.000)), rs.coerce3dpoint((-7.402, 24.755, 0.000)), rs.coerce3dpoint((-7.395, 24.681, 0.000)), rs.coerce3dpoint((-7.391, 24.634, 0.000)), rs.coerce3dpoint((-7.382, 24.587, 0.000)), rs.coerce3dpoint((-7.375, 24.542, 0.000)), rs.coerce3dpoint((-7.357, 24.501, 0.000)), rs.coerce3dpoint((-7.337, 24.452, 0.000)), rs.coerce3dpoint((-7.312, 24.406, 0.000)), rs.coerce3dpoint((-7.266, 24.318, 0.000)), rs.coerce3dpoint((-7.215, 24.233, 0.000)), rs.coerce3dpoint((-7.205, 24.216, 0.000)), rs.coerce3dpoint((-7.195, 24.199, 0.000)), rs.coerce3dpoint((-7.084, 24.007, 0.000)), rs.coerce3dpoint((-6.973, 23.814, 0.000)), rs.coerce3dpoint((-4.778, 20.023, 0.000)), rs.coerce3dpoint((-2.583, 16.232, 0.000)), rs.coerce3dpoint((-2.307, 15.757, 0.000)), rs.coerce3dpoint((-2.031, 15.282, 0.000)), rs.coerce3dpoint((-1.992, 15.215, 0.000)), rs.coerce3dpoint((-1.952, 15.148, 0.000)), rs.coerce3dpoint((-1.948, 15.141, 0.000)), rs.coerce3dpoint((-1.943, 15.134, 0.000)), rs.coerce3dpoint((-1.927, 15.107, 0.000)), rs.coerce3dpoint((-1.906, 15.083, 0.000)), rs.coerce3dpoint((-1.867, 15.036, 0.000)), rs.coerce3dpoint((-1.825, 14.992, 0.000)), rs.coerce3dpoint((-1.724, 14.881, 0.000)), rs.coerce3dpoint((-1.596, 14.803, 0.000)), rs.coerce3dpoint((-1.571, 14.788, 0.000)), rs.coerce3dpoint((-1.546, 14.775, 0.000)), rs.coerce3dpoint((-1.448, 14.724, 0.000)), rs.coerce3dpoint((-1.340, 14.702, 0.000)), rs.coerce3dpoint((-1.219, 14.678, 0.000)), rs.coerce3dpoint((-1.098, 14.700, 0.000)), rs.coerce3dpoint((-0.886, 14.740, 0.000)), rs.coerce3dpoint((-0.750, 14.906, 0.000)), rs.coerce3dpoint((-0.673, 15.000, 0.000)), rs.coerce3dpoint((-0.634, 15.114, 0.000)), rs.coerce3dpoint((-0.603, 15.206, 0.000)), rs.coerce3dpoint((-0.595, 15.303, 0.000)), rs.coerce3dpoint((-0.586, 15.404, 0.000)), rs.coerce3dpoint((-0.583, 15.505, 0.000)), rs.coerce3dpoint((-0.579, 15.627, 0.000)), rs.coerce3dpoint((-0.579, 15.750, 0.000)), rs.coerce3dpoint((-0.578, 15.958, 0.000)), rs.coerce3dpoint((-0.578, 16.166, 0.000)), rs.coerce3dpoint((-0.566, 17.599, 0.000)), rs.coerce3dpoint((-0.554, 19.032, 0.000)), rs.coerce3dpoint((-0.559, 20.537, 0.000)), rs.coerce3dpoint((-0.565, 22.043, 0.000)), rs.coerce3dpoint((-0.568, 22.813, 0.000)), rs.coerce3dpoint((-0.576, 23.584, 0.000)), rs.coerce3dpoint((-0.581, 23.992, 0.000)), rs.coerce3dpoint((-0.590, 24.400, 0.000)), rs.coerce3dpoint((-0.595, 24.617, 0.000)), rs.coerce3dpoint((-0.604, 24.833, 0.000)), rs.coerce3dpoint((-0.610, 24.954, 0.000)), rs.coerce3dpoint((-0.620, 25.074, 0.000)), rs.coerce3dpoint((-0.627, 25.149, 0.000)), rs.coerce3dpoint((-0.639, 25.223, 0.000)), rs.coerce3dpoint((-0.647, 25.269, 0.000)), rs.coerce3dpoint((-0.659, 25.314, 0.000)), rs.coerce3dpoint((-0.665, 25.340, 0.000)), rs.coerce3dpoint((-0.676, 25.364, 0.000)), rs.coerce3dpoint((-0.698, 25.419, 0.000)), rs.coerce3dpoint((-0.724, 25.473, 0.000)), rs.coerce3dpoint((-0.797, 25.630, 0.000)), rs.coerce3dpoint((-0.873, 25.786, 0.000)), rs.coerce3dpoint((-0.897, 25.835, 0.000)), rs.coerce3dpoint((-0.920, 25.883, 0.000)), rs.coerce3dpoint((-2.841, 29.163, 0.000)), rs.coerce3dpoint((-4.761, 32.444, 0.000)), rs.coerce3dpoint((-5.301, 33.367, 0.000)), rs.coerce3dpoint((-5.841, 34.290, 0.000)), rs.coerce3dpoint((-5.945, 34.468, 0.000)), rs.coerce3dpoint((-6.049, 34.646, 0.000)), rs.coerce3dpoint((-6.064, 34.672, 0.000)), rs.coerce3dpoint((-6.082, 34.695, 0.000)), rs.coerce3dpoint((-6.119, 34.741, 0.000)), rs.coerce3dpoint((-6.157, 34.785, 0.000)), rs.coerce3dpoint((-6.169, 34.798, 0.000)), rs.coerce3dpoint((-6.180, 34.812, 0.000)), rs.coerce3dpoint((-6.247, 34.889, 0.000)), rs.coerce3dpoint((-6.332, 34.948, 0.000)), rs.coerce3dpoint((-6.438, 35.022, 0.000)), rs.coerce3dpoint((-6.564, 35.049, 0.000)), rs.coerce3dpoint((-6.674, 35.073, 0.000)), rs.coerce3dpoint((-6.785, 35.060, 0.000)), rs.coerce3dpoint((-6.843, 35.054, 0.000)), rs.coerce3dpoint((-6.900, 35.039, 0.000)), rs.coerce3dpoint((-6.994, 35.016, 0.000)), rs.coerce3dpoint((-7.077, 34.968, 0.000)), rs.coerce3dpoint((-7.206, 34.893, 0.000)), rs.coerce3dpoint((-7.285, 34.766, 0.000)), rs.coerce3dpoint((-7.336, 34.684, 0.000)), rs.coerce3dpoint((-7.364, 34.592, 0.000)), rs.coerce3dpoint((-7.376, 34.552, 0.000)), rs.coerce3dpoint((-7.384, 34.511, 0.000)), rs.coerce3dpoint((-7.398, 34.449, 0.000)), rs.coerce3dpoint((-7.408, 34.386, 0.000)), rs.coerce3dpoint((-7.413, 34.358, 0.000)), rs.coerce3dpoint((-7.415, 34.329, 0.000)), rs.coerce3dpoint((-7.417, 34.289, 0.000)), rs.coerce3dpoint((-7.417, 34.249, 0.000)), rs.coerce3dpoint((-7.419, 34.046, 0.000)), rs.coerce3dpoint((-7.419, 33.843, 0.000)), rs.coerce3dpoint((-7.420, 32.746, 0.000)), rs.coerce3dpoint((-7.421, 31.649, 0.000)), rs.coerce3dpoint((-7.422, 31.165, 0.000)), rs.coerce3dpoint((-7.422, 30.681, 0.000))], [0.0, 0.0, 4.77955154064, 4.77955154064, 5.53307840200, 5.53307840200, 5.85273030118, 5.85273030118, 6.00068463956, 6.00068463956, 6.09597884709, 6.09597884709, 6.18552506882, 6.18552506882, 6.29108640920, 6.29108640920, 6.48906119646, 6.48906119646, 6.52850689838, 6.52850689838, 6.97303083271, 6.97303083271, 15.7339410820, 15.7339410820, 16.8331137877, 16.8331137877, 16.9881593592, 16.9881593592, 17.0053250226, 17.0053250226, 17.0681627973, 17.0681627973, 17.1901331203, 17.1901331203, 17.4884624331, 17.4884624331, 17.5454908255, 17.5454908255, 17.7642808852, 17.7642808852, 18.0083588304, 18.0083588304, 18.4211385687, 18.4211385687, 18.6601564162, 18.6601564162, 18.8533533158, 18.8533533158, 19.0556540366, 19.0556540366, 19.3010113702, 19.3010113702, 19.7172030443, 19.7172030443, 22.5826705868, 22.5826705868, 25.5937879986, 25.5937879986, 27.1347356440, 27.1347356440, 27.9510513570, 27.9510513570, 28.3849444479, 28.3849444479, 28.6263930983, 28.6263930983, 28.7766932505, 28.7766932505, 28.8693919047, 28.8693919047, 28.9224665916, 28.9224665916, 29.0408726518, 29.0408726518, 29.3878712525, 29.3878712525, 29.4963321473, 29.4963321473, 37.0980307068, 37.0980307068, 39.2374263161, 39.2374263161, 39.6496303573, 39.6496303573, 39.7086783394, 39.7086783394, 39.8258854956, 39.8258854956, 39.8608074028, 39.8608074028, 40.0655643207, 40.0655643207, 40.3206129356, 40.3206129356, 40.5428271870, 40.5428271870, 40.6599066288, 40.6599066288, 40.8515749435, 40.8515749435, 41.1439114884, 41.1439114884, 41.3356110896, 41.3356110896, 41.4189905856, 41.4189905856, 41.5459657986, 41.5459657986, 41.6040136300, 41.6040136300, 41.6836018126, 41.6836018126, 42.0894285039, 42.0894285039, 44.2838799393, 44.2838799393, 45.2514199588, 45.2514199588], 2, [1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999935022111, 1.0, 0.999640944472, 1.0, 0.998760748348, 1.0, 0.993523043631, 1.0, 0.998905479316, 1.0, 0.99968754882, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999951981153, 1.0, 1.0, 1.0, 0.997206387593, 1.0, 0.999646282569, 1.0, 0.99019225297, 1.0, 0.999507141485, 1.0, 0.989656947428, 1.0, 0.981924354407, 1.0, 0.940240119267, 1.0, 0.983609809034, 1.0, 0.992267432338, 1.0, 0.999635566418, 1.0, 0.999912883795, 1.0, 0.999997120004, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99999550001, 1.0, 0.999980780185, 1.0, 0.999932722263, 1.0, 0.999762408228, 1.0, 0.999168026234, 1.0, 0.99915164001, 1.0, 0.997206387593, 1.0, 0.999712041466, 1.0, 0.999963020684, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.997085772557, 1.0, 0.999635566418, 1.0, 1.0, 1.0, 0.991942671571, 1.0, 0.981319309212, 1.0, 0.986867422268, 1.0, 0.997440000997, 1.0, 0.990303163376, 1.0, 0.970573737667, 1.0, 0.991404124013, 1.0, 0.998914809139, 1.0, 0.999726257473, 1.0, 0.998261013353, 1.0, 0.999707222866, 1.0, 0.999990320047, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-12.990, 7.864, 0.000), (-12.921, 7.862, 0.000), (-12.861, 7.897, 0.000), (-12.821, 7.920, 0.000), (-12.789, 7.953, 0.000), (-12.750, 7.991, 0.000), (-12.715, 8.032, 0.000), (-12.699, 8.052, 0.000), (-12.684, 8.073, 0.000), (-12.669, 8.096, 0.000), (-12.655, 8.119, 0.000), (-12.568, 8.265, 0.000), (-12.483, 8.411, 0.000), (-12.195, 8.906, 0.000), (-11.906, 9.400, 0.000), (-11.874, 9.453, 0.000), (-11.856, 9.512, 0.000), (-11.828, 9.611, 0.000), (-11.860, 9.709, 0.000), (-11.867, 9.734, 0.000), (-11.878, 9.758, 0.000), (-11.913, 9.834, 0.000), (-11.950, 9.908, 0.000), (-11.954, 9.916, 0.000), (-11.958, 9.923, 0.000), (-11.985, 9.974, 0.000), (-12.013, 10.025, 0.000), (-12.285, 10.517, 0.000), (-12.557, 11.010, 0.000), (-12.607, 11.100, 0.000), (-12.662, 11.188, 0.000), (-12.685, 11.223, 0.000), (-12.710, 11.258, 0.000), (-12.741, 11.302, 0.000), (-12.783, 11.336, 0.000), (-12.831, 11.374, 0.000), (-12.890, 11.387, 0.000), (-12.913, 11.391, 0.000), (-12.936, 11.391, 0.000), (-13.018, 11.392, 0.000), (-13.084, 11.345, 0.000), (-13.128, 11.314, 0.000), (-13.160, 11.272, 0.000), (-13.163, 11.269, 0.000), (-13.166, 11.265, 0.000), (-13.228, 11.183, 0.000), (-13.282, 11.095, 0.000), (-13.305, 11.059, 0.000), (-13.327, 11.022, 0.000), (-13.591, 10.577, 0.000), (-13.855, 10.132, 0.000), (-13.894, 10.065, 0.000), (-13.933, 9.999, 0.000), (-13.947, 9.977, 0.000), (-13.959, 9.954, 0.000), (-13.999, 9.882, 0.000), (-14.035, 9.809, 0.000), (-14.039, 9.800, 0.000), (-14.044, 9.792, 0.000), (-14.072, 9.735, 0.000), (-14.081, 9.673, 0.000), (-14.090, 9.600, 0.000), (-14.069, 9.530, 0.000), (-14.053, 9.479, 0.000), (-14.027, 9.433, 0.000), (-13.705, 8.840, 0.000), (-13.383, 8.247, 0.000), (-13.344, 8.175, 0.000), (-13.304, 8.105, 0.000), (-13.298, 8.093, 0.000), (-13.291, 8.083, 0.000), (-13.261, 8.038, 0.000), (-13.225, 7.998, 0.000), (-13.208, 7.978, 0.000), (-13.189, 7.959, 0.000), (-13.147, 7.913, 0.000), (-13.091, 7.887, 0.000), (-13.043, 7.864, 0.000), (-12.990, 7.864, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-12.990, 7.864, 0.000)), rs.coerce3dpoint((-12.921, 7.862, 0.000)), rs.coerce3dpoint((-12.861, 7.897, 0.000)), rs.coerce3dpoint((-12.821, 7.920, 0.000)), rs.coerce3dpoint((-12.789, 7.953, 0.000)), rs.coerce3dpoint((-12.750, 7.991, 0.000)), rs.coerce3dpoint((-12.715, 8.032, 0.000)), rs.coerce3dpoint((-12.699, 8.052, 0.000)), rs.coerce3dpoint((-12.684, 8.073, 0.000)), rs.coerce3dpoint((-12.669, 8.096, 0.000)), rs.coerce3dpoint((-12.655, 8.119, 0.000)), rs.coerce3dpoint((-12.568, 8.265, 0.000)), rs.coerce3dpoint((-12.483, 8.411, 0.000)), rs.coerce3dpoint((-12.195, 8.906, 0.000)), rs.coerce3dpoint((-11.906, 9.400, 0.000)), rs.coerce3dpoint((-11.874, 9.453, 0.000)), rs.coerce3dpoint((-11.856, 9.512, 0.000)), rs.coerce3dpoint((-11.828, 9.611, 0.000)), rs.coerce3dpoint((-11.860, 9.709, 0.000)), rs.coerce3dpoint((-11.867, 9.734, 0.000)), rs.coerce3dpoint((-11.878, 9.758, 0.000)), rs.coerce3dpoint((-11.913, 9.834, 0.000)), rs.coerce3dpoint((-11.950, 9.908, 0.000)), rs.coerce3dpoint((-11.954, 9.916, 0.000)), rs.coerce3dpoint((-11.958, 9.923, 0.000)), rs.coerce3dpoint((-11.985, 9.974, 0.000)), rs.coerce3dpoint((-12.013, 10.025, 0.000)), rs.coerce3dpoint((-12.285, 10.517, 0.000)), rs.coerce3dpoint((-12.557, 11.010, 0.000)), rs.coerce3dpoint((-12.607, 11.100, 0.000)), rs.coerce3dpoint((-12.662, 11.188, 0.000)), rs.coerce3dpoint((-12.685, 11.223, 0.000)), rs.coerce3dpoint((-12.710, 11.258, 0.000)), rs.coerce3dpoint((-12.741, 11.302, 0.000)), rs.coerce3dpoint((-12.783, 11.336, 0.000)), rs.coerce3dpoint((-12.831, 11.374, 0.000)), rs.coerce3dpoint((-12.890, 11.387, 0.000)), rs.coerce3dpoint((-12.913, 11.391, 0.000)), rs.coerce3dpoint((-12.936, 11.391, 0.000)), rs.coerce3dpoint((-13.018, 11.392, 0.000)), rs.coerce3dpoint((-13.084, 11.345, 0.000)), rs.coerce3dpoint((-13.128, 11.314, 0.000)), rs.coerce3dpoint((-13.160, 11.272, 0.000)), rs.coerce3dpoint((-13.163, 11.269, 0.000)), rs.coerce3dpoint((-13.166, 11.265, 0.000)), rs.coerce3dpoint((-13.228, 11.183, 0.000)), rs.coerce3dpoint((-13.282, 11.095, 0.000)), rs.coerce3dpoint((-13.305, 11.059, 0.000)), rs.coerce3dpoint((-13.327, 11.022, 0.000)), rs.coerce3dpoint((-13.591, 10.577, 0.000)), rs.coerce3dpoint((-13.855, 10.132, 0.000)), rs.coerce3dpoint((-13.894, 10.065, 0.000)), rs.coerce3dpoint((-13.933, 9.999, 0.000)), rs.coerce3dpoint((-13.947, 9.977, 0.000)), rs.coerce3dpoint((-13.959, 9.954, 0.000)), rs.coerce3dpoint((-13.999, 9.882, 0.000)), rs.coerce3dpoint((-14.035, 9.809, 0.000)), rs.coerce3dpoint((-14.039, 9.800, 0.000)), rs.coerce3dpoint((-14.044, 9.792, 0.000)), rs.coerce3dpoint((-14.072, 9.735, 0.000)), rs.coerce3dpoint((-14.081, 9.673, 0.000)), rs.coerce3dpoint((-14.090, 9.600, 0.000)), rs.coerce3dpoint((-14.069, 9.530, 0.000)), rs.coerce3dpoint((-14.053, 9.479, 0.000)), rs.coerce3dpoint((-14.027, 9.433, 0.000)), rs.coerce3dpoint((-13.705, 8.840, 0.000)), rs.coerce3dpoint((-13.383, 8.247, 0.000)), rs.coerce3dpoint((-13.344, 8.175, 0.000)), rs.coerce3dpoint((-13.304, 8.105, 0.000)), rs.coerce3dpoint((-13.298, 8.093, 0.000)), rs.coerce3dpoint((-13.291, 8.083, 0.000)), rs.coerce3dpoint((-13.261, 8.038, 0.000)), rs.coerce3dpoint((-13.225, 7.998, 0.000)), rs.coerce3dpoint((-13.208, 7.978, 0.000)), rs.coerce3dpoint((-13.189, 7.959, 0.000)), rs.coerce3dpoint((-13.147, 7.913, 0.000)), rs.coerce3dpoint((-13.091, 7.887, 0.000)), rs.coerce3dpoint((-13.043, 7.864, 0.000)), rs.coerce3dpoint((-12.990, 7.864, 0.000))], [0.0, 0.0, 0.134203427789, 0.134203427789, 0.225987843056, 0.225987843056, 0.334558634334, 0.334558634334, 0.386039567249, 0.386039567249, 0.440476649938, 0.440476649938, 0.779337170072, 0.779337170072, 1.92421920535, 1.92421920535, 2.04682819518, 2.04682819518, 2.24741542911, 2.24741542911, 2.29969608037, 2.29969608037, 2.46632421423, 2.46632421423, 2.48276102769, 2.48276102769, 2.59844241440, 2.59844241440, 3.72364312167, 3.72364312167, 3.93056268794, 3.93056268794, 4.01531531861, 4.01531531861, 4.12255081583, 4.12255081583, 4.24264890441, 4.24264890441, 4.28883080847, 4.28883080847, 4.44646716207, 4.44646716207, 4.55182391369, 4.55182391369, 4.56144232115, 4.56144232115, 4.76705860356, 4.76705860356, 4.85310859378, 4.85310859378, 5.88742404199, 5.88742404199, 6.04243239041, 6.04243239041, 6.09399082436, 6.09399082436, 6.25793141311, 6.25793141311, 6.27706094314, 6.27706094314, 6.40232726129, 6.40232726129, 6.54702250520, 6.54702250520, 6.65251135155, 6.65251135155, 8.00253897111, 8.00253897111, 8.16464885011, 8.16464885011, 8.19069232424, 8.19069232424, 8.29762677685, 8.29762677685, 8.35075364203, 8.35075364203, 8.47314985591, 8.47314985591, 8.57837903812, 8.57837903812], 2, [1.0, 0.962570618565, 1.0, 0.991088663666, 1.0, 0.998790411994, 1.0, 0.99914338705, 1.0, 0.999323109168, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.991559749864, 1.0, 0.955645261438, 1.0, 0.998067449182, 1.0, 0.999762408228, 1.0, 1.0, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 0.999488131038, 1.0, 0.9997023643, 1.0, 0.989884046372, 1.0, 0.972212142301, 1.0, 0.995868054161, 1.0, 0.951288045239, 1.0, 0.989369584793, 1.0, 1.0, 1.0, 0.998867761345, 1.0, 0.99996128075, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999935022111, 1.0, 0.999692527277, 1.0, 1.0, 1.0, 0.986184971261, 1.0, 0.977569907714, 1.0, 0.994163462437, 1.0, 1.0, 1.0, 0.999943821578, 1.0, 0.999591103615, 1.0, 0.99697815269, 1.0, 0.999862229491, 1.0, 0.982111444216, 1.0, 0.975874083472, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-11.375, 30.678, 0.000), (-11.379, 30.834, 0.000), (-11.380, 30.990, 0.000), (-11.381, 31.151, 0.000), (-11.385, 31.313, 0.000), (-11.396, 31.422, 0.000), (-11.433, 31.526, 0.000), (-11.473, 31.638, 0.000), (-11.546, 31.733, 0.000), (-11.632, 31.842, 0.000), (-11.753, 31.910, 0.000), (-11.794, 31.933, 0.000), (-11.837, 31.951, 0.000), (-11.926, 31.981, 0.000), (-12.020, 31.986, 0.000), (-12.178, 31.994, 0.000), (-12.318, 31.923, 0.000), (-12.401, 31.881, 0.000), (-12.471, 31.819, 0.000), (-12.537, 31.761, 0.000), (-12.591, 31.692, 0.000), (-12.723, 31.524, 0.000), (-12.839, 31.344, 0.000), (-12.984, 31.118, 0.000), (-13.108, 30.879, 0.000), (-13.173, 30.754, 0.000), (-13.232, 30.626, 0.000), (-13.282, 30.519, 0.000), (-13.329, 30.412, 0.000), (-13.349, 30.366, 0.000), (-13.366, 30.318, 0.000), (-13.373, 30.298, 0.000), (-13.378, 30.278, 0.000), (-13.403, 30.190, 0.000), (-13.397, 30.098, 0.000), (-13.390, 30.006, 0.000), (-13.352, 29.921, 0.000), (-13.322, 29.852, 0.000), (-13.277, 29.791, 0.000), (-13.216, 29.707, 0.000), (-13.134, 29.642, 0.000), (-12.990, 29.527, 0.000), (-12.806, 29.507, 0.000), (-12.791, 29.505, 0.000), (-12.776, 29.504, 0.000), (-12.581, 29.489, 0.000), (-12.386, 29.484, 0.000), (-12.204, 29.479, 0.000), (-12.022, 29.488, 0.000), (-11.918, 29.493, 0.000), (-11.818, 29.527, 0.000), (-11.695, 29.568, 0.000), (-11.598, 29.656, 0.000), (-11.505, 29.741, 0.000), (-11.451, 29.856, 0.000), (-11.405, 29.954, 0.000), (-11.389, 30.062, 0.000), (-11.381, 30.111, 0.000), (-11.379, 30.161, 0.000), (-11.374, 30.281, 0.000), (-11.375, 30.401, 0.000), (-11.375, 30.442, 0.000), (-11.375, 30.483, 0.000), (-11.376, 30.581, 0.000), (-11.375, 30.678, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-11.375, 30.678, 0.000)), rs.coerce3dpoint((-11.379, 30.834, 0.000)), rs.coerce3dpoint((-11.380, 30.990, 0.000)), rs.coerce3dpoint((-11.381, 31.151, 0.000)), rs.coerce3dpoint((-11.385, 31.313, 0.000)), rs.coerce3dpoint((-11.396, 31.422, 0.000)), rs.coerce3dpoint((-11.433, 31.526, 0.000)), rs.coerce3dpoint((-11.473, 31.638, 0.000)), rs.coerce3dpoint((-11.546, 31.733, 0.000)), rs.coerce3dpoint((-11.632, 31.842, 0.000)), rs.coerce3dpoint((-11.753, 31.910, 0.000)), rs.coerce3dpoint((-11.794, 31.933, 0.000)), rs.coerce3dpoint((-11.837, 31.951, 0.000)), rs.coerce3dpoint((-11.926, 31.981, 0.000)), rs.coerce3dpoint((-12.020, 31.986, 0.000)), rs.coerce3dpoint((-12.178, 31.994, 0.000)), rs.coerce3dpoint((-12.318, 31.923, 0.000)), rs.coerce3dpoint((-12.401, 31.881, 0.000)), rs.coerce3dpoint((-12.471, 31.819, 0.000)), rs.coerce3dpoint((-12.537, 31.761, 0.000)), rs.coerce3dpoint((-12.591, 31.692, 0.000)), rs.coerce3dpoint((-12.723, 31.524, 0.000)), rs.coerce3dpoint((-12.839, 31.344, 0.000)), rs.coerce3dpoint((-12.984, 31.118, 0.000)), rs.coerce3dpoint((-13.108, 30.879, 0.000)), rs.coerce3dpoint((-13.173, 30.754, 0.000)), rs.coerce3dpoint((-13.232, 30.626, 0.000)), rs.coerce3dpoint((-13.282, 30.519, 0.000)), rs.coerce3dpoint((-13.329, 30.412, 0.000)), rs.coerce3dpoint((-13.349, 30.366, 0.000)), rs.coerce3dpoint((-13.366, 30.318, 0.000)), rs.coerce3dpoint((-13.373, 30.298, 0.000)), rs.coerce3dpoint((-13.378, 30.278, 0.000)), rs.coerce3dpoint((-13.403, 30.190, 0.000)), rs.coerce3dpoint((-13.397, 30.098, 0.000)), rs.coerce3dpoint((-13.390, 30.006, 0.000)), rs.coerce3dpoint((-13.352, 29.921, 0.000)), rs.coerce3dpoint((-13.322, 29.852, 0.000)), rs.coerce3dpoint((-13.277, 29.791, 0.000)), rs.coerce3dpoint((-13.216, 29.707, 0.000)), rs.coerce3dpoint((-13.134, 29.642, 0.000)), rs.coerce3dpoint((-12.990, 29.527, 0.000)), rs.coerce3dpoint((-12.806, 29.507, 0.000)), rs.coerce3dpoint((-12.791, 29.505, 0.000)), rs.coerce3dpoint((-12.776, 29.504, 0.000)), rs.coerce3dpoint((-12.581, 29.489, 0.000)), rs.coerce3dpoint((-12.386, 29.484, 0.000)), rs.coerce3dpoint((-12.204, 29.479, 0.000)), rs.coerce3dpoint((-12.022, 29.488, 0.000)), rs.coerce3dpoint((-11.918, 29.493, 0.000)), rs.coerce3dpoint((-11.818, 29.527, 0.000)), rs.coerce3dpoint((-11.695, 29.568, 0.000)), rs.coerce3dpoint((-11.598, 29.656, 0.000)), rs.coerce3dpoint((-11.505, 29.741, 0.000)), rs.coerce3dpoint((-11.451, 29.856, 0.000)), rs.coerce3dpoint((-11.405, 29.954, 0.000)), rs.coerce3dpoint((-11.389, 30.062, 0.000)), rs.coerce3dpoint((-11.381, 30.111, 0.000)), rs.coerce3dpoint((-11.379, 30.161, 0.000)), rs.coerce3dpoint((-11.374, 30.281, 0.000)), rs.coerce3dpoint((-11.375, 30.401, 0.000)), rs.coerce3dpoint((-11.375, 30.442, 0.000)), rs.coerce3dpoint((-11.375, 30.483, 0.000)), rs.coerce3dpoint((-11.376, 30.581, 0.000)), rs.coerce3dpoint((-11.375, 30.678, 0.000))], [0.0, 0.0, 0.312327178767, 0.312327178767, 0.634980589214, 0.634980589214, 0.853875301331, 0.853875301331, 1.09083050950, 1.09083050950, 1.36494384045, 1.36494384045, 1.45883800036, 1.45883800036, 1.64602917241, 1.64602917241, 1.95363315147, 1.95363315147, 2.13917224611, 2.13917224611, 2.31402376203, 2.31402376203, 2.74143611976, 2.74143611976, 3.27912792570, 3.27912792570, 3.56124382224, 3.56124382224, 3.79555187543, 3.79555187543, 3.89638976508, 3.89638976508, 3.93868694431, 3.93868694431, 4.12037297445, 4.12037297445, 4.30415728282, 4.30415728282, 4.45457521180, 4.45457521180, 4.66188508868, 4.66188508868, 5.02065840251, 5.02065840251, 5.05164784448, 5.05164784448, 5.44222664564, 5.44222664564, 5.80579070578, 5.80579070578, 6.01390263907, 6.01390263907, 6.27142212094, 6.27142212094, 6.52061534752, 6.52061534752, 6.73650203021, 6.73650203021, 6.83694778931, 6.83694778931, 7.07657237011, 7.07657237011, 7.15904349112, 7.15904349112, 7.35322635717, 7.35322635717], 2, [1.0, 0.999971120417, 1.0, 0.99995950082, 1.0, 0.992873404989, 1.0, 0.987091140598, 1.0, 0.981089922177, 1.0, 0.998272772946, 1.0, 0.991062122134, 1.0, 0.9665098457, 1.0, 0.991790556371, 1.0, 0.995940237597, 1.0, 0.998809988485, 1.0, 0.998914809139, 1.0, 0.999744652605, 1.0, 0.99991022403, 1.0, 0.999352209884, 1.0, 0.99946222464, 1.0, 0.985350476054, 1.0, 0.984975718785, 1.0, 0.994184956666, 1.0, 0.990659328765, 1.0, 0.961391787529, 1.0, 0.999758029278, 1.0, 0.999716820101, 1.0, 0.999255297394, 1.0, 0.990358385523, 1.0, 0.979004738727, 1.0, 0.980820585828, 1.0, 0.989912259197, 1.0, 0.998433228349, 1.0, 0.999712041466, 1.0, 1.0, 1.0, 0.999955820976, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-18.102, -3.157, 0.000), (-18.101, -2.697, 0.000), (-18.100, -2.237, 0.000), (-18.099, -1.579, 0.000), (-18.098, -0.921, 0.000), (-18.097, -0.819, 0.000), (-18.097, -0.718, 0.000), (-18.097, -0.682, 0.000), (-18.096, -0.645, 0.000), (-18.096, -0.644, 0.000), (-18.096, -0.643, 0.000), (-18.094, -0.585, 0.000), (-18.102, -0.527, 0.000), (-18.107, -0.488, 0.000), (-18.114, -0.448, 0.000), (-18.140, -0.290, 0.000), (-18.214, -0.149, 0.000), (-18.304, 0.024, 0.000), (-18.459, 0.143, 0.000), (-18.737, 0.356, 0.000), (-19.085, 0.308, 0.000), (-19.245, 0.285, 0.000), (-19.388, 0.209, 0.000), (-19.429, 0.187, 0.000), (-19.468, 0.162, 0.000), (-19.583, 0.087, 0.000), (-19.676, -0.015, 0.000), (-19.755, -0.100, 0.000), (-19.814, -0.200, 0.000), (-20.590, -1.546, 0.000), (-21.366, -2.893, 0.000), (-21.586, -3.273, 0.000), (-21.802, -3.654, 0.000), (-21.872, -3.778, 0.000), (-21.939, -3.902, 0.000), (-21.964, -3.950, 0.000), (-21.987, -3.999, 0.000), (-21.993, -4.015, 0.000), (-22.000, -4.031, 0.000), (-22.041, -4.140, 0.000), (-22.057, -4.255, 0.000), (-22.070, -4.351, 0.000), (-22.072, -4.447, 0.000), (-22.074, -4.508, 0.000), (-22.074, -4.569, 0.000), (-22.079, -6.741, 0.000), (-22.084, -8.914, 0.000), (-22.085, -9.033, 0.000), (-22.077, -9.151, 0.000), (-22.065, -9.323, 0.000), (-22.048, -9.494, 0.000), (-22.046, -9.519, 0.000), (-22.043, -9.543, 0.000), (-22.032, -9.662, 0.000), (-22.002, -9.779, 0.000), (-21.973, -9.890, 0.000), (-21.919, -9.993, 0.000), (-21.846, -10.131, 0.000), (-21.728, -10.235, 0.000), (-21.658, -10.298, 0.000), (-21.579, -10.348, 0.000), (-21.513, -10.390, 0.000), (-21.442, -10.422, 0.000), (-21.363, -10.456, 0.000), (-21.278, -10.466, 0.000), (-21.176, -10.477, 0.000), (-21.077, -10.449, 0.000), (-20.994, -10.425, 0.000), (-20.919, -10.383, 0.000), (-20.833, -10.334, 0.000), (-20.756, -10.271, 0.000), (-20.661, -10.192, 0.000), (-20.577, -10.102, 0.000), (-20.516, -10.036, 0.000), (-20.458, -9.966, 0.000), (-20.386, -9.870, 0.000), (-20.318, -9.770, 0.000), (-20.186, -9.574, 0.000), (-20.060, -9.373, 0.000), (-19.840, -9.023, 0.000), (-19.627, -8.669, 0.000), (-19.303, -8.129, 0.000), (-18.985, -7.586, 0.000), (-18.899, -7.438, 0.000), (-18.812, -7.291, 0.000), (-18.616, -6.956, 0.000), (-18.421, -6.620, 0.000), (-18.355, -6.507, 0.000), (-18.293, -6.392, 0.000), (-18.258, -6.328, 0.000), (-18.229, -6.261, 0.000), (-18.176, -6.145, 0.000), (-18.146, -6.020, 0.000), (-18.125, -5.931, 0.000), (-18.115, -5.839, 0.000), (-18.107, -5.764, 0.000), (-18.105, -5.690, 0.000), (-18.101, -5.547, 0.000), (-18.101, -5.403, 0.000), (-18.099, -4.975, 0.000), (-18.100, -4.546, 0.000), (-18.100, -4.206, 0.000), (-18.101, -3.866, 0.000), (-18.101, -3.511, 0.000), (-18.102, -3.157, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-18.102, -3.157, 0.000)), rs.coerce3dpoint((-18.101, -2.697, 0.000)), rs.coerce3dpoint((-18.100, -2.237, 0.000)), rs.coerce3dpoint((-18.099, -1.579, 0.000)), rs.coerce3dpoint((-18.098, -0.921, 0.000)), rs.coerce3dpoint((-18.097, -0.819, 0.000)), rs.coerce3dpoint((-18.097, -0.718, 0.000)), rs.coerce3dpoint((-18.097, -0.682, 0.000)), rs.coerce3dpoint((-18.096, -0.645, 0.000)), rs.coerce3dpoint((-18.096, -0.644, 0.000)), rs.coerce3dpoint((-18.096, -0.643, 0.000)), rs.coerce3dpoint((-18.094, -0.585, 0.000)), rs.coerce3dpoint((-18.102, -0.527, 0.000)), rs.coerce3dpoint((-18.107, -0.488, 0.000)), rs.coerce3dpoint((-18.114, -0.448, 0.000)), rs.coerce3dpoint((-18.140, -0.290, 0.000)), rs.coerce3dpoint((-18.214, -0.149, 0.000)), rs.coerce3dpoint((-18.304, 0.024, 0.000)), rs.coerce3dpoint((-18.459, 0.143, 0.000)), rs.coerce3dpoint((-18.737, 0.356, 0.000)), rs.coerce3dpoint((-19.085, 0.308, 0.000)), rs.coerce3dpoint((-19.245, 0.285, 0.000)), rs.coerce3dpoint((-19.388, 0.209, 0.000)), rs.coerce3dpoint((-19.429, 0.187, 0.000)), rs.coerce3dpoint((-19.468, 0.162, 0.000)), rs.coerce3dpoint((-19.583, 0.087, 0.000)), rs.coerce3dpoint((-19.676, -0.015, 0.000)), rs.coerce3dpoint((-19.755, -0.100, 0.000)), rs.coerce3dpoint((-19.814, -0.200, 0.000)), rs.coerce3dpoint((-20.590, -1.546, 0.000)), rs.coerce3dpoint((-21.366, -2.893, 0.000)), rs.coerce3dpoint((-21.586, -3.273, 0.000)), rs.coerce3dpoint((-21.802, -3.654, 0.000)), rs.coerce3dpoint((-21.872, -3.778, 0.000)), rs.coerce3dpoint((-21.939, -3.902, 0.000)), rs.coerce3dpoint((-21.964, -3.950, 0.000)), rs.coerce3dpoint((-21.987, -3.999, 0.000)), rs.coerce3dpoint((-21.993, -4.015, 0.000)), rs.coerce3dpoint((-22.000, -4.031, 0.000)), rs.coerce3dpoint((-22.041, -4.140, 0.000)), rs.coerce3dpoint((-22.057, -4.255, 0.000)), rs.coerce3dpoint((-22.070, -4.351, 0.000)), rs.coerce3dpoint((-22.072, -4.447, 0.000)), rs.coerce3dpoint((-22.074, -4.508, 0.000)), rs.coerce3dpoint((-22.074, -4.569, 0.000)), rs.coerce3dpoint((-22.079, -6.741, 0.000)), rs.coerce3dpoint((-22.084, -8.914, 0.000)), rs.coerce3dpoint((-22.085, -9.033, 0.000)), rs.coerce3dpoint((-22.077, -9.151, 0.000)), rs.coerce3dpoint((-22.065, -9.323, 0.000)), rs.coerce3dpoint((-22.048, -9.494, 0.000)), rs.coerce3dpoint((-22.046, -9.519, 0.000)), rs.coerce3dpoint((-22.043, -9.543, 0.000)), rs.coerce3dpoint((-22.032, -9.662, 0.000)), rs.coerce3dpoint((-22.002, -9.779, 0.000)), rs.coerce3dpoint((-21.973, -9.890, 0.000)), rs.coerce3dpoint((-21.919, -9.993, 0.000)), rs.coerce3dpoint((-21.846, -10.131, 0.000)), rs.coerce3dpoint((-21.728, -10.235, 0.000)), rs.coerce3dpoint((-21.658, -10.298, 0.000)), rs.coerce3dpoint((-21.579, -10.348, 0.000)), rs.coerce3dpoint((-21.513, -10.390, 0.000)), rs.coerce3dpoint((-21.442, -10.422, 0.000)), rs.coerce3dpoint((-21.363, -10.456, 0.000)), rs.coerce3dpoint((-21.278, -10.466, 0.000)), rs.coerce3dpoint((-21.176, -10.477, 0.000)), rs.coerce3dpoint((-21.077, -10.449, 0.000)), rs.coerce3dpoint((-20.994, -10.425, 0.000)), rs.coerce3dpoint((-20.919, -10.383, 0.000)), rs.coerce3dpoint((-20.833, -10.334, 0.000)), rs.coerce3dpoint((-20.756, -10.271, 0.000)), rs.coerce3dpoint((-20.661, -10.192, 0.000)), rs.coerce3dpoint((-20.577, -10.102, 0.000)), rs.coerce3dpoint((-20.516, -10.036, 0.000)), rs.coerce3dpoint((-20.458, -9.966, 0.000)), rs.coerce3dpoint((-20.386, -9.870, 0.000)), rs.coerce3dpoint((-20.318, -9.770, 0.000)), rs.coerce3dpoint((-20.186, -9.574, 0.000)), rs.coerce3dpoint((-20.060, -9.373, 0.000)), rs.coerce3dpoint((-19.840, -9.023, 0.000)), rs.coerce3dpoint((-19.627, -8.669, 0.000)), rs.coerce3dpoint((-19.303, -8.129, 0.000)), rs.coerce3dpoint((-18.985, -7.586, 0.000)), rs.coerce3dpoint((-18.899, -7.438, 0.000)), rs.coerce3dpoint((-18.812, -7.291, 0.000)), rs.coerce3dpoint((-18.616, -6.956, 0.000)), rs.coerce3dpoint((-18.421, -6.620, 0.000)), rs.coerce3dpoint((-18.355, -6.507, 0.000)), rs.coerce3dpoint((-18.293, -6.392, 0.000)), rs.coerce3dpoint((-18.258, -6.328, 0.000)), rs.coerce3dpoint((-18.229, -6.261, 0.000)), rs.coerce3dpoint((-18.176, -6.145, 0.000)), rs.coerce3dpoint((-18.146, -6.020, 0.000)), rs.coerce3dpoint((-18.125, -5.931, 0.000)), rs.coerce3dpoint((-18.115, -5.839, 0.000)), rs.coerce3dpoint((-18.107, -5.764, 0.000)), rs.coerce3dpoint((-18.105, -5.690, 0.000)), rs.coerce3dpoint((-18.101, -5.547, 0.000)), rs.coerce3dpoint((-18.101, -5.403, 0.000)), rs.coerce3dpoint((-18.099, -4.975, 0.000)), rs.coerce3dpoint((-18.100, -4.546, 0.000)), rs.coerce3dpoint((-18.100, -4.206, 0.000)), rs.coerce3dpoint((-18.101, -3.866, 0.000)), rs.coerce3dpoint((-18.101, -3.511, 0.000)), rs.coerce3dpoint((-18.102, -3.157, 0.000))], [0.0, 0.0, 0.919570273157, 0.919570273157, 2.23594944118, 2.23594944118, 2.43866493538, 2.43866493538, 2.51139794904, 2.51139794904, 2.51363367476, 2.51363367476, 2.62953629090, 2.62953629090, 2.70974710595, 2.70974710595, 3.02666576740, 3.02666576740, 3.41060346843, 3.41060346843, 4.07475633703, 4.07475633703, 4.39505998835, 4.39505998835, 4.48798606092, 4.48798606092, 4.76165949379, 4.76165949379, 4.99335642358, 4.99335642358, 8.10112997006, 8.10112997006, 8.9787887236, 8.9787887236, 9.26185859555, 9.26185859555, 9.36968073006, 9.36968073006, 9.40440752171, 9.40440752171, 9.63596607301, 9.63596607301, 9.82908665513, 9.82908665513, 9.95035850726, 9.95035850726, 14.2961283810, 14.2961283810, 14.5324763750, 14.5324763750, 14.8774996465, 14.8774996465, 14.9261060183, 14.9261060183, 15.1659387715, 15.1659387715, 15.3959279181, 15.3959279181, 15.7065061348, 15.7065061348, 15.8938532621, 15.8938532621, 16.0494284247, 16.0494284247, 16.2200574099, 16.2200574099, 16.4230743850, 16.4230743850, 16.5952354554, 16.5952354554, 16.7923408296, 16.7923408296, 17.0389740284, 17.0389740284, 17.2194521568, 17.2194521568, 17.4601744700, 17.4601744700, 17.9336451400, 17.9336451400, 18.7608169338, 18.7608169338, 20.0196957222, 20.0196957222, 20.3614380374, 20.3614380374, 21.1382741496, 21.1382741496, 21.3998880596, 21.3998880596, 21.5452260139, 21.5452260139, 21.8001834622, 21.8001834622, 21.9847867153, 21.9847867153, 22.1342426536, 22.1342426536, 22.4203893180, 22.4203893180, 23.2779600494, 23.2779600494, 23.9576487022, 23.9576487022, 24.6672068784, 24.6672068784], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999971120417, 1.0, 1.0, 1.0, 0.996478212433, 1.0, 0.999740113775, 1.0, 0.98756418851, 1.0, 0.976559565041, 1.0, 0.922261422152, 1.0, 0.984872709468, 1.0, 0.998979001485, 1.0, 0.992242685122, 1.0, 0.994334315586, 1.0, 1.0, 1.0, 0.999992780026, 1.0, 0.99992062315, 1.0, 0.999278260548, 1.0, 0.999707222866, 1.0, 0.993108945408, 1.0, 0.998617576209, 1.0, 0.999848631457, 1.0, 1.0, 1.0, 0.99923978907, 1.0, 0.99988142703, 1.0, 1.0, 1.0, 0.996643642038, 1.0, 0.993477660053, 1.0, 0.984000937083, 1.0, 0.996740999211, 1.0, 0.99665996724, 1.0, 0.989078348712, 1.0, 0.981395469288, 1.0, 0.992920826357, 1.0, 0.996187899929, 1.0, 0.99778467655, 1.0, 0.999475257713, 1.0, 0.999608076817, 1.0, 0.999862229491, 1.0, 0.99995000125, 1.0, 0.999983180141, 1.0, 1.0, 1.0, 0.999994880013, 1.0, 0.999893425679, 1.0, 0.999176159496, 1.0, 0.995849909532, 1.0, 0.99799223758, 1.0, 0.999176159496, 1.0, 0.99991550357, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.342, 10.436, 0.000), (5.349, 11.973, 0.000), (5.356, 13.509, 0.000), (5.357, 13.656, 0.000), (5.356, 13.802, 0.000), (5.356, 13.817, 0.000), (5.355, 13.831, 0.000), (5.354, 13.892, 0.000), (5.346, 13.952, 0.000), (5.342, 13.985, 0.000), (5.339, 14.017, 0.000), (5.319, 14.176, 0.000), (5.253, 14.322, 0.000), (5.175, 14.494, 0.000), (5.036, 14.621, 0.000), (4.767, 14.866, 0.000), (4.405, 14.842, 0.000), (4.229, 14.831, 0.000), (4.069, 14.756, 0.000), (3.969, 14.709, 0.000), (3.880, 14.644, 0.000), (3.741, 14.540, 0.000), (3.627, 14.409, 0.000), (3.524, 14.289, 0.000), (3.439, 14.156, 0.000), (3.390, 14.081, 0.000), (3.346, 14.004, 0.000), (3.114, 13.602, 0.000), (2.882, 13.200, 0.000), (2.237, 12.084, 0.000), (1.592, 10.967, 0.000), (1.366, 10.575, 0.000), (1.144, 10.181, 0.000), (1.052, 10.020, 0.000), (0.965, 9.856, 0.000), (0.923, 9.777, 0.000), (0.886, 9.694, 0.000), (0.867, 9.653, 0.000), (0.852, 9.610, 0.000), (0.824, 9.537, 0.000), (0.808, 9.460, 0.000), (0.782, 9.334, 0.000), (0.801, 9.207, 0.000), (0.815, 9.111, 0.000), (0.847, 9.019, 0.000), (0.886, 8.907, 0.000), (0.939, 8.802, 0.000), (0.973, 8.732, 0.000), (1.011, 8.664, 0.000), (1.324, 8.098, 0.000), (1.641, 7.535, 0.000), (1.806, 7.242, 0.000), (1.977, 6.952, 0.000), (2.074, 6.787, 0.000), (2.177, 6.626, 0.000), (2.240, 6.528, 0.000), (2.310, 6.435, 0.000), (2.358, 6.370, 0.000), (2.415, 6.312, 0.000), (2.448, 6.279, 0.000), (2.485, 6.250, 0.000), (2.527, 6.216, 0.000), (2.577, 6.195, 0.000), (2.627, 6.174, 0.000), (2.680, 6.164, 0.000), (2.755, 6.149, 0.000), (2.832, 6.143, 0.000), (2.959, 6.132, 0.000), (3.087, 6.129, 0.000), (3.188, 6.125, 0.000), (3.290, 6.124, 0.000), (3.607, 6.119, 0.000), (3.924, 6.122, 0.000), (4.115, 6.124, 0.000), (4.306, 6.135, 0.000), (4.428, 6.142, 0.000), (4.548, 6.158, 0.000), (4.631, 6.170, 0.000), (4.712, 6.192, 0.000), (4.802, 6.217, 0.000), (4.883, 6.264, 0.000), (4.954, 6.305, 0.000), (5.014, 6.361, 0.000), (5.075, 6.419, 0.000), (5.116, 6.493, 0.000), (5.143, 6.538, 0.000), (5.164, 6.586, 0.000), (5.191, 6.651, 0.000), (5.207, 6.720, 0.000), (5.229, 6.813, 0.000), (5.242, 6.908, 0.000), (5.263, 7.060, 0.000), (5.275, 7.213, 0.000), (5.294, 7.464, 0.000), (5.305, 7.716, 0.000), (5.321, 8.124, 0.000), (5.328, 8.532, 0.000), (5.340, 9.189, 0.000), (5.341, 9.847, 0.000), (5.342, 10.142, 0.000), (5.342, 10.436, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.342, 10.436, 0.000)), rs.coerce3dpoint((5.349, 11.973, 0.000)), rs.coerce3dpoint((5.356, 13.509, 0.000)), rs.coerce3dpoint((5.357, 13.656, 0.000)), rs.coerce3dpoint((5.356, 13.802, 0.000)), rs.coerce3dpoint((5.356, 13.817, 0.000)), rs.coerce3dpoint((5.355, 13.831, 0.000)), rs.coerce3dpoint((5.354, 13.892, 0.000)), rs.coerce3dpoint((5.346, 13.952, 0.000)), rs.coerce3dpoint((5.342, 13.985, 0.000)), rs.coerce3dpoint((5.339, 14.017, 0.000)), rs.coerce3dpoint((5.319, 14.176, 0.000)), rs.coerce3dpoint((5.253, 14.322, 0.000)), rs.coerce3dpoint((5.175, 14.494, 0.000)), rs.coerce3dpoint((5.036, 14.621, 0.000)), rs.coerce3dpoint((4.767, 14.866, 0.000)), rs.coerce3dpoint((4.405, 14.842, 0.000)), rs.coerce3dpoint((4.229, 14.831, 0.000)), rs.coerce3dpoint((4.069, 14.756, 0.000)), rs.coerce3dpoint((3.969, 14.709, 0.000)), rs.coerce3dpoint((3.880, 14.644, 0.000)), rs.coerce3dpoint((3.741, 14.540, 0.000)), rs.coerce3dpoint((3.627, 14.409, 0.000)), rs.coerce3dpoint((3.524, 14.289, 0.000)), rs.coerce3dpoint((3.439, 14.156, 0.000)), rs.coerce3dpoint((3.390, 14.081, 0.000)), rs.coerce3dpoint((3.346, 14.004, 0.000)), rs.coerce3dpoint((3.114, 13.602, 0.000)), rs.coerce3dpoint((2.882, 13.200, 0.000)), rs.coerce3dpoint((2.237, 12.084, 0.000)), rs.coerce3dpoint((1.592, 10.967, 0.000)), rs.coerce3dpoint((1.366, 10.575, 0.000)), rs.coerce3dpoint((1.144, 10.181, 0.000)), rs.coerce3dpoint((1.052, 10.020, 0.000)), rs.coerce3dpoint((0.965, 9.856, 0.000)), rs.coerce3dpoint((0.923, 9.777, 0.000)), rs.coerce3dpoint((0.886, 9.694, 0.000)), rs.coerce3dpoint((0.867, 9.653, 0.000)), rs.coerce3dpoint((0.852, 9.610, 0.000)), rs.coerce3dpoint((0.824, 9.537, 0.000)), rs.coerce3dpoint((0.808, 9.460, 0.000)), rs.coerce3dpoint((0.782, 9.334, 0.000)), rs.coerce3dpoint((0.801, 9.207, 0.000)), rs.coerce3dpoint((0.815, 9.111, 0.000)), rs.coerce3dpoint((0.847, 9.019, 0.000)), rs.coerce3dpoint((0.886, 8.907, 0.000)), rs.coerce3dpoint((0.939, 8.802, 0.000)), rs.coerce3dpoint((0.973, 8.732, 0.000)), rs.coerce3dpoint((1.011, 8.664, 0.000)), rs.coerce3dpoint((1.324, 8.098, 0.000)), rs.coerce3dpoint((1.641, 7.535, 0.000)), rs.coerce3dpoint((1.806, 7.242, 0.000)), rs.coerce3dpoint((1.977, 6.952, 0.000)), rs.coerce3dpoint((2.074, 6.787, 0.000)), rs.coerce3dpoint((2.177, 6.626, 0.000)), rs.coerce3dpoint((2.240, 6.528, 0.000)), rs.coerce3dpoint((2.310, 6.435, 0.000)), rs.coerce3dpoint((2.358, 6.370, 0.000)), rs.coerce3dpoint((2.415, 6.312, 0.000)), rs.coerce3dpoint((2.448, 6.279, 0.000)), rs.coerce3dpoint((2.485, 6.250, 0.000)), rs.coerce3dpoint((2.527, 6.216, 0.000)), rs.coerce3dpoint((2.577, 6.195, 0.000)), rs.coerce3dpoint((2.627, 6.174, 0.000)), rs.coerce3dpoint((2.680, 6.164, 0.000)), rs.coerce3dpoint((2.755, 6.149, 0.000)), rs.coerce3dpoint((2.832, 6.143, 0.000)), rs.coerce3dpoint((2.959, 6.132, 0.000)), rs.coerce3dpoint((3.087, 6.129, 0.000)), rs.coerce3dpoint((3.188, 6.125, 0.000)), rs.coerce3dpoint((3.290, 6.124, 0.000)), rs.coerce3dpoint((3.607, 6.119, 0.000)), rs.coerce3dpoint((3.924, 6.122, 0.000)), rs.coerce3dpoint((4.115, 6.124, 0.000)), rs.coerce3dpoint((4.306, 6.135, 0.000)), rs.coerce3dpoint((4.428, 6.142, 0.000)), rs.coerce3dpoint((4.548, 6.158, 0.000)), rs.coerce3dpoint((4.631, 6.170, 0.000)), rs.coerce3dpoint((4.712, 6.192, 0.000)), rs.coerce3dpoint((4.802, 6.217, 0.000)), rs.coerce3dpoint((4.883, 6.264, 0.000)), rs.coerce3dpoint((4.954, 6.305, 0.000)), rs.coerce3dpoint((5.014, 6.361, 0.000)), rs.coerce3dpoint((5.075, 6.419, 0.000)), rs.coerce3dpoint((5.116, 6.493, 0.000)), rs.coerce3dpoint((5.143, 6.538, 0.000)), rs.coerce3dpoint((5.164, 6.586, 0.000)), rs.coerce3dpoint((5.191, 6.651, 0.000)), rs.coerce3dpoint((5.207, 6.720, 0.000)), rs.coerce3dpoint((5.229, 6.813, 0.000)), rs.coerce3dpoint((5.242, 6.908, 0.000)), rs.coerce3dpoint((5.263, 7.060, 0.000)), rs.coerce3dpoint((5.275, 7.213, 0.000)), rs.coerce3dpoint((5.294, 7.464, 0.000)), rs.coerce3dpoint((5.305, 7.716, 0.000)), rs.coerce3dpoint((5.321, 8.124, 0.000)), rs.coerce3dpoint((5.328, 8.532, 0.000)), rs.coerce3dpoint((5.340, 9.189, 0.000)), rs.coerce3dpoint((5.341, 9.847, 0.000)), rs.coerce3dpoint((5.342, 10.142, 0.000)), rs.coerce3dpoint((5.342, 10.436, 0.000))], [0.0, 0.0, 3.07304582932, 3.07304582932, 3.36582433894, 3.36582433894, 3.39464648348, 3.39464648348, 3.51636394604, 3.51636394604, 3.58119241366, 3.58119241366, 3.89936443996, 3.89936443996, 4.27159228386, 4.27159228386, 4.95859253389, 4.95859253389, 5.30769047832, 5.30769047832, 5.52743462504, 5.52743462504, 5.87346251659, 5.87346251659, 6.1894458571, 6.1894458571, 6.36694984750, 6.36694984750, 7.29549425535, 7.29549425535, 9.87373666618, 9.87373666618, 10.7787203937, 10.7787203937, 11.1497173034, 11.1497173034, 11.3298774784, 11.3298774784, 11.4207408246, 11.4207408246, 11.5776587705, 11.5776587705, 11.8314770049, 11.8314770049, 12.0260634637, 12.0260634637, 12.2619452288, 12.2619452288, 12.4177639588, 12.4177639588, 13.7099432061, 13.7099432061, 14.3828208937, 14.3828208937, 14.7654422514, 14.7654422514, 14.9979486855, 14.9979486855, 15.1597424084, 15.1597424084, 15.2539737710, 15.2539737710, 15.3613586103, 15.3613586103, 15.4692465119, 15.4692465119, 15.6222588439, 15.6222588439, 15.8778934798, 15.8778934798, 16.0808974127, 16.0808974127, 16.7147949111, 16.7147949111, 17.0976614031, 17.0976614031, 17.3405183694, 17.3405183694, 17.5076650220, 17.5076650220, 17.6940932771, 17.6940932771, 17.8573962511, 17.8573962511, 18.0249302456, 18.0249302456, 18.1295983477, 18.1295983477, 18.2707946294, 18.2707946294, 18.4616831438, 18.4616831438, 18.7685417290, 18.7685417290, 19.2723962010, 19.2723962010, 20.0889610226, 20.0889610226, 21.4036935464, 21.4036935464, 21.9935084937, 21.9935084937], 2, [1.0, 1.0, 1.0, 0.999980780185, 1.0, 1.0, 1.0, 0.998809988485, 1.0, 1.0, 1.0, 0.988783242624, 1.0, 0.979286195966, 1.0, 0.920619103117, 1.0, 0.982703764746, 1.0, 0.994831769902, 1.0, 0.994033671791, 1.0, 0.997482672462, 1.0, 0.999646282569, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999907524276, 1.0, 0.999449031825, 1.0, 0.999415350957, 1.0, 0.997236144733, 1.0, 0.984387454667, 1.0, 0.995703330557, 1.0, 0.997915594639, 1.0, 0.999646282569, 1.0, 0.999993520021, 1.0, 0.999951981153, 1.0, 0.99979600081, 1.0, 0.999300864481, 1.0, 0.997811178095, 1.0, 0.99799223758, 1.0, 0.990848388494, 1.0, 0.994952590401, 1.0, 0.998499606435, 1.0, 0.999573770855, 1.0, 0.99995950082, 1.0, 0.999907524276, 1.0, 0.99972155877, 1.0, 0.999200319872, 1.0, 0.99778467655, 1.0, 0.991220787198, 1.0, 0.993155583453, 1.0, 0.988783242624, 1.0, 0.998342494801, 1.0, 0.996461451758, 1.0, 0.998829405547, 1.0, 0.999550101227, 1.0, 0.999823295614, 1.0, 0.999928002592, 1.0, 0.999969580463, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.907, 0.651, 0.000), (5.994, 0.649, 0.000), (6.069, 0.693, 0.000), (6.120, 0.723, 0.000), (6.161, 0.764, 0.000), (6.210, 0.812, 0.000), (6.254, 0.865, 0.000), (6.275, 0.890, 0.000), (6.294, 0.917, 0.000), (6.313, 0.945, 0.000), (6.330, 0.975, 0.000), (6.440, 1.160, 0.000), (6.548, 1.345, 0.000), (6.914, 1.971, 0.000), (7.279, 2.597, 0.000), (7.320, 2.664, 0.000), (7.342, 2.739, 0.000), (7.379, 2.865, 0.000), (7.338, 2.989, 0.000), (7.328, 3.021, 0.000), (7.314, 3.051, 0.000), (7.271, 3.147, 0.000), (7.223, 3.241, 0.000), (7.218, 3.251, 0.000), (7.214, 3.260, 0.000), (7.180, 3.325, 0.000), (7.144, 3.389, 0.000), (6.799, 4.013, 0.000), (6.455, 4.636, 0.000), (6.392, 4.751, 0.000), (6.321, 4.862, 0.000), (6.292, 4.907, 0.000), (6.261, 4.951, 0.000), (6.222, 5.007, 0.000), (6.169, 5.049, 0.000), (6.108, 5.098, 0.000), (6.032, 5.114, 0.000), (6.003, 5.119, 0.000), (5.974, 5.120, 0.000), (5.871, 5.121, 0.000), (5.787, 5.061, 0.000), (5.732, 5.022, 0.000), (5.691, 4.969, 0.000), (5.687, 4.964, 0.000), (5.683, 4.960, 0.000), (5.605, 4.855, 0.000), (5.536, 4.744, 0.000), (5.508, 4.698, 0.000), (5.480, 4.651, 0.000), (5.145, 4.088, 0.000), (4.811, 3.525, 0.000), (4.761, 3.440, 0.000), (4.711, 3.356, 0.000), (4.695, 3.328, 0.000), (4.679, 3.299, 0.000), (4.628, 3.208, 0.000), (4.583, 3.115, 0.000), (4.577, 3.104, 0.000), (4.572, 3.093, 0.000), (4.535, 3.022, 0.000), (4.524, 2.943, 0.000), (4.513, 2.850, 0.000), (4.540, 2.762, 0.000), (4.560, 2.697, 0.000), (4.592, 2.639, 0.000), (5.001, 1.888, 0.000), (5.409, 1.136, 0.000), (5.458, 1.046, 0.000), (5.508, 0.957, 0.000), (5.516, 0.942, 0.000), (5.525, 0.929, 0.000), (5.563, 0.872, 0.000), (5.608, 0.822, 0.000), (5.630, 0.796, 0.000), (5.654, 0.772, 0.000), (5.707, 0.714, 0.000), (5.778, 0.681, 0.000), (5.839, 0.652, 0.000), (5.907, 0.651, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.907, 0.651, 0.000)), rs.coerce3dpoint((5.994, 0.649, 0.000)), rs.coerce3dpoint((6.069, 0.693, 0.000)), rs.coerce3dpoint((6.120, 0.723, 0.000)), rs.coerce3dpoint((6.161, 0.764, 0.000)), rs.coerce3dpoint((6.210, 0.812, 0.000)), rs.coerce3dpoint((6.254, 0.865, 0.000)), rs.coerce3dpoint((6.275, 0.890, 0.000)), rs.coerce3dpoint((6.294, 0.917, 0.000)), rs.coerce3dpoint((6.313, 0.945, 0.000)), rs.coerce3dpoint((6.330, 0.975, 0.000)), rs.coerce3dpoint((6.440, 1.160, 0.000)), rs.coerce3dpoint((6.548, 1.345, 0.000)), rs.coerce3dpoint((6.914, 1.971, 0.000)), rs.coerce3dpoint((7.279, 2.597, 0.000)), rs.coerce3dpoint((7.320, 2.664, 0.000)), rs.coerce3dpoint((7.342, 2.739, 0.000)), rs.coerce3dpoint((7.379, 2.865, 0.000)), rs.coerce3dpoint((7.338, 2.989, 0.000)), rs.coerce3dpoint((7.328, 3.021, 0.000)), rs.coerce3dpoint((7.314, 3.051, 0.000)), rs.coerce3dpoint((7.271, 3.147, 0.000)), rs.coerce3dpoint((7.223, 3.241, 0.000)), rs.coerce3dpoint((7.218, 3.251, 0.000)), rs.coerce3dpoint((7.214, 3.260, 0.000)), rs.coerce3dpoint((7.180, 3.325, 0.000)), rs.coerce3dpoint((7.144, 3.389, 0.000)), rs.coerce3dpoint((6.799, 4.013, 0.000)), rs.coerce3dpoint((6.455, 4.636, 0.000)), rs.coerce3dpoint((6.392, 4.751, 0.000)), rs.coerce3dpoint((6.321, 4.862, 0.000)), rs.coerce3dpoint((6.292, 4.907, 0.000)), rs.coerce3dpoint((6.261, 4.951, 0.000)), rs.coerce3dpoint((6.222, 5.007, 0.000)), rs.coerce3dpoint((6.169, 5.049, 0.000)), rs.coerce3dpoint((6.108, 5.098, 0.000)), rs.coerce3dpoint((6.032, 5.114, 0.000)), rs.coerce3dpoint((6.003, 5.119, 0.000)), rs.coerce3dpoint((5.974, 5.120, 0.000)), rs.coerce3dpoint((5.871, 5.121, 0.000)), rs.coerce3dpoint((5.787, 5.061, 0.000)), rs.coerce3dpoint((5.732, 5.022, 0.000)), rs.coerce3dpoint((5.691, 4.969, 0.000)), rs.coerce3dpoint((5.687, 4.964, 0.000)), rs.coerce3dpoint((5.683, 4.960, 0.000)), rs.coerce3dpoint((5.605, 4.855, 0.000)), rs.coerce3dpoint((5.536, 4.744, 0.000)), rs.coerce3dpoint((5.508, 4.698, 0.000)), rs.coerce3dpoint((5.480, 4.651, 0.000)), rs.coerce3dpoint((5.145, 4.088, 0.000)), rs.coerce3dpoint((4.811, 3.525, 0.000)), rs.coerce3dpoint((4.761, 3.440, 0.000)), rs.coerce3dpoint((4.711, 3.356, 0.000)), rs.coerce3dpoint((4.695, 3.328, 0.000)), rs.coerce3dpoint((4.679, 3.299, 0.000)), rs.coerce3dpoint((4.628, 3.208, 0.000)), rs.coerce3dpoint((4.583, 3.115, 0.000)), rs.coerce3dpoint((4.577, 3.104, 0.000)), rs.coerce3dpoint((4.572, 3.093, 0.000)), rs.coerce3dpoint((4.535, 3.022, 0.000)), rs.coerce3dpoint((4.524, 2.943, 0.000)), rs.coerce3dpoint((4.513, 2.850, 0.000)), rs.coerce3dpoint((4.540, 2.762, 0.000)), rs.coerce3dpoint((4.560, 2.697, 0.000)), rs.coerce3dpoint((4.592, 2.639, 0.000)), rs.coerce3dpoint((5.001, 1.888, 0.000)), rs.coerce3dpoint((5.409, 1.136, 0.000)), rs.coerce3dpoint((5.458, 1.046, 0.000)), rs.coerce3dpoint((5.508, 0.957, 0.000)), rs.coerce3dpoint((5.516, 0.942, 0.000)), rs.coerce3dpoint((5.525, 0.929, 0.000)), rs.coerce3dpoint((5.563, 0.872, 0.000)), rs.coerce3dpoint((5.608, 0.822, 0.000)), rs.coerce3dpoint((5.630, 0.796, 0.000)), rs.coerce3dpoint((5.654, 0.772, 0.000)), rs.coerce3dpoint((5.707, 0.714, 0.000)), rs.coerce3dpoint((5.778, 0.681, 0.000)), rs.coerce3dpoint((5.839, 0.652, 0.000)), rs.coerce3dpoint((5.907, 0.651, 0.000))], [0.0, 0.0, 0.169982180464, 0.169982180464, 0.286236402107, 0.286236402107, 0.423752262471, 0.423752262471, 0.488958057682, 0.488958057682, 0.557908114816, 0.557908114816, 0.98710914965, 0.98710914965, 2.43721774922, 2.43721774922, 2.59251440430, 2.59251440430, 2.84657837241, 2.84657837241, 2.91279709158, 2.91279709158, 3.12384843346, 3.12384843346, 3.14466731595, 3.14466731595, 3.29118946278, 3.29118946278, 4.71636967488, 4.71636967488, 4.97845418072, 4.97845418072, 5.08580193777, 5.08580193777, 5.22162651349, 5.22162651349, 5.37374285882, 5.37374285882, 5.43223689940, 5.43223689940, 5.63189924445, 5.63189924445, 5.76534419933, 5.76534419933, 5.77752688273, 5.77752688273, 6.03796064808, 6.03796064808, 6.14695164190, 6.14695164190, 7.45701650439, 7.45701650439, 7.65335021575, 7.65335021575, 7.71865417384, 7.71865417384, 7.92630146871, 7.92630146871, 7.95053094837, 7.95053094837, 8.10919337786, 8.10919337786, 8.29246450192, 8.29246450192, 8.42607676810, 8.42607676810, 10.1360229464, 10.1360229464, 10.3413514626, 10.3413514626, 10.3743381500, 10.3743381500, 10.5097814224, 10.5097814224, 10.5770719569, 10.5770719569, 10.7320991097, 10.7320991097, 10.8653824851, 10.8653824851], 2, [1.0, 0.962570618565, 1.0, 0.991088663666, 1.0, 0.998790411994, 1.0, 0.99914338705, 1.0, 0.999323109168, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.991559749864, 1.0, 0.955645261438, 1.0, 0.998067449182, 1.0, 0.999762408228, 1.0, 1.0, 1.0, 0.99992062315, 1.0, 1.0, 1.0, 0.999488131038, 1.0, 0.9997023643, 1.0, 0.989884046372, 1.0, 0.972212142301, 1.0, 0.995868054161, 1.0, 0.951288045239, 1.0, 0.989369584793, 1.0, 1.0, 1.0, 0.998867761345, 1.0, 0.99996128075, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999935022111, 1.0, 0.999692527277, 1.0, 1.0, 1.0, 0.986184971261, 1.0, 0.977569907714, 1.0, 0.994163462437, 1.0, 1.0, 1.0, 0.999943821578, 1.0, 0.999591103615, 1.0, 0.99697815269, 1.0, 0.999862229491, 1.0, 0.982111444216, 1.0, 0.975874083472, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.372, 14.818, 0.000), (9.366, 16.123, 0.000), (9.361, 17.429, 0.000), (9.360, 17.553, 0.000), (9.361, 17.677, 0.000), (9.361, 17.689, 0.000), (9.361, 17.702, 0.000), (9.362, 17.753, 0.000), (9.369, 17.805, 0.000), (9.372, 17.832, 0.000), (9.375, 17.859, 0.000), (9.392, 17.995, 0.000), (9.448, 18.119, 0.000), (9.514, 18.265, 0.000), (9.632, 18.373, 0.000), (9.861, 18.581, 0.000), (10.169, 18.561, 0.000), (10.318, 18.551, 0.000), (10.454, 18.488, 0.000), (10.539, 18.448, 0.000), (10.614, 18.392, 0.000), (10.733, 18.304, 0.000), (10.829, 18.192, 0.000), (10.917, 18.091, 0.000), (10.990, 17.977, 0.000), (11.030, 17.914, 0.000), (11.068, 17.849, 0.000), (11.265, 17.507, 0.000), (11.463, 17.166, 0.000), (12.010, 16.217, 0.000), (12.558, 15.269, 0.000), (12.750, 14.936, 0.000), (12.939, 14.601, 0.000), (13.017, 14.464, 0.000), (13.091, 14.325, 0.000), (13.127, 14.257, 0.000), (13.158, 14.187, 0.000), (13.174, 14.152, 0.000), (13.187, 14.116, 0.000), (13.211, 14.053, 0.000), (13.225, 13.988, 0.000), (13.247, 13.881, 0.000), (13.231, 13.774, 0.000), (13.218, 13.692, 0.000), (13.191, 13.613, 0.000), (13.158, 13.519, 0.000), (13.113, 13.429, 0.000), (13.084, 13.369, 0.000), (13.052, 13.312, 0.000), (12.786, 12.831, 0.000), (12.516, 12.353, 0.000), (12.376, 12.104, 0.000), (12.231, 11.858, 0.000), (12.149, 11.717, 0.000), (12.061, 11.581, 0.000), (12.008, 11.497, 0.000), (11.949, 11.418, 0.000), (11.907, 11.363, 0.000), (11.859, 11.314, 0.000), (11.831, 11.286, 0.000), (11.799, 11.261, 0.000), (11.764, 11.232, 0.000), (11.722, 11.214, 0.000), (11.679, 11.196, 0.000), (11.634, 11.188, 0.000), (11.570, 11.175, 0.000), (11.505, 11.170, 0.000), (11.397, 11.161, 0.000), (11.288, 11.158, 0.000), (11.202, 11.155, 0.000), (11.116, 11.154, 0.000), (10.847, 11.150, 0.000), (10.577, 11.153, 0.000), (10.415, 11.154, 0.000), (10.252, 11.164, 0.000), (10.149, 11.169, 0.000), (10.047, 11.183, 0.000), (9.977, 11.193, 0.000), (9.908, 11.212, 0.000), (9.831, 11.233, 0.000), (9.763, 11.273, 0.000), (9.702, 11.308, 0.000), (9.651, 11.355, 0.000), (9.599, 11.405, 0.000), (9.564, 11.467, 0.000), (9.542, 11.506, 0.000), (9.524, 11.546, 0.000), (9.500, 11.602, 0.000), (9.487, 11.660, 0.000), (9.468, 11.739, 0.000), (9.457, 11.820, 0.000), (9.440, 11.949, 0.000), (9.430, 12.079, 0.000), (9.413, 12.292, 0.000), (9.404, 12.506, 0.000), (9.390, 12.853, 0.000), (9.384, 13.200, 0.000), (9.374, 13.758, 0.000), (9.373, 14.317, 0.000), (9.373, 14.567, 0.000), (9.372, 14.818, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.372, 14.818, 0.000)), rs.coerce3dpoint((9.366, 16.123, 0.000)), rs.coerce3dpoint((9.361, 17.429, 0.000)), rs.coerce3dpoint((9.360, 17.553, 0.000)), rs.coerce3dpoint((9.361, 17.677, 0.000)), rs.coerce3dpoint((9.361, 17.689, 0.000)), rs.coerce3dpoint((9.361, 17.702, 0.000)), rs.coerce3dpoint((9.362, 17.753, 0.000)), rs.coerce3dpoint((9.369, 17.805, 0.000)), rs.coerce3dpoint((9.372, 17.832, 0.000)), rs.coerce3dpoint((9.375, 17.859, 0.000)), rs.coerce3dpoint((9.392, 17.995, 0.000)), rs.coerce3dpoint((9.448, 18.119, 0.000)), rs.coerce3dpoint((9.514, 18.265, 0.000)), rs.coerce3dpoint((9.632, 18.373, 0.000)), rs.coerce3dpoint((9.861, 18.581, 0.000)), rs.coerce3dpoint((10.169, 18.561, 0.000)), rs.coerce3dpoint((10.318, 18.551, 0.000)), rs.coerce3dpoint((10.454, 18.488, 0.000)), rs.coerce3dpoint((10.539, 18.448, 0.000)), rs.coerce3dpoint((10.614, 18.392, 0.000)), rs.coerce3dpoint((10.733, 18.304, 0.000)), rs.coerce3dpoint((10.829, 18.192, 0.000)), rs.coerce3dpoint((10.917, 18.091, 0.000)), rs.coerce3dpoint((10.990, 17.977, 0.000)), rs.coerce3dpoint((11.030, 17.914, 0.000)), rs.coerce3dpoint((11.068, 17.849, 0.000)), rs.coerce3dpoint((11.265, 17.507, 0.000)), rs.coerce3dpoint((11.463, 17.166, 0.000)), rs.coerce3dpoint((12.010, 16.217, 0.000)), rs.coerce3dpoint((12.558, 15.269, 0.000)), rs.coerce3dpoint((12.750, 14.936, 0.000)), rs.coerce3dpoint((12.939, 14.601, 0.000)), rs.coerce3dpoint((13.017, 14.464, 0.000)), rs.coerce3dpoint((13.091, 14.325, 0.000)), rs.coerce3dpoint((13.127, 14.257, 0.000)), rs.coerce3dpoint((13.158, 14.187, 0.000)), rs.coerce3dpoint((13.174, 14.152, 0.000)), rs.coerce3dpoint((13.187, 14.116, 0.000)), rs.coerce3dpoint((13.211, 14.053, 0.000)), rs.coerce3dpoint((13.225, 13.988, 0.000)), rs.coerce3dpoint((13.247, 13.881, 0.000)), rs.coerce3dpoint((13.231, 13.774, 0.000)), rs.coerce3dpoint((13.218, 13.692, 0.000)), rs.coerce3dpoint((13.191, 13.613, 0.000)), rs.coerce3dpoint((13.158, 13.519, 0.000)), rs.coerce3dpoint((13.113, 13.429, 0.000)), rs.coerce3dpoint((13.084, 13.369, 0.000)), rs.coerce3dpoint((13.052, 13.312, 0.000)), rs.coerce3dpoint((12.786, 12.831, 0.000)), rs.coerce3dpoint((12.516, 12.353, 0.000)), rs.coerce3dpoint((12.376, 12.104, 0.000)), rs.coerce3dpoint((12.231, 11.858, 0.000)), rs.coerce3dpoint((12.149, 11.717, 0.000)), rs.coerce3dpoint((12.061, 11.581, 0.000)), rs.coerce3dpoint((12.008, 11.497, 0.000)), rs.coerce3dpoint((11.949, 11.418, 0.000)), rs.coerce3dpoint((11.907, 11.363, 0.000)), rs.coerce3dpoint((11.859, 11.314, 0.000)), rs.coerce3dpoint((11.831, 11.286, 0.000)), rs.coerce3dpoint((11.799, 11.261, 0.000)), rs.coerce3dpoint((11.764, 11.232, 0.000)), rs.coerce3dpoint((11.722, 11.214, 0.000)), rs.coerce3dpoint((11.679, 11.196, 0.000)), rs.coerce3dpoint((11.634, 11.188, 0.000)), rs.coerce3dpoint((11.570, 11.175, 0.000)), rs.coerce3dpoint((11.505, 11.170, 0.000)), rs.coerce3dpoint((11.397, 11.161, 0.000)), rs.coerce3dpoint((11.288, 11.158, 0.000)), rs.coerce3dpoint((11.202, 11.155, 0.000)), rs.coerce3dpoint((11.116, 11.154, 0.000)), rs.coerce3dpoint((10.847, 11.150, 0.000)), rs.coerce3dpoint((10.577, 11.153, 0.000)), rs.coerce3dpoint((10.415, 11.154, 0.000)), rs.coerce3dpoint((10.252, 11.164, 0.000)), rs.coerce3dpoint((10.149, 11.169, 0.000)), rs.coerce3dpoint((10.047, 11.183, 0.000)), rs.coerce3dpoint((9.977, 11.193, 0.000)), rs.coerce3dpoint((9.908, 11.212, 0.000)), rs.coerce3dpoint((9.831, 11.233, 0.000)), rs.coerce3dpoint((9.763, 11.273, 0.000)), rs.coerce3dpoint((9.702, 11.308, 0.000)), rs.coerce3dpoint((9.651, 11.355, 0.000)), rs.coerce3dpoint((9.599, 11.405, 0.000)), rs.coerce3dpoint((9.564, 11.467, 0.000)), rs.coerce3dpoint((9.542, 11.506, 0.000)), rs.coerce3dpoint((9.524, 11.546, 0.000)), rs.coerce3dpoint((9.500, 11.602, 0.000)), rs.coerce3dpoint((9.487, 11.660, 0.000)), rs.coerce3dpoint((9.468, 11.739, 0.000)), rs.coerce3dpoint((9.457, 11.820, 0.000)), rs.coerce3dpoint((9.440, 11.949, 0.000)), rs.coerce3dpoint((9.430, 12.079, 0.000)), rs.coerce3dpoint((9.413, 12.292, 0.000)), rs.coerce3dpoint((9.404, 12.506, 0.000)), rs.coerce3dpoint((9.390, 12.853, 0.000)), rs.coerce3dpoint((9.384, 13.200, 0.000)), rs.coerce3dpoint((9.374, 13.758, 0.000)), rs.coerce3dpoint((9.373, 14.317, 0.000)), rs.coerce3dpoint((9.373, 14.567, 0.000)), rs.coerce3dpoint((9.372, 14.818, 0.000))], [0.0, 0.0, 2.61078703292, 2.61078703292, 2.85952472799, 2.85952472799, 2.88401134011, 2.88401134011, 2.98741961664, 2.98741961664, 3.04249634899, 3.04249634899, 3.31280777506, 3.31280777506, 3.62904374488, 3.62904374488, 4.21270290391, 4.21270290391, 4.50928825836, 4.50928825836, 4.69597768660, 4.69597768660, 4.98995479676, 4.98995479676, 5.25840676716, 5.25840676716, 5.40920995793, 5.40920995793, 6.19807931886, 6.19807931886, 8.38849307374, 8.38849307374, 9.15734583807, 9.15734583807, 9.47253603535, 9.47253603535, 9.62559585769, 9.62559585769, 9.70279120691, 9.70279120691, 9.83610498136, 9.83610498136, 10.0517429483, 10.0517429483, 10.2170590001, 10.2170590001, 10.4174585671, 10.4174585671, 10.5498384736, 10.5498384736, 11.6476433911, 11.6476433911, 12.2193043552, 12.2193043552, 12.5443704085, 12.5443704085, 12.7419023741, 12.7419023741, 12.8793584933, 12.8793584933, 12.9594152297, 12.9594152297, 13.0506468485, 13.0506468485, 13.1423058573, 13.1423058573, 13.2723015145, 13.2723015145, 13.4894826532, 13.4894826532, 13.6619499918, 13.6619499918, 14.2004943094, 14.2004943094, 14.5257686230, 14.5257686230, 14.7320941559, 14.7320941559, 14.8740979975, 14.8740979975, 15.0324830325, 15.0324830325, 15.1712213756, 15.1712213756, 15.3135542937, 15.3135542937, 15.4024778370, 15.4024778370, 15.5224348575, 15.5224348575, 15.6846092231, 15.6846092231, 15.9453090173, 15.9453090173, 16.3733718563, 16.3733718563, 17.0671060100, 17.0671060100, 18.1840716576, 18.1840716576, 18.6851644827, 18.6851644827], 2, [1.0, 1.0, 1.0, 0.999980780185, 1.0, 1.0, 1.0, 0.998809988485, 1.0, 1.0, 1.0, 0.988783242624, 1.0, 0.979286195966, 1.0, 0.920619103117, 1.0, 0.982703764746, 1.0, 0.994831769902, 1.0, 0.994033671791, 1.0, 0.997482672462, 1.0, 0.999646282569, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999988480066, 1.0, 0.999907524276, 1.0, 0.999449031825, 1.0, 0.999415350957, 1.0, 0.997236144733, 1.0, 0.984387454667, 1.0, 0.995703330557, 1.0, 0.997915594639, 1.0, 0.999646282569, 1.0, 0.999993520021, 1.0, 0.999951981153, 1.0, 0.99979600081, 1.0, 0.999300864481, 1.0, 0.997811178095, 1.0, 0.99799223758, 1.0, 0.990848388494, 1.0, 0.994952590401, 1.0, 0.998499606435, 1.0, 0.999573770855, 1.0, 0.99995950082, 1.0, 0.999907524276, 1.0, 0.99972155877, 1.0, 0.999200319872, 1.0, 0.99778467655, 1.0, 0.991220787198, 1.0, 0.993155583453, 1.0, 0.988783242624, 1.0, 0.998342494801, 1.0, 0.996461451758, 1.0, 0.998829405547, 1.0, 0.999550101227, 1.0, 0.999823295614, 1.0, 0.999928002592, 1.0, 0.999969580463, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(9.367, 8.843, 0.000), (9.370, 8.705, 0.000), (9.371, 8.567, 0.000), (9.372, 8.424, 0.000), (9.375, 8.282, 0.000), (9.385, 8.185, 0.000), (9.417, 8.093, 0.000), (9.453, 7.993, 0.000), (9.518, 7.910, 0.000), (9.594, 7.814, 0.000), (9.701, 7.753, 0.000), (9.737, 7.733, 0.000), (9.775, 7.717, 0.000), (9.854, 7.690, 0.000), (9.937, 7.686, 0.000), (10.076, 7.679, 0.000), (10.200, 7.742, 0.000), (10.274, 7.779, 0.000), (10.336, 7.834, 0.000), (10.394, 7.885, 0.000), (10.442, 7.946, 0.000), (10.559, 8.094, 0.000), (10.661, 8.254, 0.000), (10.790, 8.454, 0.000), (10.899, 8.665, 0.000), (10.957, 8.776, 0.000), (11.009, 8.889, 0.000), (11.053, 8.983, 0.000), (11.094, 9.078, 0.000), (11.112, 9.119, 0.000), (11.127, 9.161, 0.000), (11.133, 9.179, 0.000), (11.138, 9.197, 0.000), (11.160, 9.275, 0.000), (11.155, 9.356, 0.000), (11.149, 9.438, 0.000), (11.115, 9.513, 0.000), (11.088, 9.574, 0.000), (11.048, 9.627, 0.000), (10.994, 9.702, 0.000), (10.922, 9.760, 0.000), (10.794, 9.861, 0.000), (10.632, 9.879, 0.000), (10.619, 9.881, 0.000), (10.605, 9.882, 0.000), (10.433, 9.894, 0.000), (10.260, 9.899, 0.000), (10.099, 9.904, 0.000), (9.939, 9.896, 0.000), (9.846, 9.891, 0.000), (9.758, 9.862, 0.000), (9.649, 9.825, 0.000), (9.563, 9.747, 0.000), (9.481, 9.672, 0.000), (9.434, 9.570, 0.000), (9.393, 9.483, 0.000), (9.379, 9.388, 0.000), (9.372, 9.344, 0.000), (9.370, 9.300, 0.000), (9.365, 9.194, 0.000), (9.366, 9.088, 0.000), (9.366, 9.052, 0.000), (9.367, 9.015, 0.000), (9.367, 8.929, 0.000), (9.367, 8.843, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((9.367, 8.843, 0.000)), rs.coerce3dpoint((9.370, 8.705, 0.000)), rs.coerce3dpoint((9.371, 8.567, 0.000)), rs.coerce3dpoint((9.372, 8.424, 0.000)), rs.coerce3dpoint((9.375, 8.282, 0.000)), rs.coerce3dpoint((9.385, 8.185, 0.000)), rs.coerce3dpoint((9.417, 8.093, 0.000)), rs.coerce3dpoint((9.453, 7.993, 0.000)), rs.coerce3dpoint((9.518, 7.910, 0.000)), rs.coerce3dpoint((9.594, 7.814, 0.000)), rs.coerce3dpoint((9.701, 7.753, 0.000)), rs.coerce3dpoint((9.737, 7.733, 0.000)), rs.coerce3dpoint((9.775, 7.717, 0.000)), rs.coerce3dpoint((9.854, 7.690, 0.000)), rs.coerce3dpoint((9.937, 7.686, 0.000)), rs.coerce3dpoint((10.076, 7.679, 0.000)), rs.coerce3dpoint((10.200, 7.742, 0.000)), rs.coerce3dpoint((10.274, 7.779, 0.000)), rs.coerce3dpoint((10.336, 7.834, 0.000)), rs.coerce3dpoint((10.394, 7.885, 0.000)), rs.coerce3dpoint((10.442, 7.946, 0.000)), rs.coerce3dpoint((10.559, 8.094, 0.000)), rs.coerce3dpoint((10.661, 8.254, 0.000)), rs.coerce3dpoint((10.790, 8.454, 0.000)), rs.coerce3dpoint((10.899, 8.665, 0.000)), rs.coerce3dpoint((10.957, 8.776, 0.000)), rs.coerce3dpoint((11.009, 8.889, 0.000)), rs.coerce3dpoint((11.053, 8.983, 0.000)), rs.coerce3dpoint((11.094, 9.078, 0.000)), rs.coerce3dpoint((11.112, 9.119, 0.000)), rs.coerce3dpoint((11.127, 9.161, 0.000)), rs.coerce3dpoint((11.133, 9.179, 0.000)), rs.coerce3dpoint((11.138, 9.197, 0.000)), rs.coerce3dpoint((11.160, 9.275, 0.000)), rs.coerce3dpoint((11.155, 9.356, 0.000)), rs.coerce3dpoint((11.149, 9.438, 0.000)), rs.coerce3dpoint((11.115, 9.513, 0.000)), rs.coerce3dpoint((11.088, 9.574, 0.000)), rs.coerce3dpoint((11.048, 9.627, 0.000)), rs.coerce3dpoint((10.994, 9.702, 0.000)), rs.coerce3dpoint((10.922, 9.760, 0.000)), rs.coerce3dpoint((10.794, 9.861, 0.000)), rs.coerce3dpoint((10.632, 9.879, 0.000)), rs.coerce3dpoint((10.619, 9.881, 0.000)), rs.coerce3dpoint((10.605, 9.882, 0.000)), rs.coerce3dpoint((10.433, 9.894, 0.000)), rs.coerce3dpoint((10.260, 9.899, 0.000)), rs.coerce3dpoint((10.099, 9.904, 0.000)), rs.coerce3dpoint((9.939, 9.896, 0.000)), rs.coerce3dpoint((9.846, 9.891, 0.000)), rs.coerce3dpoint((9.758, 9.862, 0.000)), rs.coerce3dpoint((9.649, 9.825, 0.000)), rs.coerce3dpoint((9.563, 9.747, 0.000)), rs.coerce3dpoint((9.481, 9.672, 0.000)), rs.coerce3dpoint((9.434, 9.570, 0.000)), rs.coerce3dpoint((9.393, 9.483, 0.000)), rs.coerce3dpoint((9.379, 9.388, 0.000)), rs.coerce3dpoint((9.372, 9.344, 0.000)), rs.coerce3dpoint((9.370, 9.300, 0.000)), rs.coerce3dpoint((9.365, 9.194, 0.000)), rs.coerce3dpoint((9.366, 9.088, 0.000)), rs.coerce3dpoint((9.366, 9.052, 0.000)), rs.coerce3dpoint((9.367, 9.015, 0.000)), rs.coerce3dpoint((9.367, 8.929, 0.000)), rs.coerce3dpoint((9.367, 8.843, 0.000))], [0.0, 0.0, 0.276277316293, 0.276277316293, 0.561688975576, 0.561688975576, 0.755318117469, 0.755318117469, 0.964923151696, 0.964923151696, 1.20739739212, 1.20739739212, 1.29045396958, 1.29045396958, 1.45603890154, 1.45603890154, 1.72813818586, 1.72813818586, 1.89226172880, 1.89226172880, 2.04693128960, 2.04693128960, 2.42501026310, 2.42501026310, 2.90063985680, 2.90063985680, 3.15019297955, 3.15019297955, 3.35745640240, 3.35745640240, 3.44665524076, 3.44665524076, 3.48407033608, 3.48407033608, 3.64478554829, 3.64478554829, 3.80735684834, 3.80735684834, 3.94041302969, 3.94041302969, 4.12379449734, 4.12379449734, 4.44115697823, 4.44115697823, 4.46856951367, 4.46856951367, 4.81406638466, 4.81406638466, 5.13566664766, 5.13566664766, 5.31975759564, 5.31975759564, 5.54755330533, 5.54755330533, 5.76798380437, 5.76798380437, 5.95895211380, 5.95895211380, 6.04780408264, 6.04780408264, 6.25977038146, 6.25977038146, 6.33272240591, 6.33272240591, 6.50449202684, 6.50449202684], 2, [1.0, 0.999971120417, 1.0, 0.99995950082, 1.0, 0.992873404989, 1.0, 0.987091140598, 1.0, 0.981089922177, 1.0, 0.998272772946, 1.0, 0.991062122134, 1.0, 0.9665098457, 1.0, 0.991790556371, 1.0, 0.995940237597, 1.0, 0.998809988485, 1.0, 0.998914809139, 1.0, 0.999744652605, 1.0, 0.99991022403, 1.0, 0.999352209884, 1.0, 0.99946222464, 1.0, 0.985350476054, 1.0, 0.984975718785, 1.0, 0.994184956666, 1.0, 0.990659328765, 1.0, 0.961391787529, 1.0, 0.999758029278, 1.0, 0.999716820101, 1.0, 0.999255297394, 1.0, 0.990358385523, 1.0, 0.979004738727, 1.0, 0.980820585828, 1.0, 0.989912259197, 1.0, 0.998433228349, 1.0, 0.999712041466, 1.0, 1.0, 1.0, 0.999955820976, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(16.463, 54.773, 0.000), (16.463, 54.644, 0.000), (16.469, 54.516, 0.000), (16.472, 54.446, 0.000), (16.480, 54.376, 0.000), (16.491, 54.266, 0.000), (16.544, 54.168, 0.000), (16.599, 54.064, 0.000), (16.685, 53.985, 0.000), (16.813, 53.867, 0.000), (16.980, 53.818, 0.000), (17.091, 53.786, 0.000), (17.206, 53.794, 0.000), (17.375, 53.806, 0.000), (17.509, 53.908, 0.000), (17.628, 53.998, 0.000), (17.725, 54.111, 0.000), (17.795, 54.195, 0.000), (17.850, 54.289, 0.000), (17.965, 54.483, 0.000), (18.080, 54.677, 0.000), (18.257, 54.973, 0.000), (18.432, 55.271, 0.000), (18.454, 55.310, 0.000), (18.477, 55.349, 0.000), (18.604, 55.571, 0.000), (18.728, 55.795, 0.000), (18.734, 55.805, 0.000), (18.740, 55.816, 0.000), (18.865, 56.039, 0.000), (18.992, 56.262, 0.000), (19.057, 56.375, 0.000), (19.124, 56.487, 0.000), (19.179, 56.577, 0.000), (19.214, 56.677, 0.000), (19.255, 56.794, 0.000), (19.259, 56.918, 0.000), (19.262, 57.040, 0.000), (19.228, 57.156, 0.000), (19.199, 57.258, 0.000), (19.151, 57.351, 0.000), (19.141, 57.370, 0.000), (19.130, 57.390, 0.000), (19.077, 57.485, 0.000), (19.023, 57.580, 0.000), (18.980, 57.659, 0.000), (18.936, 57.737, 0.000), (18.721, 58.120, 0.000), (18.282, 58.120, 0.000), (17.753, 58.120, 0.000), (17.225, 58.120, 0.000), (16.914, 58.120, 0.000), (16.695, 57.900, 0.000), (16.475, 57.681, 0.000), (16.475, 57.370, 0.000), (16.475, 57.205, 0.000), (16.475, 57.039, 0.000), (16.464, 56.342, 0.000), (16.463, 55.645, 0.000), (16.462, 55.209, 0.000), (16.463, 54.773, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((16.463, 54.773, 0.000)), rs.coerce3dpoint((16.463, 54.644, 0.000)), rs.coerce3dpoint((16.469, 54.516, 0.000)), rs.coerce3dpoint((16.472, 54.446, 0.000)), rs.coerce3dpoint((16.480, 54.376, 0.000)), rs.coerce3dpoint((16.491, 54.266, 0.000)), rs.coerce3dpoint((16.544, 54.168, 0.000)), rs.coerce3dpoint((16.599, 54.064, 0.000)), rs.coerce3dpoint((16.685, 53.985, 0.000)), rs.coerce3dpoint((16.813, 53.867, 0.000)), rs.coerce3dpoint((16.980, 53.818, 0.000)), rs.coerce3dpoint((17.091, 53.786, 0.000)), rs.coerce3dpoint((17.206, 53.794, 0.000)), rs.coerce3dpoint((17.375, 53.806, 0.000)), rs.coerce3dpoint((17.509, 53.908, 0.000)), rs.coerce3dpoint((17.628, 53.998, 0.000)), rs.coerce3dpoint((17.725, 54.111, 0.000)), rs.coerce3dpoint((17.795, 54.195, 0.000)), rs.coerce3dpoint((17.850, 54.289, 0.000)), rs.coerce3dpoint((17.965, 54.483, 0.000)), rs.coerce3dpoint((18.080, 54.677, 0.000)), rs.coerce3dpoint((18.257, 54.973, 0.000)), rs.coerce3dpoint((18.432, 55.271, 0.000)), rs.coerce3dpoint((18.454, 55.310, 0.000)), rs.coerce3dpoint((18.477, 55.349, 0.000)), rs.coerce3dpoint((18.604, 55.571, 0.000)), rs.coerce3dpoint((18.728, 55.795, 0.000)), rs.coerce3dpoint((18.734, 55.805, 0.000)), rs.coerce3dpoint((18.740, 55.816, 0.000)), rs.coerce3dpoint((18.865, 56.039, 0.000)), rs.coerce3dpoint((18.992, 56.262, 0.000)), rs.coerce3dpoint((19.057, 56.375, 0.000)), rs.coerce3dpoint((19.124, 56.487, 0.000)), rs.coerce3dpoint((19.179, 56.577, 0.000)), rs.coerce3dpoint((19.214, 56.677, 0.000)), rs.coerce3dpoint((19.255, 56.794, 0.000)), rs.coerce3dpoint((19.259, 56.918, 0.000)), rs.coerce3dpoint((19.262, 57.040, 0.000)), rs.coerce3dpoint((19.228, 57.156, 0.000)), rs.coerce3dpoint((19.199, 57.258, 0.000)), rs.coerce3dpoint((19.151, 57.351, 0.000)), rs.coerce3dpoint((19.141, 57.370, 0.000)), rs.coerce3dpoint((19.130, 57.390, 0.000)), rs.coerce3dpoint((19.077, 57.485, 0.000)), rs.coerce3dpoint((19.023, 57.580, 0.000)), rs.coerce3dpoint((18.980, 57.659, 0.000)), rs.coerce3dpoint((18.936, 57.737, 0.000)), rs.coerce3dpoint((18.721, 58.120, 0.000)), rs.coerce3dpoint((18.282, 58.120, 0.000)), rs.coerce3dpoint((17.753, 58.120, 0.000)), rs.coerce3dpoint((17.225, 58.120, 0.000)), rs.coerce3dpoint((16.914, 58.120, 0.000)), rs.coerce3dpoint((16.695, 57.900, 0.000)), rs.coerce3dpoint((16.475, 57.681, 0.000)), rs.coerce3dpoint((16.475, 57.370, 0.000)), rs.coerce3dpoint((16.475, 57.205, 0.000)), rs.coerce3dpoint((16.475, 57.039, 0.000)), rs.coerce3dpoint((16.464, 56.342, 0.000)), rs.coerce3dpoint((16.463, 55.645, 0.000)), rs.coerce3dpoint((16.462, 55.209, 0.000)), rs.coerce3dpoint((16.463, 54.773, 0.000))], [2.82266769777, 2.82266769777, 3.07987146012, 3.07987146012, 3.22032301133, 3.22032301133, 3.43929669841, 3.43929669841, 3.67140140754, 3.67140140754, 4.01367327976, 4.01367327976, 4.24211648481, 4.24211648481, 4.57037847025, 4.57037847025, 4.86770327190, 4.86770327190, 5.08514793230, 5.08514793230, 5.53613544946, 5.53613544946, 6.22667891675, 6.22667891675, 6.31661084712, 6.31661084712, 6.8283573363, 6.8283573363, 6.85242875711, 6.85242875711, 7.36464622645, 7.36464622645, 7.62596874217, 7.62596874217, 7.83688334110, 7.83688334110, 8.08301493539, 8.08301493539, 8.32386641110, 8.32386641110, 8.53353479935, 8.53353479935, 8.57764728017, 8.57764728017, 8.79625620610, 8.79625620610, 8.97496477886, 8.97496477886, 9.77011710133, 9.77011710133, 10.8268456214, 10.8268456214, 11.4159279440, 11.4159279440, 12.0050102665, 12.0050102665, 12.3357097993, 12.3357097993, 13.7300267785, 13.7300267785, 14.6019974948, 14.6019974948], 2, [1.0, 0.999682530401, 1.0, 0.999682530401, 1.0, 0.981736318092, 1.0, 0.98562011924, 1.0, 0.973535598102, 1.0, 0.984247436608, 1.0, 0.958537276228, 1.0, 0.993680650379, 1.0, 0.996427811681, 1.0, 0.999997580003, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 0.999963020684, 1.0, 0.994627252088, 1.0, 0.988059219314, 1.0, 0.988753519298, 1.0, 0.994852005122, 1.0, 0.999848631457, 1.0, 1.0, 1.0, 0.999998459757, 1.0, 0.862755730006, 1.0, 1.0, 1.0, 0.92387093466, 1.0, 0.92387093466, 1.0, 1.0, 1.0, 0.999972620375, 1.0, 0.999997580003, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(22.123, 57.091, 0.000), (22.122, 57.033, 0.000), (22.120, 56.975, 0.000), (22.117, 56.879, 0.000), (22.095, 56.785, 0.000), (22.074, 56.691, 0.000), (22.028, 56.606, 0.000), (21.959, 56.481, 0.000), (21.842, 56.398, 0.000), (21.765, 56.343, 0.000), (21.677, 56.308, 0.000), (21.631, 56.290, 0.000), (21.584, 56.276, 0.000), (21.505, 56.253, 0.000), (21.422, 56.252, 0.000), (21.304, 56.251, 0.000), (21.197, 56.301, 0.000), (21.124, 56.335, 0.000), (21.061, 56.386, 0.000), (20.992, 56.441, 0.000), (20.934, 56.508, 0.000), (20.902, 56.545, 0.000), (20.872, 56.585, 0.000), (20.833, 56.638, 0.000), (20.800, 56.694, 0.000), (20.793, 56.706, 0.000), (20.786, 56.718, 0.000), (20.706, 56.857, 0.000), (20.626, 56.997, 0.000), (20.410, 57.372, 0.000), (20.627, 57.746, 0.000), (20.844, 58.120, 0.000), (21.276, 58.120, 0.000), (21.327, 58.120, 0.000), (21.378, 58.120, 0.000), (21.691, 58.120, 0.000), (21.912, 57.897, 0.000), (22.132, 57.674, 0.000), (22.128, 57.360, 0.000), (22.126, 57.226, 0.000), (22.123, 57.091, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((22.123, 57.091, 0.000)), rs.coerce3dpoint((22.122, 57.033, 0.000)), rs.coerce3dpoint((22.120, 56.975, 0.000)), rs.coerce3dpoint((22.117, 56.879, 0.000)), rs.coerce3dpoint((22.095, 56.785, 0.000)), rs.coerce3dpoint((22.074, 56.691, 0.000)), rs.coerce3dpoint((22.028, 56.606, 0.000)), rs.coerce3dpoint((21.959, 56.481, 0.000)), rs.coerce3dpoint((21.842, 56.398, 0.000)), rs.coerce3dpoint((21.765, 56.343, 0.000)), rs.coerce3dpoint((21.677, 56.308, 0.000)), rs.coerce3dpoint((21.631, 56.290, 0.000)), rs.coerce3dpoint((21.584, 56.276, 0.000)), rs.coerce3dpoint((21.505, 56.253, 0.000)), rs.coerce3dpoint((21.422, 56.252, 0.000)), rs.coerce3dpoint((21.304, 56.251, 0.000)), rs.coerce3dpoint((21.197, 56.301, 0.000)), rs.coerce3dpoint((21.124, 56.335, 0.000)), rs.coerce3dpoint((21.061, 56.386, 0.000)), rs.coerce3dpoint((20.992, 56.441, 0.000)), rs.coerce3dpoint((20.934, 56.508, 0.000)), rs.coerce3dpoint((20.902, 56.545, 0.000)), rs.coerce3dpoint((20.872, 56.585, 0.000)), rs.coerce3dpoint((20.833, 56.638, 0.000)), rs.coerce3dpoint((20.800, 56.694, 0.000)), rs.coerce3dpoint((20.793, 56.706, 0.000)), rs.coerce3dpoint((20.786, 56.718, 0.000)), rs.coerce3dpoint((20.706, 56.857, 0.000)), rs.coerce3dpoint((20.626, 56.997, 0.000)), rs.coerce3dpoint((20.410, 57.372, 0.000)), rs.coerce3dpoint((20.627, 57.746, 0.000)), rs.coerce3dpoint((20.844, 58.120, 0.000)), rs.coerce3dpoint((21.276, 58.120, 0.000)), rs.coerce3dpoint((21.327, 58.120, 0.000)), rs.coerce3dpoint((21.378, 58.120, 0.000)), rs.coerce3dpoint((21.691, 58.120, 0.000)), rs.coerce3dpoint((21.912, 57.897, 0.000)), rs.coerce3dpoint((22.132, 57.674, 0.000)), rs.coerce3dpoint((22.128, 57.360, 0.000)), rs.coerce3dpoint((22.126, 57.226, 0.000)), rs.coerce3dpoint((22.123, 57.091, 0.000))], [0.551921519646, 0.551921519646, 0.667958692829, 0.667958692829, 0.860464923641, 0.860464923641, 1.05221576619, 1.05221576619, 1.33342357294, 1.33342357294, 1.52180916814, 1.52180916814, 1.62034858515, 1.62034858515, 1.78474940020, 1.78474940020, 2.01655342184, 2.01655342184, 2.17781844406, 2.17781844406, 2.35429524350, 2.35429524350, 2.45262054473, 2.45262054473, 2.58404653221, 2.58404653221, 2.61168321074, 2.61168321074, 2.93418539310, 2.93418539310, 3.71796916427, 3.71796916427, 4.50175293544, 4.50175293544, 4.60349008061, 4.60349008061, 5.19740970828, 5.19740970828, 5.79132933595, 5.79132933595, 6.06021710901, 6.06021710901], 2, [1.0, 0.999986480091, 1.0, 0.995012468828, 1.0, 0.990982263942, 1.0, 0.974828032222, 1.0, 0.992561350042, 1.0, 0.99873072604, 1.0, 0.990740587749, 1.0, 0.975440825794, 1.0, 0.992706197142, 1.0, 0.995904224899, 1.0, 0.999330444228, 1.0, 0.998521413917, 1.0, 1.0, 1.0, 0.999997087618, 1.0, 0.86634374324, 1.0, 0.86634374324, 1.0, 1.0, 1.0, 0.922631961483, 1.0, 0.922631961483, 1.0, 0.999991626437, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-14.410, 51.829, 0.000), (-14.407, 50.938, 0.000), (-14.409, 50.047, 0.000), (-14.409, 49.686, 0.000), (-14.414, 49.325, 0.000), (-14.414, 49.228, 0.000), (-14.419, 49.130, 0.000), (-14.421, 49.069, 0.000), (-14.430, 49.007, 0.000), (-14.438, 48.946, 0.000), (-14.460, 48.887, 0.000), (-14.479, 48.835, 0.000), (-14.507, 48.788, 0.000), (-14.540, 48.729, 0.000), (-14.577, 48.673, 0.000), (-14.592, 48.654, 0.000), (-14.609, 48.636, 0.000), (-14.709, 48.531, 0.000), (-14.845, 48.482, 0.000), (-15.058, 48.405, 0.000), (-15.274, 48.474, 0.000), (-15.437, 48.526, 0.000), (-15.555, 48.649, 0.000), (-15.577, 48.671, 0.000), (-15.598, 48.695, 0.000), (-15.751, 48.864, 0.000), (-15.866, 49.060, 0.000), (-15.952, 49.204, 0.000), (-16.036, 49.349, 0.000), (-16.315, 49.827, 0.000), (-16.590, 50.307, 0.000), (-16.777, 50.630, 0.000), (-16.963, 50.953, 0.000), (-17.513, 51.898, 0.000), (-18.063, 52.843, 0.000), (-18.217, 53.107, 0.000), (-18.371, 53.372, 0.000), (-18.494, 53.582, 0.000), (-18.617, 53.793, 0.000), (-19.081, 54.589, 0.000), (-19.550, 55.384, 0.000), (-19.591, 55.453, 0.000), (-19.633, 55.523, 0.000), (-19.847, 55.882, 0.000), (-20.065, 56.240, 0.000), (-20.125, 56.339, 0.000), (-20.185, 56.438, 0.000), (-20.352, 56.711, 0.000), (-20.515, 56.987, 0.000), (-20.739, 57.361, 0.000), (-20.523, 57.741, 0.000), (-20.307, 58.120, 0.000), (-19.871, 58.120, 0.000), (-17.528, 58.120, 0.000), (-15.185, 58.120, 0.000), (-14.439, 58.120, 0.000), (-14.435, 57.374, 0.000), (-14.433, 57.057, 0.000), (-14.432, 56.740, 0.000), (-14.428, 56.061, 0.000), (-14.424, 55.381, 0.000), (-14.417, 53.605, 0.000), (-14.410, 51.829, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-14.410, 51.829, 0.000)), rs.coerce3dpoint((-14.407, 50.938, 0.000)), rs.coerce3dpoint((-14.409, 50.047, 0.000)), rs.coerce3dpoint((-14.409, 49.686, 0.000)), rs.coerce3dpoint((-14.414, 49.325, 0.000)), rs.coerce3dpoint((-14.414, 49.228, 0.000)), rs.coerce3dpoint((-14.419, 49.130, 0.000)), rs.coerce3dpoint((-14.421, 49.069, 0.000)), rs.coerce3dpoint((-14.430, 49.007, 0.000)), rs.coerce3dpoint((-14.438, 48.946, 0.000)), rs.coerce3dpoint((-14.460, 48.887, 0.000)), rs.coerce3dpoint((-14.479, 48.835, 0.000)), rs.coerce3dpoint((-14.507, 48.788, 0.000)), rs.coerce3dpoint((-14.540, 48.729, 0.000)), rs.coerce3dpoint((-14.577, 48.673, 0.000)), rs.coerce3dpoint((-14.592, 48.654, 0.000)), rs.coerce3dpoint((-14.609, 48.636, 0.000)), rs.coerce3dpoint((-14.709, 48.531, 0.000)), rs.coerce3dpoint((-14.845, 48.482, 0.000)), rs.coerce3dpoint((-15.058, 48.405, 0.000)), rs.coerce3dpoint((-15.274, 48.474, 0.000)), rs.coerce3dpoint((-15.437, 48.526, 0.000)), rs.coerce3dpoint((-15.555, 48.649, 0.000)), rs.coerce3dpoint((-15.577, 48.671, 0.000)), rs.coerce3dpoint((-15.598, 48.695, 0.000)), rs.coerce3dpoint((-15.751, 48.864, 0.000)), rs.coerce3dpoint((-15.866, 49.060, 0.000)), rs.coerce3dpoint((-15.952, 49.204, 0.000)), rs.coerce3dpoint((-16.036, 49.349, 0.000)), rs.coerce3dpoint((-16.315, 49.827, 0.000)), rs.coerce3dpoint((-16.590, 50.307, 0.000)), rs.coerce3dpoint((-16.777, 50.630, 0.000)), rs.coerce3dpoint((-16.963, 50.953, 0.000)), rs.coerce3dpoint((-17.513, 51.898, 0.000)), rs.coerce3dpoint((-18.063, 52.843, 0.000)), rs.coerce3dpoint((-18.217, 53.107, 0.000)), rs.coerce3dpoint((-18.371, 53.372, 0.000)), rs.coerce3dpoint((-18.494, 53.582, 0.000)), rs.coerce3dpoint((-18.617, 53.793, 0.000)), rs.coerce3dpoint((-19.081, 54.589, 0.000)), rs.coerce3dpoint((-19.550, 55.384, 0.000)), rs.coerce3dpoint((-19.591, 55.453, 0.000)), rs.coerce3dpoint((-19.633, 55.523, 0.000)), rs.coerce3dpoint((-19.847, 55.882, 0.000)), rs.coerce3dpoint((-20.065, 56.240, 0.000)), rs.coerce3dpoint((-20.125, 56.339, 0.000)), rs.coerce3dpoint((-20.185, 56.438, 0.000)), rs.coerce3dpoint((-20.352, 56.711, 0.000)), rs.coerce3dpoint((-20.515, 56.987, 0.000)), rs.coerce3dpoint((-20.739, 57.361, 0.000)), rs.coerce3dpoint((-20.523, 57.741, 0.000)), rs.coerce3dpoint((-20.307, 58.120, 0.000)), rs.coerce3dpoint((-19.871, 58.120, 0.000)), rs.coerce3dpoint((-17.528, 58.120, 0.000)), rs.coerce3dpoint((-15.185, 58.120, 0.000)), rs.coerce3dpoint((-14.439, 58.120, 0.000)), rs.coerce3dpoint((-14.435, 57.374, 0.000)), rs.coerce3dpoint((-14.433, 57.057, 0.000)), rs.coerce3dpoint((-14.432, 56.740, 0.000)), rs.coerce3dpoint((-14.428, 56.061, 0.000)), rs.coerce3dpoint((-14.424, 55.381, 0.000)), rs.coerce3dpoint((-14.417, 53.605, 0.000)), rs.coerce3dpoint((-14.410, 51.829, 0.000))], [-188.308958663, -188.308958663, -186.526506391, -186.526506391, -185.808126714, -185.808126714, -185.615960562, -185.615960562, -185.492235758, -185.492235758, -185.368138123, -185.368138123, -185.258061341, -185.258061341, -185.123136382, -185.123136382, -185.075093716, -185.075093716, -184.790736711, -184.790736711, -184.353817983, -184.353817983, -184.019307542, -184.019307542, -183.956064967, -183.956064967, -183.502342437, -183.502342437, -183.167233640, -183.167233640, -182.060456255, -182.060456255, -181.314931315, -181.314931315, -179.128103616, -179.128103616, -178.51574052, -178.51574052, -178.028474204, -178.028474204, -176.184163879, -176.184163879, -176.022142256, -176.022142256, -175.184666623, -175.184666623, -174.953097661, -174.953097661, -174.312786798, -174.312786798, -173.522477056, -173.522477056, -172.732167314, -172.732167314, -168.046287124, -168.046287124, -166.872186828, -166.872186828, -166.238023961, -166.238023961, -164.879544668, -164.879544668, -161.327394127, -161.327394127], 2, [1.0, 0.999996620006, 1.0, 0.999986336951, 1.0, 0.999852113264, 1.0, 0.99884866317, 1.0, 0.994270540508, 1.0, 0.996900092173, 1.0, 0.999519615412, 1.0, 0.99915164001, 1.0, 0.972946153436, 1.0, 0.946930547663, 1.0, 0.969424371524, 1.0, 0.99987518779, 1.0, 0.994831769902, 1.0, 0.999997580003, 1.0, 0.999994880013, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 0.999991180039, 1.0, 1.0, 1.0, 0.999988001879, 1.0, 0.864383571381, 1.0, 0.864383571381, 1.0, 1.0, 1.0, 0.708988448444, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-9.450, 56.864, 0.000), (-9.710, 56.413, 0.000), (-9.973, 55.964, 0.000), (-10.038, 55.853, 0.000), (-10.106, 55.743, 0.000), (-10.175, 55.630, 0.000), (-10.251, 55.521, 0.000), (-10.304, 55.445, 0.000), (-10.364, 55.373, 0.000), (-10.411, 55.317, 0.000), (-10.465, 55.268, 0.000), (-10.528, 55.212, 0.000), (-10.602, 55.171, 0.000), (-10.674, 55.130, 0.000), (-10.755, 55.110, 0.000), (-10.809, 55.096, 0.000), (-10.865, 55.094, 0.000), (-10.954, 55.091, 0.000), (-11.042, 55.109, 0.000), (-11.157, 55.133, 0.000), (-11.253, 55.198, 0.000), (-11.326, 55.249, 0.000), (-11.383, 55.317, 0.000), (-11.462, 55.410, 0.000), (-11.533, 55.511, 0.000), (-11.622, 55.638, 0.000), (-11.701, 55.770, 0.000), (-11.781, 55.903, 0.000), (-11.861, 56.036, 0.000), (-12.081, 56.408, 0.000), (-12.299, 56.782, 0.000), (-12.360, 56.886, 0.000), (-12.422, 56.991, 0.000), (-12.641, 57.366, 0.000), (-12.425, 57.743, 0.000), (-12.209, 58.120, 0.000), (-11.774, 58.120, 0.000), (-10.899, 58.120, 0.000), (-10.024, 58.120, 0.000), (-9.592, 58.120, 0.000), (-9.376, 57.747, 0.000), (-9.159, 57.374, 0.000), (-9.372, 56.999, 0.000), (-9.411, 56.931, 0.000), (-9.450, 56.864, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-9.450, 56.864, 0.000)), rs.coerce3dpoint((-9.710, 56.413, 0.000)), rs.coerce3dpoint((-9.973, 55.964, 0.000)), rs.coerce3dpoint((-10.038, 55.853, 0.000)), rs.coerce3dpoint((-10.106, 55.743, 0.000)), rs.coerce3dpoint((-10.175, 55.630, 0.000)), rs.coerce3dpoint((-10.251, 55.521, 0.000)), rs.coerce3dpoint((-10.304, 55.445, 0.000)), rs.coerce3dpoint((-10.364, 55.373, 0.000)), rs.coerce3dpoint((-10.411, 55.317, 0.000)), rs.coerce3dpoint((-10.465, 55.268, 0.000)), rs.coerce3dpoint((-10.528, 55.212, 0.000)), rs.coerce3dpoint((-10.602, 55.171, 0.000)), rs.coerce3dpoint((-10.674, 55.130, 0.000)), rs.coerce3dpoint((-10.755, 55.110, 0.000)), rs.coerce3dpoint((-10.809, 55.096, 0.000)), rs.coerce3dpoint((-10.865, 55.094, 0.000)), rs.coerce3dpoint((-10.954, 55.091, 0.000)), rs.coerce3dpoint((-11.042, 55.109, 0.000)), rs.coerce3dpoint((-11.157, 55.133, 0.000)), rs.coerce3dpoint((-11.253, 55.198, 0.000)), rs.coerce3dpoint((-11.326, 55.249, 0.000)), rs.coerce3dpoint((-11.383, 55.317, 0.000)), rs.coerce3dpoint((-11.462, 55.410, 0.000)), rs.coerce3dpoint((-11.533, 55.511, 0.000)), rs.coerce3dpoint((-11.622, 55.638, 0.000)), rs.coerce3dpoint((-11.701, 55.770, 0.000)), rs.coerce3dpoint((-11.781, 55.903, 0.000)), rs.coerce3dpoint((-11.861, 56.036, 0.000)), rs.coerce3dpoint((-12.081, 56.408, 0.000)), rs.coerce3dpoint((-12.299, 56.782, 0.000)), rs.coerce3dpoint((-12.360, 56.886, 0.000)), rs.coerce3dpoint((-12.422, 56.991, 0.000)), rs.coerce3dpoint((-12.641, 57.366, 0.000)), rs.coerce3dpoint((-12.425, 57.743, 0.000)), rs.coerce3dpoint((-12.209, 58.120, 0.000)), rs.coerce3dpoint((-11.774, 58.120, 0.000)), rs.coerce3dpoint((-10.899, 58.120, 0.000)), rs.coerce3dpoint((-10.024, 58.120, 0.000)), rs.coerce3dpoint((-9.592, 58.120, 0.000)), rs.coerce3dpoint((-9.376, 57.747, 0.000)), rs.coerce3dpoint((-9.159, 57.374, 0.000)), rs.coerce3dpoint((-9.372, 56.999, 0.000)), rs.coerce3dpoint((-9.411, 56.931, 0.000)), rs.coerce3dpoint((-9.450, 56.864, 0.000))], [0.0, 0.0, 1.04067043767, 1.04067043767, 1.29849860853, 1.29849860853, 1.56370717529, 1.56370717529, 1.74975213304, 1.74975213304, 1.89599579030, 1.89599579030, 2.06836615646, 2.06836615646, 2.22942086243, 2.22942086243, 2.34775566277, 2.34775566277, 2.51901290808, 2.51901290808, 2.74990709606, 2.74990709606, 2.92578091709, 2.92578091709, 3.17154928280, 3.17154928280, 3.48085545342, 3.48085545342, 3.79059965319, 3.79059965319, 4.65565130685, 4.65565130685, 4.89835849640, 4.89835849640, 5.68593530730, 5.68593530730, 6.47351211819, 6.47351211819, 8.22404334605, 8.22404334605, 9.00720352881, 9.00720352881, 9.79036371157, 9.79036371157, 9.94612108162, 9.94612108162], 2, [1.0, 0.999997120004, 1.0, 0.999912883795, 1.0, 0.999596801301, 1.0, 0.998988012319, 1.0, 0.997510921616, 1.0, 0.994201829419, 1.0, 0.991079601038, 1.0, 0.994276672675, 1.0, 0.992887993585, 1.0, 0.980471579792, 1.0, 0.991008922268, 1.0, 0.998996983274, 1.0, 0.99937361624, 1.0, 0.999994220017, 1.0, 0.999992000032, 1.0, 1.0, 1.0, 0.865298274742, 1.0, 0.865298274742, 1.0, 1.0, 1.0, 0.866770433157, 1.0, 0.866770433157, 1.0, 0.999991982915, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(-0.597, 50.882, 0.000), (-0.596, 50.364, 0.000), (-0.597, 49.847, 0.000), (-0.598, 49.733, 0.000), (-0.598, 49.619, 0.000), (-0.600, 49.315, 0.000), (-0.613, 49.011, 0.000), (-0.615, 48.988, 0.000), (-0.618, 48.965, 0.000), (-0.643, 48.799, 0.000), (-0.746, 48.667, 0.000), (-0.803, 48.595, 0.000), (-0.875, 48.539, 0.000), (-0.922, 48.501, 0.000), (-0.974, 48.469, 0.000), (-1.037, 48.430, 0.000), (-1.107, 48.407, 0.000), (-1.214, 48.372, 0.000), (-1.327, 48.388, 0.000), (-1.400, 48.400, 0.000), (-1.469, 48.429, 0.000), (-1.541, 48.460, 0.000), (-1.607, 48.503, 0.000), (-1.701, 48.564, 0.000), (-1.782, 48.641, 0.000), (-1.871, 48.727, 0.000), (-1.944, 48.827, 0.000), (-2.018, 48.926, 0.000), (-2.080, 49.034, 0.000), (-2.173, 49.194, 0.000), (-2.267, 49.355, 0.000), (-2.735, 50.164, 0.000), (-3.203, 50.973, 0.000), (-3.469, 51.432, 0.000), (-3.734, 51.892, 0.000), (-4.126, 52.572, 0.000), (-4.518, 53.252, 0.000), (-4.813, 53.763, 0.000), (-5.108, 54.275, 0.000), (-5.307, 54.620, 0.000), (-5.509, 54.962, 0.000), (-5.629, 55.165, 0.000), (-5.749, 55.367, 0.000), (-6.035, 55.850, 0.000), (-6.315, 56.336, 0.000), (-6.504, 56.667, 0.000), (-6.693, 56.998, 0.000), (-6.908, 57.373, 0.000), (-6.691, 57.746, 0.000), (-6.474, 58.120, 0.000), (-6.042, 58.120, 0.000), (-3.704, 58.120, 0.000), (-1.367, 58.120, 0.000), (-0.619, 58.120, 0.000), (-0.617, 57.372, 0.000), (-0.614, 56.696, 0.000), (-0.612, 56.019, 0.000), (-0.605, 53.451, 0.000), (-0.597, 50.882, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((-0.597, 50.882, 0.000)), rs.coerce3dpoint((-0.596, 50.364, 0.000)), rs.coerce3dpoint((-0.597, 49.847, 0.000)), rs.coerce3dpoint((-0.598, 49.733, 0.000)), rs.coerce3dpoint((-0.598, 49.619, 0.000)), rs.coerce3dpoint((-0.600, 49.315, 0.000)), rs.coerce3dpoint((-0.613, 49.011, 0.000)), rs.coerce3dpoint((-0.615, 48.988, 0.000)), rs.coerce3dpoint((-0.618, 48.965, 0.000)), rs.coerce3dpoint((-0.643, 48.799, 0.000)), rs.coerce3dpoint((-0.746, 48.667, 0.000)), rs.coerce3dpoint((-0.803, 48.595, 0.000)), rs.coerce3dpoint((-0.875, 48.539, 0.000)), rs.coerce3dpoint((-0.922, 48.501, 0.000)), rs.coerce3dpoint((-0.974, 48.469, 0.000)), rs.coerce3dpoint((-1.037, 48.430, 0.000)), rs.coerce3dpoint((-1.107, 48.407, 0.000)), rs.coerce3dpoint((-1.214, 48.372, 0.000)), rs.coerce3dpoint((-1.327, 48.388, 0.000)), rs.coerce3dpoint((-1.400, 48.400, 0.000)), rs.coerce3dpoint((-1.469, 48.429, 0.000)), rs.coerce3dpoint((-1.541, 48.460, 0.000)), rs.coerce3dpoint((-1.607, 48.503, 0.000)), rs.coerce3dpoint((-1.701, 48.564, 0.000)), rs.coerce3dpoint((-1.782, 48.641, 0.000)), rs.coerce3dpoint((-1.871, 48.727, 0.000)), rs.coerce3dpoint((-1.944, 48.827, 0.000)), rs.coerce3dpoint((-2.018, 48.926, 0.000)), rs.coerce3dpoint((-2.080, 49.034, 0.000)), rs.coerce3dpoint((-2.173, 49.194, 0.000)), rs.coerce3dpoint((-2.267, 49.355, 0.000)), rs.coerce3dpoint((-2.735, 50.164, 0.000)), rs.coerce3dpoint((-3.203, 50.973, 0.000)), rs.coerce3dpoint((-3.469, 51.432, 0.000)), rs.coerce3dpoint((-3.734, 51.892, 0.000)), rs.coerce3dpoint((-4.126, 52.572, 0.000)), rs.coerce3dpoint((-4.518, 53.252, 0.000)), rs.coerce3dpoint((-4.813, 53.763, 0.000)), rs.coerce3dpoint((-5.108, 54.275, 0.000)), rs.coerce3dpoint((-5.307, 54.620, 0.000)), rs.coerce3dpoint((-5.509, 54.962, 0.000)), rs.coerce3dpoint((-5.629, 55.165, 0.000)), rs.coerce3dpoint((-5.749, 55.367, 0.000)), rs.coerce3dpoint((-6.035, 55.850, 0.000)), rs.coerce3dpoint((-6.315, 56.336, 0.000)), rs.coerce3dpoint((-6.504, 56.667, 0.000)), rs.coerce3dpoint((-6.693, 56.998, 0.000)), rs.coerce3dpoint((-6.908, 57.373, 0.000)), rs.coerce3dpoint((-6.691, 57.746, 0.000)), rs.coerce3dpoint((-6.474, 58.120, 0.000)), rs.coerce3dpoint((-6.042, 58.120, 0.000)), rs.coerce3dpoint((-3.704, 58.120, 0.000)), rs.coerce3dpoint((-1.367, 58.120, 0.000)), rs.coerce3dpoint((-0.619, 58.120, 0.000)), rs.coerce3dpoint((-0.617, 57.372, 0.000)), rs.coerce3dpoint((-0.614, 56.696, 0.000)), rs.coerce3dpoint((-0.612, 56.019, 0.000)), rs.coerce3dpoint((-0.605, 53.451, 0.000)), rs.coerce3dpoint((-0.597, 50.882, 0.000))], [5.1373622208, 5.1373622208, 6.17245398779, 6.17245398779, 6.39982650417, 6.39982650417, 7.00815074965, 7.00815074965, 7.05513427100, 7.05513427100, 7.38253969747, 7.38253969747, 7.56494270842, 7.56494270842, 7.68597961299, 7.68597961299, 7.83275615555, 7.83275615555, 8.05549309160, 8.05549309160, 8.20369760143, 8.20369760143, 8.36101598083, 8.36101598083, 8.58374069005, 8.58374069005, 8.83082670461, 8.83082670461, 9.07808252222, 9.07808252222, 9.45016969279, 9.45016969279, 11.3193515733, 11.3193515733, 12.3803264556, 12.3803264556, 13.9505300715, 13.9505300715, 15.1315501975, 15.1315501975, 15.9270427960, 15.9270427960, 16.3978704818, 16.3978704818, 17.5196300120, 17.5196300120, 18.2820703590, 18.2820703590, 19.0659350759, 19.0659350759, 19.8497997929, 19.8497997929, 24.5256277897, 24.5256277897, 25.7014550461, 25.7014550461, 27.0545381603, 27.0545381603, 32.1919003811, 32.1919003811], 2, [1.0, 0.999994880013, 1.0, 0.999997580003, 1.0, 0.999819516289, 1.0, 0.999449031825, 1.0, 0.965952533098, 1.0, 0.993178843702, 1.0, 0.997889728974, 1.0, 0.99329455711, 1.0, 0.972946153436, 1.0, 0.992093381369, 1.0, 0.996152993988, 1.0, 0.995440737186, 1.0, 0.99649493353, 1.0, 0.998433228349, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999987500078, 1.0, 1.0, 1.0, 0.999976880267, 1.0, 1.0, 1.0, 0.866536099969, 1.0, 0.866536099969, 1.0, 1.0, 1.0, 0.708176054021, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(0.415, 51.602, 0.000), (0.419, 51.237, 0.000), (0.423, 50.872, 0.000), (0.427, 50.519, 0.000), (0.432, 50.166, 0.000), (0.432, 50.156, 0.000), (0.432, 50.147, 0.000), (0.432, 50.075, 0.000), (0.436, 50.003, 0.000), (0.439, 49.930, 0.000), (0.454, 49.858, 0.000), (0.481, 49.728, 0.000), (0.554, 49.617, 0.000), (0.718, 49.371, 0.000), (1.011, 49.336, 0.000), (1.210, 49.312, 0.000), (1.386, 49.407, 0.000), (1.453, 49.443, 0.000), (1.510, 49.492, 0.000), (1.598, 49.580, 0.000), (1.676, 49.675, 0.000), (1.760, 49.776, 0.000), (1.834, 49.885, 0.000), (1.850, 49.909, 0.000), (1.866, 49.934, 0.000), (1.904, 49.999, 0.000), (1.940, 50.065, 0.000), (1.984, 50.147, 0.000), (2.028, 50.229, 0.000), (2.124, 50.408, 0.000), (2.223, 50.585, 0.000), (2.295, 50.713, 0.000), (2.327, 50.857, 0.000), (2.348, 50.952, 0.000), (2.355, 51.048, 0.000), (2.364, 51.151, 0.000), (2.363, 51.254, 0.000), (2.364, 51.457, 0.000), (2.368, 51.659, 0.000), (2.369, 51.694, 0.000), (2.369, 51.728, 0.000), (2.375, 52.000, 0.000), (2.377, 52.271, 0.000), (2.377, 52.311, 0.000), (2.377, 52.352, 0.000), (2.377, 54.861, 0.000), (2.377, 57.370, 0.000), (2.377, 58.120, 0.000), (1.627, 58.120, 0.000), (1.394, 58.120, 0.000), (1.161, 58.120, 0.000), (0.416, 58.120, 0.000), (0.411, 57.375, 0.000), (0.400, 55.921, 0.000), (0.401, 54.467, 0.000), (0.402, 53.829, 0.000), (0.403, 53.192, 0.000), (0.406, 52.397, 0.000), (0.415, 51.602, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((0.415, 51.602, 0.000)), rs.coerce3dpoint((0.419, 51.237, 0.000)), rs.coerce3dpoint((0.423, 50.872, 0.000)), rs.coerce3dpoint((0.427, 50.519, 0.000)), rs.coerce3dpoint((0.432, 50.166, 0.000)), rs.coerce3dpoint((0.432, 50.156, 0.000)), rs.coerce3dpoint((0.432, 50.147, 0.000)), rs.coerce3dpoint((0.432, 50.075, 0.000)), rs.coerce3dpoint((0.436, 50.003, 0.000)), rs.coerce3dpoint((0.439, 49.930, 0.000)), rs.coerce3dpoint((0.454, 49.858, 0.000)), rs.coerce3dpoint((0.481, 49.728, 0.000)), rs.coerce3dpoint((0.554, 49.617, 0.000)), rs.coerce3dpoint((0.718, 49.371, 0.000)), rs.coerce3dpoint((1.011, 49.336, 0.000)), rs.coerce3dpoint((1.210, 49.312, 0.000)), rs.coerce3dpoint((1.386, 49.407, 0.000)), rs.coerce3dpoint((1.453, 49.443, 0.000)), rs.coerce3dpoint((1.510, 49.492, 0.000)), rs.coerce3dpoint((1.598, 49.580, 0.000)), rs.coerce3dpoint((1.676, 49.675, 0.000)), rs.coerce3dpoint((1.760, 49.776, 0.000)), rs.coerce3dpoint((1.834, 49.885, 0.000)), rs.coerce3dpoint((1.850, 49.909, 0.000)), rs.coerce3dpoint((1.866, 49.934, 0.000)), rs.coerce3dpoint((1.904, 49.999, 0.000)), rs.coerce3dpoint((1.940, 50.065, 0.000)), rs.coerce3dpoint((1.984, 50.147, 0.000)), rs.coerce3dpoint((2.028, 50.229, 0.000)), rs.coerce3dpoint((2.124, 50.408, 0.000)), rs.coerce3dpoint((2.223, 50.585, 0.000)), rs.coerce3dpoint((2.295, 50.713, 0.000)), rs.coerce3dpoint((2.327, 50.857, 0.000)), rs.coerce3dpoint((2.348, 50.952, 0.000)), rs.coerce3dpoint((2.355, 51.048, 0.000)), rs.coerce3dpoint((2.364, 51.151, 0.000)), rs.coerce3dpoint((2.363, 51.254, 0.000)), rs.coerce3dpoint((2.364, 51.457, 0.000)), rs.coerce3dpoint((2.368, 51.659, 0.000)), rs.coerce3dpoint((2.369, 51.694, 0.000)), rs.coerce3dpoint((2.369, 51.728, 0.000)), rs.coerce3dpoint((2.375, 52.000, 0.000)), rs.coerce3dpoint((2.377, 52.271, 0.000)), rs.coerce3dpoint((2.377, 52.311, 0.000)), rs.coerce3dpoint((2.377, 52.352, 0.000)), rs.coerce3dpoint((2.377, 54.861, 0.000)), rs.coerce3dpoint((2.377, 57.370, 0.000)), rs.coerce3dpoint((2.377, 58.120, 0.000)), rs.coerce3dpoint((1.627, 58.120, 0.000)), rs.coerce3dpoint((1.394, 58.120, 0.000)), rs.coerce3dpoint((1.161, 58.120, 0.000)), rs.coerce3dpoint((0.416, 58.120, 0.000)), rs.coerce3dpoint((0.411, 57.375, 0.000)), rs.coerce3dpoint((0.400, 55.921, 0.000)), rs.coerce3dpoint((0.401, 54.467, 0.000)), rs.coerce3dpoint((0.402, 53.829, 0.000)), rs.coerce3dpoint((0.403, 53.192, 0.000)), rs.coerce3dpoint((0.406, 52.397, 0.000)), rs.coerce3dpoint((0.415, 51.602, 0.000))], [6.72874536930, 6.72874536930, 7.45826361651, 7.45826361651, 8.16459052241, 8.16459052241, 8.18353157834, 8.18353157834, 8.32745403126, 8.32745403126, 8.46572988533, 8.46572988533, 8.71937035887, 8.71937035887, 9.27334837781, 9.27334837781, 9.66039309651, 9.66039309651, 9.81144540614, 9.81144540614, 10.0586801363, 10.0586801363, 10.3207410324, 10.3207410324, 10.3796546574, 10.3796546574, 10.5304687266, 10.5304687266, 10.7160902929, 10.7160902929, 11.1219482577, 11.1219482577, 11.4146642467, 11.4146642467, 11.6078818319, 11.6078818319, 11.8141761326, 11.8141761326, 12.2192707946, 12.2192707946, 12.2884120948, 12.2884120948, 12.8308167875, 12.8308167875, 12.9117971432, 12.9117971432, 17.9300619173, 17.9300619173, 19.1081013346, 19.1081013346, 19.5742295175, 19.5742295175, 20.7470843004, 20.7470843004, 23.6557556544, 23.6557556544, 24.9302970410, 24.9302970410, 26.5206964625, 26.5206964625], 2, [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999716820101, 1.0, 0.997151103542, 1.0, 0.982053659087, 1.0, 0.907908882355, 1.0, 0.953608041035, 1.0, 0.994033671791, 1.0, 0.998720638906, 1.0, 0.998800220168, 1.0, 0.999791941646, 1.0, 0.999758029278, 1.0, 0.999993520021, 1.0, 0.99996128075, 1.0, 0.989049012196, 1.0, 0.997649785004, 1.0, 0.999118388791, 1.0, 0.999966380565, 1.0, 1.0, 1.0, 0.999978220237, 1.0, 1.0, 1.0, 1.0, 1.0, 0.707134040952, 1.0, 1.0, 1.0, 0.709573777965, 1.0, 0.999992916193, 1.0, 1.0, 1.0, 0.999991180039, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(5.351, 56.860, 0.000), (5.351, 56.826, 0.000), (5.350, 56.791, 0.000), (5.346, 56.589, 0.000), (5.345, 56.386, 0.000), (5.345, 56.283, 0.000), (5.337, 56.180, 0.000), (5.329, 56.083, 0.000), (5.309, 55.989, 0.000), (5.277, 55.845, 0.000), (5.205, 55.717, 0.000), (5.106, 55.539, 0.000), (5.010, 55.360, 0.000), (4.966, 55.278, 0.000), (4.922, 55.197, 0.000), (4.886, 55.131, 0.000), (4.847, 55.066, 0.000), (4.832, 55.041, 0.000), (4.816, 55.016, 0.000), (4.742, 54.908, 0.000), (4.658, 54.807, 0.000), (4.580, 54.711, 0.000), (4.492, 54.624, 0.000), (4.434, 54.575, 0.000), (4.368, 54.539, 0.000), (4.192, 54.444, 0.000), (3.993, 54.467, 0.000), (3.700, 54.502, 0.000), (3.536, 54.749, 0.000), (3.463, 54.859, 0.000), (3.436, 54.989, 0.000), (3.421, 55.061, 0.000), (3.417, 55.135, 0.000), (3.414, 55.207, 0.000), (3.414, 55.279, 0.000), (3.414, 55.288, 0.000), (3.413, 55.298, 0.000), (3.409, 55.651, 0.000), (3.405, 56.004, 0.000), (3.401, 56.369, 0.000), (3.397, 56.733, 0.000), (3.393, 57.049, 0.000), (3.391, 57.364, 0.000), (3.388, 57.676, 0.000), (3.608, 57.898, 0.000), (3.828, 58.120, 0.000), (4.141, 58.120, 0.000), (4.375, 58.120, 0.000), (4.608, 58.120, 0.000), (4.921, 58.120, 0.000), (5.141, 57.898, 0.000), (5.361, 57.676, 0.000), (5.358, 57.364, 0.000), (5.356, 57.112, 0.000), (5.351, 56.860, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((5.351, 56.860, 0.000)), rs.coerce3dpoint((5.351, 56.826, 0.000)), rs.coerce3dpoint((5.350, 56.791, 0.000)), rs.coerce3dpoint((5.346, 56.589, 0.000)), rs.coerce3dpoint((5.345, 56.386, 0.000)), rs.coerce3dpoint((5.345, 56.283, 0.000)), rs.coerce3dpoint((5.337, 56.180, 0.000)), rs.coerce3dpoint((5.329, 56.083, 0.000)), rs.coerce3dpoint((5.309, 55.989, 0.000)), rs.coerce3dpoint((5.277, 55.845, 0.000)), rs.coerce3dpoint((5.205, 55.717, 0.000)), rs.coerce3dpoint((5.106, 55.539, 0.000)), rs.coerce3dpoint((5.010, 55.360, 0.000)), rs.coerce3dpoint((4.966, 55.278, 0.000)), rs.coerce3dpoint((4.922, 55.197, 0.000)), rs.coerce3dpoint((4.886, 55.131, 0.000)), rs.coerce3dpoint((4.847, 55.066, 0.000)), rs.coerce3dpoint((4.832, 55.041, 0.000)), rs.coerce3dpoint((4.816, 55.016, 0.000)), rs.coerce3dpoint((4.742, 54.908, 0.000)), rs.coerce3dpoint((4.658, 54.807, 0.000)), rs.coerce3dpoint((4.580, 54.711, 0.000)), rs.coerce3dpoint((4.492, 54.624, 0.000)), rs.coerce3dpoint((4.434, 54.575, 0.000)), rs.coerce3dpoint((4.368, 54.539, 0.000)), rs.coerce3dpoint((4.192, 54.444, 0.000)), rs.coerce3dpoint((3.993, 54.467, 0.000)), rs.coerce3dpoint((3.700, 54.502, 0.000)), rs.coerce3dpoint((3.536, 54.749, 0.000)), rs.coerce3dpoint((3.463, 54.859, 0.000)), rs.coerce3dpoint((3.436, 54.989, 0.000)), rs.coerce3dpoint((3.421, 55.061, 0.000)), rs.coerce3dpoint((3.417, 55.135, 0.000)), rs.coerce3dpoint((3.414, 55.207, 0.000)), rs.coerce3dpoint((3.414, 55.279, 0.000)), rs.coerce3dpoint((3.414, 55.288, 0.000)), rs.coerce3dpoint((3.413, 55.298, 0.000)), rs.coerce3dpoint((3.409, 55.651, 0.000)), rs.coerce3dpoint((3.405, 56.004, 0.000)), rs.coerce3dpoint((3.401, 56.369, 0.000)), rs.coerce3dpoint((3.397, 56.733, 0.000)), rs.coerce3dpoint((3.393, 57.049, 0.000)), rs.coerce3dpoint((3.391, 57.364, 0.000)), rs.coerce3dpoint((3.388, 57.676, 0.000)), rs.coerce3dpoint((3.608, 57.898, 0.000)), rs.coerce3dpoint((3.828, 58.120, 0.000)), rs.coerce3dpoint((4.141, 58.120, 0.000)), rs.coerce3dpoint((4.375, 58.120, 0.000)), rs.coerce3dpoint((4.608, 58.120, 0.000)), rs.coerce3dpoint((4.921, 58.120, 0.000)), rs.coerce3dpoint((5.141, 57.898, 0.000)), rs.coerce3dpoint((5.361, 57.676, 0.000)), rs.coerce3dpoint((5.358, 57.364, 0.000)), rs.coerce3dpoint((5.356, 57.112, 0.000)), rs.coerce3dpoint((5.351, 56.860, 0.000))], [-0.0, -0.0, 0.069151298614, 0.069151298614, 0.474245960627, 0.474245960627, 0.680539875432, 0.680539875432, 0.873758935093, 0.873758935093, 1.16647134048, 1.16647134048, 1.57233409560, 1.57233409560, 1.75795566182, 1.75795566182, 1.90876479130, 1.90876479130, 1.96767000137, 1.96767000137, 2.22973089746, 2.22973089746, 2.47697302539, 2.47697302539, 2.62802533502, 2.62802533502, 3.01507005372, 3.01507005372, 3.56904807266, 3.56904807266, 3.82269248127, 3.82269248127, 3.96096833534, 3.96096833534, 4.10489078826, 4.10489078826, 4.12384184364, 4.12384184364, 4.83015875020, 4.83015875020, 5.55967699740, 5.55967699740, 6.19002232007, 6.19002232007, 6.78221282358, 6.78221282358, 7.37440332709, 7.37440332709, 7.84232263282, 7.84232263282, 8.43438514226, 8.43438514226, 9.02644765171, 9.02644765171, 9.53030059951, 9.53030059951], 2, [1.0, 1.0, 1.0, 0.999966380565, 1.0, 0.999118388791, 1.0, 0.997649785004, 1.0, 0.989049012196, 1.0, 0.99996128075, 1.0, 0.999993520021, 1.0, 0.999758029278, 1.0, 0.999791941646, 1.0, 0.998800220168, 1.0, 0.998720638906, 1.0, 0.994033671791, 1.0, 0.953608041035, 1.0, 0.907908882355, 1.0, 0.982050115642, 1.0, 0.997153653393, 1.0, 0.999716820101, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999998614483, 1.0, 0.923075942571, 1.0, 0.923075942571, 1.0, 1.0, 1.0, 0.923108758403, 1.0, 0.923108758403, 1.0, 0.999981205539, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    pts = [(15.462, 52.557, 0.000), (15.461, 51.975, 0.000), (15.456, 51.393, 0.000), (15.455, 51.136, 0.000), (15.449, 50.879, 0.000), (15.446, 50.737, 0.000), (15.438, 50.596, 0.000), (15.437, 50.587, 0.000), (15.437, 50.578, 0.000), (15.435, 50.538, 0.000), (15.429, 50.499, 0.000), (15.419, 50.438, 0.000), (15.403, 50.378, 0.000), (15.378, 50.288, 0.000), (15.348, 50.200, 0.000), (15.341, 50.181, 0.000), (15.334, 50.162, 0.000), (15.302, 50.082, 0.000), (15.263, 50.005, 0.000), (15.179, 49.840, 0.000), (15.076, 49.687, 0.000), (15.001, 49.572, 0.000), (14.914, 49.466, 0.000), (14.855, 49.395, 0.000), (14.789, 49.331, 0.000), (14.782, 49.325, 0.000), (14.775, 49.318, 0.000), (14.708, 49.255, 0.000), (14.633, 49.202, 0.000), (14.566, 49.155, 0.000), (14.492, 49.122, 0.000), (14.400, 49.081, 0.000), (14.300, 49.072, 0.000), (14.213, 49.065, 0.000), (14.128, 49.080, 0.000), (14.044, 49.095, 0.000), (13.969, 49.137, 0.000), (13.905, 49.174, 0.000), (13.850, 49.223, 0.000), (13.791, 49.274, 0.000), (13.740, 49.332, 0.000), (13.675, 49.404, 0.000), (13.617, 49.482, 0.000), (13.549, 49.573, 0.000), (13.487, 49.667, 0.000), (13.437, 49.743, 0.000), (13.390, 49.820, 0.000), (13.299, 49.968, 0.000), (13.212, 50.118, 0.000), (12.968, 50.534, 0.000), (12.726, 50.951, 0.000), (11.915, 52.352, 0.000), (11.104, 53.754, 0.000), (10.762, 54.346, 0.000), (10.420, 54.938, 0.000), (10.015, 55.640, 0.000), (9.609, 56.343, 0.000), (9.536, 56.469, 0.000), (9.484, 56.606, 0.000), (9.379, 56.880, 0.000), (9.382, 57.174, 0.000), (9.382, 57.274, 0.000), (9.383, 57.374, 0.000), (9.387, 58.120, 0.000), (10.133, 58.120, 0.000), (12.417, 58.120, 0.000), (14.702, 58.120, 0.000), (15.450, 58.120, 0.000), (15.452, 57.372, 0.000), (15.456, 56.211, 0.000), (15.460, 55.050, 0.000), (15.461, 53.804, 0.000), (15.462, 52.557, 0.000)]
    new_crv = rs.AddNurbsCurve([rs.coerce3dpoint((15.462, 52.557, 0.000)), rs.coerce3dpoint((15.461, 51.975, 0.000)), rs.coerce3dpoint((15.456, 51.393, 0.000)), rs.coerce3dpoint((15.455, 51.136, 0.000)), rs.coerce3dpoint((15.449, 50.879, 0.000)), rs.coerce3dpoint((15.446, 50.737, 0.000)), rs.coerce3dpoint((15.438, 50.596, 0.000)), rs.coerce3dpoint((15.437, 50.587, 0.000)), rs.coerce3dpoint((15.437, 50.578, 0.000)), rs.coerce3dpoint((15.435, 50.538, 0.000)), rs.coerce3dpoint((15.429, 50.499, 0.000)), rs.coerce3dpoint((15.419, 50.438, 0.000)), rs.coerce3dpoint((15.403, 50.378, 0.000)), rs.coerce3dpoint((15.378, 50.288, 0.000)), rs.coerce3dpoint((15.348, 50.200, 0.000)), rs.coerce3dpoint((15.341, 50.181, 0.000)), rs.coerce3dpoint((15.334, 50.162, 0.000)), rs.coerce3dpoint((15.302, 50.082, 0.000)), rs.coerce3dpoint((15.263, 50.005, 0.000)), rs.coerce3dpoint((15.179, 49.840, 0.000)), rs.coerce3dpoint((15.076, 49.687, 0.000)), rs.coerce3dpoint((15.001, 49.572, 0.000)), rs.coerce3dpoint((14.914, 49.466, 0.000)), rs.coerce3dpoint((14.855, 49.395, 0.000)), rs.coerce3dpoint((14.789, 49.331, 0.000)), rs.coerce3dpoint((14.782, 49.325, 0.000)), rs.coerce3dpoint((14.775, 49.318, 0.000)), rs.coerce3dpoint((14.708, 49.255, 0.000)), rs.coerce3dpoint((14.633, 49.202, 0.000)), rs.coerce3dpoint((14.566, 49.155, 0.000)), rs.coerce3dpoint((14.492, 49.122, 0.000)), rs.coerce3dpoint((14.400, 49.081, 0.000)), rs.coerce3dpoint((14.300, 49.072, 0.000)), rs.coerce3dpoint((14.213, 49.065, 0.000)), rs.coerce3dpoint((14.128, 49.080, 0.000)), rs.coerce3dpoint((14.044, 49.095, 0.000)), rs.coerce3dpoint((13.969, 49.137, 0.000)), rs.coerce3dpoint((13.905, 49.174, 0.000)), rs.coerce3dpoint((13.850, 49.223, 0.000)), rs.coerce3dpoint((13.791, 49.274, 0.000)), rs.coerce3dpoint((13.740, 49.332, 0.000)), rs.coerce3dpoint((13.675, 49.404, 0.000)), rs.coerce3dpoint((13.617, 49.482, 0.000)), rs.coerce3dpoint((13.549, 49.573, 0.000)), rs.coerce3dpoint((13.487, 49.667, 0.000)), rs.coerce3dpoint((13.437, 49.743, 0.000)), rs.coerce3dpoint((13.390, 49.820, 0.000)), rs.coerce3dpoint((13.299, 49.968, 0.000)), rs.coerce3dpoint((13.212, 50.118, 0.000)), rs.coerce3dpoint((12.968, 50.534, 0.000)), rs.coerce3dpoint((12.726, 50.951, 0.000)), rs.coerce3dpoint((11.915, 52.352, 0.000)), rs.coerce3dpoint((11.104, 53.754, 0.000)), rs.coerce3dpoint((10.762, 54.346, 0.000)), rs.coerce3dpoint((10.420, 54.938, 0.000)), rs.coerce3dpoint((10.015, 55.640, 0.000)), rs.coerce3dpoint((9.609, 56.343, 0.000)), rs.coerce3dpoint((9.536, 56.469, 0.000)), rs.coerce3dpoint((9.484, 56.606, 0.000)), rs.coerce3dpoint((9.379, 56.880, 0.000)), rs.coerce3dpoint((9.382, 57.174, 0.000)), rs.coerce3dpoint((9.382, 57.274, 0.000)), rs.coerce3dpoint((9.383, 57.374, 0.000)), rs.coerce3dpoint((9.387, 58.120, 0.000)), rs.coerce3dpoint((10.133, 58.120, 0.000)), rs.coerce3dpoint((12.417, 58.120, 0.000)), rs.coerce3dpoint((14.702, 58.120, 0.000)), rs.coerce3dpoint((15.450, 58.120, 0.000)), rs.coerce3dpoint((15.452, 57.372, 0.000)), rs.coerce3dpoint((15.456, 56.211, 0.000)), rs.coerce3dpoint((15.460, 55.050, 0.000)), rs.coerce3dpoint((15.461, 53.804, 0.000)), rs.coerce3dpoint((15.462, 52.557, 0.000))], [2.49271070895, 2.49271070895, 3.65735469979, 3.65735469979, 4.17083489564, 4.17083489564, 4.45436411763, 4.45436411763, 4.47237080528, 4.47237080528, 4.55141990063, 4.55141990063, 4.67508533746, 4.67508533746, 4.86169833837, 4.86169833837, 4.90234428650, 4.90234428650, 5.07475382873, 5.07475382873, 5.44400171404, 5.44400171404, 5.71784637417, 5.71784637417, 5.90213970853, 5.90213970853, 5.92060475118, 5.92060475118, 6.10450677023, 6.10450677023, 6.26730826091, 6.26730826091, 6.46655176447, 6.46655176447, 6.63415363085, 6.63415363085, 6.79890048342, 6.79890048342, 6.94608261628, 6.94608261628, 7.10081834657, 7.10081834657, 7.29546443358, 7.29546443358, 7.52140238447, 7.52140238447, 7.70287640264, 7.70287640264, 8.05000201583, 8.05000201583, 9.01427000971, 9.01427000971, 12.2519299741, 12.2519299741, 13.6195533372, 13.6195533372, 15.2420358751, 15.2420358751, 15.5337321700, 15.5337321700, 16.1143554295, 16.1143554295, 16.3146276751, 16.3146276751, 17.4884228771, 17.4884228771, 22.0576961033, 22.0576961033, 23.2333054703, 23.2333054703, 25.5559130537, 25.5559130537, 28.0486237627, 28.0486237627], 2, [1.0, 0.999993520021, 1.0, 0.999972620375, 1.0, 0.999841592547, 1.0, 1.0, 1.0, 0.998740773325, 1.0, 0.998455513641, 1.0, 0.999525792463, 1.0, 0.999758029278, 1.0, 0.998819716945, 1.0, 0.998307812961, 1.0, 0.998679891918, 1.0, 0.99821357708, 1.0, 1.0, 1.0, 0.997594716178, 1.0, 0.995189976054, 1.0, 0.986512059876, 1.0, 0.991641682444, 1.0, 0.98581442885, 1.0, 0.994750435227, 1.0, 0.99810451813, 1.0, 0.999005914349, 1.0, 0.999550101227, 1.0, 0.999807938446, 1.0, 0.99996128075, 1.0, 0.999996080008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996821040935, 1.0, 0.982445818938, 1.0, 1.0, 1.0, 0.709131872796, 1.0, 1.0, 1.0, 0.708278605015, 1.0, 1.0, 1.0, 1.0, 1.0])
    if evaluate_bbox_inclusion(pts, bounding_box):
        curves.append(new_crv)
    elif boundary_curve and rs.CurveCurveIntersection(boundary_curve, new_crv):
        border_curves.append(new_crv)
    else:
        rs.DeleteObject(new_crv)
    return curves, border_curves
